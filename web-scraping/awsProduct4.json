[{"awsResourceType":"AWS::Omics::RunGroup","awsResourceTypeName":"omics-rungroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::RunGroup\",\n  \"Properties\" : {\n      \"MaxCpus\" : Number,\n      \"MaxDuration\" : Number,\n      \"MaxGpus\" : Number,\n      \"MaxRuns\" : Number,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::RunGroup\nProperties:\n  MaxCpus: Number\n  MaxDuration: Number\n  MaxGpus: Number\n  MaxRuns: Number\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::SequenceStore","awsResourceTypeName":"omics-sequencestore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::SequenceStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FallbackLocation\" : String,\n      \"Name\" : String,\n      \"SseConfig\" : SseConfig,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::SequenceStore\nProperties:\n  Description: String\n  FallbackLocation: String\n  Name: String\n  SseConfig: \n    SseConfig\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::VariantStore","awsResourceTypeName":"omics-variantstore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::VariantStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Reference\" : ReferenceItem,\n      \"SseConfig\" : SseConfig,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::VariantStore\nProperties:\n  Description: String\n  Name: String\n  Reference: \n    ReferenceItem\n  SseConfig: \n    SseConfig\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::Workflow","awsResourceTypeName":"omics-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::Workflow\",\n  \"Properties\" : {\n      \"Accelerators\" : String,\n      \"DefinitionUri\" : String,\n      \"Description\" : String,\n      \"Engine\" : String,\n      \"Main\" : String,\n      \"Name\" : String,\n      \"ParameterTemplate\" : {Key: Value, ...},\n      \"StorageCapacity\" : Number,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::Workflow\nProperties:\n  Accelerators: String\n  DefinitionUri: String\n  Description: String\n  Engine: String\n  Main: String\n  Name: String\n  ParameterTemplate: \n    Key: Value\n  StorageCapacity: Number\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::OSIS::Pipeline","awsResourceTypeName":"osis-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OSIS::Pipeline\",\n  \"Properties\" : {\n      \"BufferOptions\" : BufferOptions,\n      \"EncryptionAtRestOptions\" : EncryptionAtRestOptions,\n      \"LogPublishingOptions\" : LogPublishingOptions,\n      \"MaxUnits\" : Integer,\n      \"MinUnits\" : Integer,\n      \"PipelineConfigurationBody\" : String,\n      \"PipelineName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcOptions\" : VpcOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OSIS::Pipeline\nProperties:\n  BufferOptions: \n    BufferOptions\n  EncryptionAtRestOptions: \n    EncryptionAtRestOptions\n  LogPublishingOptions: \n    LogPublishingOptions\n  MaxUnits: Integer\n  MinUnits: Integer\n  PipelineConfigurationBody: String\n  PipelineName: String\n  Tags: \n    - Tag\n  VpcOptions: \n    VpcOptions\n","awsServiceName":"OSIS","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchService::Domain","awsResourceTypeName":"opensearchservice-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchService::Domain\",\n  \"Properties\" : {\n      \"AccessPolicies\" : Json,\n      \"AdvancedOptions\" : {Key: Value, ...},\n      \"AdvancedSecurityOptions\" : AdvancedSecurityOptionsInput,\n      \"ClusterConfig\" : ClusterConfig,\n      \"CognitoOptions\" : CognitoOptions,\n      \"DomainEndpointOptions\" : DomainEndpointOptions,\n      \"DomainName\" : String,\n      \"EBSOptions\" : EBSOptions,\n      \"EncryptionAtRestOptions\" : EncryptionAtRestOptions,\n      \"EngineVersion\" : String,\n      \"IPAddressType\" : String,\n      \"LogPublishingOptions\" : {Key: Value, ...},\n      \"NodeToNodeEncryptionOptions\" : NodeToNodeEncryptionOptions,\n      \"OffPeakWindowOptions\" : OffPeakWindowOptions,\n      \"SnapshotOptions\" : SnapshotOptions,\n      \"SoftwareUpdateOptions\" : SoftwareUpdateOptions,\n      \"Tags\" : [ Tag, ... ],\n      \"VPCOptions\" : VPCOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchService::Domain\nProperties:\n  AccessPolicies: Json\n  AdvancedOptions: \n    Key: Value\n  AdvancedSecurityOptions: \n    AdvancedSecurityOptionsInput\n  ClusterConfig: \n    ClusterConfig\n  CognitoOptions: \n    CognitoOptions\n  DomainEndpointOptions: \n    DomainEndpointOptions\n  DomainName: String\n  EBSOptions: \n    EBSOptions\n  EncryptionAtRestOptions: \n    EncryptionAtRestOptions\n  EngineVersion: String\n  IPAddressType: String\n  LogPublishingOptions: \n    Key: Value\n  NodeToNodeEncryptionOptions: \n    NodeToNodeEncryptionOptions\n  OffPeakWindowOptions: \n    OffPeakWindowOptions\n  SnapshotOptions: \n    SnapshotOptions\n  SoftwareUpdateOptions: \n    SoftwareUpdateOptions\n  Tags: \n    - Tag\n  VPCOptions: \n    VPCOptions\n","awsServiceName":"OpenSearchService","awsServiceCategory":"other"},{"awsResourceType":"AWS::Elasticsearch::Domain","awsResourceTypeName":"elasticsearch-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Elasticsearch::Domain\",\n  \"Properties\" : {\n      \"AccessPolicies\" : Json,\n      \"AdvancedOptions\" : {Key: Value, ...},\n      \"AdvancedSecurityOptions\" : AdvancedSecurityOptionsInput,\n      \"CognitoOptions\" : CognitoOptions,\n      \"DomainEndpointOptions\" : DomainEndpointOptions,\n      \"DomainName\" : String,\n      \"EBSOptions\" : EBSOptions,\n      \"ElasticsearchClusterConfig\" : ElasticsearchClusterConfig,\n      \"ElasticsearchVersion\" : String,\n      \"EncryptionAtRestOptions\" : EncryptionAtRestOptions,\n      \"LogPublishingOptions\" : {Key: Value, ...},\n      \"NodeToNodeEncryptionOptions\" : NodeToNodeEncryptionOptions,\n      \"SnapshotOptions\" : SnapshotOptions,\n      \"Tags\" : [ Tag, ... ],\n      \"VPCOptions\" : VPCOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Elasticsearch::Domain\nProperties:\n  AccessPolicies: Json\n  AdvancedOptions: \n    Key: Value\n  AdvancedSecurityOptions: \n    AdvancedSecurityOptionsInput\n  CognitoOptions: \n    CognitoOptions\n  DomainEndpointOptions: \n    DomainEndpointOptions\n  DomainName: String\n  EBSOptions: \n    EBSOptions\n  ElasticsearchClusterConfig: \n    ElasticsearchClusterConfig\n  ElasticsearchVersion: String\n  EncryptionAtRestOptions: \n    EncryptionAtRestOptions\n  LogPublishingOptions: \n    Key: Value\n  NodeToNodeEncryptionOptions: \n    NodeToNodeEncryptionOptions\n  SnapshotOptions: \n    SnapshotOptions\n  Tags: \n    - Tag\n  VPCOptions: \n    VPCOptions\n","awsServiceName":"Elasticsearch","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::AccessPolicy","awsResourceTypeName":"opensearchserverless-accesspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::AccessPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policy\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::AccessPolicy\nProperties:\n  Description: String\n  Name: String\n  Policy: String\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::Collection","awsResourceTypeName":"opensearchserverless-collection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::Collection\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"StandbyReplicas\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::Collection\nProperties:\n  Description: String\n  Name: String\n  StandbyReplicas: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::LifecyclePolicy","awsResourceTypeName":"opensearchserverless-lifecyclepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::LifecyclePolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policy\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::LifecyclePolicy\nProperties:\n  Description: String\n  Name: String\n  Policy: String\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::SecurityConfig","awsResourceTypeName":"opensearchserverless-securityconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::SecurityConfig\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"SamlOptions\" : SamlConfigOptions,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::SecurityConfig\nProperties:\n  Description: String\n  Name: String\n  SamlOptions: \n    SamlConfigOptions\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::SecurityPolicy","awsResourceTypeName":"opensearchserverless-securitypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::SecurityPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policy\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::SecurityPolicy\nProperties:\n  Description: String\n  Name: String\n  Policy: String\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::VpcEndpoint","awsResourceTypeName":"opensearchserverless-vpcendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::VpcEndpoint\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::VpcEndpoint\nProperties:\n  Name: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  VpcId: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpsWorks::App","awsResourceTypeName":"opsworks-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::App\",\n  \"Properties\" : {\n      \"AppSource\" : Source,\n      \"Attributes\" : {Key: Value, ...},\n      \"DataSources\" : [ DataSource, ... ],\n      \"Description\" : String,\n      \"Domains\" : [ String, ... ],\n      \"EnableSsl\" : Boolean,\n      \"Environment\" : [ EnvironmentVariable, ... ],\n      \"Name\" : String,\n      \"Shortname\" : String,\n      \"SslConfiguration\" : SslConfiguration,\n      \"StackId\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::App\nProperties:\n  AppSource: \n    Source\n  Attributes: \n    Key: Value\n  DataSources: \n    - DataSource\n  Description: String\n  Domains: \n    - String\n  EnableSsl: Boolean\n  Environment: \n    - EnvironmentVariable\n  Name: String\n  Shortname: String\n  SslConfiguration: \n    SslConfiguration\n  StackId: String\n  Type: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::ElasticLoadBalancerAttachment","awsResourceTypeName":"opsworks-elasticloadbalancerattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::ElasticLoadBalancerAttachment\",\n  \"Properties\" : {\n      \"ElasticLoadBalancerName\" : String,\n      \"LayerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::ElasticLoadBalancerAttachment\nProperties:\n  ElasticLoadBalancerName: String\n  LayerId: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Instance","awsResourceTypeName":"opsworks-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Instance\",\n  \"Properties\" : {\n      \"AgentVersion\" : String,\n      \"AmiId\" : String,\n      \"Architecture\" : String,\n      \"AutoScalingType\" : String,\n      \"AvailabilityZone\" : String,\n      \"BlockDeviceMappings\" : [ BlockDeviceMapping, ... ],\n      \"EbsOptimized\" : Boolean,\n      \"ElasticIps\" : [ String, ... ],\n      \"Hostname\" : String,\n      \"InstallUpdatesOnBoot\" : Boolean,\n      \"InstanceType\" : String,\n      \"LayerIds\" : [ String, ... ],\n      \"Os\" : String,\n      \"RootDeviceType\" : String,\n      \"SshKeyName\" : String,\n      \"StackId\" : String,\n      \"SubnetId\" : String,\n      \"Tenancy\" : String,\n      \"TimeBasedAutoScaling\" : TimeBasedAutoScaling,\n      \"VirtualizationType\" : String,\n      \"Volumes\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Instance\nProperties:\n  AgentVersion: String\n  AmiId: String\n  Architecture: String\n  AutoScalingType: String\n  AvailabilityZone: String\n  BlockDeviceMappings: \n    - BlockDeviceMapping\n  EbsOptimized: Boolean\n  ElasticIps: \n    - String\n  Hostname: String\n  InstallUpdatesOnBoot: Boolean\n  InstanceType: String\n  LayerIds: \n    - String\n  Os: String\n  RootDeviceType: String\n  SshKeyName: String\n  StackId: String\n  SubnetId: String\n  Tenancy: String\n  TimeBasedAutoScaling: \n    TimeBasedAutoScaling\n  VirtualizationType: String\n  Volumes: \n    - String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Layer","awsResourceTypeName":"opsworks-layer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Layer\",\n  \"Properties\" : {\n      \"Attributes\" : {Key: Value, ...},\n      \"AutoAssignElasticIps\" : Boolean,\n      \"AutoAssignPublicIps\" : Boolean,\n      \"CustomInstanceProfileArn\" : String,\n      \"CustomJson\" : Json,\n      \"CustomRecipes\" : Recipes,\n      \"CustomSecurityGroupIds\" : [ String, ... ],\n      \"EnableAutoHealing\" : Boolean,\n      \"InstallUpdatesOnBoot\" : Boolean,\n      \"LifecycleEventConfiguration\" : LifecycleEventConfiguration,\n      \"LoadBasedAutoScaling\" : LoadBasedAutoScaling,\n      \"Name\" : String,\n      \"Packages\" : [ String, ... ],\n      \"Shortname\" : String,\n      \"StackId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"UseEbsOptimizedInstances\" : Boolean,\n      \"VolumeConfigurations\" : [ VolumeConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Layer\nProperties:\n  Attributes: \n    Key: Value\n  AutoAssignElasticIps: Boolean\n  AutoAssignPublicIps: Boolean\n  CustomInstanceProfileArn: String\n  CustomJson: \n    Json\n  CustomRecipes: \n    Recipes\n  CustomSecurityGroupIds: \n    - String\n  EnableAutoHealing: Boolean\n  InstallUpdatesOnBoot: Boolean\n  LifecycleEventConfiguration: \n    LifecycleEventConfiguration\n  LoadBasedAutoScaling: \n    LoadBasedAutoScaling\n  Name: String\n  Packages: \n    - String\n  Shortname: String\n  StackId: String\n  Tags: \n    - Tag\n  Type: String\n  UseEbsOptimizedInstances: Boolean\n  VolumeConfigurations: \n    - VolumeConfiguration\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Stack","awsResourceTypeName":"opsworks-stack","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Stack\",\n  \"Properties\" : {\n      \"AgentVersion\" : String,\n      \"Attributes\" : {Key: Value, ...},\n      \"ChefConfiguration\" : ChefConfiguration,\n      \"CloneAppIds\" : [ String, ... ],\n      \"ClonePermissions\" : Boolean,\n      \"ConfigurationManager\" : StackConfigurationManager,\n      \"CustomCookbooksSource\" : Source,\n      \"CustomJson\" : Json,\n      \"DefaultAvailabilityZone\" : String,\n      \"DefaultInstanceProfileArn\" : String,\n      \"DefaultOs\" : String,\n      \"DefaultRootDeviceType\" : String,\n      \"DefaultSshKeyName\" : String,\n      \"DefaultSubnetId\" : String,\n      \"EcsClusterArn\" : String,\n      \"ElasticIps\" : [ ElasticIp, ... ],\n      \"HostnameTheme\" : String,\n      \"Name\" : String,\n      \"RdsDbInstances\" : [ RdsDbInstance, ... ],\n      \"ServiceRoleArn\" : String,\n      \"SourceStackId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseCustomCookbooks\" : Boolean,\n      \"UseOpsworksSecurityGroups\" : Boolean,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Stack\nProperties:\n  AgentVersion: String\n  Attributes: \n    Key: Value\n  ChefConfiguration: \n    ChefConfiguration\n  CloneAppIds: \n    - String\n  ClonePermissions: Boolean\n  ConfigurationManager: \n    StackConfigurationManager\n  CustomCookbooksSource: \n    Source\n  CustomJson: \n    Json\n  DefaultAvailabilityZone: String\n  DefaultInstanceProfileArn: String\n  DefaultOs: String\n  DefaultRootDeviceType: String\n  DefaultSshKeyName: String\n  DefaultSubnetId: String\n  EcsClusterArn: String\n  ElasticIps: \n    - ElasticIp\n  HostnameTheme: String\n  Name: String\n  RdsDbInstances: \n    - RdsDbInstance\n  ServiceRoleArn: String\n  SourceStackId: String\n  Tags: \n    - Tag\n  UseCustomCookbooks: Boolean\n  UseOpsworksSecurityGroups: Boolean\n  VpcId: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::UserProfile","awsResourceTypeName":"opsworks-userprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::UserProfile\",\n  \"Properties\" : {\n      \"AllowSelfManagement\" : Boolean,\n      \"IamUserArn\" : String,\n      \"SshPublicKey\" : String,\n      \"SshUsername\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::UserProfile\nProperties:\n  AllowSelfManagement: Boolean\n  IamUserArn: String\n  SshPublicKey: String\n  SshUsername: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Volume","awsResourceTypeName":"opsworks-volume","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Volume\",\n  \"Properties\" : {\n      \"Ec2VolumeId\" : String,\n      \"MountPoint\" : String,\n      \"Name\" : String,\n      \"StackId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Volume\nProperties:\n  Ec2VolumeId: String\n  MountPoint: String\n  Name: String\n  StackId: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorksCM::Server","awsResourceTypeName":"opsworkscm-server","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorksCM::Server\",\n  \"Properties\" : {\n      \"AssociatePublicIpAddress\" : Boolean,\n      \"BackupId\" : String,\n      \"BackupRetentionCount\" : Integer,\n      \"CustomCertificate\" : String,\n      \"CustomDomain\" : String,\n      \"CustomPrivateKey\" : String,\n      \"DisableAutomatedBackup\" : Boolean,\n      \"Engine\" : String,\n      \"EngineAttributes\" : [ EngineAttribute, ... ],\n      \"EngineModel\" : String,\n      \"EngineVersion\" : String,\n      \"InstanceProfileArn\" : String,\n      \"InstanceType\" : String,\n      \"KeyPair\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServiceRoleArn\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorksCM::Server\nProperties:\n  AssociatePublicIpAddress: Boolean\n  BackupId: String\n  BackupRetentionCount: Integer\n  CustomCertificate: String\n  CustomDomain: String\n  CustomPrivateKey: String\n  DisableAutomatedBackup: Boolean\n  Engine: String\n  EngineAttributes: \n    - EngineAttribute\n  EngineModel: String\n  EngineVersion: String\n  InstanceProfileArn: String\n  InstanceType: String\n  KeyPair: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  SecurityGroupIds: \n    - String\n  ServiceRoleArn: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"OpsWorksCM","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::Account","awsResourceTypeName":"organizations-account","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::Account\",\n  \"Properties\" : {\n      \"AccountName\" : String,\n      \"Email\" : String,\n      \"ParentIds\" : [ String, ... ],\n      \"RoleName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::Account\nProperties:\n  AccountName: String\n  Email: String\n  ParentIds: \n    - String\n  RoleName: String\n  Tags: \n    - Tag\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::Organization","awsResourceTypeName":"organizations-organization","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::Organization\",\n  \"Properties\" : {\n      \"FeatureSet\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::Organization\nProperties:\n  FeatureSet: String\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::OrganizationalUnit","awsResourceTypeName":"organizations-organizationalunit","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::OrganizationalUnit\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ParentId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::OrganizationalUnit\nProperties:\n  Name: String\n  ParentId: String\n  Tags: \n    - Tag\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::Policy","awsResourceTypeName":"organizations-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::Policy\",\n  \"Properties\" : {\n      \"Content\" : Json,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetIds\" : [ String, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::Policy\nProperties:\n  Content: Json\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  TargetIds: \n    - String\n  Type: String\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::ResourcePolicy","awsResourceTypeName":"organizations-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::ResourcePolicy\",\n  \"Properties\" : {\n      \"Content\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::ResourcePolicy\nProperties:\n  Content: Json\n  Tags: \n    - Tag\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Panorama::ApplicationInstance","awsResourceTypeName":"panorama-applicationinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Panorama::ApplicationInstance\",\n  \"Properties\" : {\n      \"ApplicationInstanceIdToReplace\" : String,\n      \"DefaultRuntimeContextDevice\" : String,\n      \"Description\" : String,\n      \"ManifestOverridesPayload\" : ManifestOverridesPayload,\n      \"ManifestPayload\" : ManifestPayload,\n      \"Name\" : String,\n      \"RuntimeRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Panorama::ApplicationInstance\nProperties:\n  ApplicationInstanceIdToReplace: String\n  DefaultRuntimeContextDevice: String\n  Description: String\n  ManifestOverridesPayload: \n    ManifestOverridesPayload\n  ManifestPayload: \n    ManifestPayload\n  Name: String\n  RuntimeRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Panorama","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Panorama::Package","awsResourceTypeName":"panorama-package","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Panorama::Package\",\n  \"Properties\" : {\n      \"PackageName\" : String,\n      \"StorageLocation\" : StorageLocation,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Panorama::Package\nProperties:\n  PackageName: String\n  StorageLocation: \n    StorageLocation\n  Tags: \n    - Tag\n","awsServiceName":"Panorama","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Panorama::PackageVersion","awsResourceTypeName":"panorama-packageversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Panorama::PackageVersion\",\n  \"Properties\" : {\n      \"MarkLatest\" : Boolean,\n      \"OwnerAccount\" : String,\n      \"PackageId\" : String,\n      \"PackageVersion\" : String,\n      \"PatchVersion\" : String,\n      \"UpdatedLatestPatchVersion\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Panorama::PackageVersion\nProperties:\n  MarkLatest: Boolean\n  OwnerAccount: String\n  PackageId: String\n  PackageVersion: String\n  PatchVersion: String\n  UpdatedLatestPatchVersion: String\n","awsServiceName":"Panorama","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Personalize::Dataset","awsResourceTypeName":"personalize-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::Dataset\",\n  \"Properties\" : {\n      \"DatasetGroupArn\" : String,\n      \"DatasetImportJob\" : DatasetImportJob,\n      \"DatasetType\" : String,\n      \"Name\" : String,\n      \"SchemaArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::Dataset\nProperties:\n  DatasetGroupArn: String\n  DatasetImportJob: \n    DatasetImportJob\n  DatasetType: String\n  Name: String\n  SchemaArn: String\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Personalize::DatasetGroup","awsResourceTypeName":"personalize-datasetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::DatasetGroup\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"KmsKeyArn\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::DatasetGroup\nProperties:\n  Domain: String\n  KmsKeyArn: String\n  Name: String\n  RoleArn: String\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Personalize::Schema","awsResourceTypeName":"personalize-schema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::Schema\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"Name\" : String,\n      \"Schema\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::Schema\nProperties:\n  Domain: String\n  Name: String\n  Schema: String\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Personalize::Solution","awsResourceTypeName":"personalize-solution","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::Solution\",\n  \"Properties\" : {\n      \"DatasetGroupArn\" : String,\n      \"EventType\" : String,\n      \"Name\" : String,\n      \"PerformAutoML\" : Boolean,\n      \"PerformHPO\" : Boolean,\n      \"RecipeArn\" : String,\n      \"SolutionConfig\" : SolutionConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::Solution\nProperties:\n  DatasetGroupArn: String\n  EventType: String\n  Name: String\n  PerformAutoML: Boolean\n  PerformHPO: Boolean\n  RecipeArn: String\n  SolutionConfig: \n    SolutionConfig\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Pinpoint::ADMChannel","awsResourceTypeName":"pinpoint-admchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::ADMChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ClientId\" : String,\n      \"ClientSecret\" : String,\n      \"Enabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::ADMChannel\nProperties:\n  ApplicationId: String\n  ClientId: String\n  ClientSecret: String\n  Enabled: Boolean\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSChannel","awsResourceTypeName":"pinpoint-apnschannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSSandboxChannel","awsResourceTypeName":"pinpoint-apnssandboxchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSSandboxChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSSandboxChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSVoipChannel","awsResourceTypeName":"pinpoint-apnsvoipchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSVoipChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSVoipChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSVoipSandboxChannel","awsResourceTypeName":"pinpoint-apnsvoipsandboxchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSVoipSandboxChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSVoipSandboxChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::App","awsResourceTypeName":"pinpoint-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::App\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::App\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::ApplicationSettings","awsResourceTypeName":"pinpoint-applicationsettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::ApplicationSettings\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"CampaignHook\" : CampaignHook,\n      \"CloudWatchMetricsEnabled\" : Boolean,\n      \"Limits\" : Limits,\n      \"QuietTime\" : QuietTime\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::ApplicationSettings\nProperties:\n  ApplicationId: String\n  CampaignHook: \n    CampaignHook\n  CloudWatchMetricsEnabled: Boolean\n  Limits: \n    Limits\n  QuietTime: \n    QuietTime\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::BaiduChannel","awsResourceTypeName":"pinpoint-baiduchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::BaiduChannel\",\n  \"Properties\" : {\n      \"ApiKey\" : String,\n      \"ApplicationId\" : String,\n      \"Enabled\" : Boolean,\n      \"SecretKey\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::BaiduChannel\nProperties:\n  ApiKey: String\n  ApplicationId: String\n  Enabled: Boolean\n  SecretKey: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::Campaign","awsResourceTypeName":"pinpoint-campaign","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::Campaign\",\n  \"Properties\" : {\n      \"AdditionalTreatments\" : [ WriteTreatmentResource, ... ],\n      \"ApplicationId\" : String,\n      \"CampaignHook\" : CampaignHook,\n      \"CustomDeliveryConfiguration\" : CustomDeliveryConfiguration,\n      \"Description\" : String,\n      \"HoldoutPercent\" : Integer,\n      \"IsPaused\" : Boolean,\n      \"Limits\" : Limits,\n      \"MessageConfiguration\" : MessageConfiguration,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"Schedule\" : Schedule,\n      \"SegmentId\" : String,\n      \"SegmentVersion\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateConfiguration\" : TemplateConfiguration,\n      \"TreatmentDescription\" : String,\n      \"TreatmentName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::Campaign\nProperties:\n  AdditionalTreatments: \n    - WriteTreatmentResource\n  ApplicationId: String\n  CampaignHook: \n    CampaignHook\n  CustomDeliveryConfiguration: \n    CustomDeliveryConfiguration\n  Description: String\n  HoldoutPercent: Integer\n  IsPaused: Boolean\n  Limits: \n    Limits\n  MessageConfiguration: \n    MessageConfiguration\n  Name: String\n  Priority: Integer\n  Schedule: \n    Schedule\n  SegmentId: String\n  SegmentVersion: Integer\n  Tags: \n    - Tag\n  TemplateConfiguration: \n    TemplateConfiguration\n  TreatmentDescription: String\n  TreatmentName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::EmailChannel","awsResourceTypeName":"pinpoint-emailchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::EmailChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ConfigurationSet\" : String,\n      \"Enabled\" : Boolean,\n      \"FromAddress\" : String,\n      \"Identity\" : String,\n      \"OrchestrationSendingRoleArn\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::EmailChannel\nProperties:\n  ApplicationId: String\n  ConfigurationSet: String\n  Enabled: Boolean\n  FromAddress: String\n  Identity: String\n  OrchestrationSendingRoleArn: String\n  RoleArn: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::EmailTemplate","awsResourceTypeName":"pinpoint-emailtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::EmailTemplate\",\n  \"Properties\" : {\n      \"DefaultSubstitutions\" : String,\n      \"HtmlPart\" : String,\n      \"Subject\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String,\n      \"TextPart\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::EmailTemplate\nProperties:\n  DefaultSubstitutions: String\n  HtmlPart: String\n  Subject: String\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n  TextPart: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::EventStream","awsResourceTypeName":"pinpoint-eventstream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::EventStream\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"DestinationStreamArn\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::EventStream\nProperties:\n  ApplicationId: String\n  DestinationStreamArn: String\n  RoleArn: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::GCMChannel","awsResourceTypeName":"pinpoint-gcmchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::GCMChannel\",\n  \"Properties\" : {\n      \"ApiKey\" : String,\n      \"ApplicationId\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"ServiceJson\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::GCMChannel\nProperties:\n  ApiKey: String\n  ApplicationId: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  ServiceJson: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::InAppTemplate","awsResourceTypeName":"pinpoint-inapptemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::InAppTemplate\",\n  \"Properties\" : {\n      \"Content\" : [ InAppMessageContent, ... ],\n      \"CustomConfig\" : Json,\n      \"Layout\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::InAppTemplate\nProperties:\n  Content: \n    - InAppMessageContent\n  CustomConfig: Json\n  Layout: String\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::PushTemplate","awsResourceTypeName":"pinpoint-pushtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::PushTemplate\",\n  \"Properties\" : {\n      \"ADM\" : AndroidPushNotificationTemplate,\n      \"APNS\" : APNSPushNotificationTemplate,\n      \"Baidu\" : AndroidPushNotificationTemplate,\n      \"Default\" : DefaultPushNotificationTemplate,\n      \"DefaultSubstitutions\" : String,\n      \"GCM\" : AndroidPushNotificationTemplate,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::PushTemplate\nProperties:\n  ADM: \n    AndroidPushNotificationTemplate\n  APNS: \n    APNSPushNotificationTemplate\n  Baidu: \n    AndroidPushNotificationTemplate\n  Default: \n    DefaultPushNotificationTemplate\n  DefaultSubstitutions: String\n  GCM: \n    AndroidPushNotificationTemplate\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::Segment","awsResourceTypeName":"pinpoint-segment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::Segment\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Dimensions\" : SegmentDimensions,\n      \"Name\" : String,\n      \"SegmentGroups\" : SegmentGroups,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::Segment\nProperties:\n  ApplicationId: String\n  Dimensions: \n    SegmentDimensions\n  Name: String\n  SegmentGroups: \n    SegmentGroups\n  Tags: \n    - Tag\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::SMSChannel","awsResourceTypeName":"pinpoint-smschannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::SMSChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Enabled\" : Boolean,\n      \"SenderId\" : String,\n      \"ShortCode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::SMSChannel\nProperties:\n  ApplicationId: String\n  Enabled: Boolean\n  SenderId: String\n  ShortCode: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::SmsTemplate","awsResourceTypeName":"pinpoint-smstemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::SmsTemplate\",\n  \"Properties\" : {\n      \"Body\" : String,\n      \"DefaultSubstitutions\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::SmsTemplate\nProperties:\n  Body: String\n  DefaultSubstitutions: String\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::VoiceChannel","awsResourceTypeName":"pinpoint-voicechannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::VoiceChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Enabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::VoiceChannel\nProperties:\n  ApplicationId: String\n  Enabled: Boolean\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::ConfigurationSet","awsResourceTypeName":"pinpointemail-configurationset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::ConfigurationSet\",\n  \"Properties\" : {\n      \"DeliveryOptions\" : DeliveryOptions,\n      \"Name\" : String,\n      \"ReputationOptions\" : ReputationOptions,\n      \"SendingOptions\" : SendingOptions,\n      \"Tags\" : [ Tags, ... ],\n      \"TrackingOptions\" : TrackingOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::ConfigurationSet\nProperties:\n  DeliveryOptions: \n    DeliveryOptions\n  Name: String\n  ReputationOptions: \n    ReputationOptions\n  SendingOptions: \n    SendingOptions\n  Tags: \n    - Tags\n  TrackingOptions: \n    TrackingOptions\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::ConfigurationSetEventDestination","awsResourceTypeName":"pinpointemail-configurationseteventdestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::ConfigurationSetEventDestination\",\n  \"Properties\" : {\n      \"ConfigurationSetName\" : String,\n      \"EventDestination\" : EventDestination,\n      \"EventDestinationName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::ConfigurationSetEventDestination\nProperties:\n  ConfigurationSetName: String\n  EventDestination: \n    EventDestination\n  EventDestinationName: String\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::DedicatedIpPool","awsResourceTypeName":"pinpointemail-dedicatedippool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::DedicatedIpPool\",\n  \"Properties\" : {\n      \"PoolName\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::DedicatedIpPool\nProperties:\n  PoolName: String\n  Tags: \n    - Tags\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::Identity","awsResourceTypeName":"pinpointemail-identity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::Identity\",\n  \"Properties\" : {\n      \"DkimSigningEnabled\" : Boolean,\n      \"FeedbackForwardingEnabled\" : Boolean,\n      \"MailFromAttributes\" : MailFromAttributes,\n      \"Name\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::Identity\nProperties:\n  DkimSigningEnabled: Boolean\n  FeedbackForwardingEnabled: Boolean\n  MailFromAttributes: \n    MailFromAttributes\n  Name: String\n  Tags: \n    - Tags\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ACMPCA::Certificate","awsResourceTypeName":"acmpca-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::Certificate\",\n  \"Properties\" : {\n      \"ApiPassthrough\" : ApiPassthrough,\n      \"CertificateAuthorityArn\" : String,\n      \"CertificateSigningRequest\" : String,\n      \"SigningAlgorithm\" : String,\n      \"TemplateArn\" : String,\n      \"Validity\" : Validity,\n      \"ValidityNotBefore\" : Validity\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::Certificate\nProperties:\n  ApiPassthrough: \n    ApiPassthrough\n  CertificateAuthorityArn: String\n  CertificateSigningRequest: String\n  SigningAlgorithm: String\n  TemplateArn: String\n  Validity: \n    Validity\n  ValidityNotBefore: \n    Validity\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::ACMPCA::CertificateAuthority","awsResourceTypeName":"acmpca-certificateauthority","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::CertificateAuthority\",\n  \"Properties\" : {\n      \"CsrExtensions\" : CsrExtensions,\n      \"KeyAlgorithm\" : String,\n      \"KeyStorageSecurityStandard\" : String,\n      \"RevocationConfiguration\" : RevocationConfiguration,\n      \"SigningAlgorithm\" : String,\n      \"Subject\" : Subject,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"UsageMode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::CertificateAuthority\nProperties:\n  CsrExtensions: \n    CsrExtensions\n  KeyAlgorithm: String\n  KeyStorageSecurityStandard: String\n  RevocationConfiguration: \n    RevocationConfiguration\n  SigningAlgorithm: String\n  Subject: \n    Subject\n  Tags: \n    - Tag\n  Type: String\n  UsageMode: String\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::ACMPCA::CertificateAuthorityActivation","awsResourceTypeName":"acmpca-certificateauthorityactivation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::CertificateAuthorityActivation\",\n  \"Properties\" : {\n      \"Certificate\" : String,\n      \"CertificateAuthorityArn\" : String,\n      \"CertificateChain\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::CertificateAuthorityActivation\nProperties:\n  Certificate: String\n  CertificateAuthorityArn: String\n  CertificateChain: String\n  Status: String\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::ACMPCA::Permission","awsResourceTypeName":"acmpca-permission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::Permission\",\n  \"Properties\" : {\n      \"Actions\" : [ String, ... ],\n      \"CertificateAuthorityArn\" : String,\n      \"Principal\" : String,\n      \"SourceAccount\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::Permission\nProperties:\n  Actions: \n    - String\n  CertificateAuthorityArn: String\n  Principal: String\n  SourceAccount: String\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::Connector","awsResourceTypeName":"pcaconnectorad-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::Connector\",\n  \"Properties\" : {\n      \"CertificateAuthorityArn\" : String,\n      \"DirectoryId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"VpcInformation\" : VpcInformation\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::Connector\nProperties:\n  CertificateAuthorityArn: String\n  DirectoryId: String\n  Tags: \n    Key: Value\n  VpcInformation: \n    VpcInformation\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::DirectoryRegistration","awsResourceTypeName":"pcaconnectorad-directoryregistration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::DirectoryRegistration\",\n  \"Properties\" : {\n      \"DirectoryId\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::DirectoryRegistration\nProperties:\n  DirectoryId: String\n  Tags: \n    Key: Value\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::ServicePrincipalName","awsResourceTypeName":"pcaconnectorad-serviceprincipalname","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::ServicePrincipalName\",\n  \"Properties\" : {\n      \"ConnectorArn\" : String,\n      \"DirectoryRegistrationArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::ServicePrincipalName\nProperties:\n  ConnectorArn: String\n  DirectoryRegistrationArn: String\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::Template","awsResourceTypeName":"pcaconnectorad-template","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::Template\",\n  \"Properties\" : {\n      \"ConnectorArn\" : String,\n      \"Definition\" : TemplateDefinition,\n      \"Name\" : String,\n      \"ReenrollAllCertificateHolders\" : Boolean,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::Template\nProperties:\n  ConnectorArn: String\n  Definition: \n    TemplateDefinition\n  Name: String\n  ReenrollAllCertificateHolders: Boolean\n  Tags: \n    Key: Value\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::TemplateGroupAccessControlEntry","awsResourceTypeName":"pcaconnectorad-templategroupaccesscontrolentry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::TemplateGroupAccessControlEntry\",\n  \"Properties\" : {\n      \"AccessRights\" : AccessRights,\n      \"GroupDisplayName\" : String,\n      \"GroupSecurityIdentifier\" : String,\n      \"TemplateArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::TemplateGroupAccessControlEntry\nProperties:\n  AccessRights: \n    AccessRights\n  GroupDisplayName: String\n  GroupSecurityIdentifier: String\n  TemplateArn: String\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::Proton::EnvironmentAccountConnection","awsResourceTypeName":"proton-environmentaccountconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Proton::EnvironmentAccountConnection\",\n  \"Properties\" : {\n      \"CodebuildRoleArn\" : String,\n      \"ComponentRoleArn\" : String,\n      \"EnvironmentAccountId\" : String,\n      \"EnvironmentName\" : String,\n      \"ManagementAccountId\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Proton::EnvironmentAccountConnection\nProperties:\n  CodebuildRoleArn: String\n  ComponentRoleArn: String\n  EnvironmentAccountId: String\n  EnvironmentName: String\n  ManagementAccountId: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Proton","awsServiceCategory":"other"},{"awsResourceType":"AWS::Proton::EnvironmentTemplate","awsResourceTypeName":"proton-environmenttemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Proton::EnvironmentTemplate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"EncryptionKey\" : String,\n      \"Name\" : String,\n      \"Provisioning\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Proton::EnvironmentTemplate\nProperties:\n  Description: String\n  DisplayName: String\n  EncryptionKey: String\n  Name: String\n  Provisioning: String\n  Tags: \n    - Tag\n","awsServiceName":"Proton","awsServiceCategory":"other"},{"awsResourceType":"AWS::Proton::ServiceTemplate","awsResourceTypeName":"proton-servicetemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Proton::ServiceTemplate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"EncryptionKey\" : String,\n      \"Name\" : String,\n      \"PipelineProvisioning\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Proton::ServiceTemplate\nProperties:\n  Description: String\n  DisplayName: String\n  EncryptionKey: String\n  Name: String\n  PipelineProvisioning: String\n  Tags: \n    - Tag\n","awsServiceName":"Proton","awsServiceCategory":"other"},{"awsResourceType":"AWS::APS::RuleGroupsNamespace","awsResourceTypeName":"aps-rulegroupsnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::APS::RuleGroupsNamespace\",\n  \"Properties\" : {\n      \"Data\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Workspace\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::APS::RuleGroupsNamespace\nProperties:\n  Data: String\n  Name: String\n  Tags: \n    - Tag\n  Workspace: String\n","awsServiceName":"APS","awsServiceCategory":"other"},{"awsResourceType":"AWS::APS::Scraper","awsResourceTypeName":"aps-scraper","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::APS::Scraper\",\n  \"Properties\" : {\n      \"Alias\" : String,\n      \"Destination\" : Destination,\n      \"ScrapeConfiguration\" : ScrapeConfiguration,\n      \"Source\" : Source,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::APS::Scraper\nProperties:\n  Alias: String\n  Destination: \n    Destination\n  ScrapeConfiguration: \n    ScrapeConfiguration\n  Source: \n    Source\n  Tags: \n    - Tag\n","awsServiceName":"APS","awsServiceCategory":"other"},{"awsResourceType":"AWS::APS::Workspace","awsResourceTypeName":"aps-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::APS::Workspace\",\n  \"Properties\" : {\n      \"AlertManagerDefinition\" : String,\n      \"Alias\" : String,\n      \"KmsKeyArn\" : String,\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::APS::Workspace\nProperties:\n  AlertManagerDefinition: String\n  Alias: String\n  KmsKeyArn: String\n  LoggingConfiguration: \n    LoggingConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"APS","awsServiceCategory":"other"},{"awsResourceType":"AWS::QLDB::Ledger","awsResourceTypeName":"qldb-ledger","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QLDB::Ledger\",\n  \"Properties\" : {\n      \"DeletionProtection\" : Boolean,\n      \"KmsKey\" : String,\n      \"Name\" : String,\n      \"PermissionsMode\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QLDB::Ledger\nProperties:\n  DeletionProtection: Boolean\n  KmsKey: String\n  Name: String\n  PermissionsMode: String\n  Tags: \n    - Tag\n","awsServiceName":"QLDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::QLDB::Stream","awsResourceTypeName":"qldb-stream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QLDB::Stream\",\n  \"Properties\" : {\n      \"ExclusiveEndTime\" : String,\n      \"InclusiveStartTime\" : String,\n      \"KinesisConfiguration\" : KinesisConfiguration,\n      \"LedgerName\" : String,\n      \"RoleArn\" : String,\n      \"StreamName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QLDB::Stream\nProperties:\n  ExclusiveEndTime: String\n  InclusiveStartTime: String\n  KinesisConfiguration: \n    KinesisConfiguration\n  LedgerName: String\n  RoleArn: String\n  StreamName: String\n  Tags: \n    - Tag\n","awsServiceName":"QLDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::QuickSight::Analysis","awsResourceTypeName":"quicksight-analysis","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Analysis\",\n  \"Properties\" : {\n      \"AnalysisId\" : String,\n      \"AwsAccountId\" : String,\n      \"Definition\" : AnalysisDefinition,\n      \"Errors\" : [ AnalysisError, ... ],\n      \"Name\" : String,\n      \"Parameters\" : Parameters,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"Sheets\" : [ Sheet, ... ],\n      \"SourceEntity\" : AnalysisSourceEntity,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThemeArn\" : String,\n      \"ValidationStrategy\" : ValidationStrategy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Analysis\nProperties:\n  AnalysisId: String\n  AwsAccountId: String\n  Definition: \n    AnalysisDefinition\n  Errors: \n    - AnalysisError\n  Name: String\n  Parameters: \n    Parameters\n  Permissions: \n    - ResourcePermission\n  Sheets: \n    - Sheet\n  SourceEntity: \n    AnalysisSourceEntity\n  Status: String\n  Tags: \n    - Tag\n  ThemeArn: String\n  ValidationStrategy: \n    ValidationStrategy\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Dashboard","awsResourceTypeName":"quicksight-dashboard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Dashboard\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"DashboardId\" : String,\n      \"DashboardPublishOptions\" : DashboardPublishOptions,\n      \"Definition\" : DashboardVersionDefinition,\n      \"LinkEntities\" : [ String, ... ],\n      \"LinkSharingConfiguration\" : LinkSharingConfiguration,\n      \"Name\" : String,\n      \"Parameters\" : Parameters,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"SourceEntity\" : DashboardSourceEntity,\n      \"Tags\" : [ Tag, ... ],\n      \"ThemeArn\" : String,\n      \"ValidationStrategy\" : ValidationStrategy,\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Dashboard\nProperties:\n  AwsAccountId: String\n  DashboardId: String\n  DashboardPublishOptions: \n    DashboardPublishOptions\n  Definition: \n    DashboardVersionDefinition\n  LinkEntities: \n    - String\n  LinkSharingConfiguration: \n    LinkSharingConfiguration\n  Name: String\n  Parameters: \n    Parameters\n  Permissions: \n    - ResourcePermission\n  SourceEntity: \n    DashboardSourceEntity\n  Tags: \n    - Tag\n  ThemeArn: String\n  ValidationStrategy: \n    ValidationStrategy\n  VersionDescription: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::DataSet","awsResourceTypeName":"quicksight-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::DataSet\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"ColumnGroups\" : [ ColumnGroup, ... ],\n      \"ColumnLevelPermissionRules\" : [ ColumnLevelPermissionRule, ... ],\n      \"DataSetId\" : String,\n      \"DatasetParameters\" : [ DatasetParameter, ... ],\n      \"DataSetRefreshProperties\" : DataSetRefreshProperties,\n      \"DataSetUsageConfiguration\" : DataSetUsageConfiguration,\n      \"FieldFolders\" : {Key: Value, ...},\n      \"ImportMode\" : String,\n      \"IngestionWaitPolicy\" : IngestionWaitPolicy,\n      \"LogicalTableMap\" : {Key: Value, ...},\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"PhysicalTableMap\" : {Key: Value, ...},\n      \"RowLevelPermissionDataSet\" : RowLevelPermissionDataSet,\n      \"RowLevelPermissionTagConfiguration\" : RowLevelPermissionTagConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::DataSet\nProperties:\n  AwsAccountId: String\n  ColumnGroups: \n    - ColumnGroup\n  ColumnLevelPermissionRules: \n    - ColumnLevelPermissionRule\n  DataSetId: String\n  DatasetParameters: \n    - DatasetParameter\n  DataSetRefreshProperties: \n    DataSetRefreshProperties\n  DataSetUsageConfiguration: \n    DataSetUsageConfiguration\n  FieldFolders: \n    Key: Value\n  ImportMode: String\n  IngestionWaitPolicy: \n    IngestionWaitPolicy\n  LogicalTableMap: \n    Key: Value\n  Name: String\n  Permissions: \n    - ResourcePermission\n  PhysicalTableMap: \n    Key: Value\n  RowLevelPermissionDataSet: \n    RowLevelPermissionDataSet\n  RowLevelPermissionTagConfiguration: \n    RowLevelPermissionTagConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::DataSource","awsResourceTypeName":"quicksight-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::DataSource\",\n  \"Properties\" : {\n      \"AlternateDataSourceParameters\" : [ DataSourceParameters, ... ],\n      \"AwsAccountId\" : String,\n      \"Credentials\" : DataSourceCredentials,\n      \"DataSourceId\" : String,\n      \"DataSourceParameters\" : DataSourceParameters,\n      \"ErrorInfo\" : DataSourceErrorInfo,\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"SslProperties\" : SslProperties,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"VpcConnectionProperties\" : VpcConnectionProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::DataSource\nProperties:\n  AlternateDataSourceParameters: \n    - DataSourceParameters\n  AwsAccountId: String\n  Credentials: \n    DataSourceCredentials\n  DataSourceId: String\n  DataSourceParameters: \n    DataSourceParameters\n  ErrorInfo: \n    DataSourceErrorInfo\n  Name: String\n  Permissions: \n    - ResourcePermission\n  SslProperties: \n    SslProperties\n  Tags: \n    - Tag\n  Type: String\n  VpcConnectionProperties: \n    VpcConnectionProperties\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::RefreshSchedule","awsResourceTypeName":"quicksight-refreshschedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::RefreshSchedule\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"DataSetId\" : String,\n      \"Schedule\" : RefreshScheduleMap\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::RefreshSchedule\nProperties:\n  AwsAccountId: String\n  DataSetId: String\n  Schedule: \n    RefreshScheduleMap\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Template","awsResourceTypeName":"quicksight-template","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Template\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"Definition\" : TemplateVersionDefinition,\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"SourceEntity\" : TemplateSourceEntity,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateId\" : String,\n      \"ValidationStrategy\" : ValidationStrategy,\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Template\nProperties:\n  AwsAccountId: String\n  Definition: \n    TemplateVersionDefinition\n  Name: String\n  Permissions: \n    - ResourcePermission\n  SourceEntity: \n    TemplateSourceEntity\n  Tags: \n    - Tag\n  TemplateId: String\n  ValidationStrategy: \n    ValidationStrategy\n  VersionDescription: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Theme","awsResourceTypeName":"quicksight-theme","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Theme\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"BaseThemeId\" : String,\n      \"Configuration\" : ThemeConfiguration,\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"ThemeId\" : String,\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Theme\nProperties:\n  AwsAccountId: String\n  BaseThemeId: String\n  Configuration: \n    ThemeConfiguration\n  Name: String\n  Permissions: \n    - ResourcePermission\n  Tags: \n    - Tag\n  ThemeId: String\n  VersionDescription: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Topic","awsResourceTypeName":"quicksight-topic","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Topic\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"DataSets\" : [ DatasetMetadata, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"TopicId\" : String,\n      \"UserExperienceVersion\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Topic\nProperties:\n  AwsAccountId: String\n  DataSets: \n    - DatasetMetadata\n  Description: String\n  Name: String\n  TopicId: String\n  UserExperienceVersion: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::VPCConnection","awsResourceTypeName":"quicksight-vpcconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::VPCConnection\",\n  \"Properties\" : {\n      \"AvailabilityStatus\" : String,\n      \"AwsAccountId\" : String,\n      \"DnsResolvers\" : [ String, ... ],\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VPCConnectionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::VPCConnection\nProperties:\n  AvailabilityStatus: String\n  AwsAccountId: String\n  DnsResolvers: \n    - String\n  Name: String\n  RoleArn: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VPCConnectionId: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::RAM::Permission","awsResourceTypeName":"ram-permission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RAM::Permission\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"PolicyTemplate\" : Json,\n      \"ResourceType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RAM::Permission\nProperties:\n  Name: String\n  PolicyTemplate: Json\n  ResourceType: String\n  Tags: \n    - Tag\n","awsServiceName":"RAM","awsServiceCategory":"other"},{"awsResourceType":"AWS::RAM::ResourceShare","awsResourceTypeName":"ram-resourceshare","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RAM::ResourceShare\",\n  \"Properties\" : {\n      \"AllowExternalPrincipals\" : Boolean,\n      \"Name\" : String,\n      \"PermissionArns\" : [ String, ... ],\n      \"Principals\" : [ String, ... ],\n      \"ResourceArns\" : [ String, ... ],\n      \"Sources\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RAM::ResourceShare\nProperties:\n  AllowExternalPrincipals: Boolean\n  Name: String\n  PermissionArns: \n    - String\n  Principals: \n    - String\n  ResourceArns: \n    - String\n  Sources: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"RAM","awsServiceCategory":"other"},{"awsResourceType":"AWS::RDS::CustomDBEngineVersion","awsResourceTypeName":"rds-customdbengineversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::CustomDBEngineVersion\",\n  \"Properties\" : {\n      \"DatabaseInstallationFilesS3BucketName\" : String,\n      \"DatabaseInstallationFilesS3Prefix\" : String,\n      \"Description\" : String,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"ImageId\" : String,\n      \"KMSKeyId\" : String,\n      \"Manifest\" : String,\n      \"SourceCustomDbEngineVersionIdentifier\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseAwsProvidedLatestImage\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::CustomDBEngineVersion\nProperties:\n  DatabaseInstallationFilesS3BucketName: String\n  DatabaseInstallationFilesS3Prefix: String\n  Description: String\n  Engine: String\n  EngineVersion: String\n  ImageId: String\n  KMSKeyId: String\n  Manifest: String\n  SourceCustomDbEngineVersionIdentifier: String\n  Status: String\n  Tags: \n    - Tag\n  UseAwsProvidedLatestImage: Boolean\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBCluster","awsResourceTypeName":"rds-dbcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBCluster\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : Integer,\n      \"AssociatedRoles\" : [ DBClusterRole, ... ],\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZones\" : [ String, ... ],\n      \"BacktrackWindow\" : Integer,\n      \"BackupRetentionPeriod\" : Integer,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"DatabaseName\" : String,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterInstanceClass\" : String,\n      \"DBClusterParameterGroupName\" : String,\n      \"DBInstanceParameterGroupName\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"DBSystemId\" : String,\n      \"DeletionProtection\" : Boolean,\n      \"Domain\" : String,\n      \"DomainIAMRoleName\" : String,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EnableGlobalWriteForwarding\" : Boolean,\n      \"EnableHttpEndpoint\" : Boolean,\n      \"EnableIAMDatabaseAuthentication\" : Boolean,\n      \"Engine\" : String,\n      \"EngineMode\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalClusterIdentifier\" : String,\n      \"Iops\" : Integer,\n      \"KmsKeyId\" : String,\n      \"ManageMasterUserPassword\" : Boolean,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"MasterUserSecret\" : MasterUserSecret,\n      \"MonitoringInterval\" : Integer,\n      \"MonitoringRoleArn\" : String,\n      \"NetworkType\" : String,\n      \"PerformanceInsightsEnabled\" : Boolean,\n      \"PerformanceInsightsKmsKeyId\" : String,\n      \"PerformanceInsightsRetentionPeriod\" : Integer,\n      \"Port\" : Integer,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"ReadEndpoint\" : ReadEndpoint,\n      \"ReplicationSourceIdentifier\" : String,\n      \"RestoreToTime\" : String,\n      \"RestoreType\" : String,\n      \"ScalingConfiguration\" : ScalingConfiguration,\n      \"ServerlessV2ScalingConfiguration\" : ServerlessV2ScalingConfiguration,\n      \"SnapshotIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"SourceRegion\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"StorageType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBCluster\nProperties:\n  AllocatedStorage: Integer\n  AssociatedRoles: \n    - DBClusterRole\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZones: \n    - String\n  BacktrackWindow: Integer\n  BackupRetentionPeriod: Integer\n  CopyTagsToSnapshot: Boolean\n  DatabaseName: String\n  DBClusterIdentifier: String\n  DBClusterInstanceClass: String\n  DBClusterParameterGroupName: String\n  DBInstanceParameterGroupName: String\n  DBSubnetGroupName: String\n  DBSystemId: String\n  DeletionProtection: Boolean\n  Domain: String\n  DomainIAMRoleName: String\n  EnableCloudwatchLogsExports: \n    - String\n  EnableGlobalWriteForwarding: Boolean\n  EnableHttpEndpoint: Boolean\n  EnableIAMDatabaseAuthentication: Boolean\n  Engine: String\n  EngineMode: String\n  EngineVersion: String\n  GlobalClusterIdentifier: String\n  Iops: Integer\n  KmsKeyId: String\n  ManageMasterUserPassword: Boolean\n  MasterUsername: String\n  MasterUserPassword: String\n  MasterUserSecret: \n    MasterUserSecret\n  MonitoringInterval: Integer\n  MonitoringRoleArn: String\n  NetworkType: String\n  PerformanceInsightsEnabled: Boolean\n  PerformanceInsightsKmsKeyId: String\n  PerformanceInsightsRetentionPeriod: Integer\n  Port: Integer\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  ReadEndpoint: \n    ReadEndpoint\n  ReplicationSourceIdentifier: String\n  RestoreToTime: String\n  RestoreType: String\n  ScalingConfiguration: \n    ScalingConfiguration\n  ServerlessV2ScalingConfiguration: \n    ServerlessV2ScalingConfiguration\n  SnapshotIdentifier: String\n  SourceDBClusterIdentifier: String\n  SourceRegion: String\n  StorageEncrypted: Boolean\n  StorageType: String\n  Tags: \n    - Tag\n  UseLatestRestorableTime: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBClusterParameterGroup","awsResourceTypeName":"rds-dbclusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBClusterParameterGroup\",\n  \"Properties\" : {\n      \"DBClusterParameterGroupName\" : String,\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBClusterParameterGroup\nProperties:\n  DBClusterParameterGroupName: String\n  Description: String\n  Family: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBInstance","awsResourceTypeName":"rds-dbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBInstance\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : String,\n      \"AllowMajorVersionUpgrade\" : Boolean,\n      \"AssociatedRoles\" : [ DBInstanceRole, ... ],\n      \"AutomaticBackupReplicationRegion\" : String,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"BackupRetentionPeriod\" : Integer,\n      \"CACertificateIdentifier\" : String,\n      \"CertificateDetails\" : CertificateDetails,\n      \"CertificateRotationRestart\" : Boolean,\n      \"CharacterSetName\" : String,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"CustomIAMInstanceProfile\" : String,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterSnapshotIdentifier\" : String,\n      \"DBInstanceClass\" : String,\n      \"DBInstanceIdentifier\" : String,\n      \"DBName\" : String,\n      \"DBParameterGroupName\" : String,\n      \"DBSecurityGroups\" : [ String, ... ],\n      \"DBSnapshotIdentifier\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"DBSystemId\" : String,\n      \"DedicatedLogVolume\" : Boolean,\n      \"DeleteAutomatedBackups\" : Boolean,\n      \"DeletionProtection\" : Boolean,\n      \"Domain\" : String,\n      \"DomainAuthSecretArn\" : String,\n      \"DomainDnsIps\" : [ String, ... ],\n      \"DomainFqdn\" : String,\n      \"DomainIAMRoleName\" : String,\n      \"DomainOu\" : String,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EnableIAMDatabaseAuthentication\" : Boolean,\n      \"EnablePerformanceInsights\" : Boolean,\n      \"Endpoint\" : Endpoint,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"Iops\" : Integer,\n      \"KmsKeyId\" : String,\n      \"LicenseModel\" : String,\n      \"ManageMasterUserPassword\" : Boolean,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"MasterUserSecret\" : MasterUserSecret,\n      \"MaxAllocatedStorage\" : Integer,\n      \"MonitoringInterval\" : Integer,\n      \"MonitoringRoleArn\" : String,\n      \"MultiAZ\" : Boolean,\n      \"NcharCharacterSetName\" : String,\n      \"NetworkType\" : String,\n      \"OptionGroupName\" : String,\n      \"PerformanceInsightsKMSKeyId\" : String,\n      \"PerformanceInsightsRetentionPeriod\" : Integer,\n      \"Port\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"ProcessorFeatures\" : [ ProcessorFeature, ... ],\n      \"PromotionTier\" : Integer,\n      \"PubliclyAccessible\" : Boolean,\n      \"ReplicaMode\" : String,\n      \"RestoreTime\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"SourceDBInstanceAutomatedBackupsArn\" : String,\n      \"SourceDBInstanceIdentifier\" : String,\n      \"SourceDbiResourceId\" : String,\n      \"SourceRegion\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"StorageThroughput\" : Integer,\n      \"StorageType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timezone\" : String,\n      \"UseDefaultProcessorFeatures\" : Boolean,\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VPCSecurityGroups\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBInstance\nProperties:\n  AllocatedStorage: String\n  AllowMajorVersionUpgrade: Boolean\n  AssociatedRoles: \n    - DBInstanceRole\n  AutomaticBackupReplicationRegion: String\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  BackupRetentionPeriod: Integer\n  CACertificateIdentifier: String\n  CertificateDetails: \n    CertificateDetails\n  CertificateRotationRestart: Boolean\n  CharacterSetName: String\n  CopyTagsToSnapshot: Boolean\n  CustomIAMInstanceProfile: String\n  DBClusterIdentifier: String\n  DBClusterSnapshotIdentifier: String\n  DBInstanceClass: String\n  DBInstanceIdentifier: String\n  DBName: String\n  DBParameterGroupName: String\n  DBSecurityGroups: \n    - String\n  DBSnapshotIdentifier: String\n  DBSubnetGroupName: String\n  DBSystemId: String\n  DedicatedLogVolume: Boolean\n  DeleteAutomatedBackups: Boolean\n  DeletionProtection: Boolean\n  Domain: String\n  DomainAuthSecretArn: String\n  DomainDnsIps: \n    - String\n  DomainFqdn: String\n  DomainIAMRoleName: String\n  DomainOu: String\n  EnableCloudwatchLogsExports: \n    - String\n  EnableIAMDatabaseAuthentication: Boolean\n  EnablePerformanceInsights: Boolean\n  Endpoint: \n    Endpoint\n  Engine: String\n  EngineVersion: String\n  Iops: Integer\n  KmsKeyId: String\n  LicenseModel: String\n  ManageMasterUserPassword: Boolean\n  MasterUsername: String\n  MasterUserPassword: String\n  MasterUserSecret: \n    MasterUserSecret\n  MaxAllocatedStorage: Integer\n  MonitoringInterval: Integer\n  MonitoringRoleArn: String\n  MultiAZ: Boolean\n  NcharCharacterSetName: String\n  NetworkType: String\n  OptionGroupName: String\n  PerformanceInsightsKMSKeyId: String\n  PerformanceInsightsRetentionPeriod: Integer\n  Port: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  ProcessorFeatures: \n    - ProcessorFeature\n  PromotionTier: Integer\n  PubliclyAccessible: Boolean\n  ReplicaMode: String\n  RestoreTime: String\n  SourceDBClusterIdentifier: String\n  SourceDBInstanceAutomatedBackupsArn: String\n  SourceDBInstanceIdentifier: String\n  SourceDbiResourceId: String\n  SourceRegion: String\n  StorageEncrypted: Boolean\n  StorageThroughput: Integer\n  StorageType: String\n  Tags: \n    - Tag\n  Timezone: String\n  UseDefaultProcessorFeatures: Boolean\n  UseLatestRestorableTime: Boolean\n  VPCSecurityGroups: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBParameterGroup","awsResourceTypeName":"rds-dbparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBParameterGroup\",\n  \"Properties\" : {\n      \"DBParameterGroupName\" : String,\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBParameterGroup\nProperties:\n  DBParameterGroupName: String\n  Description: String\n  Family: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBProxy","awsResourceTypeName":"rds-dbproxy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBProxy\",\n  \"Properties\" : {\n      \"Auth\" : [ AuthFormat, ... ],\n      \"DBProxyName\" : String,\n      \"DebugLogging\" : Boolean,\n      \"EngineFamily\" : String,\n      \"IdleClientTimeout\" : Integer,\n      \"RequireTLS\" : Boolean,\n      \"RoleArn\" : String,\n      \"Tags\" : [ TagFormat, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ],\n      \"VpcSubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBProxy\nProperties:\n  Auth: \n    - AuthFormat\n  DBProxyName: String\n  DebugLogging: Boolean\n  EngineFamily: String\n  IdleClientTimeout: Integer\n  RequireTLS: Boolean\n  RoleArn: String\n  Tags: \n    - TagFormat\n  VpcSecurityGroupIds: \n    - String\n  VpcSubnetIds: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBProxyEndpoint","awsResourceTypeName":"rds-dbproxyendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBProxyEndpoint\",\n  \"Properties\" : {\n      \"DBProxyEndpointName\" : String,\n      \"DBProxyName\" : String,\n      \"Tags\" : [ TagFormat, ... ],\n      \"TargetRole\" : String,\n      \"VpcSecurityGroupIds\" : [ String, ... ],\n      \"VpcSubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBProxyEndpoint\nProperties:\n  DBProxyEndpointName: String\n  DBProxyName: String\n  Tags: \n    - TagFormat\n  TargetRole: String\n  VpcSecurityGroupIds: \n    - String\n  VpcSubnetIds: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBProxyTargetGroup","awsResourceTypeName":"rds-dbproxytargetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBProxyTargetGroup\",\n  \"Properties\" : {\n      \"ConnectionPoolConfigurationInfo\" : ConnectionPoolConfigurationInfoFormat,\n      \"DBClusterIdentifiers\" : [ String, ... ],\n      \"DBInstanceIdentifiers\" : [ String, ... ],\n      \"DBProxyName\" : String,\n      \"TargetGroupName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBProxyTargetGroup\nProperties:\n  ConnectionPoolConfigurationInfo: \n    ConnectionPoolConfigurationInfoFormat\n  DBClusterIdentifiers: \n    - String\n  DBInstanceIdentifiers: \n    - String\n  DBProxyName: String\n  TargetGroupName: String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBSecurityGroup","awsResourceTypeName":"rds-dbsecuritygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBSecurityGroup\",\n  \"Properties\" : {\n      \"DBSecurityGroupIngress\" : [ Ingress, ... ],\n      \"EC2VpcId\" : String,\n      \"GroupDescription\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBSecurityGroup\nProperties:\n  DBSecurityGroupIngress: \n    - Ingress\n  EC2VpcId: String\n  GroupDescription: String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBSecurityGroupIngress","awsResourceTypeName":"rds-dbsecuritygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBSecurityGroupIngress\",\n  \"Properties\" : {\n      \"CIDRIP\" : String,\n      \"DBSecurityGroupName\" : String,\n      \"EC2SecurityGroupId\" : String,\n      \"EC2SecurityGroupName\" : String,\n      \"EC2SecurityGroupOwnerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBSecurityGroupIngress\nProperties:\n  CIDRIP: String\n  DBSecurityGroupName: String\n  EC2SecurityGroupId: String\n  EC2SecurityGroupName: String\n  EC2SecurityGroupOwnerId: String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBSubnetGroup","awsResourceTypeName":"rds-dbsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBSubnetGroup\",\n  \"Properties\" : {\n      \"DBSubnetGroupDescription\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBSubnetGroup\nProperties:\n  DBSubnetGroupDescription: String\n  DBSubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::EventSubscription","awsResourceTypeName":"rds-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::GlobalCluster","awsResourceTypeName":"rds-globalcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::GlobalCluster\",\n  \"Properties\" : {\n      \"DeletionProtection\" : Boolean,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalClusterIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"StorageEncrypted\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::GlobalCluster\nProperties:\n  DeletionProtection: Boolean\n  Engine: String\n  EngineVersion: String\n  GlobalClusterIdentifier: String\n  SourceDBClusterIdentifier: String\n  StorageEncrypted: Boolean\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::Integration","awsResourceTypeName":"rds-integration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::Integration\",\n  \"Properties\" : {\n      \"AdditionalEncryptionContext\" : {Key: Value, ...},\n      \"DataFilter\" : String,\n      \"Description\" : String,\n      \"IntegrationName\" : String,\n      \"KMSKeyId\" : String,\n      \"SourceArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::Integration\nProperties:\n  AdditionalEncryptionContext: \n    Key: Value\n  DataFilter: String\n  Description: String\n  IntegrationName: String\n  KMSKeyId: String\n  SourceArn: String\n  Tags: \n    - Tag\n  TargetArn: String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::OptionGroup","awsResourceTypeName":"rds-optiongroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::OptionGroup\",\n  \"Properties\" : {\n      \"EngineName\" : String,\n      \"MajorEngineVersion\" : String,\n      \"OptionConfigurations\" : [ OptionConfiguration, ... ],\n      \"OptionGroupDescription\" : String,\n      \"OptionGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::OptionGroup\nProperties:\n  EngineName: String\n  MajorEngineVersion: String\n  OptionConfigurations: \n    - OptionConfiguration\n  OptionGroupDescription: String\n  OptionGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::Cluster","awsResourceTypeName":"redshift-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::Cluster\",\n  \"Properties\" : {\n      \"AllowVersionUpgrade\" : Boolean,\n      \"AquaConfigurationStatus\" : String,\n      \"AutomatedSnapshotRetentionPeriod\" : Integer,\n      \"AvailabilityZone\" : String,\n      \"AvailabilityZoneRelocation\" : Boolean,\n      \"AvailabilityZoneRelocationStatus\" : String,\n      \"Classic\" : Boolean,\n      \"ClusterIdentifier\" : String,\n      \"ClusterParameterGroupName\" : String,\n      \"ClusterSecurityGroups\" : [ String, ... ],\n      \"ClusterSubnetGroupName\" : String,\n      \"ClusterType\" : String,\n      \"ClusterVersion\" : String,\n      \"DBName\" : String,\n      \"DeferMaintenance\" : Boolean,\n      \"DeferMaintenanceDuration\" : Integer,\n      \"DeferMaintenanceEndTime\" : String,\n      \"DeferMaintenanceStartTime\" : String,\n      \"DestinationRegion\" : String,\n      \"ElasticIp\" : String,\n      \"Encrypted\" : Boolean,\n      \"Endpoint\" : Endpoint,\n      \"EnhancedVpcRouting\" : Boolean,\n      \"HsmClientCertificateIdentifier\" : String,\n      \"HsmConfigurationIdentifier\" : String,\n      \"IamRoles\" : [ String, ... ],\n      \"KmsKeyId\" : String,\n      \"LoggingProperties\" : LoggingProperties,\n      \"MaintenanceTrackName\" : String,\n      \"ManageMasterPassword\" : Boolean,\n      \"ManualSnapshotRetentionPeriod\" : Integer,\n      \"MasterPasswordSecretKmsKeyId\" : String,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"MultiAZ\" : Boolean,\n      \"NamespaceResourcePolicy\" : Json,\n      \"NodeType\" : String,\n      \"NumberOfNodes\" : Integer,\n      \"OwnerAccount\" : String,\n      \"Port\" : Integer,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"ResourceAction\" : String,\n      \"RevisionTarget\" : String,\n      \"RotateEncryptionKey\" : Boolean,\n      \"SnapshotClusterIdentifier\" : String,\n      \"SnapshotCopyGrantName\" : String,\n      \"SnapshotCopyManual\" : Boolean,\n      \"SnapshotCopyRetentionPeriod\" : Integer,\n      \"SnapshotIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::Cluster\nProperties:\n  AllowVersionUpgrade: Boolean\n  AquaConfigurationStatus: String\n  AutomatedSnapshotRetentionPeriod: Integer\n  AvailabilityZone: String\n  AvailabilityZoneRelocation: Boolean\n  AvailabilityZoneRelocationStatus: String\n  Classic: Boolean\n  ClusterIdentifier: String\n  ClusterParameterGroupName: String\n  ClusterSecurityGroups: \n    - String\n  ClusterSubnetGroupName: String\n  ClusterType: String\n  ClusterVersion: String\n  DBName: String\n  DeferMaintenance: Boolean\n  DeferMaintenanceDuration: Integer\n  DeferMaintenanceEndTime: String\n  DeferMaintenanceStartTime: String\n  DestinationRegion: String\n  ElasticIp: String\n  Encrypted: Boolean\n  Endpoint: \n    Endpoint\n  EnhancedVpcRouting: Boolean\n  HsmClientCertificateIdentifier: String\n  HsmConfigurationIdentifier: String\n  IamRoles: \n    - String\n  KmsKeyId: String\n  LoggingProperties: \n    LoggingProperties\n  MaintenanceTrackName: String\n  ManageMasterPassword: Boolean\n  ManualSnapshotRetentionPeriod: Integer\n  MasterPasswordSecretKmsKeyId: String\n  MasterUsername: String\n  MasterUserPassword: String\n  MultiAZ: Boolean\n  NamespaceResourcePolicy: Json\n  NodeType: String\n  NumberOfNodes: Integer\n  OwnerAccount: String\n  Port: Integer\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  ResourceAction: String\n  RevisionTarget: String\n  RotateEncryptionKey: Boolean\n  SnapshotClusterIdentifier: String\n  SnapshotCopyGrantName: String\n  SnapshotCopyManual: Boolean\n  SnapshotCopyRetentionPeriod: Integer\n  SnapshotIdentifier: String\n  Tags: \n    - Tag\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterParameterGroup","awsResourceTypeName":"redshift-clusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ParameterGroupFamily\" : String,\n      \"ParameterGroupName\" : String,\n      \"Parameters\" : [ Parameter, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterParameterGroup\nProperties:\n  Description: String\n  ParameterGroupFamily: String\n  ParameterGroupName: String\n  Parameters: \n    - Parameter\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterSecurityGroup","awsResourceTypeName":"redshift-clustersecuritygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterSecurityGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterSecurityGroup\nProperties:\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterSecurityGroupIngress","awsResourceTypeName":"redshift-clustersecuritygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterSecurityGroupIngress\",\n  \"Properties\" : {\n      \"CIDRIP\" : String,\n      \"ClusterSecurityGroupName\" : String,\n      \"EC2SecurityGroupName\" : String,\n      \"EC2SecurityGroupOwnerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterSecurityGroupIngress\nProperties:\n  CIDRIP: String\n  ClusterSecurityGroupName: String\n  EC2SecurityGroupName: String\n  EC2SecurityGroupOwnerId: String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterSubnetGroup","awsResourceTypeName":"redshift-clustersubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterSubnetGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterSubnetGroup\nProperties:\n  Description: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::EndpointAccess","awsResourceTypeName":"redshift-endpointaccess","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::EndpointAccess\",\n  \"Properties\" : {\n      \"ClusterIdentifier\" : String,\n      \"EndpointName\" : String,\n      \"ResourceOwner\" : String,\n      \"SubnetGroupName\" : String,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::EndpointAccess\nProperties:\n  ClusterIdentifier: String\n  EndpointName: String\n  ResourceOwner: String\n  SubnetGroupName: String\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::EndpointAuthorization","awsResourceTypeName":"redshift-endpointauthorization","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::EndpointAuthorization\",\n  \"Properties\" : {\n      \"Account\" : String,\n      \"ClusterIdentifier\" : String,\n      \"Force\" : Boolean,\n      \"VpcIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::EndpointAuthorization\nProperties:\n  Account: String\n  ClusterIdentifier: String\n  Force: Boolean\n  VpcIds: \n    - String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::EventSubscription","awsResourceTypeName":"redshift-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"Severity\" : String,\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  Severity: String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ScheduledAction","awsResourceTypeName":"redshift-scheduledaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ScheduledAction\",\n  \"Properties\" : {\n      \"Enable\" : Boolean,\n      \"EndTime\" : String,\n      \"IamRole\" : String,\n      \"Schedule\" : String,\n      \"ScheduledActionDescription\" : String,\n      \"ScheduledActionName\" : String,\n      \"StartTime\" : String,\n      \"TargetAction\" : ScheduledActionType\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ScheduledAction\nProperties:\n  Enable: Boolean\n  EndTime: String\n  IamRole: String\n  Schedule: String\n  ScheduledActionDescription: String\n  ScheduledActionName: String\n  StartTime: String\n  TargetAction: \n    ScheduledActionType\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::RedshiftServerless::Namespace","awsResourceTypeName":"redshiftserverless-namespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RedshiftServerless::Namespace\",\n  \"Properties\" : {\n      \"AdminPasswordSecretKmsKeyId\" : String,\n      \"AdminUsername\" : String,\n      \"AdminUserPassword\" : String,\n      \"DbName\" : String,\n      \"DefaultIamRoleArn\" : String,\n      \"FinalSnapshotName\" : String,\n      \"FinalSnapshotRetentionPeriod\" : Integer,\n      \"IamRoles\" : [ String, ... ],\n      \"KmsKeyId\" : String,\n      \"LogExports\" : [ String, ... ],\n      \"ManageAdminPassword\" : Boolean,\n      \"NamespaceName\" : String,\n      \"NamespaceResourcePolicy\" : Json,\n      \"RedshiftIdcApplicationArn\" : String,\n      \"SnapshotCopyConfigurations\" : [ SnapshotCopyConfiguration, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RedshiftServerless::Namespace\nProperties:\n  AdminPasswordSecretKmsKeyId: String\n  AdminUsername: String\n  AdminUserPassword: String\n  DbName: String\n  DefaultIamRoleArn: String\n  FinalSnapshotName: String\n  FinalSnapshotRetentionPeriod: Integer\n  IamRoles: \n    - String\n  KmsKeyId: String\n  LogExports: \n    - String\n  ManageAdminPassword: Boolean\n  NamespaceName: String\n  NamespaceResourcePolicy: Json\n  RedshiftIdcApplicationArn: String\n  SnapshotCopyConfigurations: \n    - SnapshotCopyConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"RedshiftServerless","awsServiceCategory":"database"},{"awsResourceType":"AWS::RedshiftServerless::Workgroup","awsResourceTypeName":"redshiftserverless-workgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RedshiftServerless::Workgroup\",\n  \"Properties\" : {\n      \"BaseCapacity\" : Integer,\n      \"ConfigParameters\" : [ ConfigParameter, ... ],\n      \"EnhancedVpcRouting\" : Boolean,\n      \"MaxCapacity\" : Integer,\n      \"NamespaceName\" : String,\n      \"Port\" : Integer,\n      \"PubliclyAccessible\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WorkgroupName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RedshiftServerless::Workgroup\nProperties:\n  BaseCapacity: Integer\n  ConfigParameters: \n    - ConfigParameter\n  EnhancedVpcRouting: Boolean\n  MaxCapacity: Integer\n  NamespaceName: String\n  Port: Integer\n  PubliclyAccessible: Boolean\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  WorkgroupName: String\n","awsServiceName":"RedshiftServerless","awsServiceCategory":"database"},{"awsResourceType":"AWS::RefactorSpaces::Application","awsResourceTypeName":"refactorspaces-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Application\",\n  \"Properties\" : {\n      \"ApiGatewayProxy\" : ApiGatewayProxyInput,\n      \"EnvironmentIdentifier\" : String,\n      \"Name\" : String,\n      \"ProxyType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Application\nProperties:\n  ApiGatewayProxy: \n    ApiGatewayProxyInput\n  EnvironmentIdentifier: String\n  Name: String\n  ProxyType: String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::RefactorSpaces::Environment","awsResourceTypeName":"refactorspaces-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"NetworkFabricType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Environment\nProperties:\n  Description: String\n  Name: String\n  NetworkFabricType: String\n  Tags: \n    - Tag\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::RefactorSpaces::Route","awsResourceTypeName":"refactorspaces-route","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Route\",\n  \"Properties\" : {\n      \"ApplicationIdentifier\" : String,\n      \"DefaultRoute\" : DefaultRouteInput,\n      \"EnvironmentIdentifier\" : String,\n      \"RouteType\" : String,\n      \"ServiceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UriPathRoute\" : UriPathRouteInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Route\nProperties:\n  ApplicationIdentifier: String\n  DefaultRoute: \n    DefaultRouteInput\n  EnvironmentIdentifier: String\n  RouteType: String\n  ServiceIdentifier: String\n  Tags: \n    - Tag\n  UriPathRoute: \n    UriPathRouteInput\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::RefactorSpaces::Service","awsResourceTypeName":"refactorspaces-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Service\",\n  \"Properties\" : {\n      \"ApplicationIdentifier\" : String,\n      \"Description\" : String,\n      \"EndpointType\" : String,\n      \"EnvironmentIdentifier\" : String,\n      \"LambdaEndpoint\" : LambdaEndpointInput,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UrlEndpoint\" : UrlEndpointInput,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Service\nProperties:\n  ApplicationIdentifier: String\n  Description: String\n  EndpointType: String\n  EnvironmentIdentifier: String\n  LambdaEndpoint: \n    LambdaEndpointInput\n  Name: String\n  Tags: \n    - Tag\n  UrlEndpoint: \n    UrlEndpointInput\n  VpcId: String\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::Rekognition::Collection","awsResourceTypeName":"rekognition-collection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Rekognition::Collection\",\n  \"Properties\" : {\n      \"CollectionId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Rekognition::Collection\nProperties:\n  CollectionId: String\n  Tags: \n    - Tag\n","awsServiceName":"Rekognition","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Rekognition::Project","awsResourceTypeName":"rekognition-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Rekognition::Project\",\n  \"Properties\" : {\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Rekognition::Project\nProperties:\n  ProjectName: String\n","awsServiceName":"Rekognition","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Rekognition::StreamProcessor","awsResourceTypeName":"rekognition-streamprocessor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Rekognition::StreamProcessor\",\n  \"Properties\" : {\n      \"BoundingBoxRegionsOfInterest\" : [ BoundingBox, ... ],\n      \"ConnectedHomeSettings\" : ConnectedHomeSettings,\n      \"DataSharingPreference\" : DataSharingPreference,\n      \"FaceSearchSettings\" : FaceSearchSettings,\n      \"KinesisDataStream\" : KinesisDataStream,\n      \"KinesisVideoStream\" : KinesisVideoStream,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"NotificationChannel\" : NotificationChannel,\n      \"PolygonRegionsOfInterest\" : [ [ , ... ], ... ],\n      \"RoleArn\" : String,\n      \"S3Destination\" : S3Destination,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Rekognition::StreamProcessor\nProperties:\n  BoundingBoxRegionsOfInterest: \n    - BoundingBox\n  ConnectedHomeSettings: \n    ConnectedHomeSettings\n  DataSharingPreference: \n    DataSharingPreference\n  FaceSearchSettings: \n    FaceSearchSettings\n  KinesisDataStream: \n    KinesisDataStream\n  KinesisVideoStream: \n    KinesisVideoStream\n  KmsKeyId: String\n  Name: String\n  NotificationChannel: \n    NotificationChannel\n  PolygonRegionsOfInterest: \n    - \n    - \n  RoleArn: String\n  S3Destination: \n    S3Destination\n  Tags: \n    - Tag\n","awsServiceName":"Rekognition","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::ResilienceHub::App","awsResourceTypeName":"resiliencehub-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResilienceHub::App\",\n  \"Properties\" : {\n      \"AppAssessmentSchedule\" : String,\n      \"AppTemplateBody\" : String,\n      \"Description\" : String,\n      \"EventSubscriptions\" : [ EventSubscription, ... ],\n      \"Name\" : String,\n      \"PermissionModel\" : PermissionModel,\n      \"ResiliencyPolicyArn\" : String,\n      \"ResourceMappings\" : [ ResourceMapping, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResilienceHub::App\nProperties:\n  AppAssessmentSchedule: String\n  AppTemplateBody: String\n  Description: String\n  EventSubscriptions: \n    - EventSubscription\n  Name: String\n  PermissionModel: \n    PermissionModel\n  ResiliencyPolicyArn: String\n  ResourceMappings: \n    - ResourceMapping\n  Tags: \n    Key: Value\n","awsServiceName":"ResilienceHub","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResilienceHub::ResiliencyPolicy","awsResourceTypeName":"resiliencehub-resiliencypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResilienceHub::ResiliencyPolicy\",\n  \"Properties\" : {\n      \"DataLocationConstraint\" : String,\n      \"Policy\" : PolicyMap,\n      \"PolicyDescription\" : String,\n      \"PolicyName\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Tier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResilienceHub::ResiliencyPolicy\nProperties:\n  DataLocationConstraint: String\n  Policy: \n    PolicyMap\n  PolicyDescription: String\n  PolicyName: String\n  Tags: \n    Key: Value\n  Tier: String\n","awsServiceName":"ResilienceHub","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceExplorer2::DefaultViewAssociation","awsResourceTypeName":"resourceexplorer2-defaultviewassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceExplorer2::DefaultViewAssociation\",\n  \"Properties\" : {\n      \"ViewArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceExplorer2::DefaultViewAssociation\nProperties:\n  ViewArn: String\n","awsServiceName":"ResourceExplorer2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceExplorer2::Index","awsResourceTypeName":"resourceexplorer2-index","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceExplorer2::Index\",\n  \"Properties\" : {\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceExplorer2::Index\nProperties:\n  Tags: \n    Key: Value\n  Type: String\n","awsServiceName":"ResourceExplorer2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceExplorer2::View","awsResourceTypeName":"resourceexplorer2-view","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceExplorer2::View\",\n  \"Properties\" : {\n      \"Filters\" : SearchFilter,\n      \"IncludedProperties\" : [ IncludedProperty, ... ],\n      \"Scope\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"ViewName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceExplorer2::View\nProperties:\n  Filters: \n    SearchFilter\n  IncludedProperties: \n    - IncludedProperty\n  Scope: String\n  Tags: \n    Key: Value\n  ViewName: String\n","awsServiceName":"ResourceExplorer2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceGroups::Group","awsResourceTypeName":"resourcegroups-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceGroups::Group\",\n  \"Properties\" : {\n      \"Configuration\" : [ ConfigurationItem, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ResourceQuery\" : ResourceQuery,\n      \"Resources\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceGroups::Group\nProperties:\n  Configuration: \n    - ConfigurationItem\n  Description: String\n  Name: String\n  ResourceQuery: \n    ResourceQuery\n  Resources: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"ResourceGroups","awsServiceCategory":"management"},{"awsResourceType":"AWS::RoboMaker::Fleet","awsResourceTypeName":"robomaker-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::Fleet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::Fleet\nProperties:\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::Robot","awsResourceTypeName":"robomaker-robot","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::Robot\",\n  \"Properties\" : {\n      \"Architecture\" : String,\n      \"Fleet\" : String,\n      \"GreengrassGroupId\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::Robot\nProperties:\n  Architecture: String\n  Fleet: String\n  GreengrassGroupId: String\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::RobotApplication","awsResourceTypeName":"robomaker-robotapplication","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::RobotApplication\",\n  \"Properties\" : {\n      \"CurrentRevisionId\" : String,\n      \"Environment\" : String,\n      \"Name\" : String,\n      \"RobotSoftwareSuite\" : RobotSoftwareSuite,\n      \"Sources\" : [ SourceConfig, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::RobotApplication\nProperties:\n  CurrentRevisionId: String\n  Environment: String\n  Name: String\n  RobotSoftwareSuite: \n    RobotSoftwareSuite\n  Sources: \n    - SourceConfig\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::RobotApplicationVersion","awsResourceTypeName":"robomaker-robotapplicationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::RobotApplicationVersion\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"CurrentRevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::RobotApplicationVersion\nProperties:\n  Application: String\n  CurrentRevisionId: String\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::SimulationApplication","awsResourceTypeName":"robomaker-simulationapplication","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::SimulationApplication\",\n  \"Properties\" : {\n      \"CurrentRevisionId\" : String,\n      \"Environment\" : String,\n      \"Name\" : String,\n      \"RenderingEngine\" : RenderingEngine,\n      \"RobotSoftwareSuite\" : RobotSoftwareSuite,\n      \"SimulationSoftwareSuite\" : SimulationSoftwareSuite,\n      \"Sources\" : [ SourceConfig, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::SimulationApplication\nProperties:\n  CurrentRevisionId: String\n  Environment: String\n  Name: String\n  RenderingEngine: \n    RenderingEngine\n  RobotSoftwareSuite: \n    RobotSoftwareSuite\n  SimulationSoftwareSuite: \n    SimulationSoftwareSuite\n  Sources: \n    - SourceConfig\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::SimulationApplicationVersion","awsResourceTypeName":"robomaker-simulationapplicationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::SimulationApplicationVersion\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"CurrentRevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::SimulationApplicationVersion\nProperties:\n  Application: String\n  CurrentRevisionId: String\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RolesAnywhere::CRL","awsResourceTypeName":"rolesanywhere-crl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RolesAnywhere::CRL\",\n  \"Properties\" : {\n      \"CrlData\" : String,\n      \"Enabled\" : Boolean,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrustAnchorArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RolesAnywhere::CRL\nProperties:\n  CrlData: String\n  Enabled: Boolean\n  Name: String\n  Tags: \n    - Tag\n  TrustAnchorArn: String\n","awsServiceName":"RolesAnywhere","awsServiceCategory":"other"},{"awsResourceType":"AWS::RolesAnywhere::Profile","awsResourceTypeName":"rolesanywhere-profile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RolesAnywhere::Profile\",\n  \"Properties\" : {\n      \"DurationSeconds\" : Number,\n      \"Enabled\" : Boolean,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"Name\" : String,\n      \"RequireInstanceProperties\" : Boolean,\n      \"RoleArns\" : [ String, ... ],\n      \"SessionPolicy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RolesAnywhere::Profile\nProperties:\n  DurationSeconds: Number\n  Enabled: Boolean\n  ManagedPolicyArns: \n    - String\n  Name: String\n  RequireInstanceProperties: Boolean\n  RoleArns: \n    - String\n  SessionPolicy: String\n  Tags: \n    - Tag\n","awsServiceName":"RolesAnywhere","awsServiceCategory":"other"},{"awsResourceType":"AWS::RolesAnywhere::TrustAnchor","awsResourceTypeName":"rolesanywhere-trustanchor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RolesAnywhere::TrustAnchor\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"Name\" : String,\n      \"NotificationSettings\" : [ NotificationSetting, ... ],\n      \"Source\" : Source,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RolesAnywhere::TrustAnchor\nProperties:\n  Enabled: Boolean\n  Name: String\n  NotificationSettings: \n    - NotificationSetting\n  Source: \n    Source\n  Tags: \n    - Tag\n","awsServiceName":"RolesAnywhere","awsServiceCategory":"other"},{"awsResourceType":"AWS::Route53::CidrCollection","awsResourceTypeName":"route53-cidrcollection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::CidrCollection\",\n  \"Properties\" : {\n      \"Locations\" : [ Location, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::CidrCollection\nProperties:\n  Locations: \n    - Location\n  Name: String\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::DNSSEC","awsResourceTypeName":"route53-dnssec","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::DNSSEC\",\n  \"Properties\" : {\n      \"HostedZoneId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::DNSSEC\nProperties:\n  HostedZoneId: String\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::HealthCheck","awsResourceTypeName":"route53-healthcheck","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::HealthCheck\",\n  \"Properties\" : {\n      \"HealthCheckConfig\" : HealthCheckConfig,\n      \"HealthCheckTags\" : [ HealthCheckTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::HealthCheck\nProperties:\n  HealthCheckConfig: \n    HealthCheckConfig\n  HealthCheckTags: \n    - HealthCheckTag\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::HostedZone","awsResourceTypeName":"route53-hostedzone","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::HostedZone\",\n  \"Properties\" : {\n      \"HostedZoneConfig\" : HostedZoneConfig,\n      \"HostedZoneTags\" : [ HostedZoneTag, ... ],\n      \"Name\" : String,\n      \"QueryLoggingConfig\" : QueryLoggingConfig,\n      \"VPCs\" : [ VPC, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::HostedZone\nProperties:\n  HostedZoneConfig: \n    HostedZoneConfig\n  HostedZoneTags: \n    - HostedZoneTag\n  Name: String\n  QueryLoggingConfig: \n    QueryLoggingConfig\n  VPCs: \n    - VPC\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::KeySigningKey","awsResourceTypeName":"route53-keysigningkey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::KeySigningKey\",\n  \"Properties\" : {\n      \"HostedZoneId\" : String,\n      \"KeyManagementServiceArn\" : String,\n      \"Name\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::KeySigningKey\nProperties:\n  HostedZoneId: String\n  KeyManagementServiceArn: String\n  Name: String\n  Status: String\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::RecordSet","awsResourceTypeName":"route53-recordset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::RecordSet\",\n  \"Properties\" : {\n      \"AliasTarget\" : AliasTarget,\n      \"CidrRoutingConfig\" : CidrRoutingConfig,\n      \"Comment\" : String,\n      \"Failover\" : String,\n      \"GeoLocation\" : GeoLocation,\n      \"GeoProximityLocation\" : GeoProximityLocation,\n      \"HealthCheckId\" : String,\n      \"HostedZoneId\" : String,\n      \"HostedZoneName\" : String,\n      \"MultiValueAnswer\" : Boolean,\n      \"Name\" : String,\n      \"Region\" : String,\n      \"ResourceRecords\" : [ String, ... ],\n      \"SetIdentifier\" : String,\n      \"TTL\" : String,\n      \"Type\" : String,\n      \"Weight\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::RecordSet\nProperties:\n  AliasTarget: \n    AliasTarget\n  CidrRoutingConfig: \n    CidrRoutingConfig\n  Comment: String\n  Failover: String\n  GeoLocation: \n    GeoLocation\n  GeoProximityLocation: \n    GeoProximityLocation\n  HealthCheckId: String\n  HostedZoneId: String\n  HostedZoneName: String\n  MultiValueAnswer: Boolean\n  Name: String\n  Region: String\n  ResourceRecords: \n    - String\n  SetIdentifier: String\n  TTL: String\n  Type: String\n  Weight: Integer\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::RecordSetGroup","awsResourceTypeName":"route53-recordsetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::RecordSetGroup\",\n  \"Properties\" : {\n      \"Comment\" : String,\n      \"HostedZoneId\" : String,\n      \"HostedZoneName\" : String,\n      \"RecordSets\" : [ RecordSet, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::RecordSetGroup\nProperties:\n  Comment: String\n  HostedZoneId: String\n  HostedZoneName: String\n  RecordSets: \n    - RecordSet\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::Cluster","awsResourceTypeName":"route53recoverycontrol-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::Cluster\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::Cluster\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::ControlPanel","awsResourceTypeName":"route53recoverycontrol-controlpanel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::ControlPanel\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::ControlPanel\nProperties:\n  ClusterArn: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::RoutingControl","awsResourceTypeName":"route53recoverycontrol-routingcontrol","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::RoutingControl\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"ControlPanelArn\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::RoutingControl\nProperties:\n  ClusterArn: String\n  ControlPanelArn: String\n  Name: String\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::SafetyRule","awsResourceTypeName":"route53recoverycontrol-safetyrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::SafetyRule\",\n  \"Properties\" : {\n      \"AssertionRule\" : AssertionRule,\n      \"ControlPanelArn\" : String,\n      \"GatingRule\" : GatingRule,\n      \"Name\" : String,\n      \"RuleConfig\" : RuleConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::SafetyRule\nProperties:\n  AssertionRule: \n    AssertionRule\n  ControlPanelArn: String\n  GatingRule: \n    GatingRule\n  Name: String\n  RuleConfig: \n    RuleConfig\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::Cell","awsResourceTypeName":"route53recoveryreadiness-cell","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::Cell\",\n  \"Properties\" : {\n      \"CellName\" : String,\n      \"Cells\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::Cell\nProperties:\n  CellName: String\n  Cells: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::ReadinessCheck","awsResourceTypeName":"route53recoveryreadiness-readinesscheck","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::ReadinessCheck\",\n  \"Properties\" : {\n      \"ReadinessCheckName\" : String,\n      \"ResourceSetName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::ReadinessCheck\nProperties:\n  ReadinessCheckName: String\n  ResourceSetName: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::RecoveryGroup","awsResourceTypeName":"route53recoveryreadiness-recoverygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::RecoveryGroup\",\n  \"Properties\" : {\n      \"Cells\" : [ String, ... ],\n      \"RecoveryGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::RecoveryGroup\nProperties:\n  Cells: \n    - String\n  RecoveryGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::ResourceSet","awsResourceTypeName":"route53recoveryreadiness-resourceset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::ResourceSet\",\n  \"Properties\" : {\n      \"Resources\" : [ Resource, ... ],\n      \"ResourceSetName\" : String,\n      \"ResourceSetType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::ResourceSet\nProperties:\n  Resources: \n    - Resource\n  ResourceSetName: String\n  ResourceSetType: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::FirewallDomainList","awsResourceTypeName":"route53resolver-firewalldomainlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::FirewallDomainList\",\n  \"Properties\" : {\n      \"DomainFileUrl\" : String,\n      \"Domains\" : [ String, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::FirewallDomainList\nProperties:\n  DomainFileUrl: String\n  Domains: \n    - String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::FirewallRuleGroup","awsResourceTypeName":"route53resolver-firewallrulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::FirewallRuleGroup\",\n  \"Properties\" : {\n      \"FirewallRules\" : [ FirewallRule, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::FirewallRuleGroup\nProperties:\n  FirewallRules: \n    - FirewallRule\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::FirewallRuleGroupAssociation","awsResourceTypeName":"route53resolver-firewallrulegroupassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::FirewallRuleGroupAssociation\",\n  \"Properties\" : {\n      \"FirewallRuleGroupId\" : String,\n      \"MutationProtection\" : String,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::FirewallRuleGroupAssociation\nProperties:\n  FirewallRuleGroupId: String\n  MutationProtection: String\n  Name: String\n  Priority: Integer\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::OutpostResolver","awsResourceTypeName":"route53resolver-outpostresolver","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::OutpostResolver\",\n  \"Properties\" : {\n      \"InstanceCount\" : Integer,\n      \"Name\" : String,\n      \"OutpostArn\" : String,\n      \"PreferredInstanceType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::OutpostResolver\nProperties:\n  InstanceCount: Integer\n  Name: String\n  OutpostArn: String\n  PreferredInstanceType: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverConfig","awsResourceTypeName":"route53resolver-resolverconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverConfig\",\n  \"Properties\" : {\n      \"AutodefinedReverseFlag\" : String,\n      \"ResourceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverConfig\nProperties:\n  AutodefinedReverseFlag: String\n  ResourceId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverDNSSECConfig","awsResourceTypeName":"route53resolver-resolverdnssecconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverDNSSECConfig\",\n  \"Properties\" : {\n      \"ResourceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverDNSSECConfig\nProperties:\n  ResourceId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverEndpoint","awsResourceTypeName":"route53resolver-resolverendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverEndpoint\",\n  \"Properties\" : {\n      \"Direction\" : String,\n      \"IpAddresses\" : [ IpAddressRequest, ... ],\n      \"Name\" : String,\n      \"OutpostArn\" : String,\n      \"PreferredInstanceType\" : String,\n      \"Protocols\" : [ String, ... ],\n      \"ResolverEndpointType\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverEndpoint\nProperties:\n  Direction: String\n  IpAddresses: \n    - IpAddressRequest\n  Name: String\n  OutpostArn: String\n  PreferredInstanceType: String\n  Protocols: \n    - String\n  ResolverEndpointType: String\n  SecurityGroupIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverQueryLoggingConfig","awsResourceTypeName":"route53resolver-resolverqueryloggingconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverQueryLoggingConfig\",\n  \"Properties\" : {\n      \"DestinationArn\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverQueryLoggingConfig\nProperties:\n  DestinationArn: String\n  Name: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation","awsResourceTypeName":"route53resolver-resolverqueryloggingconfigassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\",\n  \"Properties\" : {\n      \"ResolverQueryLogConfigId\" : String,\n      \"ResourceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\nProperties:\n  ResolverQueryLogConfigId: String\n  ResourceId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverRule","awsResourceTypeName":"route53resolver-resolverrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverRule\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"Name\" : String,\n      \"ResolverEndpointId\" : String,\n      \"RuleType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetIps\" : [ TargetAddress, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverRule\nProperties:\n  DomainName: String\n  Name: String\n  ResolverEndpointId: String\n  RuleType: String\n  Tags: \n    - Tag\n  TargetIps: \n    - TargetAddress\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverRuleAssociation","awsResourceTypeName":"route53resolver-resolverruleassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverRuleAssociation\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ResolverRuleId\" : String,\n      \"VPCId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverRuleAssociation\nProperties:\n  Name: String\n  ResolverRuleId: String\n  VPCId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::RUM::AppMonitor","awsResourceTypeName":"rum-appmonitor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RUM::AppMonitor\",\n  \"Properties\" : {\n      \"AppMonitorConfiguration\" : AppMonitorConfiguration,\n      \"CustomEvents\" : CustomEvents,\n      \"CwLogEnabled\" : Boolean,\n      \"Domain\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RUM::AppMonitor\nProperties:\n  AppMonitorConfiguration: \n    AppMonitorConfiguration\n  CustomEvents: \n    CustomEvents\n  CwLogEnabled: Boolean\n  Domain: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"RUM","awsServiceCategory":"other"},{"awsResourceType":"AWS::S3::AccessGrant","awsResourceTypeName":"s3-accessgrant","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessGrant\",\n  \"Properties\" : {\n      \"AccessGrantsLocationConfiguration\" : AccessGrantsLocationConfiguration,\n      \"AccessGrantsLocationId\" : String,\n      \"ApplicationArn\" : String,\n      \"Grantee\" : Grantee,\n      \"Permission\" : String,\n      \"S3PrefixType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessGrant\nProperties:\n  AccessGrantsLocationConfiguration: \n    AccessGrantsLocationConfiguration\n  AccessGrantsLocationId: String\n  ApplicationArn: String\n  Grantee: \n    Grantee\n  Permission: String\n  S3PrefixType: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::AccessGrantsInstance","awsResourceTypeName":"s3-accessgrantsinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessGrantsInstance\",\n  \"Properties\" : {\n      \"IdentityCenterArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessGrantsInstance\nProperties:\n  IdentityCenterArn: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::AccessGrantsLocation","awsResourceTypeName":"s3-accessgrantslocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessGrantsLocation\",\n  \"Properties\" : {\n      \"IamRoleArn\" : String,\n      \"LocationScope\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessGrantsLocation\nProperties:\n  IamRoleArn: String\n  LocationScope: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::AccessPoint","awsResourceTypeName":"s3-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessPoint\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"BucketAccountId\" : String,\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"PublicAccessBlockConfiguration\" : PublicAccessBlockConfiguration,\n      \"VpcConfiguration\" : VpcConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessPoint\nProperties:\n  Bucket: String\n  BucketAccountId: String\n  Name: String\n  Policy: Json\n  PublicAccessBlockConfiguration: \n    PublicAccessBlockConfiguration\n  VpcConfiguration: \n    VpcConfiguration\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::Bucket","awsResourceTypeName":"s3-bucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::Bucket\",\n  \"Properties\" : {\n      \"AccelerateConfiguration\" : AccelerateConfiguration,\n      \"AccessControl\" : String,\n      \"AnalyticsConfigurations\" : [ AnalyticsConfiguration, ... ],\n      \"BucketEncryption\" : BucketEncryption,\n      \"BucketName\" : String,\n      \"CorsConfiguration\" : CorsConfiguration,\n      \"IntelligentTieringConfigurations\" : [ IntelligentTieringConfiguration, ... ],\n      \"InventoryConfigurations\" : [ InventoryConfiguration, ... ],\n      \"LifecycleConfiguration\" : LifecycleConfiguration,\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"MetricsConfigurations\" : [ MetricsConfiguration, ... ],\n      \"NotificationConfiguration\" : NotificationConfiguration,\n      \"ObjectLockConfiguration\" : ObjectLockConfiguration,\n      \"ObjectLockEnabled\" : Boolean,\n      \"OwnershipControls\" : OwnershipControls,\n      \"PublicAccessBlockConfiguration\" : PublicAccessBlockConfiguration,\n      \"ReplicationConfiguration\" : ReplicationConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"VersioningConfiguration\" : VersioningConfiguration,\n      \"WebsiteConfiguration\" : WebsiteConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::Bucket\nProperties:\n  AccelerateConfiguration: \n    AccelerateConfiguration\n  AccessControl: String\n  AnalyticsConfigurations: \n    - AnalyticsConfiguration\n  BucketEncryption: \n    BucketEncryption\n  BucketName: String\n  CorsConfiguration: \n    CorsConfiguration\n  IntelligentTieringConfigurations: \n    - IntelligentTieringConfiguration\n  InventoryConfigurations: \n    - InventoryConfiguration\n  LifecycleConfiguration: \n    LifecycleConfiguration\n  LoggingConfiguration: \n    LoggingConfiguration\n  MetricsConfigurations: \n    - MetricsConfiguration\n  NotificationConfiguration: \n    NotificationConfiguration\n  ObjectLockConfiguration: \n    ObjectLockConfiguration\n  ObjectLockEnabled: Boolean\n  OwnershipControls: \n    OwnershipControls\n  PublicAccessBlockConfiguration: \n    PublicAccessBlockConfiguration\n  ReplicationConfiguration: \n    ReplicationConfiguration\n  Tags: \n    - Tag\n  VersioningConfiguration: \n    VersioningConfiguration\n  WebsiteConfiguration: \n    WebsiteConfiguration\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::BucketPolicy","awsResourceTypeName":"s3-bucketpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::BucketPolicy\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::BucketPolicy\nProperties:\n  Bucket: String\n  PolicyDocument: Json\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::MultiRegionAccessPoint","awsResourceTypeName":"s3-multiregionaccesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::MultiRegionAccessPoint\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"PublicAccessBlockConfiguration\" : PublicAccessBlockConfiguration,\n      \"Regions\" : [ Region, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::MultiRegionAccessPoint\nProperties:\n  Name: String\n  PublicAccessBlockConfiguration: \n    PublicAccessBlockConfiguration\n  Regions: \n    - Region\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::MultiRegionAccessPointPolicy","awsResourceTypeName":"s3-multiregionaccesspointpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::MultiRegionAccessPointPolicy\",\n  \"Properties\" : {\n      \"MrapName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::MultiRegionAccessPointPolicy\nProperties:\n  MrapName: String\n  Policy: Json\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::StorageLens","awsResourceTypeName":"s3-storagelens","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::StorageLens\",\n  \"Properties\" : {\n      \"StorageLensConfiguration\" : StorageLensConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::StorageLens\nProperties:\n  StorageLensConfiguration: \n    StorageLensConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::StorageLensGroup","awsResourceTypeName":"s3-storagelensgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::StorageLensGroup\",\n  \"Properties\" : {\n      \"Filter\" : Filter,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::StorageLensGroup\nProperties:\n  Filter: \n    Filter\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Express::BucketPolicy","awsResourceTypeName":"s3express-bucketpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Express::BucketPolicy\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Express::BucketPolicy\nProperties:\n  Bucket: String\n  PolicyDocument: Json\n","awsServiceName":"S3Express","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Express::DirectoryBucket","awsResourceTypeName":"s3express-directorybucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Express::DirectoryBucket\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"DataRedundancy\" : String,\n      \"LocationName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Express::DirectoryBucket\nProperties:\n  BucketName: String\n  DataRedundancy: String\n  LocationName: String\n","awsServiceName":"S3Express","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3ObjectLambda::AccessPoint","awsResourceTypeName":"s3objectlambda-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3ObjectLambda::AccessPoint\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ObjectLambdaConfiguration\" : ObjectLambdaConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3ObjectLambda::AccessPoint\nProperties:\n  Name: String\n  ObjectLambdaConfiguration: \n    ObjectLambdaConfiguration\n","awsServiceName":"S3ObjectLambda","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3ObjectLambda::AccessPointPolicy","awsResourceTypeName":"s3objectlambda-accesspointpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3ObjectLambda::AccessPointPolicy\",\n  \"Properties\" : {\n      \"ObjectLambdaAccessPoint\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3ObjectLambda::AccessPointPolicy\nProperties:\n  ObjectLambdaAccessPoint: String\n  PolicyDocument: Json\n","awsServiceName":"S3ObjectLambda","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::AccessPoint","awsResourceTypeName":"s3outposts-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::AccessPoint\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"VpcConfiguration\" : VpcConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::AccessPoint\nProperties:\n  Bucket: String\n  Name: String\n  Policy: Json\n  VpcConfiguration: \n    VpcConfiguration\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::Bucket","awsResourceTypeName":"s3outposts-bucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::Bucket\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"LifecycleConfiguration\" : LifecycleConfiguration,\n      \"OutpostId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::Bucket\nProperties:\n  BucketName: String\n  LifecycleConfiguration: \n    LifecycleConfiguration\n  OutpostId: String\n  Tags: \n    - Tag\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::BucketPolicy","awsResourceTypeName":"s3outposts-bucketpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::BucketPolicy\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::BucketPolicy\nProperties:\n  Bucket: String\n  PolicyDocument: Json\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::Endpoint","awsResourceTypeName":"s3outposts-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::Endpoint\",\n  \"Properties\" : {\n      \"AccessType\" : String,\n      \"CustomerOwnedIpv4Pool\" : String,\n      \"FailedReason\" : FailedReason,\n      \"OutpostId\" : String,\n      \"SecurityGroupId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::Endpoint\nProperties:\n  AccessType: String\n  CustomerOwnedIpv4Pool: String\n  FailedReason: \n    FailedReason\n  OutpostId: String\n  SecurityGroupId: String\n  SubnetId: String\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::SageMaker::App","awsResourceTypeName":"sagemaker-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::App\",\n  \"Properties\" : {\n      \"AppName\" : String,\n      \"AppType\" : String,\n      \"DomainId\" : String,\n      \"ResourceSpec\" : ResourceSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"UserProfileName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::App\nProperties:\n  AppName: String\n  AppType: String\n  DomainId: String\n  ResourceSpec: \n    ResourceSpec\n  Tags: \n    - Tag\n  UserProfileName: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::AppImageConfig","awsResourceTypeName":"sagemaker-appimageconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::AppImageConfig\",\n  \"Properties\" : {\n      \"AppImageConfigName\" : String,\n      \"CodeEditorAppImageConfig\" : CodeEditorAppImageConfig,\n      \"JupyterLabAppImageConfig\" : JupyterLabAppImageConfig,\n      \"KernelGatewayImageConfig\" : KernelGatewayImageConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::AppImageConfig\nProperties:\n  AppImageConfigName: String\n  CodeEditorAppImageConfig: \n    CodeEditorAppImageConfig\n  JupyterLabAppImageConfig: \n    JupyterLabAppImageConfig\n  KernelGatewayImageConfig: \n    KernelGatewayImageConfig\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::CodeRepository","awsResourceTypeName":"sagemaker-coderepository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::CodeRepository\",\n  \"Properties\" : {\n      \"CodeRepositoryName\" : String,\n      \"GitConfig\" : GitConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::CodeRepository\nProperties:\n  CodeRepositoryName: String\n  GitConfig: \n    GitConfig\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::DataQualityJobDefinition","awsResourceTypeName":"sagemaker-dataqualityjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::DataQualityJobDefinition\",\n  \"Properties\" : {\n      \"DataQualityAppSpecification\" : DataQualityAppSpecification,\n      \"DataQualityBaselineConfig\" : DataQualityBaselineConfig,\n      \"DataQualityJobInput\" : DataQualityJobInput,\n      \"DataQualityJobOutputConfig\" : MonitoringOutputConfig,\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::DataQualityJobDefinition\nProperties:\n  DataQualityAppSpecification: \n    DataQualityAppSpecification\n  DataQualityBaselineConfig: \n    DataQualityBaselineConfig\n  DataQualityJobInput: \n    DataQualityJobInput\n  DataQualityJobOutputConfig: \n    MonitoringOutputConfig\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Device","awsResourceTypeName":"sagemaker-device","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Device\",\n  \"Properties\" : {\n      \"Device\" : Device,\n      \"DeviceFleetName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Device\nProperties:\n  Device: \n    Device\n  DeviceFleetName: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::DeviceFleet","awsResourceTypeName":"sagemaker-devicefleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::DeviceFleet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DeviceFleetName\" : String,\n      \"OutputConfig\" : EdgeOutputConfig,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::DeviceFleet\nProperties:\n  Description: String\n  DeviceFleetName: String\n  OutputConfig: \n    EdgeOutputConfig\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Domain","awsResourceTypeName":"sagemaker-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Domain\",\n  \"Properties\" : {\n      \"AppNetworkAccessType\" : String,\n      \"AppSecurityGroupManagement\" : String,\n      \"AuthMode\" : String,\n      \"DefaultSpaceSettings\" : DefaultSpaceSettings,\n      \"DefaultUserSettings\" : UserSettings,\n      \"DomainName\" : String,\n      \"DomainSettings\" : DomainSettings,\n      \"KmsKeyId\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Domain\nProperties:\n  AppNetworkAccessType: String\n  AppSecurityGroupManagement: String\n  AuthMode: String\n  DefaultSpaceSettings: \n    DefaultSpaceSettings\n  DefaultUserSettings: \n    UserSettings\n  DomainName: String\n  DomainSettings: \n    DomainSettings\n  KmsKeyId: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Endpoint","awsResourceTypeName":"sagemaker-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Endpoint\",\n  \"Properties\" : {\n      \"DeploymentConfig\" : DeploymentConfig,\n      \"EndpointConfigName\" : String,\n      \"EndpointName\" : String,\n      \"ExcludeRetainedVariantProperties\" : [ VariantProperty, ... ],\n      \"RetainAllVariantProperties\" : Boolean,\n      \"RetainDeploymentConfig\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Endpoint\nProperties:\n  DeploymentConfig: \n    DeploymentConfig\n  EndpointConfigName: String\n  EndpointName: String\n  ExcludeRetainedVariantProperties: \n    - VariantProperty\n  RetainAllVariantProperties: Boolean\n  RetainDeploymentConfig: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::EndpointConfig","awsResourceTypeName":"sagemaker-endpointconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::EndpointConfig\",\n  \"Properties\" : {\n      \"AsyncInferenceConfig\" : AsyncInferenceConfig,\n      \"DataCaptureConfig\" : DataCaptureConfig,\n      \"EndpointConfigName\" : String,\n      \"ExplainerConfig\" : ExplainerConfig,\n      \"KmsKeyId\" : String,\n      \"ProductionVariants\" : [ ProductionVariant, ... ],\n      \"ShadowProductionVariants\" : [ ProductionVariant, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::EndpointConfig\nProperties:\n  AsyncInferenceConfig: \n    AsyncInferenceConfig\n  DataCaptureConfig: \n    DataCaptureConfig\n  EndpointConfigName: String\n  ExplainerConfig: \n    ExplainerConfig\n  KmsKeyId: String\n  ProductionVariants: \n    - ProductionVariant\n  ShadowProductionVariants: \n    - ProductionVariant\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::FeatureGroup","awsResourceTypeName":"sagemaker-featuregroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::FeatureGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventTimeFeatureName\" : String,\n      \"FeatureDefinitions\" : [ FeatureDefinition, ... ],\n      \"FeatureGroupName\" : String,\n      \"OfflineStoreConfig\" : OfflineStoreConfig,\n      \"OnlineStoreConfig\" : OnlineStoreConfig,\n      \"RecordIdentifierFeatureName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThroughputConfig\" : ThroughputConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::FeatureGroup\nProperties:\n  Description: String\n  EventTimeFeatureName: String\n  FeatureDefinitions: \n    - FeatureDefinition\n  FeatureGroupName: String\n  OfflineStoreConfig: \n    OfflineStoreConfig\n  OnlineStoreConfig: \n    OnlineStoreConfig\n  RecordIdentifierFeatureName: String\n  RoleArn: String\n  Tags: \n    - Tag\n  ThroughputConfig: \n    ThroughputConfig\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Image","awsResourceTypeName":"sagemaker-image","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Image\",\n  \"Properties\" : {\n      \"ImageDescription\" : String,\n      \"ImageDisplayName\" : String,\n      \"ImageName\" : String,\n      \"ImageRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Image\nProperties:\n  ImageDescription: String\n  ImageDisplayName: String\n  ImageName: String\n  ImageRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ImageVersion","awsResourceTypeName":"sagemaker-imageversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ImageVersion\",\n  \"Properties\" : {\n      \"Alias\" : String,\n      \"Aliases\" : [ String, ... ],\n      \"BaseImage\" : String,\n      \"Horovod\" : Boolean,\n      \"ImageName\" : String,\n      \"JobType\" : String,\n      \"MLFramework\" : String,\n      \"Processor\" : String,\n      \"ProgrammingLang\" : String,\n      \"ReleaseNotes\" : String,\n      \"VendorGuidance\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ImageVersion\nProperties:\n  Alias: String\n  Aliases: \n    - String\n  BaseImage: String\n  Horovod: Boolean\n  ImageName: String\n  JobType: String\n  MLFramework: String\n  Processor: String\n  ProgrammingLang: String\n  ReleaseNotes: String\n  VendorGuidance: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::InferenceComponent","awsResourceTypeName":"sagemaker-inferencecomponent","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::InferenceComponent\",\n  \"Properties\" : {\n      \"EndpointArn\" : String,\n      \"EndpointName\" : String,\n      \"InferenceComponentName\" : String,\n      \"RuntimeConfig\" : InferenceComponentRuntimeConfig,\n      \"Specification\" : InferenceComponentSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"VariantName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::InferenceComponent\nProperties:\n  EndpointArn: String\n  EndpointName: String\n  InferenceComponentName: String\n  RuntimeConfig: \n    InferenceComponentRuntimeConfig\n  Specification: \n    InferenceComponentSpecification\n  Tags: \n    - Tag\n  VariantName: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::InferenceExperiment","awsResourceTypeName":"sagemaker-inferenceexperiment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::InferenceExperiment\",\n  \"Properties\" : {\n      \"DataStorageConfig\" : DataStorageConfig,\n      \"Description\" : String,\n      \"DesiredState\" : String,\n      \"EndpointName\" : String,\n      \"KmsKey\" : String,\n      \"ModelVariants\" : [ ModelVariantConfig, ... ],\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Schedule\" : InferenceExperimentSchedule,\n      \"ShadowModeConfig\" : ShadowModeConfig,\n      \"StatusReason\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::InferenceExperiment\nProperties:\n  DataStorageConfig: \n    DataStorageConfig\n  Description: String\n  DesiredState: String\n  EndpointName: String\n  KmsKey: String\n  ModelVariants: \n    - ModelVariantConfig\n  Name: String\n  RoleArn: String\n  Schedule: \n    InferenceExperimentSchedule\n  ShadowModeConfig: \n    ShadowModeConfig\n  StatusReason: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Model","awsResourceTypeName":"sagemaker-model","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Model\",\n  \"Properties\" : {\n      \"Containers\" : [ ContainerDefinition, ... ],\n      \"EnableNetworkIsolation\" : Boolean,\n      \"ExecutionRoleArn\" : String,\n      \"InferenceExecutionConfig\" : InferenceExecutionConfig,\n      \"ModelName\" : String,\n      \"PrimaryContainer\" : ContainerDefinition,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Model\nProperties:\n  Containers: \n    - ContainerDefinition\n  EnableNetworkIsolation: Boolean\n  ExecutionRoleArn: String\n  InferenceExecutionConfig: \n    InferenceExecutionConfig\n  ModelName: String\n  PrimaryContainer: \n    ContainerDefinition\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelBiasJobDefinition","awsResourceTypeName":"sagemaker-modelbiasjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelBiasJobDefinition\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"ModelBiasAppSpecification\" : ModelBiasAppSpecification,\n      \"ModelBiasBaselineConfig\" : ModelBiasBaselineConfig,\n      \"ModelBiasJobInput\" : ModelBiasJobInput,\n      \"ModelBiasJobOutputConfig\" : MonitoringOutputConfig,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelBiasJobDefinition\nProperties:\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  ModelBiasAppSpecification: \n    ModelBiasAppSpecification\n  ModelBiasBaselineConfig: \n    ModelBiasBaselineConfig\n  ModelBiasJobInput: \n    ModelBiasJobInput\n  ModelBiasJobOutputConfig: \n    MonitoringOutputConfig\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelCard","awsResourceTypeName":"sagemaker-modelcard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelCard\",\n  \"Properties\" : {\n      \"Content\" : Content,\n      \"CreatedBy\" : UserContext,\n      \"LastModifiedBy\" : UserContext,\n      \"ModelCardName\" : String,\n      \"ModelCardStatus\" : String,\n      \"SecurityConfig\" : SecurityConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelCard\nProperties:\n  Content: \n    Content\n  CreatedBy: \n    UserContext\n  LastModifiedBy: \n    UserContext\n  ModelCardName: String\n  ModelCardStatus: String\n  SecurityConfig: \n    SecurityConfig\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelExplainabilityJobDefinition","awsResourceTypeName":"sagemaker-modelexplainabilityjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelExplainabilityJobDefinition\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"ModelExplainabilityAppSpecification\" : ModelExplainabilityAppSpecification,\n      \"ModelExplainabilityBaselineConfig\" : ModelExplainabilityBaselineConfig,\n      \"ModelExplainabilityJobInput\" : ModelExplainabilityJobInput,\n      \"ModelExplainabilityJobOutputConfig\" : MonitoringOutputConfig,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelExplainabilityJobDefinition\nProperties:\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  ModelExplainabilityAppSpecification: \n    ModelExplainabilityAppSpecification\n  ModelExplainabilityBaselineConfig: \n    ModelExplainabilityBaselineConfig\n  ModelExplainabilityJobInput: \n    ModelExplainabilityJobInput\n  ModelExplainabilityJobOutputConfig: \n    MonitoringOutputConfig\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelPackage","awsResourceTypeName":"sagemaker-modelpackage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelPackage\",\n  \"Properties\" : {\n      \"AdditionalInferenceSpecifications\" : [ AdditionalInferenceSpecificationDefinition, ... ],\n      \"AdditionalInferenceSpecificationsToAdd\" : [ AdditionalInferenceSpecificationDefinition, ... ],\n      \"ApprovalDescription\" : String,\n      \"CertifyForMarketplace\" : Boolean,\n      \"ClientToken\" : String,\n      \"CustomerMetadataProperties\" : {Key: Value, ...},\n      \"Domain\" : String,\n      \"DriftCheckBaselines\" : DriftCheckBaselines,\n      \"InferenceSpecification\" : InferenceSpecification,\n      \"LastModifiedTime\" : String,\n      \"MetadataProperties\" : MetadataProperties,\n      \"ModelApprovalStatus\" : String,\n      \"ModelMetrics\" : ModelMetrics,\n      \"ModelPackageDescription\" : String,\n      \"ModelPackageGroupName\" : String,\n      \"ModelPackageName\" : String,\n      \"ModelPackageStatusDetails\" : ModelPackageStatusDetails,\n      \"ModelPackageVersion\" : Integer,\n      \"SamplePayloadUrl\" : String,\n      \"SkipModelValidation\" : String,\n      \"SourceAlgorithmSpecification\" : SourceAlgorithmSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"Task\" : String,\n      \"ValidationSpecification\" : ValidationSpecification\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelPackage\nProperties:\n  AdditionalInferenceSpecifications: \n    - AdditionalInferenceSpecificationDefinition\n  AdditionalInferenceSpecificationsToAdd: \n    - AdditionalInferenceSpecificationDefinition\n  ApprovalDescription: String\n  CertifyForMarketplace: Boolean\n  ClientToken: String\n  CustomerMetadataProperties: \n    Key: Value\n  Domain: String\n  DriftCheckBaselines: \n    DriftCheckBaselines\n  InferenceSpecification: \n    InferenceSpecification\n  LastModifiedTime: String\n  MetadataProperties: \n    MetadataProperties\n  ModelApprovalStatus: String\n  ModelMetrics: \n    ModelMetrics\n  ModelPackageDescription: String\n  ModelPackageGroupName: String\n  ModelPackageName: String\n  ModelPackageStatusDetails: \n    ModelPackageStatusDetails\n  ModelPackageVersion: Integer\n  SamplePayloadUrl: String\n  SkipModelValidation: String\n  SourceAlgorithmSpecification: \n    SourceAlgorithmSpecification\n  Tags: \n    - Tag\n  Task: String\n  ValidationSpecification: \n    ValidationSpecification\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelPackageGroup","awsResourceTypeName":"sagemaker-modelpackagegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelPackageGroup\",\n  \"Properties\" : {\n      \"ModelPackageGroupDescription\" : String,\n      \"ModelPackageGroupName\" : String,\n      \"ModelPackageGroupPolicy\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelPackageGroup\nProperties:\n  ModelPackageGroupDescription: String\n  ModelPackageGroupName: String\n  ModelPackageGroupPolicy: Json\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelQualityJobDefinition","awsResourceTypeName":"sagemaker-modelqualityjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelQualityJobDefinition\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"ModelQualityAppSpecification\" : ModelQualityAppSpecification,\n      \"ModelQualityBaselineConfig\" : ModelQualityBaselineConfig,\n      \"ModelQualityJobInput\" : ModelQualityJobInput,\n      \"ModelQualityJobOutputConfig\" : MonitoringOutputConfig,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelQualityJobDefinition\nProperties:\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  ModelQualityAppSpecification: \n    ModelQualityAppSpecification\n  ModelQualityBaselineConfig: \n    ModelQualityBaselineConfig\n  ModelQualityJobInput: \n    ModelQualityJobInput\n  ModelQualityJobOutputConfig: \n    MonitoringOutputConfig\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::MonitoringSchedule","awsResourceTypeName":"sagemaker-monitoringschedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::MonitoringSchedule\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"FailureReason\" : String,\n      \"LastMonitoringExecutionSummary\" : MonitoringExecutionSummary,\n      \"MonitoringScheduleConfig\" : MonitoringScheduleConfig,\n      \"MonitoringScheduleName\" : String,\n      \"MonitoringScheduleStatus\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::MonitoringSchedule\nProperties:\n  EndpointName: String\n  FailureReason: String\n  LastMonitoringExecutionSummary: \n    MonitoringExecutionSummary\n  MonitoringScheduleConfig: \n    MonitoringScheduleConfig\n  MonitoringScheduleName: String\n  MonitoringScheduleStatus: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::NotebookInstance","awsResourceTypeName":"sagemaker-notebookinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::NotebookInstance\",\n  \"Properties\" : {\n      \"AcceleratorTypes\" : [ String, ... ],\n      \"AdditionalCodeRepositories\" : [ String, ... ],\n      \"DefaultCodeRepository\" : String,\n      \"DirectInternetAccess\" : String,\n      \"InstanceMetadataServiceConfiguration\" : InstanceMetadataServiceConfiguration,\n      \"InstanceType\" : String,\n      \"KmsKeyId\" : String,\n      \"LifecycleConfigName\" : String,\n      \"NotebookInstanceName\" : String,\n      \"PlatformIdentifier\" : String,\n      \"RoleArn\" : String,\n      \"RootAccess\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VolumeSizeInGB\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::NotebookInstance\nProperties:\n  AcceleratorTypes: \n    - String\n  AdditionalCodeRepositories: \n    - String\n  DefaultCodeRepository: String\n  DirectInternetAccess: String\n  InstanceMetadataServiceConfiguration: \n    InstanceMetadataServiceConfiguration\n  InstanceType: String\n  KmsKeyId: String\n  LifecycleConfigName: String\n  NotebookInstanceName: String\n  PlatformIdentifier: String\n  RoleArn: String\n  RootAccess: String\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n  VolumeSizeInGB: Integer\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::NotebookInstanceLifecycleConfig","awsResourceTypeName":"sagemaker-notebookinstancelifecycleconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::NotebookInstanceLifecycleConfig\",\n  \"Properties\" : {\n      \"NotebookInstanceLifecycleConfigName\" : String,\n      \"OnCreate\" : [ NotebookInstanceLifecycleHook, ... ],\n      \"OnStart\" : [ NotebookInstanceLifecycleHook, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::NotebookInstanceLifecycleConfig\nProperties:\n  NotebookInstanceLifecycleConfigName: String\n  OnCreate: \n    - NotebookInstanceLifecycleHook\n  OnStart: \n    - NotebookInstanceLifecycleHook\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Pipeline","awsResourceTypeName":"sagemaker-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Pipeline\",\n  \"Properties\" : {\n      \"ParallelismConfiguration\" : ParallelismConfiguration,\n      \"PipelineDefinition\" : PipelineDefinition,\n      \"PipelineDescription\" : String,\n      \"PipelineDisplayName\" : String,\n      \"PipelineName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Pipeline\nProperties:\n  ParallelismConfiguration: \n    ParallelismConfiguration\n  PipelineDefinition: \n    PipelineDefinition\n  PipelineDescription: String\n  PipelineDisplayName: String\n  PipelineName: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Project","awsResourceTypeName":"sagemaker-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Project\",\n  \"Properties\" : {\n      \"ProjectDescription\" : String,\n      \"ProjectName\" : String,\n      \"ServiceCatalogProvisionedProductDetails\" : ServiceCatalogProvisionedProductDetails,\n      \"ServiceCatalogProvisioningDetails\" : ServiceCatalogProvisioningDetails,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Project\nProperties:\n  ProjectDescription: String\n  ProjectName: String\n  ServiceCatalogProvisionedProductDetails: \n    ServiceCatalogProvisionedProductDetails\n  ServiceCatalogProvisioningDetails: \n    ServiceCatalogProvisioningDetails\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Space","awsResourceTypeName":"sagemaker-space","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Space\",\n  \"Properties\" : {\n      \"DomainId\" : String,\n      \"OwnershipSettings\" : OwnershipSettings,\n      \"SpaceDisplayName\" : String,\n      \"SpaceName\" : String,\n      \"SpaceSettings\" : SpaceSettings,\n      \"SpaceSharingSettings\" : SpaceSharingSettings,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Space\nProperties:\n  DomainId: String\n  OwnershipSettings: \n    OwnershipSettings\n  SpaceDisplayName: String\n  SpaceName: String\n  SpaceSettings: \n    SpaceSettings\n  SpaceSharingSettings: \n    SpaceSharingSettings\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::UserProfile","awsResourceTypeName":"sagemaker-userprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::UserProfile\",\n  \"Properties\" : {\n      \"DomainId\" : String,\n      \"SingleSignOnUserIdentifier\" : String,\n      \"SingleSignOnUserValue\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UserProfileName\" : String,\n      \"UserSettings\" : UserSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::UserProfile\nProperties:\n  DomainId: String\n  SingleSignOnUserIdentifier: String\n  SingleSignOnUserValue: String\n  Tags: \n    - Tag\n  UserProfileName: String\n  UserSettings: \n    UserSettings\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Workteam","awsResourceTypeName":"sagemaker-workteam","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Workteam\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MemberDefinitions\" : [ MemberDefinition, ... ],\n      \"NotificationConfiguration\" : NotificationConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkforceName\" : String,\n      \"WorkteamName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Workteam\nProperties:\n  Description: String\n  MemberDefinitions: \n    - MemberDefinition\n  NotificationConfiguration: \n    NotificationConfiguration\n  Tags: \n    - Tag\n  WorkforceName: String\n  WorkteamName: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SecretsManager::ResourcePolicy","awsResourceTypeName":"secretsmanager-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::ResourcePolicy\",\n  \"Properties\" : {\n      \"BlockPublicPolicy\" : Boolean,\n      \"ResourcePolicy\" : Json,\n      \"SecretId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::ResourcePolicy\nProperties:\n  BlockPublicPolicy: Boolean\n  ResourcePolicy: Json\n  SecretId: String\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::SecretsManager::RotationSchedule","awsResourceTypeName":"secretsmanager-rotationschedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::RotationSchedule\",\n  \"Properties\" : {\n      \"HostedRotationLambda\" : HostedRotationLambda,\n      \"RotateImmediatelyOnUpdate\" : Boolean,\n      \"RotationLambdaARN\" : String,\n      \"RotationRules\" : RotationRules,\n      \"SecretId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::RotationSchedule\nProperties:\n  HostedRotationLambda: \n    HostedRotationLambda\n  RotateImmediatelyOnUpdate: Boolean\n  RotationLambdaARN: String\n  RotationRules: \n    RotationRules\n  SecretId: String\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::SecretsManager::Secret","awsResourceTypeName":"secretsmanager-secret","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::Secret\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GenerateSecretString\" : GenerateSecretString,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"ReplicaRegions\" : [ ReplicaRegion, ... ],\n      \"SecretString\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::Secret\nProperties:\n  Description: String\n  GenerateSecretString: \n    GenerateSecretString\n  KmsKeyId: String\n  Name: String\n  ReplicaRegions: \n    - ReplicaRegion\n  SecretString: \n    String\n  Tags: \n    - Tag\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::SecretsManager::SecretTargetAttachment","awsResourceTypeName":"secretsmanager-secrettargetattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::SecretTargetAttachment\",\n  \"Properties\" : {\n      \"SecretId\" : String,\n      \"TargetId\" : String,\n      \"TargetType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::SecretTargetAttachment\nProperties:\n  SecretId: String\n  TargetId: String\n  TargetType: String\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::ServiceCatalog::AcceptedPortfolioShare","awsResourceTypeName":"servicecatalog-acceptedportfolioshare","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::AcceptedPortfolioShare\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"PortfolioId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::AcceptedPortfolioShare\nProperties:\n  AcceptLanguage: String\n  PortfolioId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::CloudFormationProduct","awsResourceTypeName":"servicecatalog-cloudformationproduct","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::CloudFormationProduct\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"Distributor\" : String,\n      \"Name\" : String,\n      \"Owner\" : String,\n      \"ProductType\" : String,\n      \"ProvisioningArtifactParameters\" : [ ProvisioningArtifactProperties, ... ],\n      \"ReplaceProvisioningArtifacts\" : Boolean,\n      \"SourceConnection\" : SourceConnection,\n      \"SupportDescription\" : String,\n      \"SupportEmail\" : String,\n      \"SupportUrl\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::CloudFormationProduct\nProperties:\n  AcceptLanguage: String\n  Description: String\n  Distributor: String\n  Name: String\n  Owner: String\n  ProductType: String\n  ProvisioningArtifactParameters: \n    - ProvisioningArtifactProperties\n  ReplaceProvisioningArtifacts: Boolean\n  SourceConnection: \n    SourceConnection\n  SupportDescription: String\n  SupportEmail: String\n  SupportUrl: String\n  Tags: \n    - Tag\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::CloudFormationProvisionedProduct","awsResourceTypeName":"servicecatalog-cloudformationprovisionedproduct","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::CloudFormationProvisionedProduct\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"NotificationArns\" : [ String, ... ],\n      \"PathId\" : String,\n      \"PathName\" : String,\n      \"ProductId\" : String,\n      \"ProductName\" : String,\n      \"ProvisionedProductName\" : String,\n      \"ProvisioningArtifactId\" : String,\n      \"ProvisioningArtifactName\" : String,\n      \"ProvisioningParameters\" : [ ProvisioningParameter, ... ],\n      \"ProvisioningPreferences\" : ProvisioningPreferences,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct\nProperties:\n  AcceptLanguage: String\n  NotificationArns: \n    - String\n  PathId: String\n  PathName: String\n  ProductId: String\n  ProductName: String\n  ProvisionedProductName: String\n  ProvisioningArtifactId: String\n  ProvisioningArtifactName: String\n  ProvisioningParameters: \n    - ProvisioningParameter\n  ProvisioningPreferences: \n    ProvisioningPreferences\n  Tags: \n    - Tag\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::LaunchNotificationConstraint","awsResourceTypeName":"servicecatalog-launchnotificationconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::LaunchNotificationConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"NotificationArns\" : [ String, ... ],\n      \"PortfolioId\" : String,\n      \"ProductId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::LaunchNotificationConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  NotificationArns: \n    - String\n  PortfolioId: String\n  ProductId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::LaunchRoleConstraint","awsResourceTypeName":"servicecatalog-launchroleconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::LaunchRoleConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"LocalRoleName\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::LaunchRoleConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  LocalRoleName: String\n  PortfolioId: String\n  ProductId: String\n  RoleArn: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::LaunchTemplateConstraint","awsResourceTypeName":"servicecatalog-launchtemplateconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::LaunchTemplateConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"Rules\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::LaunchTemplateConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  PortfolioId: String\n  ProductId: String\n  Rules: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::Portfolio","awsResourceTypeName":"servicecatalog-portfolio","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::Portfolio\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"ProviderName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::Portfolio\nProperties:\n  AcceptLanguage: String\n  Description: String\n  DisplayName: String\n  ProviderName: String\n  Tags: \n    - Tag\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::PortfolioPrincipalAssociation","awsResourceTypeName":"servicecatalog-portfolioprincipalassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::PortfolioPrincipalAssociation\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"PortfolioId\" : String,\n      \"PrincipalARN\" : String,\n      \"PrincipalType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation\nProperties:\n  AcceptLanguage: String\n  PortfolioId: String\n  PrincipalARN: String\n  PrincipalType: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::PortfolioProductAssociation","awsResourceTypeName":"servicecatalog-portfolioproductassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::PortfolioProductAssociation\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"SourcePortfolioId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::PortfolioProductAssociation\nProperties:\n  AcceptLanguage: String\n  PortfolioId: String\n  ProductId: String\n  SourcePortfolioId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::PortfolioShare","awsResourceTypeName":"servicecatalog-portfolioshare","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::PortfolioShare\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"AccountId\" : String,\n      \"PortfolioId\" : String,\n      \"ShareTagOptions\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::PortfolioShare\nProperties:\n  AcceptLanguage: String\n  AccountId: String\n  PortfolioId: String\n  ShareTagOptions: Boolean\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::ResourceUpdateConstraint","awsResourceTypeName":"servicecatalog-resourceupdateconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::ResourceUpdateConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"TagUpdateOnProvisionedProduct\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::ResourceUpdateConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  PortfolioId: String\n  ProductId: String\n  TagUpdateOnProvisionedProduct: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::ServiceAction","awsResourceTypeName":"servicecatalog-serviceaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::ServiceAction\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Definition\" : [ DefinitionParameter, ... ],\n      \"DefinitionType\" : String,\n      \"Description\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::ServiceAction\nProperties:\n  AcceptLanguage: String\n  Definition: \n    - DefinitionParameter\n  DefinitionType: String\n  Description: String\n  Name: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::ServiceActionAssociation","awsResourceTypeName":"servicecatalog-serviceactionassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::ServiceActionAssociation\",\n  \"Properties\" : {\n      \"ProductId\" : String,\n      \"ProvisioningArtifactId\" : String,\n      \"ServiceActionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::ServiceActionAssociation\nProperties:\n  ProductId: String\n  ProvisioningArtifactId: String\n  ServiceActionId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::StackSetConstraint","awsResourceTypeName":"servicecatalog-stacksetconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::StackSetConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"AccountList\" : [ String, ... ],\n      \"AdminRole\" : String,\n      \"Description\" : String,\n      \"ExecutionRole\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"RegionList\" : [ String, ... ],\n      \"StackInstanceControl\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::StackSetConstraint\nProperties:\n  AcceptLanguage: String\n  AccountList: \n    - String\n  AdminRole: String\n  Description: String\n  ExecutionRole: String\n  PortfolioId: String\n  ProductId: String\n  RegionList: \n    - String\n  StackInstanceControl: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::TagOption","awsResourceTypeName":"servicecatalog-tagoption","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::TagOption\",\n  \"Properties\" : {\n      \"Active\" : Boolean,\n      \"Key\" : String,\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::TagOption\nProperties:\n  Active: Boolean\n  Key: String\n  Value: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::TagOptionAssociation","awsResourceTypeName":"servicecatalog-tagoptionassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::TagOptionAssociation\",\n  \"Properties\" : {\n      \"ResourceId\" : String,\n      \"TagOptionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::TagOptionAssociation\nProperties:\n  ResourceId: String\n  TagOptionId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::Application","awsResourceTypeName":"servicecatalogappregistry-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::Application\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::Application\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::AttributeGroup","awsResourceTypeName":"servicecatalogappregistry-attributegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::AttributeGroup\",\n  \"Properties\" : {\n      \"Attributes\" : Json,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::AttributeGroup\nProperties:\n  Attributes: Json\n  Description: String\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation","awsResourceTypeName":"servicecatalogappregistry-attributegroupassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"AttributeGroup\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation\nProperties:\n  Application: String\n  AttributeGroup: String\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::ResourceAssociation","awsResourceTypeName":"servicecatalogappregistry-resourceassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::ResourceAssociation\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"Resource\" : String,\n      \"ResourceType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::ResourceAssociation\nProperties:\n  Application: String\n  Resource: String\n  ResourceType: String\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::SecurityHub::AutomationRule","awsResourceTypeName":"securityhub-automationrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::AutomationRule\",\n  \"Properties\" : {\n      \"Actions\" : [ AutomationRulesAction, ... ],\n      \"Criteria\" : AutomationRulesFindingFilters,\n      \"Description\" : String,\n      \"IsTerminal\" : Boolean,\n      \"RuleName\" : String,\n      \"RuleOrder\" : Integer,\n      \"RuleStatus\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::AutomationRule\nProperties:\n  Actions: \n    - AutomationRulesAction\n  Criteria: \n    AutomationRulesFindingFilters\n  Description: String\n  IsTerminal: Boolean\n  RuleName: String\n  RuleOrder: Integer\n  RuleStatus: String\n  Tags: \n    Key: Value\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::DelegatedAdmin","awsResourceTypeName":"securityhub-delegatedadmin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::DelegatedAdmin\",\n  \"Properties\" : {\n      \"AdminAccountId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::DelegatedAdmin\nProperties:\n  AdminAccountId: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::Hub","awsResourceTypeName":"securityhub-hub","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::Hub\",\n  \"Properties\" : {\n      \"AutoEnableControls\" : Boolean,\n      \"ControlFindingGenerator\" : String,\n      \"EnableDefaultStandards\" : Boolean,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::Hub\nProperties:\n  AutoEnableControls: Boolean\n  ControlFindingGenerator: String\n  EnableDefaultStandards: Boolean\n  Tags: \n    Key: Value\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::Insight","awsResourceTypeName":"securityhub-insight","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::Insight\",\n  \"Properties\" : {\n      \"Filters\" : AwsSecurityFindingFilters,\n      \"GroupByAttribute\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::Insight\nProperties:\n  Filters: \n    AwsSecurityFindingFilters\n  GroupByAttribute: String\n  Name: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::ProductSubscription","awsResourceTypeName":"securityhub-productsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::ProductSubscription\",\n  \"Properties\" : {\n      \"ProductArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::ProductSubscription\nProperties:\n  ProductArn: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::Standard","awsResourceTypeName":"securityhub-standard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::Standard\",\n  \"Properties\" : {\n      \"DisabledStandardsControls\" : [ StandardsControl, ... ],\n      \"StandardsArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::Standard\nProperties:\n  DisabledStandardsControls: \n    - StandardsControl\n  StandardsArn: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SES::ConfigurationSet","awsResourceTypeName":"ses-configurationset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ConfigurationSet\",\n  \"Properties\" : {\n      \"DeliveryOptions\" : DeliveryOptions,\n      \"Name\" : String,\n      \"ReputationOptions\" : ReputationOptions,\n      \"SendingOptions\" : SendingOptions,\n      \"SuppressionOptions\" : SuppressionOptions,\n      \"TrackingOptions\" : TrackingOptions,\n      \"VdmOptions\" : VdmOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ConfigurationSet\nProperties:\n  DeliveryOptions: \n    DeliveryOptions\n  Name: String\n  ReputationOptions: \n    ReputationOptions\n  SendingOptions: \n    SendingOptions\n  SuppressionOptions: \n    SuppressionOptions\n  TrackingOptions: \n    TrackingOptions\n  VdmOptions: \n    VdmOptions\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ConfigurationSetEventDestination","awsResourceTypeName":"ses-configurationseteventdestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ConfigurationSetEventDestination\",\n  \"Properties\" : {\n      \"ConfigurationSetName\" : String,\n      \"EventDestination\" : EventDestination\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ConfigurationSetEventDestination\nProperties:\n  ConfigurationSetName: String\n  EventDestination: \n    EventDestination\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ContactList","awsResourceTypeName":"ses-contactlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ContactList\",\n  \"Properties\" : {\n      \"ContactListName\" : String,\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Topics\" : [ Topic, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ContactList\nProperties:\n  ContactListName: String\n  Description: String\n  Tags: \n    - Tag\n  Topics: \n    - Topic\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::DedicatedIpPool","awsResourceTypeName":"ses-dedicatedippool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::DedicatedIpPool\",\n  \"Properties\" : {\n      \"PoolName\" : String,\n      \"ScalingMode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::DedicatedIpPool\nProperties:\n  PoolName: String\n  ScalingMode: String\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::EmailIdentity","awsResourceTypeName":"ses-emailidentity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::EmailIdentity\",\n  \"Properties\" : {\n      \"ConfigurationSetAttributes\" : ConfigurationSetAttributes,\n      \"DkimAttributes\" : DkimAttributes,\n      \"DkimSigningAttributes\" : DkimSigningAttributes,\n      \"EmailIdentity\" : String,\n      \"FeedbackAttributes\" : FeedbackAttributes,\n      \"MailFromAttributes\" : MailFromAttributes\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::EmailIdentity\nProperties:\n  ConfigurationSetAttributes: \n    ConfigurationSetAttributes\n  DkimAttributes: \n    DkimAttributes\n  DkimSigningAttributes: \n    DkimSigningAttributes\n  EmailIdentity: String\n  FeedbackAttributes: \n    FeedbackAttributes\n  MailFromAttributes: \n    MailFromAttributes\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ReceiptFilter","awsResourceTypeName":"ses-receiptfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ReceiptFilter\",\n  \"Properties\" : {\n      \"Filter\" : Filter\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ReceiptFilter\nProperties:\n  Filter: \n    Filter\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ReceiptRule","awsResourceTypeName":"ses-receiptrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ReceiptRule\",\n  \"Properties\" : {\n      \"After\" : String,\n      \"Rule\" : Rule,\n      \"RuleSetName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ReceiptRule\nProperties:\n  After: String\n  Rule: \n    Rule\n  RuleSetName: String\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ReceiptRuleSet","awsResourceTypeName":"ses-receiptruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ReceiptRuleSet\",\n  \"Properties\" : {\n      \"RuleSetName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ReceiptRuleSet\nProperties:\n  RuleSetName: String\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::Template","awsResourceTypeName":"ses-template","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::Template\",\n  \"Properties\" : {\n      \"Template\" : Template\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::Template\nProperties:\n  Template: \n    Template\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::VdmAttributes","awsResourceTypeName":"ses-vdmattributes","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::VdmAttributes\",\n  \"Properties\" : {\n      \"DashboardAttributes\" : DashboardAttributes,\n      \"GuardianAttributes\" : GuardianAttributes\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::VdmAttributes\nProperties:\n  DashboardAttributes: \n    DashboardAttributes\n  GuardianAttributes: \n    GuardianAttributes\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SDB::Domain","awsResourceTypeName":"sdb-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SDB::Domain\",\n  \"Properties\" : {\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SDB::Domain\nProperties:\n  Description: String\n","awsServiceName":"SDB","awsServiceCategory":"other"},{"awsResourceType":"AWS::Shield::DRTAccess","awsResourceTypeName":"shield-drtaccess","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::DRTAccess\",\n  \"Properties\" : {\n      \"LogBucketList\" : [ String, ... ],\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::DRTAccess\nProperties:\n  LogBucketList: \n    - String\n  RoleArn: String\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Shield::ProactiveEngagement","awsResourceTypeName":"shield-proactiveengagement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::ProactiveEngagement\",\n  \"Properties\" : {\n      \"EmergencyContactList\" : [ EmergencyContact, ... ],\n      \"ProactiveEngagementStatus\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::ProactiveEngagement\nProperties:\n  EmergencyContactList: \n    - EmergencyContact\n  ProactiveEngagementStatus: String\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Shield::Protection","awsResourceTypeName":"shield-protection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::Protection\",\n  \"Properties\" : {\n      \"ApplicationLayerAutomaticResponseConfiguration\" : ApplicationLayerAutomaticResponseConfiguration,\n      \"HealthCheckArns\" : [ String, ... ],\n      \"Name\" : String,\n      \"ResourceArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::Protection\nProperties:\n  ApplicationLayerAutomaticResponseConfiguration: \n    ApplicationLayerAutomaticResponseConfiguration\n  HealthCheckArns: \n    - String\n  Name: String\n  ResourceArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Shield::ProtectionGroup","awsResourceTypeName":"shield-protectiongroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::ProtectionGroup\",\n  \"Properties\" : {\n      \"Aggregation\" : String,\n      \"Members\" : [ String, ... ],\n      \"Pattern\" : String,\n      \"ProtectionGroupId\" : String,\n      \"ResourceType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::ProtectionGroup\nProperties:\n  Aggregation: String\n  Members: \n    - String\n  Pattern: String\n  ProtectionGroupId: String\n  ResourceType: String\n  Tags: \n    - Tag\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Signer::ProfilePermission","awsResourceTypeName":"signer-profilepermission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Signer::ProfilePermission\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Principal\" : String,\n      \"ProfileName\" : String,\n      \"ProfileVersion\" : String,\n      \"StatementId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Signer::ProfilePermission\nProperties:\n  Action: String\n  Principal: String\n  ProfileName: String\n  ProfileVersion: String\n  StatementId: String\n","awsServiceName":"Signer","awsServiceCategory":"other"},{"awsResourceType":"AWS::Signer::SigningProfile","awsResourceTypeName":"signer-signingprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Signer::SigningProfile\",\n  \"Properties\" : {\n      \"PlatformId\" : String,\n      \"SignatureValidityPeriod\" : SignatureValidityPeriod,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Signer::SigningProfile\nProperties:\n  PlatformId: String\n  SignatureValidityPeriod: \n    SignatureValidityPeriod\n  Tags: \n    - Tag\n","awsServiceName":"Signer","awsServiceCategory":"other"},{"awsResourceType":"AWS::SimSpaceWeaver::Simulation","awsResourceTypeName":"simspaceweaver-simulation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SimSpaceWeaver::Simulation\",\n  \"Properties\" : {\n      \"MaximumDuration\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"SchemaS3Location\" : S3Location,\n      \"SnapshotS3Location\" : S3Location\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SimSpaceWeaver::Simulation\nProperties:\n  MaximumDuration: String\n  Name: String\n  RoleArn: String\n  SchemaS3Location: \n    S3Location\n  SnapshotS3Location: \n    S3Location\n","awsServiceName":"SimSpaceWeaver","awsServiceCategory":"other"},{"awsResourceType":"AWS::SNS::Subscription","awsResourceTypeName":"sns-subscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::Subscription\",\n  \"Properties\" : {\n      \"DeliveryPolicy\" : Json,\n      \"Endpoint\" : String,\n      \"FilterPolicy\" : Json,\n      \"FilterPolicyScope\" : String,\n      \"Protocol\" : String,\n      \"RawMessageDelivery\" : Boolean,\n      \"RedrivePolicy\" : Json,\n      \"Region\" : String,\n      \"ReplayPolicy\" : Json,\n      \"SubscriptionRoleArn\" : String,\n      \"TopicArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::Subscription\nProperties:\n  DeliveryPolicy: Json\n  Endpoint: String\n  FilterPolicy: Json\n  FilterPolicyScope: String\n  Protocol: String\n  RawMessageDelivery: Boolean\n  RedrivePolicy: Json\n  Region: String\n  ReplayPolicy: Json\n  SubscriptionRoleArn: String\n  TopicArn: String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SNS::Topic","awsResourceTypeName":"sns-topic","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::Topic\",\n  \"Properties\" : {\n      \"ArchivePolicy\" : Json,\n      \"ContentBasedDeduplication\" : Boolean,\n      \"DataProtectionPolicy\" : Json,\n      \"DeliveryStatusLogging\" : [ LoggingConfig, ... ],\n      \"DisplayName\" : String,\n      \"FifoTopic\" : Boolean,\n      \"KmsMasterKeyId\" : String,\n      \"SignatureVersion\" : String,\n      \"Subscription\" : [ Subscription, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TopicName\" : String,\n      \"TracingConfig\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::Topic\nProperties:\n  ArchivePolicy: Json\n  ContentBasedDeduplication: Boolean\n  DataProtectionPolicy: Json\n  DeliveryStatusLogging: \n    - LoggingConfig\n  DisplayName: String\n  FifoTopic: Boolean\n  KmsMasterKeyId: String\n  SignatureVersion: String\n  Subscription: \n    - Subscription\n  Tags: \n    - Tag\n  TopicName: String\n  TracingConfig: String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SNS::TopicInlinePolicy","awsResourceTypeName":"sns-topicinlinepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::TopicInlinePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"TopicArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::TopicInlinePolicy\nProperties:\n  PolicyDocument: Json\n  TopicArn: String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SNS::TopicPolicy","awsResourceTypeName":"sns-topicpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::TopicPolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"Topics\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::TopicPolicy\nProperties:\n  PolicyDocument: Json\n  Topics: \n    - String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SQS::Queue","awsResourceTypeName":"sqs-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SQS::Queue\",\n  \"Properties\" : {\n      \"ContentBasedDeduplication\" : Boolean,\n      \"DeduplicationScope\" : String,\n      \"DelaySeconds\" : Integer,\n      \"FifoQueue\" : Boolean,\n      \"FifoThroughputLimit\" : String,\n      \"KmsDataKeyReusePeriodSeconds\" : Integer,\n      \"KmsMasterKeyId\" : String,\n      \"MaximumMessageSize\" : Integer,\n      \"MessageRetentionPeriod\" : Integer,\n      \"QueueName\" : String,\n      \"ReceiveMessageWaitTimeSeconds\" : Integer,\n      \"RedriveAllowPolicy\" : Json,\n      \"RedrivePolicy\" : Json,\n      \"SqsManagedSseEnabled\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"VisibilityTimeout\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SQS::Queue\nProperties:\n  ContentBasedDeduplication: Boolean\n  DeduplicationScope: String\n  DelaySeconds: Integer\n  FifoQueue: Boolean\n  FifoThroughputLimit: String\n  KmsDataKeyReusePeriodSeconds: Integer\n  KmsMasterKeyId: String\n  MaximumMessageSize: Integer\n  MessageRetentionPeriod: Integer\n  QueueName: String\n  ReceiveMessageWaitTimeSeconds: Integer\n  RedriveAllowPolicy: Json\n  RedrivePolicy: Json\n  SqsManagedSseEnabled: Boolean\n  Tags: \n    - Tag\n  VisibilityTimeout: Integer\n","awsServiceName":"SQS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SQS::QueueInlinePolicy","awsResourceTypeName":"sqs-queueinlinepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SQS::QueueInlinePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"Queue\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SQS::QueueInlinePolicy\nProperties:\n  PolicyDocument: Json\n  Queue: String\n","awsServiceName":"SQS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SQS::QueuePolicy","awsResourceTypeName":"sqs-queuepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SQS::QueuePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"Queues\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SQS::QueuePolicy\nProperties:\n  PolicyDocument: Json\n  Queues: \n    - String\n","awsServiceName":"SQS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::Activity","awsResourceTypeName":"stepfunctions-activity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::Activity\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::Activity\nProperties:\n  Name: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::StateMachine","awsResourceTypeName":"stepfunctions-statemachine","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::StateMachine\",\n  \"Properties\" : {\n      \"Definition\" : Json,\n      \"DefinitionS3Location\" : S3Location,\n      \"DefinitionString\" : String,\n      \"DefinitionSubstitutions\" : {Key: Value, ...},\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"RoleArn\" : String,\n      \"StateMachineName\" : String,\n      \"StateMachineType\" : String,\n      \"Tags\" : [ TagsEntry, ... ],\n      \"TracingConfiguration\" : TracingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::StateMachine\nProperties:\n  Definition: Json\n  DefinitionS3Location: \n    S3Location\n  DefinitionString: \n    String\n  DefinitionSubstitutions: \n    Key: Value\n  LoggingConfiguration: \n    LoggingConfiguration\n  RoleArn: String\n  StateMachineName: String\n  StateMachineType: String\n  Tags: \n    - TagsEntry\n  TracingConfiguration: \n    TracingConfiguration\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::StateMachineAlias","awsResourceTypeName":"stepfunctions-statemachinealias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::StateMachineAlias\",\n  \"Properties\" : {\n      \"DeploymentPreference\" : DeploymentPreference,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RoutingConfiguration\" : [ RoutingConfigurationVersion, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::StateMachineAlias\nProperties:\n  DeploymentPreference: \n    DeploymentPreference\n  Description: String\n  Name: String\n  RoutingConfiguration: \n    - RoutingConfigurationVersion\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::StateMachineVersion","awsResourceTypeName":"stepfunctions-statemachineversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::StateMachineVersion\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"StateMachineArn\" : String,\n      \"StateMachineRevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::StateMachineVersion\nProperties:\n  Description: String\n  StateMachineArn: String\n  StateMachineRevisionId: String\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SSM::Association","awsResourceTypeName":"ssm-association","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::Association\",\n  \"Properties\" : {\n      \"ApplyOnlyAtCronInterval\" : Boolean,\n      \"AssociationName\" : String,\n      \"AutomationTargetParameterName\" : String,\n      \"CalendarNames\" : [ String, ... ],\n      \"ComplianceSeverity\" : String,\n      \"DocumentVersion\" : String,\n      \"InstanceId\" : String,\n      \"MaxConcurrency\" : String,\n      \"MaxErrors\" : String,\n      \"Name\" : String,\n      \"OutputLocation\" : InstanceAssociationOutputLocation,\n      \"Parameters\" : [ String, ... ],\n      \"ScheduleExpression\" : String,\n      \"ScheduleOffset\" : Integer,\n      \"SyncCompliance\" : String,\n      \"Targets\" : [ Target, ... ],\n      \"WaitForSuccessTimeoutSeconds\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::Association\nProperties:\n  ApplyOnlyAtCronInterval: Boolean\n  AssociationName: String\n  AutomationTargetParameterName: String\n  CalendarNames: \n    - String\n  ComplianceSeverity: String\n  DocumentVersion: String\n  InstanceId: String\n  MaxConcurrency: String\n  MaxErrors: String\n  Name: String\n  OutputLocation: \n    InstanceAssociationOutputLocation\n  Parameters: \n    - String\n  ScheduleExpression: String\n  ScheduleOffset: Integer\n  SyncCompliance: String\n  Targets: \n    - Target\n  WaitForSuccessTimeoutSeconds: Integer\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::Document","awsResourceTypeName":"ssm-document","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::Document\",\n  \"Properties\" : {\n      \"Attachments\" : [ AttachmentsSource, ... ],\n      \"Content\" : Json,\n      \"DocumentFormat\" : String,\n      \"DocumentType\" : String,\n      \"Name\" : String,\n      \"Requires\" : [ DocumentRequires, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetType\" : String,\n      \"UpdateMethod\" : String,\n      \"VersionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::Document\nProperties:\n  Attachments: \n    - AttachmentsSource\n  Content: Json\n  DocumentFormat: String\n  DocumentType: String\n  Name: String\n  Requires: \n    - DocumentRequires\n  Tags: \n    - Tag\n  TargetType: String\n  UpdateMethod: String\n  VersionName: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::MaintenanceWindow","awsResourceTypeName":"ssm-maintenancewindow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::MaintenanceWindow\",\n  \"Properties\" : {\n      \"AllowUnassociatedTargets\" : Boolean,\n      \"Cutoff\" : Integer,\n      \"Description\" : String,\n      \"Duration\" : Integer,\n      \"EndDate\" : String,\n      \"Name\" : String,\n      \"Schedule\" : String,\n      \"ScheduleOffset\" : Integer,\n      \"ScheduleTimezone\" : String,\n      \"StartDate\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::MaintenanceWindow\nProperties:\n  AllowUnassociatedTargets: Boolean\n  Cutoff: Integer\n  Description: String\n  Duration: Integer\n  EndDate: String\n  Name: String\n  Schedule: String\n  ScheduleOffset: Integer\n  ScheduleTimezone: String\n  StartDate: String\n  Tags: \n    - Tag\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::MaintenanceWindowTarget","awsResourceTypeName":"ssm-maintenancewindowtarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::MaintenanceWindowTarget\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"OwnerInformation\" : String,\n      \"ResourceType\" : String,\n      \"Targets\" : [ Targets, ... ],\n      \"WindowId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::MaintenanceWindowTarget\nProperties:\n  Description: String\n  Name: String\n  OwnerInformation: String\n  ResourceType: String\n  Targets: \n    - Targets\n  WindowId: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::MaintenanceWindowTask","awsResourceTypeName":"ssm-maintenancewindowtask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::MaintenanceWindowTask\",\n  \"Properties\" : {\n      \"CutoffBehavior\" : String,\n      \"Description\" : String,\n      \"LoggingInfo\" : LoggingInfo,\n      \"MaxConcurrency\" : String,\n      \"MaxErrors\" : String,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"ServiceRoleArn\" : String,\n      \"Targets\" : [ Target, ... ],\n      \"TaskArn\" : String,\n      \"TaskInvocationParameters\" : TaskInvocationParameters,\n      \"TaskParameters\" : Json,\n      \"TaskType\" : String,\n      \"WindowId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::MaintenanceWindowTask\nProperties:\n  CutoffBehavior: String\n  Description: String\n  LoggingInfo: \n    LoggingInfo\n  MaxConcurrency: String\n  MaxErrors: String\n  Name: String\n  Priority: Integer\n  ServiceRoleArn: String\n  Targets: \n    - Target\n  TaskArn: String\n  TaskInvocationParameters: \n    TaskInvocationParameters\n  TaskParameters: Json\n  TaskType: String\n  WindowId: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::Parameter","awsResourceTypeName":"ssm-parameter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::Parameter\",\n  \"Properties\" : {\n      \"AllowedPattern\" : String,\n      \"DataType\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policies\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Tier\" : String,\n      \"Type\" : String,\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::Parameter\nProperties:\n  AllowedPattern: String\n  DataType: String\n  Description: String\n  Name: String\n  Policies: String\n  Tags: \n    Key: Value\n  Tier: String\n  Type: String\n  Value: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::PatchBaseline","awsResourceTypeName":"ssm-patchbaseline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::PatchBaseline\",\n  \"Properties\" : {\n      \"ApprovalRules\" : RuleGroup,\n      \"ApprovedPatches\" : [ String, ... ],\n      \"ApprovedPatchesComplianceLevel\" : String,\n      \"ApprovedPatchesEnableNonSecurity\" : Boolean,\n      \"Description\" : String,\n      \"GlobalFilters\" : PatchFilterGroup,\n      \"Name\" : String,\n      \"OperatingSystem\" : String,\n      \"PatchGroups\" : [ String, ... ],\n      \"RejectedPatches\" : [ String, ... ],\n      \"RejectedPatchesAction\" : String,\n      \"Sources\" : [ PatchSource, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::PatchBaseline\nProperties:\n  ApprovalRules: \n    RuleGroup\n  ApprovedPatches: \n    - String\n  ApprovedPatchesComplianceLevel: String\n  ApprovedPatchesEnableNonSecurity: Boolean\n  Description: String\n  GlobalFilters: \n    PatchFilterGroup\n  Name: String\n  OperatingSystem: String\n  PatchGroups: \n    - String\n  RejectedPatches: \n    - String\n  RejectedPatchesAction: String\n  Sources: \n    - PatchSource\n  Tags: \n    - Tag\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::ResourceDataSync","awsResourceTypeName":"ssm-resourcedatasync","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::ResourceDataSync\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"BucketPrefix\" : String,\n      \"BucketRegion\" : String,\n      \"KMSKeyArn\" : String,\n      \"S3Destination\" : S3Destination,\n      \"SyncFormat\" : String,\n      \"SyncSource\" : SyncSource,\n      \"SyncType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::ResourceDataSync\nProperties:\n  BucketName: String\n  BucketPrefix: String\n  BucketRegion: String\n  KMSKeyArn: String\n  S3Destination: \n    S3Destination\n  SyncFormat: String\n  SyncSource: \n    SyncSource\n  SyncType: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::ResourcePolicy","awsResourceTypeName":"ssm-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::ResourcePolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::ResourcePolicy\nProperties:\n  Policy: Json\n  ResourceArn: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SupportApp::AccountAlias","awsResourceTypeName":"supportapp-accountalias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SupportApp::AccountAlias\",\n  \"Properties\" : {\n      \"AccountAlias\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SupportApp::AccountAlias\nProperties:\n  AccountAlias: String\n","awsServiceName":"SupportApp","awsServiceCategory":"customerEnablement"},{"awsResourceType":"AWS::SupportApp::SlackChannelConfiguration","awsResourceTypeName":"supportapp-slackchannelconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SupportApp::SlackChannelConfiguration\",\n  \"Properties\" : {\n      \"ChannelId\" : String,\n      \"ChannelName\" : String,\n      \"ChannelRoleArn\" : String,\n      \"NotifyOnAddCorrespondenceToCase\" : Boolean,\n      \"NotifyOnCaseSeverity\" : String,\n      \"NotifyOnCreateOrReopenCase\" : Boolean,\n      \"NotifyOnResolveCase\" : Boolean,\n      \"TeamId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SupportApp::SlackChannelConfiguration\nProperties:\n  ChannelId: String\n  ChannelName: String\n  ChannelRoleArn: String\n  NotifyOnAddCorrespondenceToCase: Boolean\n  NotifyOnCaseSeverity: String\n  NotifyOnCreateOrReopenCase: Boolean\n  NotifyOnResolveCase: Boolean\n  TeamId: String\n","awsServiceName":"SupportApp","awsServiceCategory":"customerEnablement"},{"awsResourceType":"AWS::SupportApp::SlackWorkspaceConfiguration","awsResourceTypeName":"supportapp-slackworkspaceconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SupportApp::SlackWorkspaceConfiguration\",\n  \"Properties\" : {\n      \"TeamId\" : String,\n      \"VersionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SupportApp::SlackWorkspaceConfiguration\nProperties:\n  TeamId: String\n  VersionId: String\n","awsServiceName":"SupportApp","awsServiceCategory":"customerEnablement"},{"awsResourceType":"AWS::SystemsManagerSAP::Application","awsResourceTypeName":"systemsmanagersap-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SystemsManagerSAP::Application\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ApplicationType\" : String,\n      \"Credentials\" : [ Credential, ... ],\n      \"Instances\" : [ String, ... ],\n      \"SapInstanceNumber\" : String,\n      \"Sid\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SystemsManagerSAP::Application\nProperties:\n  ApplicationId: String\n  ApplicationType: String\n  Credentials: \n    - Credential\n  Instances: \n    - String\n  SapInstanceNumber: String\n  Sid: String\n  Tags: \n    - Tag\n","awsServiceName":"SystemsManagerSAP","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Timestream::Database","awsResourceTypeName":"timestream-database","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::Database\",\n  \"Properties\" : {\n      \"DatabaseName\" : String,\n      \"KmsKeyId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::Database\nProperties:\n  DatabaseName: String\n  KmsKeyId: String\n  Tags: \n    - Tag\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Timestream::InfluxDBInstance","awsResourceTypeName":"timestream-influxdbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::InfluxDBInstance\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : Integer,\n      \"Bucket\" : String,\n      \"DbInstanceType\" : String,\n      \"DbParameterGroupIdentifier\" : String,\n      \"DbStorageType\" : String,\n      \"DeploymentType\" : String,\n      \"LogDeliveryConfiguration\" : LogDeliveryConfiguration,\n      \"Name\" : String,\n      \"Organization\" : String,\n      \"Password\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"Username\" : String,\n      \"VpcSecurityGroupIds\" : [ String, ... ],\n      \"VpcSubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::InfluxDBInstance\nProperties:\n  AllocatedStorage: Integer\n  Bucket: String\n  DbInstanceType: String\n  DbParameterGroupIdentifier: String\n  DbStorageType: String\n  DeploymentType: String\n  LogDeliveryConfiguration: \n    LogDeliveryConfiguration\n  Name: String\n  Organization: String\n  Password: String\n  PubliclyAccessible: Boolean\n  Tags: \n    - Tag\n  Username: String\n  VpcSecurityGroupIds: \n    - String\n  VpcSubnetIds: \n    - String\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Timestream::ScheduledQuery","awsResourceTypeName":"timestream-scheduledquery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::ScheduledQuery\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"ErrorReportConfiguration\" : ErrorReportConfiguration,\n      \"KmsKeyId\" : String,\n      \"NotificationConfiguration\" : NotificationConfiguration,\n      \"QueryString\" : String,\n      \"ScheduleConfiguration\" : ScheduleConfiguration,\n      \"ScheduledQueryExecutionRoleArn\" : String,\n      \"ScheduledQueryName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetConfiguration\" : TargetConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::ScheduledQuery\nProperties:\n  ClientToken: String\n  ErrorReportConfiguration: \n    ErrorReportConfiguration\n  KmsKeyId: String\n  NotificationConfiguration: \n    NotificationConfiguration\n  QueryString: \n    String\n  ScheduleConfiguration: \n    ScheduleConfiguration\n  ScheduledQueryExecutionRoleArn: String\n  ScheduledQueryName: String\n  Tags: \n    - Tag\n  TargetConfiguration: \n    TargetConfiguration\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Timestream::Table","awsResourceTypeName":"timestream-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::Table\",\n  \"Properties\" : {\n      \"DatabaseName\" : String,\n      \"MagneticStoreWriteProperties\" : MagneticStoreWriteProperties,\n      \"RetentionProperties\" : RetentionProperties,\n      \"Schema\" : Schema,\n      \"TableName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::Table\nProperties:\n  DatabaseName: String\n  MagneticStoreWriteProperties: \n    MagneticStoreWriteProperties\n  RetentionProperties: \n    RetentionProperties\n  Schema: \n    Schema\n  TableName: String\n  Tags: \n    - Tag\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Transfer::Agreement","awsResourceTypeName":"transfer-agreement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Agreement\",\n  \"Properties\" : {\n      \"AccessRole\" : String,\n      \"BaseDirectory\" : String,\n      \"Description\" : String,\n      \"LocalProfileId\" : String,\n      \"PartnerProfileId\" : String,\n      \"ServerId\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Agreement\nProperties:\n  AccessRole: String\n  BaseDirectory: String\n  Description: String\n  LocalProfileId: String\n  PartnerProfileId: String\n  ServerId: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Certificate","awsResourceTypeName":"transfer-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Certificate\",\n  \"Properties\" : {\n      \"ActiveDate\" : String,\n      \"Certificate\" : String,\n      \"CertificateChain\" : String,\n      \"Description\" : String,\n      \"InactiveDate\" : String,\n      \"PrivateKey\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Usage\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Certificate\nProperties:\n  ActiveDate: String\n  Certificate: String\n  CertificateChain: String\n  Description: String\n  InactiveDate: String\n  PrivateKey: String\n  Tags: \n    - Tag\n  Usage: String\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Connector","awsResourceTypeName":"transfer-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Connector\",\n  \"Properties\" : {\n      \"AccessRole\" : String,\n      \"As2Config\" : As2Config,\n      \"LoggingRole\" : String,\n      \"SftpConfig\" : SftpConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"Url\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Connector\nProperties:\n  AccessRole: String\n  As2Config: \n    As2Config\n  LoggingRole: String\n  SftpConfig: \n    SftpConfig\n  Tags: \n    - Tag\n  Url: String\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Profile","awsResourceTypeName":"transfer-profile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Profile\",\n  \"Properties\" : {\n      \"As2Id\" : String,\n      \"CertificateIds\" : [ String, ... ],\n      \"ProfileType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Profile\nProperties:\n  As2Id: String\n  CertificateIds: \n    - String\n  ProfileType: String\n  Tags: \n    - Tag\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Server","awsResourceTypeName":"transfer-server","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Server\",\n  \"Properties\" : {\n      \"Certificate\" : String,\n      \"Domain\" : String,\n      \"EndpointDetails\" : EndpointDetails,\n      \"EndpointType\" : String,\n      \"IdentityProviderDetails\" : IdentityProviderDetails,\n      \"IdentityProviderType\" : String,\n      \"LoggingRole\" : String,\n      \"PostAuthenticationLoginBanner\" : String,\n      \"PreAuthenticationLoginBanner\" : String,\n      \"ProtocolDetails\" : ProtocolDetails,\n      \"Protocols\" : [ String, ... ],\n      \"S3StorageOptions\" : S3StorageOptions,\n      \"SecurityPolicyName\" : String,\n      \"StructuredLogDestinations\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WorkflowDetails\" : WorkflowDetails\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Server\nProperties:\n  Certificate: String\n  Domain: String\n  EndpointDetails: \n    EndpointDetails\n  EndpointType: String\n  IdentityProviderDetails: \n    IdentityProviderDetails\n  IdentityProviderType: String\n  LoggingRole: String\n  PostAuthenticationLoginBanner: String\n  PreAuthenticationLoginBanner: String\n  ProtocolDetails: \n    ProtocolDetails\n  Protocols: \n    - String\n  S3StorageOptions: \n    S3StorageOptions\n  SecurityPolicyName: String\n  StructuredLogDestinations: \n    - String\n  Tags: \n    - Tag\n  WorkflowDetails: \n    WorkflowDetails\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::User","awsResourceTypeName":"transfer-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::User\",\n  \"Properties\" : {\n      \"HomeDirectory\" : String,\n      \"HomeDirectoryMappings\" : [ HomeDirectoryMapEntry, ... ],\n      \"HomeDirectoryType\" : String,\n      \"Policy\" : String,\n      \"PosixProfile\" : PosixProfile,\n      \"Role\" : String,\n      \"ServerId\" : String,\n      \"SshPublicKeys\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::User\nProperties:\n  HomeDirectory: String\n  HomeDirectoryMappings: \n    - HomeDirectoryMapEntry\n  HomeDirectoryType: String\n  Policy: String\n  PosixProfile: \n    PosixProfile\n  Role: String\n  ServerId: String\n  SshPublicKeys: \n    - String\n  Tags: \n    - Tag\n  UserName: String\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Workflow","awsResourceTypeName":"transfer-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Workflow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"OnExceptionSteps\" : [ WorkflowStep, ... ],\n      \"Steps\" : [ WorkflowStep, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Workflow\nProperties:\n  Description: String\n  OnExceptionSteps: \n    - WorkflowStep\n  Steps: \n    - WorkflowStep\n  Tags: \n    - Tag\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::VoiceID::Domain","awsResourceTypeName":"voiceid-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VoiceID::Domain\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VoiceID::Domain\nProperties:\n  Description: String\n  Name: String\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"VoiceID","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::AccessLogSubscription","awsResourceTypeName":"vpclattice-accesslogsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::AccessLogSubscription\",\n  \"Properties\" : {\n      \"DestinationArn\" : String,\n      \"ResourceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::AccessLogSubscription\nProperties:\n  DestinationArn: String\n  ResourceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::AuthPolicy","awsResourceTypeName":"vpclattice-authpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::AuthPolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::AuthPolicy\nProperties:\n  Policy: Json\n  ResourceIdentifier: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::Listener","awsResourceTypeName":"vpclattice-listener","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::Listener\",\n  \"Properties\" : {\n      \"DefaultAction\" : DefaultAction,\n      \"Name\" : String,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"ServiceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::Listener\nProperties:\n  DefaultAction: \n    DefaultAction\n  Name: String\n  Port: Integer\n  Protocol: String\n  ServiceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ResourcePolicy","awsResourceTypeName":"vpclattice-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ResourcePolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ResourcePolicy\nProperties:\n  Policy: Json\n  ResourceArn: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::Rule","awsResourceTypeName":"vpclattice-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::Rule\",\n  \"Properties\" : {\n      \"Action\" : Action,\n      \"ListenerIdentifier\" : String,\n      \"Match\" : Match,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"ServiceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::Rule\nProperties:\n  Action: \n    Action\n  ListenerIdentifier: String\n  Match: \n    Match\n  Name: String\n  Priority: Integer\n  ServiceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::Service","awsResourceTypeName":"vpclattice-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::Service\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"CertificateArn\" : String,\n      \"CustomDomainName\" : String,\n      \"DnsEntry\" : DnsEntry,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::Service\nProperties:\n  AuthType: String\n  CertificateArn: String\n  CustomDomainName: String\n  DnsEntry: \n    DnsEntry\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ServiceNetwork","awsResourceTypeName":"vpclattice-servicenetwork","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ServiceNetwork\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ServiceNetwork\nProperties:\n  AuthType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ServiceNetworkServiceAssociation","awsResourceTypeName":"vpclattice-servicenetworkserviceassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ServiceNetworkServiceAssociation\",\n  \"Properties\" : {\n      \"DnsEntry\" : DnsEntry,\n      \"ServiceIdentifier\" : String,\n      \"ServiceNetworkIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ServiceNetworkServiceAssociation\nProperties:\n  DnsEntry: \n    DnsEntry\n  ServiceIdentifier: String\n  ServiceNetworkIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ServiceNetworkVpcAssociation","awsResourceTypeName":"vpclattice-servicenetworkvpcassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ServiceNetworkVpcAssociation\",\n  \"Properties\" : {\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServiceNetworkIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ServiceNetworkVpcAssociation\nProperties:\n  SecurityGroupIds: \n    - String\n  ServiceNetworkIdentifier: String\n  Tags: \n    - Tag\n  VpcIdentifier: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::TargetGroup","awsResourceTypeName":"vpclattice-targetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::TargetGroup\",\n  \"Properties\" : {\n      \"Config\" : TargetGroupConfig,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Targets\" : [ Target, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::TargetGroup\nProperties:\n  Config: \n    TargetGroupConfig\n  Name: String\n  Tags: \n    - Tag\n  Targets: \n    - Target\n  Type: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"}]