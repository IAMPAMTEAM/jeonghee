[{"awsResourceType":"AWS::DataSync::LocationS3","awsResourceTypeName":"datasync-locations3","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationS3\",\n  \"Properties\" : {\n      \"S3BucketArn\" : String,\n      \"S3Config\" : S3Config,\n      \"S3StorageClass\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationS3\nProperties:\n  S3BucketArn: String\n  S3Config: \n    S3Config\n  S3StorageClass: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationSMB","awsResourceTypeName":"datasync-locationsmb","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationSMB\",\n  \"Properties\" : {\n      \"AgentArns\" : [ String, ... ],\n      \"Domain\" : String,\n      \"MountOptions\" : MountOptions,\n      \"Password\" : String,\n      \"ServerHostname\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"User\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationSMB\nProperties:\n  AgentArns: \n    - String\n  Domain: String\n  MountOptions: \n    MountOptions\n  Password: String\n  ServerHostname: String\n  Subdirectory: String\n  Tags: \n    - Tag\n  User: String\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::StorageSystem","awsResourceTypeName":"datasync-storagesystem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::StorageSystem\",\n  \"Properties\" : {\n      \"AgentArns\" : [ String, ... ],\n      \"CloudWatchLogGroupArn\" : String,\n      \"Name\" : String,\n      \"ServerConfiguration\" : ServerConfiguration,\n      \"ServerCredentials\" : ServerCredentials,\n      \"SystemType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::StorageSystem\nProperties:\n  AgentArns: \n    - String\n  CloudWatchLogGroupArn: String\n  Name: String\n  ServerConfiguration: \n    ServerConfiguration\n  ServerCredentials: \n    ServerCredentials\n  SystemType: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::Task","awsResourceTypeName":"datasync-task","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::Task\",\n  \"Properties\" : {\n      \"CloudWatchLogGroupArn\" : String,\n      \"DestinationLocationArn\" : String,\n      \"Excludes\" : [ FilterRule, ... ],\n      \"Includes\" : [ FilterRule, ... ],\n      \"ManifestConfig\" : ManifestConfig,\n      \"Name\" : String,\n      \"Options\" : Options,\n      \"Schedule\" : TaskSchedule,\n      \"SourceLocationArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskReportConfig\" : TaskReportConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::Task\nProperties:\n  CloudWatchLogGroupArn: String\n  DestinationLocationArn: String\n  Excludes: \n    - FilterRule\n  Includes: \n    - FilterRule\n  ManifestConfig: \n    ManifestConfig\n  Name: String\n  Options: \n    Options\n  Schedule: \n    TaskSchedule\n  SourceLocationArn: String\n  Tags: \n    - Tag\n  TaskReportConfig: \n    TaskReportConfig\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataZone::DataSource","awsResourceTypeName":"datazone-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::DataSource\",\n  \"Properties\" : {\n      \"AssetFormsInput\" : [ FormInput, ... ],\n      \"Configuration\" : DataSourceConfigurationInput,\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"EnableSetting\" : String,\n      \"EnvironmentIdentifier\" : String,\n      \"Name\" : String,\n      \"ProjectIdentifier\" : String,\n      \"PublishOnImport\" : Boolean,\n      \"Recommendation\" : RecommendationConfiguration,\n      \"Schedule\" : ScheduleConfiguration,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::DataSource\nProperties:\n  AssetFormsInput: \n    - FormInput\n  Configuration: \n    DataSourceConfigurationInput\n  Description: String\n  DomainIdentifier: String\n  EnableSetting: String\n  EnvironmentIdentifier: String\n  Name: String\n  ProjectIdentifier: String\n  PublishOnImport: Boolean\n  Recommendation: \n    RecommendationConfiguration\n  Schedule: \n    ScheduleConfiguration\n  Type: String\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::Domain","awsResourceTypeName":"datazone-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::Domain\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainExecutionRole\" : String,\n      \"KmsKeyIdentifier\" : String,\n      \"Name\" : String,\n      \"SingleSignOn\" : SingleSignOn,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::Domain\nProperties:\n  Description: String\n  DomainExecutionRole: String\n  KmsKeyIdentifier: String\n  Name: String\n  SingleSignOn: \n    SingleSignOn\n  Tags: \n    - Tag\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::Environment","awsResourceTypeName":"datazone-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"EnvironmentProfileIdentifier\" : String,\n      \"GlossaryTerms\" : [ String, ... ],\n      \"Name\" : String,\n      \"ProjectIdentifier\" : String,\n      \"UserParameters\" : [ EnvironmentParameter, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::Environment\nProperties:\n  Description: String\n  DomainIdentifier: String\n  EnvironmentProfileIdentifier: String\n  GlossaryTerms: \n    - String\n  Name: String\n  ProjectIdentifier: String\n  UserParameters: \n    - EnvironmentParameter\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::EnvironmentBlueprintConfiguration","awsResourceTypeName":"datazone-environmentblueprintconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::EnvironmentBlueprintConfiguration\",\n  \"Properties\" : {\n      \"DomainIdentifier\" : String,\n      \"EnabledRegions\" : [ String, ... ],\n      \"EnvironmentBlueprintIdentifier\" : String,\n      \"ManageAccessRoleArn\" : String,\n      \"ProvisioningRoleArn\" : String,\n      \"RegionalParameters\" : [ RegionalParameter, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::EnvironmentBlueprintConfiguration\nProperties:\n  DomainIdentifier: String\n  EnabledRegions: \n    - String\n  EnvironmentBlueprintIdentifier: String\n  ManageAccessRoleArn: String\n  ProvisioningRoleArn: String\n  RegionalParameters: \n    - RegionalParameter\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::EnvironmentProfile","awsResourceTypeName":"datazone-environmentprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::EnvironmentProfile\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"AwsAccountRegion\" : String,\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"EnvironmentBlueprintIdentifier\" : String,\n      \"Name\" : String,\n      \"ProjectIdentifier\" : String,\n      \"UserParameters\" : [ EnvironmentParameter, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::EnvironmentProfile\nProperties:\n  AwsAccountId: String\n  AwsAccountRegion: String\n  Description: String\n  DomainIdentifier: String\n  EnvironmentBlueprintIdentifier: String\n  Name: String\n  ProjectIdentifier: String\n  UserParameters: \n    - EnvironmentParameter\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::Project","awsResourceTypeName":"datazone-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::Project\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"GlossaryTerms\" : [ String, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::Project\nProperties:\n  Description: String\n  DomainIdentifier: String\n  GlossaryTerms: \n    - String\n  Name: String\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::SubscriptionTarget","awsResourceTypeName":"datazone-subscriptiontarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::SubscriptionTarget\",\n  \"Properties\" : {\n      \"ApplicableAssetTypes\" : [ String, ... ],\n      \"AuthorizedPrincipals\" : [ String, ... ],\n      \"DomainIdentifier\" : String,\n      \"EnvironmentIdentifier\" : String,\n      \"ManageAccessRole\" : String,\n      \"Name\" : String,\n      \"Provider\" : String,\n      \"SubscriptionTargetConfig\" : [ SubscriptionTargetForm, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::SubscriptionTarget\nProperties:\n  ApplicableAssetTypes: \n    - String\n  AuthorizedPrincipals: \n    - String\n  DomainIdentifier: String\n  EnvironmentIdentifier: String\n  ManageAccessRole: String\n  Name: String\n  Provider: String\n  SubscriptionTargetConfig: \n    - SubscriptionTargetForm\n  Type: String\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::Farm","awsResourceTypeName":"deadline-farm","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::Farm\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"KmsKeyArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::Farm\nProperties:\n  Description: String\n  DisplayName: String\n  KmsKeyArn: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::Fleet","awsResourceTypeName":"deadline-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::Fleet\",\n  \"Properties\" : {\n      \"Configuration\" : FleetConfiguration,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"FarmId\" : String,\n      \"MaxWorkerCount\" : Integer,\n      \"MinWorkerCount\" : Integer,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::Fleet\nProperties:\n  Configuration: \n    FleetConfiguration\n  Description: String\n  DisplayName: String\n  FarmId: String\n  MaxWorkerCount: Integer\n  MinWorkerCount: Integer\n  RoleArn: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::LicenseEndpoint","awsResourceTypeName":"deadline-licenseendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::LicenseEndpoint\",\n  \"Properties\" : {\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::LicenseEndpoint\nProperties:\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  VpcId: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::MeteredProduct","awsResourceTypeName":"deadline-meteredproduct","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::MeteredProduct\",\n  \"Properties\" : {\n      \"Family\" : String,\n      \"LicenseEndpointId\" : String,\n      \"Port\" : Integer,\n      \"ProductId\" : String,\n      \"Vendor\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::MeteredProduct\nProperties:\n  Family: String\n  LicenseEndpointId: String\n  Port: Integer\n  ProductId: String\n  Vendor: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::Queue","awsResourceTypeName":"deadline-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::Queue\",\n  \"Properties\" : {\n      \"AllowedStorageProfileIds\" : [ String, ... ],\n      \"DefaultBudgetAction\" : String,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"FarmId\" : String,\n      \"JobAttachmentSettings\" : JobAttachmentSettings,\n      \"JobRunAsUser\" : JobRunAsUser,\n      \"RequiredFileSystemLocationNames\" : [ String, ... ],\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::Queue\nProperties:\n  AllowedStorageProfileIds: \n    - String\n  DefaultBudgetAction: String\n  Description: String\n  DisplayName: String\n  FarmId: String\n  JobAttachmentSettings: \n    JobAttachmentSettings\n  JobRunAsUser: \n    JobRunAsUser\n  RequiredFileSystemLocationNames: \n    - String\n  RoleArn: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::QueueEnvironment","awsResourceTypeName":"deadline-queueenvironment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::QueueEnvironment\",\n  \"Properties\" : {\n      \"FarmId\" : String,\n      \"Priority\" : Integer,\n      \"QueueId\" : String,\n      \"Template\" : String,\n      \"TemplateType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::QueueEnvironment\nProperties:\n  FarmId: String\n  Priority: Integer\n  QueueId: String\n  Template: String\n  TemplateType: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::QueueFleetAssociation","awsResourceTypeName":"deadline-queuefleetassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::QueueFleetAssociation\",\n  \"Properties\" : {\n      \"FarmId\" : String,\n      \"FleetId\" : String,\n      \"QueueId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::QueueFleetAssociation\nProperties:\n  FarmId: String\n  FleetId: String\n  QueueId: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::StorageProfile","awsResourceTypeName":"deadline-storageprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::StorageProfile\",\n  \"Properties\" : {\n      \"DisplayName\" : String,\n      \"FarmId\" : String,\n      \"FileSystemLocations\" : [ FileSystemLocation, ... ],\n      \"OsFamily\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::StorageProfile\nProperties:\n  DisplayName: String\n  FarmId: String\n  FileSystemLocations: \n    - FileSystemLocation\n  OsFamily: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::DAX::Cluster","awsResourceTypeName":"dax-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DAX::Cluster\",\n  \"Properties\" : {\n      \"AvailabilityZones\" : [ String, ... ],\n      \"ClusterEndpointEncryptionType\" : String,\n      \"ClusterName\" : String,\n      \"Description\" : String,\n      \"IAMRoleARN\" : String,\n      \"NodeType\" : String,\n      \"NotificationTopicARN\" : String,\n      \"ParameterGroupName\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"ReplicationFactor\" : Integer,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SSESpecification\" : SSESpecification,\n      \"SubnetGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DAX::Cluster\nProperties:\n  AvailabilityZones: \n    - String\n  ClusterEndpointEncryptionType: String\n  ClusterName: String\n  Description: String\n  IAMRoleARN: String\n  NodeType: String\n  NotificationTopicARN: String\n  ParameterGroupName: String\n  PreferredMaintenanceWindow: String\n  ReplicationFactor: Integer\n  SecurityGroupIds: \n    - String\n  SSESpecification: \n    SSESpecification\n  SubnetGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"DAX","awsServiceCategory":"other"},{"awsResourceType":"AWS::DAX::ParameterGroup","awsResourceTypeName":"dax-parametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DAX::ParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ParameterGroupName\" : String,\n      \"ParameterNameValues\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DAX::ParameterGroup\nProperties:\n  Description: String\n  ParameterGroupName: String\n  ParameterNameValues: Json\n","awsServiceName":"DAX","awsServiceCategory":"other"},{"awsResourceType":"AWS::DAX::SubnetGroup","awsResourceTypeName":"dax-subnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DAX::SubnetGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"SubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DAX::SubnetGroup\nProperties:\n  Description: String\n  SubnetGroupName: String\n  SubnetIds: \n    - String\n","awsServiceName":"DAX","awsServiceCategory":"other"},{"awsResourceType":"AWS::Detective::Graph","awsResourceTypeName":"detective-graph","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Detective::Graph\",\n  \"Properties\" : {\n      \"AutoEnableMembers\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Detective::Graph\nProperties:\n  AutoEnableMembers: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"Detective","awsServiceCategory":"security"},{"awsResourceType":"AWS::Detective::MemberInvitation","awsResourceTypeName":"detective-memberinvitation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Detective::MemberInvitation\",\n  \"Properties\" : {\n      \"DisableEmailNotification\" : Boolean,\n      \"GraphArn\" : String,\n      \"MemberEmailAddress\" : String,\n      \"MemberId\" : String,\n      \"Message\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Detective::MemberInvitation\nProperties:\n  DisableEmailNotification: Boolean\n  GraphArn: String\n  MemberEmailAddress: String\n  MemberId: String\n  Message: String\n","awsServiceName":"Detective","awsServiceCategory":"security"},{"awsResourceType":"AWS::Detective::OrganizationAdmin","awsResourceTypeName":"detective-organizationadmin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Detective::OrganizationAdmin\",\n  \"Properties\" : {\n      \"AccountId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Detective::OrganizationAdmin\nProperties:\n  AccountId: String\n","awsServiceName":"Detective","awsServiceCategory":"security"},{"awsResourceType":"AWS::DeviceFarm::DevicePool","awsResourceTypeName":"devicefarm-devicepool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::DevicePool\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MaxDevices\" : Integer,\n      \"Name\" : String,\n      \"ProjectArn\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::DevicePool\nProperties:\n  Description: String\n  MaxDevices: Integer\n  Name: String\n  ProjectArn: String\n  Rules: \n    - Rule\n  Tags: \n    - Tag\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::InstanceProfile","awsResourceTypeName":"devicefarm-instanceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::InstanceProfile\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExcludeAppPackagesFromCleanup\" : [ String, ... ],\n      \"Name\" : String,\n      \"PackageCleanup\" : Boolean,\n      \"RebootAfterUse\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::InstanceProfile\nProperties:\n  Description: String\n  ExcludeAppPackagesFromCleanup: \n    - String\n  Name: String\n  PackageCleanup: Boolean\n  RebootAfterUse: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::NetworkProfile","awsResourceTypeName":"devicefarm-networkprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::NetworkProfile\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DownlinkBandwidthBits\" : Integer,\n      \"DownlinkDelayMs\" : Integer,\n      \"DownlinkJitterMs\" : Integer,\n      \"DownlinkLossPercent\" : Integer,\n      \"Name\" : String,\n      \"ProjectArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UplinkBandwidthBits\" : Integer,\n      \"UplinkDelayMs\" : Integer,\n      \"UplinkJitterMs\" : Integer,\n      \"UplinkLossPercent\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::NetworkProfile\nProperties:\n  Description: String\n  DownlinkBandwidthBits: Integer\n  DownlinkDelayMs: Integer\n  DownlinkJitterMs: Integer\n  DownlinkLossPercent: Integer\n  Name: String\n  ProjectArn: String\n  Tags: \n    - Tag\n  UplinkBandwidthBits: Integer\n  UplinkDelayMs: Integer\n  UplinkJitterMs: Integer\n  UplinkLossPercent: Integer\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::Project","awsResourceTypeName":"devicefarm-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::Project\",\n  \"Properties\" : {\n      \"DefaultJobTimeoutMinutes\" : Integer,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::Project\nProperties:\n  DefaultJobTimeoutMinutes: Integer\n  Name: String\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::TestGridProject","awsResourceTypeName":"devicefarm-testgridproject","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::TestGridProject\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::TestGridProject\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::VPCEConfiguration","awsResourceTypeName":"devicefarm-vpceconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::VPCEConfiguration\",\n  \"Properties\" : {\n      \"ServiceDnsName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpceConfigurationDescription\" : String,\n      \"VpceConfigurationName\" : String,\n      \"VpceServiceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::VPCEConfiguration\nProperties:\n  ServiceDnsName: String\n  Tags: \n    - Tag\n  VpceConfigurationDescription: String\n  VpceConfigurationName: String\n  VpceServiceName: String\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DevOpsGuru::LogAnomalyDetectionIntegration","awsResourceTypeName":"devopsguru-loganomalydetectionintegration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DevOpsGuru::LogAnomalyDetectionIntegration\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DevOpsGuru::LogAnomalyDetectionIntegration","awsServiceName":"DevOpsGuru","awsServiceCategory":"other"},{"awsResourceType":"AWS::DevOpsGuru::NotificationChannel","awsResourceTypeName":"devopsguru-notificationchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DevOpsGuru::NotificationChannel\",\n  \"Properties\" : {\n      \"Config\" : NotificationChannelConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DevOpsGuru::NotificationChannel\nProperties:\n  Config: \n    NotificationChannelConfig\n","awsServiceName":"DevOpsGuru","awsServiceCategory":"other"},{"awsResourceType":"AWS::DevOpsGuru::ResourceCollection","awsResourceTypeName":"devopsguru-resourcecollection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DevOpsGuru::ResourceCollection\",\n  \"Properties\" : {\n      \"ResourceCollectionFilter\" : ResourceCollectionFilter\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DevOpsGuru::ResourceCollection\nProperties:\n  ResourceCollectionFilter: \n    ResourceCollectionFilter\n","awsServiceName":"DevOpsGuru","awsServiceCategory":"other"},{"awsResourceType":"AWS::DirectoryService::MicrosoftAD","awsResourceTypeName":"directoryservice-microsoftad","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DirectoryService::MicrosoftAD\",\n  \"Properties\" : {\n      \"CreateAlias\" : Boolean,\n      \"Edition\" : String,\n      \"EnableSso\" : Boolean,\n      \"Name\" : String,\n      \"Password\" : String,\n      \"ShortName\" : String,\n      \"VpcSettings\" : VpcSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DirectoryService::MicrosoftAD\nProperties:\n  CreateAlias: Boolean\n  Edition: String\n  EnableSso: Boolean\n  Name: String\n  Password: String\n  ShortName: String\n  VpcSettings: \n    VpcSettings\n","awsServiceName":"DirectoryService","awsServiceCategory":"other"},{"awsResourceType":"AWS::DirectoryService::SimpleAD","awsResourceTypeName":"directoryservice-simplead","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DirectoryService::SimpleAD\",\n  \"Properties\" : {\n      \"CreateAlias\" : Boolean,\n      \"Description\" : String,\n      \"EnableSso\" : Boolean,\n      \"Name\" : String,\n      \"Password\" : String,\n      \"ShortName\" : String,\n      \"Size\" : String,\n      \"VpcSettings\" : VpcSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DirectoryService::SimpleAD\nProperties:\n  CreateAlias: Boolean\n  Description: String\n  EnableSso: Boolean\n  Name: String\n  Password: String\n  ShortName: String\n  Size: String\n  VpcSettings: \n    VpcSettings\n","awsServiceName":"DirectoryService","awsServiceCategory":"other"},{"awsResourceType":"AWS::DMS::Certificate","awsResourceTypeName":"dms-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::Certificate\",\n  \"Properties\" : {\n      \"CertificateIdentifier\" : String,\n      \"CertificatePem\" : String,\n      \"CertificateWallet\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::Certificate\nProperties:\n  CertificateIdentifier: String\n  CertificatePem: String\n  CertificateWallet: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::DataProvider","awsResourceTypeName":"dms-dataprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::DataProvider\",\n  \"Properties\" : {\n      \"DataProviderIdentifier\" : String,\n      \"DataProviderName\" : String,\n      \"Description\" : String,\n      \"Engine\" : String,\n      \"ExactSettings\" : Boolean,\n      \"Settings\" : Settings,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::DataProvider\nProperties:\n  DataProviderIdentifier: String\n  DataProviderName: String\n  Description: String\n  Engine: String\n  ExactSettings: Boolean\n  Settings: \n    Settings\n  Tags: \n    - Tag\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::Endpoint","awsResourceTypeName":"dms-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::Endpoint\",\n  \"Properties\" : {\n      \"CertificateArn\" : String,\n      \"DatabaseName\" : String,\n      \"DocDbSettings\" : DocDbSettings,\n      \"DynamoDbSettings\" : DynamoDbSettings,\n      \"ElasticsearchSettings\" : ElasticsearchSettings,\n      \"EndpointIdentifier\" : String,\n      \"EndpointType\" : String,\n      \"EngineName\" : String,\n      \"ExtraConnectionAttributes\" : String,\n      \"GcpMySQLSettings\" : GcpMySQLSettings,\n      \"IbmDb2Settings\" : IbmDb2Settings,\n      \"KafkaSettings\" : KafkaSettings,\n      \"KinesisSettings\" : KinesisSettings,\n      \"KmsKeyId\" : String,\n      \"MicrosoftSqlServerSettings\" : MicrosoftSqlServerSettings,\n      \"MongoDbSettings\" : MongoDbSettings,\n      \"MySqlSettings\" : MySqlSettings,\n      \"NeptuneSettings\" : NeptuneSettings,\n      \"OracleSettings\" : OracleSettings,\n      \"Password\" : String,\n      \"Port\" : Integer,\n      \"PostgreSqlSettings\" : PostgreSqlSettings,\n      \"RedisSettings\" : RedisSettings,\n      \"RedshiftSettings\" : RedshiftSettings,\n      \"ResourceIdentifier\" : String,\n      \"S3Settings\" : S3Settings,\n      \"ServerName\" : String,\n      \"SslMode\" : String,\n      \"SybaseSettings\" : SybaseSettings,\n      \"Tags\" : [ Tag, ... ],\n      \"Username\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::Endpoint\nProperties:\n  CertificateArn: String\n  DatabaseName: String\n  DocDbSettings: \n    DocDbSettings\n  DynamoDbSettings: \n    DynamoDbSettings\n  ElasticsearchSettings: \n    ElasticsearchSettings\n  EndpointIdentifier: String\n  EndpointType: String\n  EngineName: String\n  ExtraConnectionAttributes: String\n  GcpMySQLSettings: \n    GcpMySQLSettings\n  IbmDb2Settings: \n    IbmDb2Settings\n  KafkaSettings: \n    KafkaSettings\n  KinesisSettings: \n    KinesisSettings\n  KmsKeyId: String\n  MicrosoftSqlServerSettings: \n    MicrosoftSqlServerSettings\n  MongoDbSettings: \n    MongoDbSettings\n  MySqlSettings: \n    MySqlSettings\n  NeptuneSettings: \n    NeptuneSettings\n  OracleSettings: \n    OracleSettings\n  Password: String\n  Port: Integer\n  PostgreSqlSettings: \n    PostgreSqlSettings\n  RedisSettings: \n    RedisSettings\n  RedshiftSettings: \n    RedshiftSettings\n  ResourceIdentifier: String\n  S3Settings: \n    S3Settings\n  ServerName: String\n  SslMode: String\n  SybaseSettings: \n    SybaseSettings\n  Tags: \n    - Tag\n  Username: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::EventSubscription","awsResourceTypeName":"dms-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n  Tags: \n    - Tag\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::InstanceProfile","awsResourceTypeName":"dms-instanceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::InstanceProfile\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"Description\" : String,\n      \"InstanceProfileIdentifier\" : String,\n      \"InstanceProfileName\" : String,\n      \"KmsKeyArn\" : String,\n      \"NetworkType\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"SubnetGroupIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroups\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::InstanceProfile\nProperties:\n  AvailabilityZone: String\n  Description: String\n  InstanceProfileIdentifier: String\n  InstanceProfileName: String\n  KmsKeyArn: String\n  NetworkType: String\n  PubliclyAccessible: Boolean\n  SubnetGroupIdentifier: String\n  Tags: \n    - Tag\n  VpcSecurityGroups: \n    - String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::MigrationProject","awsResourceTypeName":"dms-migrationproject","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::MigrationProject\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceProfileArn\" : String,\n      \"InstanceProfileIdentifier\" : String,\n      \"InstanceProfileName\" : String,\n      \"MigrationProjectIdentifier\" : String,\n      \"MigrationProjectName\" : String,\n      \"SchemaConversionApplicationAttributes\" : SchemaConversionApplicationAttributes,\n      \"SourceDataProviderDescriptors\" : [ DataProviderDescriptor, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetDataProviderDescriptors\" : [ DataProviderDescriptor, ... ],\n      \"TransformationRules\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::MigrationProject\nProperties:\n  Description: String\n  InstanceProfileArn: String\n  InstanceProfileIdentifier: String\n  InstanceProfileName: String\n  MigrationProjectIdentifier: String\n  MigrationProjectName: String\n  SchemaConversionApplicationAttributes: \n    SchemaConversionApplicationAttributes\n  SourceDataProviderDescriptors: \n    - DataProviderDescriptor\n  Tags: \n    - Tag\n  TargetDataProviderDescriptors: \n    - DataProviderDescriptor\n  TransformationRules: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationConfig","awsResourceTypeName":"dms-replicationconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationConfig\",\n  \"Properties\" : {\n      \"ComputeConfig\" : ComputeConfig,\n      \"ReplicationConfigArn\" : String,\n      \"ReplicationConfigIdentifier\" : String,\n      \"ReplicationSettings\" : Json,\n      \"ReplicationType\" : String,\n      \"ResourceIdentifier\" : String,\n      \"SourceEndpointArn\" : String,\n      \"SupplementalSettings\" : Json,\n      \"TableMappings\" : Json,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetEndpointArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationConfig\nProperties:\n  ComputeConfig: \n    ComputeConfig\n  ReplicationConfigArn: String\n  ReplicationConfigIdentifier: String\n  ReplicationSettings: Json\n  ReplicationType: String\n  ResourceIdentifier: String\n  SourceEndpointArn: String\n  SupplementalSettings: Json\n  TableMappings: Json\n  Tags: \n    - Tag\n  TargetEndpointArn: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationInstance","awsResourceTypeName":"dms-replicationinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationInstance\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : Integer,\n      \"AllowMajorVersionUpgrade\" : Boolean,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"EngineVersion\" : String,\n      \"KmsKeyId\" : String,\n      \"MultiAZ\" : Boolean,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"ReplicationInstanceClass\" : String,\n      \"ReplicationInstanceIdentifier\" : String,\n      \"ReplicationSubnetGroupIdentifier\" : String,\n      \"ResourceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationInstance\nProperties:\n  AllocatedStorage: Integer\n  AllowMajorVersionUpgrade: Boolean\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  EngineVersion: String\n  KmsKeyId: String\n  MultiAZ: Boolean\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  ReplicationInstanceClass: String\n  ReplicationInstanceIdentifier: String\n  ReplicationSubnetGroupIdentifier: String\n  ResourceIdentifier: String\n  Tags: \n    - Tag\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationSubnetGroup","awsResourceTypeName":"dms-replicationsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationSubnetGroup\",\n  \"Properties\" : {\n      \"ReplicationSubnetGroupDescription\" : String,\n      \"ReplicationSubnetGroupIdentifier\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationSubnetGroup\nProperties:\n  ReplicationSubnetGroupDescription: String\n  ReplicationSubnetGroupIdentifier: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationTask","awsResourceTypeName":"dms-replicationtask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationTask\",\n  \"Properties\" : {\n      \"CdcStartPosition\" : String,\n      \"CdcStartTime\" : Number,\n      \"CdcStopPosition\" : String,\n      \"MigrationType\" : String,\n      \"ReplicationInstanceArn\" : String,\n      \"ReplicationTaskIdentifier\" : String,\n      \"ReplicationTaskSettings\" : String,\n      \"ResourceIdentifier\" : String,\n      \"SourceEndpointArn\" : String,\n      \"TableMappings\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetEndpointArn\" : String,\n      \"TaskData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationTask\nProperties:\n  CdcStartPosition: String\n  CdcStartTime: Number\n  CdcStopPosition: String\n  MigrationType: String\n  ReplicationInstanceArn: String\n  ReplicationTaskIdentifier: String\n  ReplicationTaskSettings: String\n  ResourceIdentifier: String\n  SourceEndpointArn: String\n  TableMappings: String\n  Tags: \n    - Tag\n  TargetEndpointArn: String\n  TaskData: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DocDB::DBCluster","awsResourceTypeName":"docdb-dbcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBCluster\",\n  \"Properties\" : {\n      \"AvailabilityZones\" : [ String, ... ],\n      \"BackupRetentionPeriod\" : Integer,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterParameterGroupName\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"DeletionProtection\" : Boolean,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EngineVersion\" : String,\n      \"KmsKeyId\" : String,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"Port\" : Integer,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"RestoreToTime\" : String,\n      \"RestoreType\" : String,\n      \"SnapshotIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"StorageType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBCluster\nProperties:\n  AvailabilityZones: \n    - String\n  BackupRetentionPeriod: Integer\n  CopyTagsToSnapshot: Boolean\n  DBClusterIdentifier: String\n  DBClusterParameterGroupName: String\n  DBSubnetGroupName: String\n  DeletionProtection: Boolean\n  EnableCloudwatchLogsExports: \n    - String\n  EngineVersion: String\n  KmsKeyId: String\n  MasterUsername: String\n  MasterUserPassword: String\n  Port: Integer\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  RestoreToTime: String\n  RestoreType: String\n  SnapshotIdentifier: String\n  SourceDBClusterIdentifier: String\n  StorageEncrypted: Boolean\n  StorageType: String\n  Tags: \n    - Tag\n  UseLatestRestorableTime: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::DBClusterParameterGroup","awsResourceTypeName":"docdb-dbclusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBClusterParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Name\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBClusterParameterGroup\nProperties:\n  Description: String\n  Family: String\n  Name: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::DBInstance","awsResourceTypeName":"docdb-dbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBInstance\",\n  \"Properties\" : {\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"CACertificateIdentifier\" : String,\n      \"CertificateRotationRestart\" : Boolean,\n      \"DBClusterIdentifier\" : String,\n      \"DBInstanceClass\" : String,\n      \"DBInstanceIdentifier\" : String,\n      \"EnablePerformanceInsights\" : Boolean,\n      \"PreferredMaintenanceWindow\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBInstance\nProperties:\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  CACertificateIdentifier: String\n  CertificateRotationRestart: Boolean\n  DBClusterIdentifier: String\n  DBInstanceClass: String\n  DBInstanceIdentifier: String\n  EnablePerformanceInsights: Boolean\n  PreferredMaintenanceWindow: String\n  Tags: \n    - Tag\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::DBSubnetGroup","awsResourceTypeName":"docdb-dbsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBSubnetGroup\",\n  \"Properties\" : {\n      \"DBSubnetGroupDescription\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBSubnetGroup\nProperties:\n  DBSubnetGroupDescription: String\n  DBSubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::EventSubscription","awsResourceTypeName":"docdb-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDBElastic::Cluster","awsResourceTypeName":"docdbelastic-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDBElastic::Cluster\",\n  \"Properties\" : {\n      \"AdminUserName\" : String,\n      \"AdminUserPassword\" : String,\n      \"AuthType\" : String,\n      \"BackupRetentionPeriod\" : Integer,\n      \"ClusterName\" : String,\n      \"KmsKeyId\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"ShardCapacity\" : Integer,\n      \"ShardCount\" : Integer,\n      \"ShardInstanceCount\" : Integer,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDBElastic::Cluster\nProperties:\n  AdminUserName: String\n  AdminUserPassword: String\n  AuthType: String\n  BackupRetentionPeriod: Integer\n  ClusterName: String\n  KmsKeyId: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  ShardCapacity: Integer\n  ShardCount: Integer\n  ShardInstanceCount: Integer\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"DocDBElastic","awsServiceCategory":"database"},{"awsResourceType":"AWS::DynamoDB::GlobalTable","awsResourceTypeName":"dynamodb-globaltable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DynamoDB::GlobalTable\",\n  \"Properties\" : {\n      \"AttributeDefinitions\" : [ AttributeDefinition, ... ],\n      \"BillingMode\" : String,\n      \"GlobalSecondaryIndexes\" : [ GlobalSecondaryIndex, ... ],\n      \"KeySchema\" : [ KeySchema, ... ],\n      \"LocalSecondaryIndexes\" : [ LocalSecondaryIndex, ... ],\n      \"Replicas\" : [ ReplicaSpecification, ... ],\n      \"SSESpecification\" : SSESpecification,\n      \"StreamSpecification\" : StreamSpecification,\n      \"TableName\" : String,\n      \"TimeToLiveSpecification\" : TimeToLiveSpecification,\n      \"WriteProvisionedThroughputSettings\" : WriteProvisionedThroughputSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DynamoDB::GlobalTable\nProperties:\n  AttributeDefinitions: \n    - AttributeDefinition\n  BillingMode: String\n  GlobalSecondaryIndexes: \n    - GlobalSecondaryIndex\n  KeySchema: \n    - KeySchema\n  LocalSecondaryIndexes: \n    - LocalSecondaryIndex\n  Replicas: \n    - ReplicaSpecification\n  SSESpecification: \n    SSESpecification\n  StreamSpecification: \n    StreamSpecification\n  TableName: String\n  TimeToLiveSpecification: \n    TimeToLiveSpecification\n  WriteProvisionedThroughputSettings: \n    WriteProvisionedThroughputSettings\n","awsServiceName":"DynamoDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DynamoDB::Table","awsResourceTypeName":"dynamodb-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DynamoDB::Table\",\n  \"Properties\" : {\n      \"AttributeDefinitions\" : [ AttributeDefinition, ... ],\n      \"BillingMode\" : String,\n      \"ContributorInsightsSpecification\" : ContributorInsightsSpecification,\n      \"DeletionProtectionEnabled\" : Boolean,\n      \"GlobalSecondaryIndexes\" : [ GlobalSecondaryIndex, ... ],\n      \"ImportSourceSpecification\" : ImportSourceSpecification,\n      \"KeySchema\" : [ KeySchema, ... ],\n      \"KinesisStreamSpecification\" : KinesisStreamSpecification,\n      \"LocalSecondaryIndexes\" : [ LocalSecondaryIndex, ... ],\n      \"PointInTimeRecoverySpecification\" : PointInTimeRecoverySpecification,\n      \"ProvisionedThroughput\" : ProvisionedThroughput,\n      \"ResourcePolicy\" : ResourcePolicy,\n      \"SSESpecification\" : SSESpecification,\n      \"StreamSpecification\" : StreamSpecification,\n      \"TableClass\" : String,\n      \"TableName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeToLiveSpecification\" : TimeToLiveSpecification\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DynamoDB::Table\nProperties:\n  AttributeDefinitions: \n    - AttributeDefinition\n  BillingMode: String\n  ContributorInsightsSpecification: \n    ContributorInsightsSpecification\n  DeletionProtectionEnabled: Boolean\n  GlobalSecondaryIndexes: \n    - GlobalSecondaryIndex\n  ImportSourceSpecification: \n    ImportSourceSpecification\n  KeySchema: \n    - KeySchema\n  KinesisStreamSpecification: \n    KinesisStreamSpecification\n  LocalSecondaryIndexes: \n    - LocalSecondaryIndex\n  PointInTimeRecoverySpecification: \n    PointInTimeRecoverySpecification\n  ProvisionedThroughput: \n    ProvisionedThroughput\n  ResourcePolicy: \n    ResourcePolicy\n  SSESpecification: \n    SSESpecification\n  StreamSpecification: \n    StreamSpecification\n  TableClass: String\n  TableName: String\n  Tags: \n    - Tag\n  TimeToLiveSpecification: \n    TimeToLiveSpecification\n","awsServiceName":"DynamoDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::EC2::CapacityReservation","awsResourceTypeName":"ec2-capacityreservation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CapacityReservation\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"EbsOptimized\" : Boolean,\n      \"EndDate\" : String,\n      \"EndDateType\" : String,\n      \"EphemeralStorage\" : Boolean,\n      \"InstanceCount\" : Integer,\n      \"InstanceMatchCriteria\" : String,\n      \"InstancePlatform\" : String,\n      \"InstanceType\" : String,\n      \"OutPostArn\" : String,\n      \"PlacementGroupArn\" : String,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"Tenancy\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CapacityReservation\nProperties:\n  AvailabilityZone: String\n  EbsOptimized: Boolean\n  EndDate: String\n  EndDateType: String\n  EphemeralStorage: Boolean\n  InstanceCount: Integer\n  InstanceMatchCriteria: String\n  InstancePlatform: String\n  InstanceType: String\n  OutPostArn: String\n  PlacementGroupArn: String\n  TagSpecifications: \n    - TagSpecification\n  Tenancy: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::CapacityReservationFleet","awsResourceTypeName":"ec2-capacityreservationfleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CapacityReservationFleet\",\n  \"Properties\" : {\n      \"AllocationStrategy\" : String,\n      \"EndDate\" : String,\n      \"InstanceMatchCriteria\" : String,\n      \"InstanceTypeSpecifications\" : [ InstanceTypeSpecification, ... ],\n      \"NoRemoveEndDate\" : Boolean,\n      \"RemoveEndDate\" : Boolean,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"Tenancy\" : String,\n      \"TotalTargetCapacity\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CapacityReservationFleet\nProperties:\n  AllocationStrategy: String\n  EndDate: String\n  InstanceMatchCriteria: String\n  InstanceTypeSpecifications: \n    - InstanceTypeSpecification\n  NoRemoveEndDate: Boolean\n  RemoveEndDate: Boolean\n  TagSpecifications: \n    - TagSpecification\n  Tenancy: String\n  TotalTargetCapacity: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::CarrierGateway","awsResourceTypeName":"ec2-carriergateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CarrierGateway\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CarrierGateway\nProperties:\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnAuthorizationRule","awsResourceTypeName":"ec2-clientvpnauthorizationrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnAuthorizationRule\",\n  \"Properties\" : {\n      \"AccessGroupId\" : String,\n      \"AuthorizeAllGroups\" : Boolean,\n      \"ClientVpnEndpointId\" : String,\n      \"Description\" : String,\n      \"TargetNetworkCidr\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnAuthorizationRule\nProperties:\n  AccessGroupId: String\n  AuthorizeAllGroups: Boolean\n  ClientVpnEndpointId: String\n  Description: String\n  TargetNetworkCidr: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnEndpoint","awsResourceTypeName":"ec2-clientvpnendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnEndpoint\",\n  \"Properties\" : {\n      \"AuthenticationOptions\" : [ ClientAuthenticationRequest, ... ],\n      \"ClientCidrBlock\" : String,\n      \"ClientConnectOptions\" : ClientConnectOptions,\n      \"ClientLoginBannerOptions\" : ClientLoginBannerOptions,\n      \"ConnectionLogOptions\" : ConnectionLogOptions,\n      \"Description\" : String,\n      \"DnsServers\" : [ String, ... ],\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SelfServicePortal\" : String,\n      \"ServerCertificateArn\" : String,\n      \"SessionTimeoutHours\" : Integer,\n      \"SplitTunnel\" : Boolean,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"TransportProtocol\" : String,\n      \"VpcId\" : String,\n      \"VpnPort\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnEndpoint\nProperties:\n  AuthenticationOptions: \n    - ClientAuthenticationRequest\n  ClientCidrBlock: String\n  ClientConnectOptions: \n    ClientConnectOptions\n  ClientLoginBannerOptions: \n    ClientLoginBannerOptions\n  ConnectionLogOptions: \n    ConnectionLogOptions\n  Description: String\n  DnsServers: \n    - String\n  SecurityGroupIds: \n    - String\n  SelfServicePortal: String\n  ServerCertificateArn: String\n  SessionTimeoutHours: Integer\n  SplitTunnel: Boolean\n  TagSpecifications: \n    - TagSpecification\n  TransportProtocol: String\n  VpcId: String\n  VpnPort: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnRoute","awsResourceTypeName":"ec2-clientvpnroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnRoute\",\n  \"Properties\" : {\n      \"ClientVpnEndpointId\" : String,\n      \"Description\" : String,\n      \"DestinationCidrBlock\" : String,\n      \"TargetVpcSubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnRoute\nProperties:\n  ClientVpnEndpointId: String\n  Description: String\n  DestinationCidrBlock: String\n  TargetVpcSubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnTargetNetworkAssociation","awsResourceTypeName":"ec2-clientvpntargetnetworkassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnTargetNetworkAssociation\",\n  \"Properties\" : {\n      \"ClientVpnEndpointId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnTargetNetworkAssociation\nProperties:\n  ClientVpnEndpointId: String\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::CustomerGateway","awsResourceTypeName":"ec2-customergateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CustomerGateway\",\n  \"Properties\" : {\n      \"BgpAsn\" : Integer,\n      \"BgpAsnExtended\" : Number,\n      \"CertificateArn\" : String,\n      \"DeviceName\" : String,\n      \"IpAddress\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CustomerGateway\nProperties:\n  BgpAsn: Integer\n  BgpAsnExtended: Number\n  CertificateArn: String\n  DeviceName: String\n  IpAddress: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::DHCPOptions","awsResourceTypeName":"ec2-dhcpoptions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::DHCPOptions\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"DomainNameServers\" : [ String, ... ],\n      \"Ipv6AddressPreferredLeaseTime\" : Integer,\n      \"NetbiosNameServers\" : [ String, ... ],\n      \"NetbiosNodeType\" : Integer,\n      \"NtpServers\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::DHCPOptions\nProperties:\n  DomainName: String\n  DomainNameServers: \n    - String\n  Ipv6AddressPreferredLeaseTime: Integer\n  NetbiosNameServers: \n    - String\n  NetbiosNodeType: Integer\n  NtpServers: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EC2Fleet","awsResourceTypeName":"ec2-ec2fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EC2Fleet\",\n  \"Properties\" : {\n      \"Context\" : String,\n      \"ExcessCapacityTerminationPolicy\" : String,\n      \"LaunchTemplateConfigs\" : [ FleetLaunchTemplateConfigRequest, ... ],\n      \"OnDemandOptions\" : OnDemandOptionsRequest,\n      \"ReplaceUnhealthyInstances\" : Boolean,\n      \"SpotOptions\" : SpotOptionsRequest,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"TargetCapacitySpecification\" : TargetCapacitySpecificationRequest,\n      \"TerminateInstancesWithExpiration\" : Boolean,\n      \"Type\" : String,\n      \"ValidFrom\" : String,\n      \"ValidUntil\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EC2Fleet\nProperties:\n  Context: String\n  ExcessCapacityTerminationPolicy: String\n  LaunchTemplateConfigs: \n    - FleetLaunchTemplateConfigRequest\n  OnDemandOptions: \n    OnDemandOptionsRequest\n  ReplaceUnhealthyInstances: Boolean\n  SpotOptions: \n    SpotOptionsRequest\n  TagSpecifications: \n    - TagSpecification\n  TargetCapacitySpecification: \n    TargetCapacitySpecificationRequest\n  TerminateInstancesWithExpiration: Boolean\n  Type: String\n  ValidFrom: String\n  ValidUntil: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EgressOnlyInternetGateway","awsResourceTypeName":"ec2-egressonlyinternetgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EgressOnlyInternetGateway\",\n  \"Properties\" : {\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EgressOnlyInternetGateway\nProperties:\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EIP","awsResourceTypeName":"ec2-eip","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EIP\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"InstanceId\" : String,\n      \"NetworkBorderGroup\" : String,\n      \"PublicIpv4Pool\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransferAddress\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EIP\nProperties:\n  Domain: String\n  InstanceId: String\n  NetworkBorderGroup: String\n  PublicIpv4Pool: String\n  Tags: \n    - Tag\n  TransferAddress: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EIPAssociation","awsResourceTypeName":"ec2-eipassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EIPAssociation\",\n  \"Properties\" : {\n      \"AllocationId\" : String,\n      \"InstanceId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"PrivateIpAddress\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EIPAssociation\nProperties:\n  AllocationId: String\n  InstanceId: String\n  NetworkInterfaceId: String\n  PrivateIpAddress: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EnclaveCertificateIamRoleAssociation","awsResourceTypeName":"ec2-enclavecertificateiamroleassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EnclaveCertificateIamRoleAssociation\",\n  \"Properties\" : {\n      \"CertificateArn\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EnclaveCertificateIamRoleAssociation\nProperties:\n  CertificateArn: String\n  RoleArn: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::FlowLog","awsResourceTypeName":"ec2-flowlog","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::FlowLog\",\n  \"Properties\" : {\n      \"DeliverCrossAccountRole\" : String,\n      \"DeliverLogsPermissionArn\" : String,\n      \"DestinationOptions\" : DestinationOptions,\n      \"LogDestination\" : String,\n      \"LogDestinationType\" : String,\n      \"LogFormat\" : String,\n      \"LogGroupName\" : String,\n      \"MaxAggregationInterval\" : Integer,\n      \"ResourceId\" : String,\n      \"ResourceType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrafficType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::FlowLog\nProperties:\n  DeliverCrossAccountRole: String\n  DeliverLogsPermissionArn: String\n  DestinationOptions: \n    DestinationOptions\n  LogDestination: String\n  LogDestinationType: String\n  LogFormat: String\n  LogGroupName: String\n  MaxAggregationInterval: Integer\n  ResourceId: String\n  ResourceType: String\n  Tags: \n    - Tag\n  TrafficType: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::GatewayRouteTableAssociation","awsResourceTypeName":"ec2-gatewayroutetableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::GatewayRouteTableAssociation\",\n  \"Properties\" : {\n      \"GatewayId\" : String,\n      \"RouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::GatewayRouteTableAssociation\nProperties:\n  GatewayId: String\n  RouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Host","awsResourceTypeName":"ec2-host","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Host\",\n  \"Properties\" : {\n      \"AssetId\" : String,\n      \"AutoPlacement\" : String,\n      \"AvailabilityZone\" : String,\n      \"HostMaintenance\" : String,\n      \"HostRecovery\" : String,\n      \"InstanceFamily\" : String,\n      \"InstanceType\" : String,\n      \"OutpostArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Host\nProperties:\n  AssetId: String\n  AutoPlacement: String\n  AvailabilityZone: String\n  HostMaintenance: String\n  HostRecovery: String\n  InstanceFamily: String\n  InstanceType: String\n  OutpostArn: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Instance","awsResourceTypeName":"ec2-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Instance\",\n  \"Properties\" : {\n      \"AdditionalInfo\" : String,\n      \"Affinity\" : String,\n      \"AvailabilityZone\" : String,\n      \"BlockDeviceMappings\" : [ BlockDeviceMapping, ... ],\n      \"CpuOptions\" : CpuOptions,\n      \"CreditSpecification\" : CreditSpecification,\n      \"DisableApiTermination\" : Boolean,\n      \"EbsOptimized\" : Boolean,\n      \"ElasticGpuSpecifications\" : [ ElasticGpuSpecification, ... ],\n      \"ElasticInferenceAccelerators\" : [ ElasticInferenceAccelerator, ... ],\n      \"EnclaveOptions\" : EnclaveOptions,\n      \"HibernationOptions\" : HibernationOptions,\n      \"HostId\" : String,\n      \"HostResourceGroupArn\" : String,\n      \"IamInstanceProfile\" : String,\n      \"ImageId\" : String,\n      \"InstanceInitiatedShutdownBehavior\" : String,\n      \"InstanceType\" : String,\n      \"Ipv6AddressCount\" : Integer,\n      \"Ipv6Addresses\" : [ InstanceIpv6Address, ... ],\n      \"KernelId\" : String,\n      \"KeyName\" : String,\n      \"LaunchTemplate\" : LaunchTemplateSpecification,\n      \"LicenseSpecifications\" : [ LicenseSpecification, ... ],\n      \"Monitoring\" : Boolean,\n      \"NetworkInterfaces\" : [ NetworkInterface, ... ],\n      \"PlacementGroupName\" : String,\n      \"PrivateDnsNameOptions\" : PrivateDnsNameOptions,\n      \"PrivateIpAddress\" : String,\n      \"PropagateTagsToVolumeOnCreation\" : Boolean,\n      \"RamdiskId\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SecurityGroups\" : [ String, ... ],\n      \"SourceDestCheck\" : Boolean,\n      \"SsmAssociations\" : [ SsmAssociation, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Tenancy\" : String,\n      \"UserData\" : String,\n      \"Volumes\" : [ Volume, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Instance\nProperties:\n  AdditionalInfo: String\n  Affinity: String\n  AvailabilityZone: String\n  BlockDeviceMappings: \n    - BlockDeviceMapping\n  CpuOptions: \n    CpuOptions\n  CreditSpecification: \n    CreditSpecification\n  DisableApiTermination: Boolean\n  EbsOptimized: Boolean\n  ElasticGpuSpecifications: \n    - ElasticGpuSpecification\n  ElasticInferenceAccelerators: \n    - ElasticInferenceAccelerator\n  EnclaveOptions: \n    EnclaveOptions\n  HibernationOptions: \n    HibernationOptions\n  HostId: String\n  HostResourceGroupArn: String\n  IamInstanceProfile: String\n  ImageId: String\n  InstanceInitiatedShutdownBehavior: String\n  InstanceType: String\n  Ipv6AddressCount: Integer\n  Ipv6Addresses: \n    - InstanceIpv6Address\n  KernelId: String\n  KeyName: String\n  LaunchTemplate: \n    LaunchTemplateSpecification\n  LicenseSpecifications: \n    - LicenseSpecification\n  Monitoring: Boolean\n  NetworkInterfaces: \n    - NetworkInterface\n  PlacementGroupName: String\n  PrivateDnsNameOptions: \n    PrivateDnsNameOptions\n  PrivateIpAddress: String\n  PropagateTagsToVolumeOnCreation: Boolean\n  RamdiskId: String\n  SecurityGroupIds: \n    - String\n  SecurityGroups: \n    - String\n  SourceDestCheck: Boolean\n  SsmAssociations: \n    - SsmAssociation\n  SubnetId: String\n  Tags: \n    - Tag\n  Tenancy: String\n  UserData: String\n  Volumes: \n    - Volume\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::InstanceConnectEndpoint","awsResourceTypeName":"ec2-instanceconnectendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::InstanceConnectEndpoint\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"PreserveClientIp\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::InstanceConnectEndpoint\nProperties:\n  ClientToken: String\n  PreserveClientIp: Boolean\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::InternetGateway","awsResourceTypeName":"ec2-internetgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::InternetGateway\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::InternetGateway\nProperties:\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAM","awsResourceTypeName":"ec2-ipam","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAM\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"OperatingRegions\" : [ IpamOperatingRegion, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Tier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAM\nProperties:\n  Description: String\n  OperatingRegions: \n    - IpamOperatingRegion\n  Tags: \n    - Tag\n  Tier: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMAllocation","awsResourceTypeName":"ec2-ipamallocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMAllocation\",\n  \"Properties\" : {\n      \"Cidr\" : String,\n      \"Description\" : String,\n      \"IpamPoolId\" : String,\n      \"NetmaskLength\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMAllocation\nProperties:\n  Cidr: String\n  Description: String\n  IpamPoolId: String\n  NetmaskLength: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMPool","awsResourceTypeName":"ec2-ipampool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMPool\",\n  \"Properties\" : {\n      \"AddressFamily\" : String,\n      \"AllocationDefaultNetmaskLength\" : Integer,\n      \"AllocationMaxNetmaskLength\" : Integer,\n      \"AllocationMinNetmaskLength\" : Integer,\n      \"AllocationResourceTags\" : [ Tag, ... ],\n      \"AutoImport\" : Boolean,\n      \"AwsService\" : String,\n      \"Description\" : String,\n      \"IpamScopeId\" : String,\n      \"Locale\" : String,\n      \"ProvisionedCidrs\" : [ ProvisionedCidr, ... ],\n      \"PublicIpSource\" : String,\n      \"PubliclyAdvertisable\" : Boolean,\n      \"SourceIpamPoolId\" : String,\n      \"SourceResource\" : SourceResource,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMPool\nProperties:\n  AddressFamily: String\n  AllocationDefaultNetmaskLength: Integer\n  AllocationMaxNetmaskLength: Integer\n  AllocationMinNetmaskLength: Integer\n  AllocationResourceTags: \n    - Tag\n  AutoImport: Boolean\n  AwsService: String\n  Description: String\n  IpamScopeId: String\n  Locale: String\n  ProvisionedCidrs: \n    - ProvisionedCidr\n  PublicIpSource: String\n  PubliclyAdvertisable: Boolean\n  SourceIpamPoolId: String\n  SourceResource: \n    SourceResource\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMPoolCidr","awsResourceTypeName":"ec2-ipampoolcidr","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMPoolCidr\",\n  \"Properties\" : {\n      \"Cidr\" : String,\n      \"IpamPoolId\" : String,\n      \"NetmaskLength\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMPoolCidr\nProperties:\n  Cidr: String\n  IpamPoolId: String\n  NetmaskLength: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMResourceDiscovery","awsResourceTypeName":"ec2-ipamresourcediscovery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMResourceDiscovery\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"OperatingRegions\" : [ IpamOperatingRegion, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMResourceDiscovery\nProperties:\n  Description: String\n  OperatingRegions: \n    - IpamOperatingRegion\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMResourceDiscoveryAssociation","awsResourceTypeName":"ec2-ipamresourcediscoveryassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMResourceDiscoveryAssociation\",\n  \"Properties\" : {\n      \"IpamId\" : String,\n      \"IpamResourceDiscoveryId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMResourceDiscoveryAssociation\nProperties:\n  IpamId: String\n  IpamResourceDiscoveryId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMScope","awsResourceTypeName":"ec2-ipamscope","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMScope\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IpamId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMScope\nProperties:\n  Description: String\n  IpamId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::KeyPair","awsResourceTypeName":"ec2-keypair","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::KeyPair\",\n  \"Properties\" : {\n      \"KeyFormat\" : String,\n      \"KeyName\" : String,\n      \"KeyType\" : String,\n      \"PublicKeyMaterial\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::KeyPair\nProperties:\n  KeyFormat: String\n  KeyName: String\n  KeyType: String\n  PublicKeyMaterial: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LaunchTemplate","awsResourceTypeName":"ec2-launchtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LaunchTemplate\",\n  \"Properties\" : {\n      \"LaunchTemplateData\" : LaunchTemplateData,\n      \"LaunchTemplateName\" : String,\n      \"TagSpecifications\" : [ LaunchTemplateTagSpecification, ... ],\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LaunchTemplate\nProperties:\n  LaunchTemplateData: \n    LaunchTemplateData\n  LaunchTemplateName: String\n  TagSpecifications: \n    - LaunchTemplateTagSpecification\n  VersionDescription: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRoute","awsResourceTypeName":"ec2-localgatewayroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRoute\",\n  \"Properties\" : {\n      \"DestinationCidrBlock\" : String,\n      \"LocalGatewayRouteTableId\" : String,\n      \"LocalGatewayVirtualInterfaceGroupId\" : String,\n      \"NetworkInterfaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRoute\nProperties:\n  DestinationCidrBlock: String\n  LocalGatewayRouteTableId: String\n  LocalGatewayVirtualInterfaceGroupId: String\n  NetworkInterfaceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRouteTable","awsResourceTypeName":"ec2-localgatewayroutetable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRouteTable\",\n  \"Properties\" : {\n      \"LocalGatewayId\" : String,\n      \"Mode\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRouteTable\nProperties:\n  LocalGatewayId: String\n  Mode: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation","awsResourceTypeName":"ec2-localgatewayroutetablevirtualinterfacegroupassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation\",\n  \"Properties\" : {\n      \"LocalGatewayRouteTableId\" : String,\n      \"LocalGatewayVirtualInterfaceGroupId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation\nProperties:\n  LocalGatewayRouteTableId: String\n  LocalGatewayVirtualInterfaceGroupId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRouteTableVPCAssociation","awsResourceTypeName":"ec2-localgatewayroutetablevpcassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRouteTableVPCAssociation\",\n  \"Properties\" : {\n      \"LocalGatewayRouteTableId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRouteTableVPCAssociation\nProperties:\n  LocalGatewayRouteTableId: String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NatGateway","awsResourceTypeName":"ec2-natgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NatGateway\",\n  \"Properties\" : {\n      \"AllocationId\" : String,\n      \"ConnectivityType\" : String,\n      \"MaxDrainDurationSeconds\" : Integer,\n      \"PrivateIpAddress\" : String,\n      \"SecondaryAllocationIds\" : [ String, ... ],\n      \"SecondaryPrivateIpAddressCount\" : Integer,\n      \"SecondaryPrivateIpAddresses\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NatGateway\nProperties:\n  AllocationId: String\n  ConnectivityType: String\n  MaxDrainDurationSeconds: Integer\n  PrivateIpAddress: String\n  SecondaryAllocationIds: \n    - String\n  SecondaryPrivateIpAddressCount: Integer\n  SecondaryPrivateIpAddresses: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkAcl","awsResourceTypeName":"ec2-networkacl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkAcl\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkAcl\nProperties:\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkAclEntry","awsResourceTypeName":"ec2-networkaclentry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n  \"Properties\" : {\n      \"CidrBlock\" : String,\n      \"Egress\" : Boolean,\n      \"Icmp\" : Icmp,\n      \"Ipv6CidrBlock\" : String,\n      \"NetworkAclId\" : String,\n      \"PortRange\" : PortRange,\n      \"Protocol\" : Integer,\n      \"RuleAction\" : String,\n      \"RuleNumber\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkAclEntry\nProperties:\n  CidrBlock: String\n  Egress: Boolean\n  Icmp: \n    Icmp\n  Ipv6CidrBlock: String\n  NetworkAclId: String\n  PortRange: \n    PortRange\n  Protocol: Integer\n  RuleAction: String\n  RuleNumber: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsAccessScope","awsResourceTypeName":"ec2-networkinsightsaccessscope","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsAccessScope\",\n  \"Properties\" : {\n      \"ExcludePaths\" : [ AccessScopePathRequest, ... ],\n      \"MatchPaths\" : [ AccessScopePathRequest, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsAccessScope\nProperties:\n  ExcludePaths: \n    - AccessScopePathRequest\n  MatchPaths: \n    - AccessScopePathRequest\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsAccessScopeAnalysis","awsResourceTypeName":"ec2-networkinsightsaccessscopeanalysis","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsAccessScopeAnalysis\",\n  \"Properties\" : {\n      \"NetworkInsightsAccessScopeId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsAccessScopeAnalysis\nProperties:\n  NetworkInsightsAccessScopeId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsAnalysis","awsResourceTypeName":"ec2-networkinsightsanalysis","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsAnalysis\",\n  \"Properties\" : {\n      \"AdditionalAccounts\" : [ String, ... ],\n      \"FilterInArns\" : [ String, ... ],\n      \"NetworkInsightsPathId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsAnalysis\nProperties:\n  AdditionalAccounts: \n    - String\n  FilterInArns: \n    - String\n  NetworkInsightsPathId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsPath","awsResourceTypeName":"ec2-networkinsightspath","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsPath\",\n  \"Properties\" : {\n      \"Destination\" : String,\n      \"DestinationIp\" : String,\n      \"DestinationPort\" : Integer,\n      \"FilterAtDestination\" : PathFilter,\n      \"FilterAtSource\" : PathFilter,\n      \"Protocol\" : String,\n      \"Source\" : String,\n      \"SourceIp\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsPath\nProperties:\n  Destination: String\n  DestinationIp: String\n  DestinationPort: Integer\n  FilterAtDestination: \n    PathFilter\n  FilterAtSource: \n    PathFilter\n  Protocol: String\n  Source: String\n  SourceIp: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInterface","awsResourceTypeName":"ec2-networkinterface","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInterface\",\n  \"Properties\" : {\n      \"ConnectionTrackingSpecification\" : ConnectionTrackingSpecification,\n      \"Description\" : String,\n      \"EnablePrimaryIpv6\" : Boolean,\n      \"GroupSet\" : [ String, ... ],\n      \"InterfaceType\" : String,\n      \"Ipv4PrefixCount\" : Integer,\n      \"Ipv4Prefixes\" : [ Ipv4PrefixSpecification, ... ],\n      \"Ipv6AddressCount\" : Integer,\n      \"Ipv6Addresses\" : [ InstanceIpv6Address, ... ],\n      \"Ipv6PrefixCount\" : Integer,\n      \"Ipv6Prefixes\" : [ Ipv6PrefixSpecification, ... ],\n      \"PrivateIpAddress\" : String,\n      \"PrivateIpAddresses\" : [ PrivateIpAddressSpecification, ... ],\n      \"SecondaryPrivateIpAddressCount\" : Integer,\n      \"SourceDestCheck\" : Boolean,\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInterface\nProperties:\n  ConnectionTrackingSpecification: \n    ConnectionTrackingSpecification\n  Description: String\n  EnablePrimaryIpv6: Boolean\n  GroupSet: \n    - String\n  InterfaceType: String\n  Ipv4PrefixCount: Integer\n  Ipv4Prefixes: \n    - Ipv4PrefixSpecification\n  Ipv6AddressCount: Integer\n  Ipv6Addresses: \n    - InstanceIpv6Address\n  Ipv6PrefixCount: Integer\n  Ipv6Prefixes: \n    - Ipv6PrefixSpecification\n  PrivateIpAddress: String\n  PrivateIpAddresses: \n    - PrivateIpAddressSpecification\n  SecondaryPrivateIpAddressCount: Integer\n  SourceDestCheck: Boolean\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInterfaceAttachment","awsResourceTypeName":"ec2-networkinterfaceattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInterfaceAttachment\",\n  \"Properties\" : {\n      \"DeleteOnTermination\" : Boolean,\n      \"DeviceIndex\" : String,\n      \"EnaSrdSpecification\" : EnaSrdSpecification,\n      \"InstanceId\" : String,\n      \"NetworkInterfaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInterfaceAttachment\nProperties:\n  DeleteOnTermination: Boolean\n  DeviceIndex: String\n  EnaSrdSpecification: \n    EnaSrdSpecification\n  InstanceId: String\n  NetworkInterfaceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInterfacePermission","awsResourceTypeName":"ec2-networkinterfacepermission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInterfacePermission\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"Permission\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInterfacePermission\nProperties:\n  AwsAccountId: String\n  NetworkInterfaceId: String\n  Permission: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkPerformanceMetricSubscription","awsResourceTypeName":"ec2-networkperformancemetricsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkPerformanceMetricSubscription\",\n  \"Properties\" : {\n      \"Destination\" : String,\n      \"Metric\" : String,\n      \"Source\" : String,\n      \"Statistic\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkPerformanceMetricSubscription\nProperties:\n  Destination: String\n  Metric: String\n  Source: String\n  Statistic: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::PlacementGroup","awsResourceTypeName":"ec2-placementgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::PlacementGroup\",\n  \"Properties\" : {\n      \"PartitionCount\" : Integer,\n      \"SpreadLevel\" : String,\n      \"Strategy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::PlacementGroup\nProperties:\n  PartitionCount: Integer\n  SpreadLevel: String\n  Strategy: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::PrefixList","awsResourceTypeName":"ec2-prefixlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::PrefixList\",\n  \"Properties\" : {\n      \"AddressFamily\" : String,\n      \"Entries\" : [ Entry, ... ],\n      \"MaxEntries\" : Integer,\n      \"PrefixListName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::PrefixList\nProperties:\n  AddressFamily: String\n  Entries: \n    - Entry\n  MaxEntries: Integer\n  PrefixListName: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Route","awsResourceTypeName":"ec2-route","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Route\",\n  \"Properties\" : {\n      \"CarrierGatewayId\" : String,\n      \"CoreNetworkArn\" : String,\n      \"DestinationCidrBlock\" : String,\n      \"DestinationIpv6CidrBlock\" : String,\n      \"DestinationPrefixListId\" : String,\n      \"EgressOnlyInternetGatewayId\" : String,\n      \"GatewayId\" : String,\n      \"InstanceId\" : String,\n      \"LocalGatewayId\" : String,\n      \"NatGatewayId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"RouteTableId\" : String,\n      \"TransitGatewayId\" : String,\n      \"VpcEndpointId\" : String,\n      \"VpcPeeringConnectionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Route\nProperties:\n  CarrierGatewayId: String\n  CoreNetworkArn: String\n  DestinationCidrBlock: String\n  DestinationIpv6CidrBlock: String\n  DestinationPrefixListId: String\n  EgressOnlyInternetGatewayId: String\n  GatewayId: String\n  InstanceId: String\n  LocalGatewayId: String\n  NatGatewayId: String\n  NetworkInterfaceId: String\n  RouteTableId: String\n  TransitGatewayId: String\n  VpcEndpointId: String\n  VpcPeeringConnectionId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::RouteTable","awsResourceTypeName":"ec2-routetable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::RouteTable\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::RouteTable\nProperties:\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SecurityGroup","awsResourceTypeName":"ec2-securitygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SecurityGroup\",\n  \"Properties\" : {\n      \"GroupDescription\" : String,\n      \"GroupName\" : String,\n      \"SecurityGroupEgress\" : [ Egress, ... ],\n      \"SecurityGroupIngress\" : [ Ingress, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SecurityGroup\nProperties:\n  GroupDescription: String\n  GroupName: String\n  SecurityGroupEgress: \n    - Egress\n  SecurityGroupIngress: \n    - Ingress\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SecurityGroupEgress","awsResourceTypeName":"ec2-securitygroupegress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SecurityGroupEgress\",\n  \"Properties\" : {\n      \"CidrIp\" : String,\n      \"CidrIpv6\" : String,\n      \"Description\" : String,\n      \"DestinationPrefixListId\" : String,\n      \"DestinationSecurityGroupId\" : String,\n      \"FromPort\" : Integer,\n      \"GroupId\" : String,\n      \"IpProtocol\" : String,\n      \"ToPort\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SecurityGroupEgress\nProperties:\n  CidrIp: String\n  CidrIpv6: String\n  Description: String\n  DestinationPrefixListId: String\n  DestinationSecurityGroupId: String\n  FromPort: Integer\n  GroupId: String\n  IpProtocol: String\n  ToPort: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SecurityGroupIngress","awsResourceTypeName":"ec2-securitygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n  \"Properties\" : {\n      \"CidrIp\" : String,\n      \"CidrIpv6\" : String,\n      \"Description\" : String,\n      \"FromPort\" : Integer,\n      \"GroupId\" : String,\n      \"GroupName\" : String,\n      \"IpProtocol\" : String,\n      \"SourcePrefixListId\" : String,\n      \"SourceSecurityGroupId\" : String,\n      \"SourceSecurityGroupName\" : String,\n      \"SourceSecurityGroupOwnerId\" : String,\n      \"ToPort\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SecurityGroupIngress\nProperties:\n  CidrIp: String\n  CidrIpv6: String\n  Description: String\n  FromPort: Integer\n  GroupId: String\n  GroupName: String\n  IpProtocol: String\n  SourcePrefixListId: String\n  SourceSecurityGroupId: String\n  SourceSecurityGroupName: String\n  SourceSecurityGroupOwnerId: String\n  ToPort: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SnapshotBlockPublicAccess","awsResourceTypeName":"ec2-snapshotblockpublicaccess","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SnapshotBlockPublicAccess\",\n  \"Properties\" : {\n      \"State\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SnapshotBlockPublicAccess\nProperties:\n  State: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SpotFleet","awsResourceTypeName":"ec2-spotfleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SpotFleet\",\n  \"Properties\" : {\n      \"SpotFleetRequestConfigData\" : SpotFleetRequestConfigData\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SpotFleet\nProperties:\n  SpotFleetRequestConfigData: \n    SpotFleetRequestConfigData\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Subnet","awsResourceTypeName":"ec2-subnet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Subnet\",\n  \"Properties\" : {\n      \"AssignIpv6AddressOnCreation\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"AvailabilityZoneId\" : String,\n      \"CidrBlock\" : String,\n      \"EnableDns64\" : Boolean,\n      \"EnableLniAtDeviceIndex\" : Integer,\n      \"Ipv4IpamPoolId\" : String,\n      \"Ipv4NetmaskLength\" : Integer,\n      \"Ipv6CidrBlock\" : String,\n      \"Ipv6CidrBlocks\" : [ String, ... ],\n      \"Ipv6IpamPoolId\" : String,\n      \"Ipv6Native\" : Boolean,\n      \"Ipv6NetmaskLength\" : Integer,\n      \"MapPublicIpOnLaunch\" : Boolean,\n      \"OutpostArn\" : String,\n      \"PrivateDnsNameOptionsOnLaunch\" : PrivateDnsNameOptionsOnLaunch,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Subnet\nProperties:\n  AssignIpv6AddressOnCreation: Boolean\n  AvailabilityZone: String\n  AvailabilityZoneId: String\n  CidrBlock: String\n  EnableDns64: Boolean\n  EnableLniAtDeviceIndex: Integer\n  Ipv4IpamPoolId: String\n  Ipv4NetmaskLength: Integer\n  Ipv6CidrBlock: String\n  Ipv6CidrBlocks: \n    - String\n  Ipv6IpamPoolId: String\n  Ipv6Native: Boolean\n  Ipv6NetmaskLength: Integer\n  MapPublicIpOnLaunch: Boolean\n  OutpostArn: String\n  PrivateDnsNameOptionsOnLaunch: \n    PrivateDnsNameOptionsOnLaunch\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SubnetCidrBlock","awsResourceTypeName":"ec2-subnetcidrblock","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SubnetCidrBlock\",\n  \"Properties\" : {\n      \"Ipv6CidrBlock\" : String,\n      \"Ipv6IpamPoolId\" : String,\n      \"Ipv6NetmaskLength\" : Integer,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SubnetCidrBlock\nProperties:\n  Ipv6CidrBlock: String\n  Ipv6IpamPoolId: String\n  Ipv6NetmaskLength: Integer\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SubnetNetworkAclAssociation","awsResourceTypeName":"ec2-subnetnetworkaclassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\",\n  \"Properties\" : {\n      \"NetworkAclId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SubnetNetworkAclAssociation\nProperties:\n  NetworkAclId: String\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SubnetRouteTableAssociation","awsResourceTypeName":"ec2-subnetroutetableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n  \"Properties\" : {\n      \"RouteTableId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SubnetRouteTableAssociation\nProperties:\n  RouteTableId: String\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorFilter","awsResourceTypeName":"ec2-trafficmirrorfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorFilter\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"NetworkServices\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorFilter\nProperties:\n  Description: String\n  NetworkServices: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorFilterRule","awsResourceTypeName":"ec2-trafficmirrorfilterrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorFilterRule\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DestinationCidrBlock\" : String,\n      \"DestinationPortRange\" : TrafficMirrorPortRange,\n      \"Protocol\" : Integer,\n      \"RuleAction\" : String,\n      \"RuleNumber\" : Integer,\n      \"SourceCidrBlock\" : String,\n      \"SourcePortRange\" : TrafficMirrorPortRange,\n      \"TrafficDirection\" : String,\n      \"TrafficMirrorFilterId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorFilterRule\nProperties:\n  Description: String\n  DestinationCidrBlock: String\n  DestinationPortRange: \n    TrafficMirrorPortRange\n  Protocol: Integer\n  RuleAction: String\n  RuleNumber: Integer\n  SourceCidrBlock: String\n  SourcePortRange: \n    TrafficMirrorPortRange\n  TrafficDirection: String\n  TrafficMirrorFilterId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorSession","awsResourceTypeName":"ec2-trafficmirrorsession","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorSession\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"PacketLength\" : Integer,\n      \"SessionNumber\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TrafficMirrorFilterId\" : String,\n      \"TrafficMirrorTargetId\" : String,\n      \"VirtualNetworkId\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorSession\nProperties:\n  Description: String\n  NetworkInterfaceId: String\n  PacketLength: Integer\n  SessionNumber: Integer\n  Tags: \n    - Tag\n  TrafficMirrorFilterId: String\n  TrafficMirrorTargetId: String\n  VirtualNetworkId: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorTarget","awsResourceTypeName":"ec2-trafficmirrortarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorTarget\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GatewayLoadBalancerEndpointId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"NetworkLoadBalancerArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorTarget\nProperties:\n  Description: String\n  GatewayLoadBalancerEndpointId: String\n  NetworkInterfaceId: String\n  NetworkLoadBalancerArn: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGateway","awsResourceTypeName":"ec2-transitgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGateway\",\n  \"Properties\" : {\n      \"AmazonSideAsn\" : Integer,\n      \"AssociationDefaultRouteTableId\" : String,\n      \"AutoAcceptSharedAttachments\" : String,\n      \"DefaultRouteTableAssociation\" : String,\n      \"DefaultRouteTablePropagation\" : String,\n      \"Description\" : String,\n      \"DnsSupport\" : String,\n      \"MulticastSupport\" : String,\n      \"PropagationDefaultRouteTableId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayCidrBlocks\" : [ String, ... ],\n      \"VpnEcmpSupport\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGateway\nProperties:\n  AmazonSideAsn: Integer\n  AssociationDefaultRouteTableId: String\n  AutoAcceptSharedAttachments: String\n  DefaultRouteTableAssociation: String\n  DefaultRouteTablePropagation: String\n  Description: String\n  DnsSupport: String\n  MulticastSupport: String\n  PropagationDefaultRouteTableId: String\n  Tags: \n    - Tag\n  TransitGatewayCidrBlocks: \n    - String\n  VpnEcmpSupport: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayAttachment","awsResourceTypeName":"ec2-transitgatewayattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayAttachment\",\n  \"Properties\" : {\n      \"Options\" : Options,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayAttachment\nProperties:\n  Options: \n    Options\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  TransitGatewayId: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayConnect","awsResourceTypeName":"ec2-transitgatewayconnect","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayConnect\",\n  \"Properties\" : {\n      \"Options\" : TransitGatewayConnectOptions,\n      \"Tags\" : [ Tag, ... ],\n      \"TransportTransitGatewayAttachmentId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayConnect\nProperties:\n  Options: \n    TransitGatewayConnectOptions\n  Tags: \n    - Tag\n  TransportTransitGatewayAttachmentId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastDomain","awsResourceTypeName":"ec2-transitgatewaymulticastdomain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastDomain\",\n  \"Properties\" : {\n      \"Options\" : Options,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastDomain\nProperties:\n  Options: \n    Options\n  Tags: \n    - Tag\n  TransitGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastDomainAssociation","awsResourceTypeName":"ec2-transitgatewaymulticastdomainassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastDomainAssociation\",\n  \"Properties\" : {\n      \"SubnetId\" : String,\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayMulticastDomainId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastDomainAssociation\nProperties:\n  SubnetId: String\n  TransitGatewayAttachmentId: String\n  TransitGatewayMulticastDomainId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastGroupMember","awsResourceTypeName":"ec2-transitgatewaymulticastgroupmember","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastGroupMember\",\n  \"Properties\" : {\n      \"GroupIpAddress\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"TransitGatewayMulticastDomainId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastGroupMember\nProperties:\n  GroupIpAddress: String\n  NetworkInterfaceId: String\n  TransitGatewayMulticastDomainId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastGroupSource","awsResourceTypeName":"ec2-transitgatewaymulticastgroupsource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastGroupSource\",\n  \"Properties\" : {\n      \"GroupIpAddress\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"TransitGatewayMulticastDomainId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastGroupSource\nProperties:\n  GroupIpAddress: String\n  NetworkInterfaceId: String\n  TransitGatewayMulticastDomainId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayPeeringAttachment","awsResourceTypeName":"ec2-transitgatewaypeeringattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayPeeringAttachment\",\n  \"Properties\" : {\n      \"PeerAccountId\" : String,\n      \"PeerRegion\" : String,\n      \"PeerTransitGatewayId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayPeeringAttachment\nProperties:\n  PeerAccountId: String\n  PeerRegion: String\n  PeerTransitGatewayId: String\n  Tags: \n    - Tag\n  TransitGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRoute","awsResourceTypeName":"ec2-transitgatewayroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRoute\",\n  \"Properties\" : {\n      \"Blackhole\" : Boolean,\n      \"DestinationCidrBlock\" : String,\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayRouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRoute\nProperties:\n  Blackhole: Boolean\n  DestinationCidrBlock: String\n  TransitGatewayAttachmentId: String\n  TransitGatewayRouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRouteTable","awsResourceTypeName":"ec2-transitgatewayroutetable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRouteTable\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRouteTable\nProperties:\n  Tags: \n    - Tag\n  TransitGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRouteTableAssociation","awsResourceTypeName":"ec2-transitgatewayroutetableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRouteTableAssociation\",\n  \"Properties\" : {\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayRouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRouteTableAssociation\nProperties:\n  TransitGatewayAttachmentId: String\n  TransitGatewayRouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRouteTablePropagation","awsResourceTypeName":"ec2-transitgatewayroutetablepropagation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRouteTablePropagation\",\n  \"Properties\" : {\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayRouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRouteTablePropagation\nProperties:\n  TransitGatewayAttachmentId: String\n  TransitGatewayRouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayVpcAttachment","awsResourceTypeName":"ec2-transitgatewayvpcattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayVpcAttachment\",\n  \"Properties\" : {\n      \"AddSubnetIds\" : [ String, ... ],\n      \"Options\" : Options,\n      \"RemoveSubnetIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayVpcAttachment\nProperties:\n  AddSubnetIds: \n    - String\n  Options: \n    Options\n  RemoveSubnetIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  TransitGatewayId: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessEndpoint","awsResourceTypeName":"ec2-verifiedaccessendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessEndpoint\",\n  \"Properties\" : {\n      \"ApplicationDomain\" : String,\n      \"AttachmentType\" : String,\n      \"Description\" : String,\n      \"DomainCertificateArn\" : String,\n      \"EndpointDomainPrefix\" : String,\n      \"EndpointType\" : String,\n      \"LoadBalancerOptions\" : LoadBalancerOptions,\n      \"NetworkInterfaceOptions\" : NetworkInterfaceOptions,\n      \"PolicyDocument\" : String,\n      \"PolicyEnabled\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SseSpecification\" : SseSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"VerifiedAccessGroupId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessEndpoint\nProperties:\n  ApplicationDomain: String\n  AttachmentType: String\n  Description: String\n  DomainCertificateArn: String\n  EndpointDomainPrefix: String\n  EndpointType: String\n  LoadBalancerOptions: \n    LoadBalancerOptions\n  NetworkInterfaceOptions: \n    NetworkInterfaceOptions\n  PolicyDocument: String\n  PolicyEnabled: Boolean\n  SecurityGroupIds: \n    - String\n  SseSpecification: \n    SseSpecification\n  Tags: \n    - Tag\n  VerifiedAccessGroupId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessGroup","awsResourceTypeName":"ec2-verifiedaccessgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"PolicyDocument\" : String,\n      \"PolicyEnabled\" : Boolean,\n      \"SseSpecification\" : SseSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"VerifiedAccessInstanceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessGroup\nProperties:\n  Description: String\n  PolicyDocument: String\n  PolicyEnabled: Boolean\n  SseSpecification: \n    SseSpecification\n  Tags: \n    - Tag\n  VerifiedAccessInstanceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessInstance","awsResourceTypeName":"ec2-verifiedaccessinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessInstance\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FipsEnabled\" : Boolean,\n      \"LoggingConfigurations\" : VerifiedAccessLogs,\n      \"Tags\" : [ Tag, ... ],\n      \"VerifiedAccessTrustProviderIds\" : [ String, ... ],\n      \"VerifiedAccessTrustProviders\" : [ VerifiedAccessTrustProvider, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessInstance\nProperties:\n  Description: String\n  FipsEnabled: Boolean\n  LoggingConfigurations: \n    VerifiedAccessLogs\n  Tags: \n    - Tag\n  VerifiedAccessTrustProviderIds: \n    - String\n  VerifiedAccessTrustProviders: \n    - VerifiedAccessTrustProvider\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessTrustProvider","awsResourceTypeName":"ec2-verifiedaccesstrustprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessTrustProvider\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DeviceOptions\" : DeviceOptions,\n      \"DeviceTrustProviderType\" : String,\n      \"OidcOptions\" : OidcOptions,\n      \"PolicyReferenceName\" : String,\n      \"SseSpecification\" : SseSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"TrustProviderType\" : String,\n      \"UserTrustProviderType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessTrustProvider\nProperties:\n  Description: String\n  DeviceOptions: \n    DeviceOptions\n  DeviceTrustProviderType: String\n  OidcOptions: \n    OidcOptions\n  PolicyReferenceName: String\n  SseSpecification: \n    SseSpecification\n  Tags: \n    - Tag\n  TrustProviderType: String\n  UserTrustProviderType: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Volume","awsResourceTypeName":"ec2-volume","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Volume\",\n  \"Properties\" : {\n      \"AutoEnableIO\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"Encrypted\" : Boolean,\n      \"Iops\" : Integer,\n      \"KmsKeyId\" : String,\n      \"MultiAttachEnabled\" : Boolean,\n      \"OutpostArn\" : String,\n      \"Size\" : Integer,\n      \"SnapshotId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Throughput\" : Integer,\n      \"VolumeType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Volume\nProperties:\n  AutoEnableIO: Boolean\n  AvailabilityZone: String\n  Encrypted: Boolean\n  Iops: Integer\n  KmsKeyId: String\n  MultiAttachEnabled: Boolean\n  OutpostArn: String\n  Size: Integer\n  SnapshotId: String\n  Tags: \n    - Tag\n  Throughput: Integer\n  VolumeType: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VolumeAttachment","awsResourceTypeName":"ec2-volumeattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VolumeAttachment\",\n  \"Properties\" : {\n      \"Device\" : String,\n      \"InstanceId\" : String,\n      \"VolumeId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VolumeAttachment\nProperties:\n  Device: String\n  InstanceId: String\n  VolumeId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPC","awsResourceTypeName":"ec2-vpc","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPC\",\n  \"Properties\" : {\n      \"CidrBlock\" : String,\n      \"EnableDnsHostnames\" : Boolean,\n      \"EnableDnsSupport\" : Boolean,\n      \"InstanceTenancy\" : String,\n      \"Ipv4IpamPoolId\" : String,\n      \"Ipv4NetmaskLength\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPC\nProperties:\n  CidrBlock: String\n  EnableDnsHostnames: Boolean\n  EnableDnsSupport: Boolean\n  InstanceTenancy: String\n  Ipv4IpamPoolId: String\n  Ipv4NetmaskLength: Integer\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCCidrBlock","awsResourceTypeName":"ec2-vpccidrblock","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCCidrBlock\",\n  \"Properties\" : {\n      \"AmazonProvidedIpv6CidrBlock\" : Boolean,\n      \"CidrBlock\" : String,\n      \"Ipv4IpamPoolId\" : String,\n      \"Ipv4NetmaskLength\" : Integer,\n      \"Ipv6CidrBlock\" : String,\n      \"Ipv6IpamPoolId\" : String,\n      \"Ipv6NetmaskLength\" : Integer,\n      \"Ipv6Pool\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCCidrBlock\nProperties:\n  AmazonProvidedIpv6CidrBlock: Boolean\n  CidrBlock: String\n  Ipv4IpamPoolId: String\n  Ipv4NetmaskLength: Integer\n  Ipv6CidrBlock: String\n  Ipv6IpamPoolId: String\n  Ipv6NetmaskLength: Integer\n  Ipv6Pool: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCDHCPOptionsAssociation","awsResourceTypeName":"ec2-vpcdhcpoptionsassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCDHCPOptionsAssociation\",\n  \"Properties\" : {\n      \"DhcpOptionsId\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCDHCPOptionsAssociation\nProperties:\n  DhcpOptionsId: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpoint","awsResourceTypeName":"ec2-vpcendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpoint\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PrivateDnsEnabled\" : Boolean,\n      \"RouteTableIds\" : [ String, ... ],\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServiceName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcEndpointType\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpoint\nProperties:\n  PolicyDocument: Json\n  PrivateDnsEnabled: Boolean\n  RouteTableIds: \n    - String\n  SecurityGroupIds: \n    - String\n  ServiceName: String\n  SubnetIds: \n    - String\n  VpcEndpointType: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpointConnectionNotification","awsResourceTypeName":"ec2-vpcendpointconnectionnotification","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpointConnectionNotification\",\n  \"Properties\" : {\n      \"ConnectionEvents\" : [ String, ... ],\n      \"ConnectionNotificationArn\" : String,\n      \"ServiceId\" : String,\n      \"VPCEndpointId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpointConnectionNotification\nProperties:\n  ConnectionEvents: \n    - String\n  ConnectionNotificationArn: String\n  ServiceId: String\n  VPCEndpointId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpointService","awsResourceTypeName":"ec2-vpcendpointservice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpointService\",\n  \"Properties\" : {\n      \"AcceptanceRequired\" : Boolean,\n      \"ContributorInsightsEnabled\" : Boolean,\n      \"GatewayLoadBalancerArns\" : [ String, ... ],\n      \"NetworkLoadBalancerArns\" : [ String, ... ],\n      \"PayerResponsibility\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpointService\nProperties:\n  AcceptanceRequired: Boolean\n  ContributorInsightsEnabled: Boolean\n  GatewayLoadBalancerArns: \n    - String\n  NetworkLoadBalancerArns: \n    - String\n  PayerResponsibility: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpointServicePermissions","awsResourceTypeName":"ec2-vpcendpointservicepermissions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpointServicePermissions\",\n  \"Properties\" : {\n      \"AllowedPrincipals\" : [ String, ... ],\n      \"ServiceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpointServicePermissions\nProperties:\n  AllowedPrincipals: \n    - String\n  ServiceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCGatewayAttachment","awsResourceTypeName":"ec2-vpcgatewayattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCGatewayAttachment\",\n  \"Properties\" : {\n      \"InternetGatewayId\" : String,\n      \"VpcId\" : String,\n      \"VpnGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCGatewayAttachment\nProperties:\n  InternetGatewayId: String\n  VpcId: String\n  VpnGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCPeeringConnection","awsResourceTypeName":"ec2-vpcpeeringconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCPeeringConnection\",\n  \"Properties\" : {\n      \"PeerOwnerId\" : String,\n      \"PeerRegion\" : String,\n      \"PeerRoleArn\" : String,\n      \"PeerVpcId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCPeeringConnection\nProperties:\n  PeerOwnerId: String\n  PeerRegion: String\n  PeerRoleArn: String\n  PeerVpcId: String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNConnection","awsResourceTypeName":"ec2-vpnconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNConnection\",\n  \"Properties\" : {\n      \"CustomerGatewayId\" : String,\n      \"StaticRoutesOnly\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String,\n      \"Type\" : String,\n      \"VpnGatewayId\" : String,\n      \"VpnTunnelOptionsSpecifications\" : [ VpnTunnelOptionsSpecification, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNConnection\nProperties:\n  CustomerGatewayId: String\n  StaticRoutesOnly: Boolean\n  Tags: \n    - Tag\n  TransitGatewayId: String\n  Type: String\n  VpnGatewayId: String\n  VpnTunnelOptionsSpecifications: \n    - VpnTunnelOptionsSpecification\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNConnectionRoute","awsResourceTypeName":"ec2-vpnconnectionroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNConnectionRoute\",\n  \"Properties\" : {\n      \"DestinationCidrBlock\" : String,\n      \"VpnConnectionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNConnectionRoute\nProperties:\n  DestinationCidrBlock: String\n  VpnConnectionId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNGateway","awsResourceTypeName":"ec2-vpngateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNGateway\",\n  \"Properties\" : {\n      \"AmazonSideAsn\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNGateway\nProperties:\n  AmazonSideAsn: Integer\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNGatewayRoutePropagation","awsResourceTypeName":"ec2-vpngatewayroutepropagation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNGatewayRoutePropagation\",\n  \"Properties\" : {\n      \"RouteTableIds\" : [ String, ... ],\n      \"VpnGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNGatewayRoutePropagation\nProperties:\n  RouteTableIds: \n    - String\n  VpnGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LaunchTemplate","awsResourceTypeName":"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::AutoScalingGroup","awsResourceTypeName":"autoscaling-autoscalinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::AutoScalingGroup\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"AvailabilityZones\" : [ String, ... ],\n      \"CapacityRebalance\" : Boolean,\n      \"Context\" : String,\n      \"Cooldown\" : String,\n      \"DefaultInstanceWarmup\" : Integer,\n      \"DesiredCapacity\" : String,\n      \"DesiredCapacityType\" : String,\n      \"HealthCheckGracePeriod\" : Integer,\n      \"HealthCheckType\" : String,\n      \"InstanceId\" : String,\n      \"InstanceMaintenancePolicy\" : InstanceMaintenancePolicy,\n      \"LaunchConfigurationName\" : String,\n      \"LaunchTemplate\" : LaunchTemplateSpecification,\n      \"LifecycleHookSpecificationList\" : [ LifecycleHookSpecification, ... ],\n      \"LoadBalancerNames\" : [ String, ... ],\n      \"MaxInstanceLifetime\" : Integer,\n      \"MaxSize\" : String,\n      \"MetricsCollection\" : [ MetricsCollection, ... ],\n      \"MinSize\" : String,\n      \"MixedInstancesPolicy\" : MixedInstancesPolicy,\n      \"NewInstancesProtectedFromScaleIn\" : Boolean,\n      \"NotificationConfigurations\" : [ NotificationConfiguration, ... ],\n      \"PlacementGroup\" : String,\n      \"ServiceLinkedRoleARN\" : String,\n      \"Tags\" : [ TagProperty, ... ],\n      \"TargetGroupARNs\" : [ String, ... ],\n      \"TerminationPolicies\" : [ String, ... ],\n      \"VPCZoneIdentifier\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::AutoScalingGroup\nProperties:\n  AutoScalingGroupName: String\n  AvailabilityZones: \n    - String\n  CapacityRebalance: Boolean\n  Context: String\n  Cooldown: String\n  DefaultInstanceWarmup: Integer\n  DesiredCapacity: String\n  DesiredCapacityType: String\n  HealthCheckGracePeriod: Integer\n  HealthCheckType: String\n  InstanceId: String\n  InstanceMaintenancePolicy: \n    InstanceMaintenancePolicy\n  LaunchConfigurationName: String\n  LaunchTemplate: \n    LaunchTemplateSpecification\n  LifecycleHookSpecificationList: \n    - LifecycleHookSpecification\n  LoadBalancerNames: \n    - String\n  MaxInstanceLifetime: Integer\n  MaxSize: String\n  MetricsCollection: \n    - MetricsCollection\n  MinSize: String\n  MixedInstancesPolicy: \n    MixedInstancesPolicy\n  NewInstancesProtectedFromScaleIn: Boolean\n  NotificationConfigurations: \n    - NotificationConfiguration\n  PlacementGroup: String\n  ServiceLinkedRoleARN: String\n  Tags: \n    - TagProperty\n  TargetGroupARNs: \n    - String\n  TerminationPolicies: \n    - String\n  VPCZoneIdentifier: \n    - String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::LaunchConfiguration","awsResourceTypeName":"autoscaling-launchconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::LaunchConfiguration\",\n  \"Properties\" : {\n      \"AssociatePublicIpAddress\" : Boolean,\n      \"BlockDeviceMappings\" : [ BlockDeviceMapping, ... ],\n      \"ClassicLinkVPCId\" : String,\n      \"ClassicLinkVPCSecurityGroups\" : [ String, ... ],\n      \"EbsOptimized\" : Boolean,\n      \"IamInstanceProfile\" : String,\n      \"ImageId\" : String,\n      \"InstanceId\" : String,\n      \"InstanceMonitoring\" : Boolean,\n      \"InstanceType\" : String,\n      \"KernelId\" : String,\n      \"KeyName\" : String,\n      \"LaunchConfigurationName\" : String,\n      \"MetadataOptions\" : MetadataOptions,\n      \"PlacementTenancy\" : String,\n      \"RamDiskId\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"SpotPrice\" : String,\n      \"UserData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::LaunchConfiguration\nProperties:\n  AssociatePublicIpAddress: Boolean\n  BlockDeviceMappings: \n    - BlockDeviceMapping\n  ClassicLinkVPCId: String\n  ClassicLinkVPCSecurityGroups: \n    - String\n  EbsOptimized: Boolean\n  IamInstanceProfile: String\n  ImageId: String\n  InstanceId: String\n  InstanceMonitoring: Boolean\n  InstanceType: String\n  KernelId: String\n  KeyName: String\n  LaunchConfigurationName: String\n  MetadataOptions: \n    MetadataOptions\n  PlacementTenancy: String\n  RamDiskId: String\n  SecurityGroups: \n    - String\n  SpotPrice: String\n  UserData: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::LifecycleHook","awsResourceTypeName":"autoscaling-lifecyclehook","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::LifecycleHook\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"DefaultResult\" : String,\n      \"HeartbeatTimeout\" : Integer,\n      \"LifecycleHookName\" : String,\n      \"LifecycleTransition\" : String,\n      \"NotificationMetadata\" : String,\n      \"NotificationTargetARN\" : String,\n      \"RoleARN\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::LifecycleHook\nProperties:\n  AutoScalingGroupName: String\n  DefaultResult: String\n  HeartbeatTimeout: Integer\n  LifecycleHookName: String\n  LifecycleTransition: String\n  NotificationMetadata: String\n  NotificationTargetARN: String\n  RoleARN: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::ScalingPolicy","awsResourceTypeName":"autoscaling-scalingpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::ScalingPolicy\",\n  \"Properties\" : {\n      \"AdjustmentType\" : String,\n      \"AutoScalingGroupName\" : String,\n      \"Cooldown\" : String,\n      \"EstimatedInstanceWarmup\" : Integer,\n      \"MetricAggregationType\" : String,\n      \"MinAdjustmentMagnitude\" : Integer,\n      \"PolicyType\" : String,\n      \"PredictiveScalingConfiguration\" : PredictiveScalingConfiguration,\n      \"ScalingAdjustment\" : Integer,\n      \"StepAdjustments\" : [ StepAdjustment, ... ],\n      \"TargetTrackingConfiguration\" : TargetTrackingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::ScalingPolicy\nProperties:\n  AdjustmentType: String\n  AutoScalingGroupName: String\n  Cooldown: String\n  EstimatedInstanceWarmup: Integer\n  MetricAggregationType: String\n  MinAdjustmentMagnitude: Integer\n  PolicyType: String\n  PredictiveScalingConfiguration: \n    PredictiveScalingConfiguration\n  ScalingAdjustment: Integer\n  StepAdjustments: \n    - StepAdjustment\n  TargetTrackingConfiguration: \n    TargetTrackingConfiguration\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::ScheduledAction","awsResourceTypeName":"autoscaling-scheduledaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::ScheduledAction\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"DesiredCapacity\" : Integer,\n      \"EndTime\" : String,\n      \"MaxSize\" : Integer,\n      \"MinSize\" : Integer,\n      \"Recurrence\" : String,\n      \"StartTime\" : String,\n      \"TimeZone\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::ScheduledAction\nProperties:\n  AutoScalingGroupName: String\n  DesiredCapacity: Integer\n  EndTime: String\n  MaxSize: Integer\n  MinSize: Integer\n  Recurrence: String\n  StartTime: String\n  TimeZone: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::WarmPool","awsResourceTypeName":"autoscaling-warmpool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::WarmPool\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"InstanceReusePolicy\" : InstanceReusePolicy,\n      \"MaxGroupPreparedCapacity\" : Integer,\n      \"MinSize\" : Integer,\n      \"PoolState\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::WarmPool\nProperties:\n  AutoScalingGroupName: String\n  InstanceReusePolicy: \n    InstanceReusePolicy\n  MaxGroupPreparedCapacity: Integer\n  MinSize: Integer\n  PoolState: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ECR::PublicRepository","awsResourceTypeName":"ecr-publicrepository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::PublicRepository\",\n  \"Properties\" : {\n      \"RepositoryCatalogData\" : RepositoryCatalogData,\n      \"RepositoryName\" : String,\n      \"RepositoryPolicyText\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::PublicRepository\nProperties:\n  RepositoryCatalogData: \n    RepositoryCatalogData\n  RepositoryName: String\n  RepositoryPolicyText: Json\n  Tags: \n    - Tag\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::PullThroughCacheRule","awsResourceTypeName":"ecr-pullthroughcacherule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::PullThroughCacheRule\",\n  \"Properties\" : {\n      \"CredentialArn\" : String,\n      \"EcrRepositoryPrefix\" : String,\n      \"UpstreamRegistry\" : String,\n      \"UpstreamRegistryUrl\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::PullThroughCacheRule\nProperties:\n  CredentialArn: String\n  EcrRepositoryPrefix: String\n  UpstreamRegistry: String\n  UpstreamRegistryUrl: String\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::RegistryPolicy","awsResourceTypeName":"ecr-registrypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::RegistryPolicy\",\n  \"Properties\" : {\n      \"PolicyText\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::RegistryPolicy\nProperties:\n  PolicyText: Json\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::ReplicationConfiguration","awsResourceTypeName":"ecr-replicationconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::ReplicationConfiguration\",\n  \"Properties\" : {\n      \"ReplicationConfiguration\" : ReplicationConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::ReplicationConfiguration\nProperties:\n  ReplicationConfiguration: \n    ReplicationConfiguration\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::Repository","awsResourceTypeName":"ecr-repository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::Repository\",\n  \"Properties\" : {\n      \"EmptyOnDelete\" : Boolean,\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"ImageScanningConfiguration\" : ImageScanningConfiguration,\n      \"ImageTagMutability\" : String,\n      \"LifecyclePolicy\" : LifecyclePolicy,\n      \"RepositoryName\" : String,\n      \"RepositoryPolicyText\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::Repository\nProperties:\n  EmptyOnDelete: Boolean\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  ImageScanningConfiguration: \n    ImageScanningConfiguration\n  ImageTagMutability: String\n  LifecyclePolicy: \n    LifecyclePolicy\n  RepositoryName: String\n  RepositoryPolicyText: Json\n  Tags: \n    - Tag\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::RepositoryCreationTemplate","awsResourceTypeName":"ecr-repositorycreationtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::RepositoryCreationTemplate\",\n  \"Properties\" : {\n      \"AppliedFor\" : [ String, ... ],\n      \"Description\" : String,\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"ImageTagMutability\" : String,\n      \"LifecyclePolicy\" : String,\n      \"Prefix\" : String,\n      \"RepositoryPolicy\" : String,\n      \"ResourceTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::RepositoryCreationTemplate\nProperties:\n  AppliedFor: \n    - String\n  Description: String\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  ImageTagMutability: String\n  LifecyclePolicy: String\n  Prefix: String\n  RepositoryPolicy: String\n  ResourceTags: \n    - Tag\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::CapacityProvider","awsResourceTypeName":"ecs-capacityprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::CapacityProvider\",\n  \"Properties\" : {\n      \"AutoScalingGroupProvider\" : AutoScalingGroupProvider,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::CapacityProvider\nProperties:\n  AutoScalingGroupProvider: \n    AutoScalingGroupProvider\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::Cluster","awsResourceTypeName":"ecs-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::Cluster\",\n  \"Properties\" : {\n      \"CapacityProviders\" : [ String, ... ],\n      \"ClusterName\" : String,\n      \"ClusterSettings\" : [ ClusterSettings, ... ],\n      \"Configuration\" : ClusterConfiguration,\n      \"DefaultCapacityProviderStrategy\" : [ CapacityProviderStrategyItem, ... ],\n      \"ServiceConnectDefaults\" : ServiceConnectDefaults,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::Cluster\nProperties:\n  CapacityProviders: \n    - String\n  ClusterName: String\n  ClusterSettings: \n    - ClusterSettings\n  Configuration: \n    ClusterConfiguration\n  DefaultCapacityProviderStrategy: \n    - CapacityProviderStrategyItem\n  ServiceConnectDefaults: \n    ServiceConnectDefaults\n  Tags: \n    - Tag\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::ClusterCapacityProviderAssociations","awsResourceTypeName":"ecs-clustercapacityproviderassociations","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::ClusterCapacityProviderAssociations\",\n  \"Properties\" : {\n      \"CapacityProviders\" : [ String, ... ],\n      \"Cluster\" : String,\n      \"DefaultCapacityProviderStrategy\" : [ CapacityProviderStrategy, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::ClusterCapacityProviderAssociations\nProperties:\n  CapacityProviders: \n    - String\n  Cluster: String\n  DefaultCapacityProviderStrategy: \n    - CapacityProviderStrategy\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::PrimaryTaskSet","awsResourceTypeName":"ecs-primarytaskset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::PrimaryTaskSet\",\n  \"Properties\" : {\n      \"Cluster\" : String,\n      \"Service\" : String,\n      \"TaskSetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::PrimaryTaskSet\nProperties:\n  Cluster: String\n  Service: String\n  TaskSetId: String\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::Service","awsResourceTypeName":"ecs-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::Service\",\n  \"Properties\" : {\n      \"CapacityProviderStrategy\" : [ CapacityProviderStrategyItem, ... ],\n      \"Cluster\" : String,\n      \"DeploymentConfiguration\" : DeploymentConfiguration,\n      \"DeploymentController\" : DeploymentController,\n      \"DesiredCount\" : Integer,\n      \"EnableECSManagedTags\" : Boolean,\n      \"EnableExecuteCommand\" : Boolean,\n      \"HealthCheckGracePeriodSeconds\" : Integer,\n      \"LaunchType\" : String,\n      \"LoadBalancers\" : [ LoadBalancer, ... ],\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"PlacementConstraints\" : [ PlacementConstraint, ... ],\n      \"PlacementStrategies\" : [ PlacementStrategy, ... ],\n      \"PlatformVersion\" : String,\n      \"PropagateTags\" : String,\n      \"Role\" : String,\n      \"SchedulingStrategy\" : String,\n      \"ServiceConnectConfiguration\" : ServiceConnectConfiguration,\n      \"ServiceName\" : String,\n      \"ServiceRegistries\" : [ ServiceRegistry, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TaskDefinition\" : String,\n      \"VolumeConfigurations\" : [ ServiceVolumeConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::Service\nProperties:\n  CapacityProviderStrategy: \n    - CapacityProviderStrategyItem\n  Cluster: String\n  DeploymentConfiguration: \n    DeploymentConfiguration\n  DeploymentController: \n    DeploymentController\n  DesiredCount: Integer\n  EnableECSManagedTags: Boolean\n  EnableExecuteCommand: Boolean\n  HealthCheckGracePeriodSeconds: Integer\n  LaunchType: String\n  LoadBalancers: \n    - LoadBalancer\n  NetworkConfiguration: \n    NetworkConfiguration\n  PlacementConstraints: \n    - PlacementConstraint\n  PlacementStrategies: \n    - PlacementStrategy\n  PlatformVersion: String\n  PropagateTags: String\n  Role: String\n  SchedulingStrategy: String\n  ServiceConnectConfiguration: \n    ServiceConnectConfiguration\n  ServiceName: String\n  ServiceRegistries: \n    - ServiceRegistry\n  Tags: \n    - Tag\n  TaskDefinition: String\n  VolumeConfigurations: \n    - ServiceVolumeConfiguration\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::TaskDefinition","awsResourceTypeName":"ecs-taskdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::TaskDefinition\",\n  \"Properties\" : {\n      \"ContainerDefinitions\" : [ ContainerDefinition, ... ],\n      \"Cpu\" : String,\n      \"EphemeralStorage\" : EphemeralStorage,\n      \"ExecutionRoleArn\" : String,\n      \"Family\" : String,\n      \"InferenceAccelerators\" : [ InferenceAccelerator, ... ],\n      \"IpcMode\" : String,\n      \"Memory\" : String,\n      \"NetworkMode\" : String,\n      \"PidMode\" : String,\n      \"PlacementConstraints\" : [ TaskDefinitionPlacementConstraint, ... ],\n      \"ProxyConfiguration\" : ProxyConfiguration,\n      \"RequiresCompatibilities\" : [ String, ... ],\n      \"RuntimePlatform\" : RuntimePlatform,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskRoleArn\" : String,\n      \"Volumes\" : [ Volume, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::TaskDefinition\nProperties:\n  ContainerDefinitions: \n    - ContainerDefinition\n  Cpu: String\n  EphemeralStorage: \n    EphemeralStorage\n  ExecutionRoleArn: String\n  Family: String\n  InferenceAccelerators: \n    - InferenceAccelerator\n  IpcMode: String\n  Memory: String\n  NetworkMode: String\n  PidMode: String\n  PlacementConstraints: \n    - TaskDefinitionPlacementConstraint\n  ProxyConfiguration: \n    ProxyConfiguration\n  RequiresCompatibilities: \n    - String\n  RuntimePlatform: \n    RuntimePlatform\n  Tags: \n    - Tag\n  TaskRoleArn: String\n  Volumes: \n    - Volume\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::TaskSet","awsResourceTypeName":"ecs-taskset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::TaskSet\",\n  \"Properties\" : {\n      \"Cluster\" : String,\n      \"ExternalId\" : String,\n      \"LaunchType\" : String,\n      \"LoadBalancers\" : [ LoadBalancer, ... ],\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"PlatformVersion\" : String,\n      \"Scale\" : Scale,\n      \"Service\" : String,\n      \"ServiceRegistries\" : [ ServiceRegistry, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TaskDefinition\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::TaskSet\nProperties:\n  Cluster: String\n  ExternalId: String\n  LaunchType: String\n  LoadBalancers: \n    - LoadBalancer\n  NetworkConfiguration: \n    NetworkConfiguration\n  PlatformVersion: String\n  Scale: \n    Scale\n  Service: String\n  ServiceRegistries: \n    - ServiceRegistry\n  Tags: \n    - Tag\n  TaskDefinition: String\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EFS::AccessPoint","awsResourceTypeName":"efs-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EFS::AccessPoint\",\n  \"Properties\" : {\n      \"AccessPointTags\" : [ AccessPointTag, ... ],\n      \"ClientToken\" : String,\n      \"FileSystemId\" : String,\n      \"PosixUser\" : PosixUser,\n      \"RootDirectory\" : RootDirectory\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EFS::AccessPoint\nProperties:\n  AccessPointTags: \n    - AccessPointTag\n  ClientToken: String\n  FileSystemId: String\n  PosixUser: \n    PosixUser\n  RootDirectory: \n    RootDirectory\n","awsServiceName":"EFS","awsServiceCategory":"storage"},{"awsResourceType":"AWS::EFS::FileSystem","awsResourceTypeName":"efs-filesystem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EFS::FileSystem\",\n  \"Properties\" : {\n      \"AvailabilityZoneName\" : String,\n      \"BackupPolicy\" : BackupPolicy,\n      \"BypassPolicyLockoutSafetyCheck\" : Boolean,\n      \"Encrypted\" : Boolean,\n      \"FileSystemPolicy\" : Json,\n      \"FileSystemProtection\" : FileSystemProtection,\n      \"FileSystemTags\" : [ ElasticFileSystemTag, ... ],\n      \"KmsKeyId\" : String,\n      \"LifecyclePolicies\" : [ LifecyclePolicy, ... ],\n      \"PerformanceMode\" : String,\n      \"ProvisionedThroughputInMibps\" : Number,\n      \"ReplicationConfiguration\" : ReplicationConfiguration,\n      \"ThroughputMode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EFS::FileSystem\nProperties:\n  AvailabilityZoneName: String\n  BackupPolicy: \n    BackupPolicy\n  BypassPolicyLockoutSafetyCheck: Boolean\n  Encrypted: Boolean\n  FileSystemPolicy: Json\n  FileSystemProtection: \n    FileSystemProtection\n  FileSystemTags: \n    - ElasticFileSystemTag\n  KmsKeyId: String\n  LifecyclePolicies: \n    - LifecyclePolicy\n  PerformanceMode: String\n  ProvisionedThroughputInMibps: Number\n  ReplicationConfiguration: \n    ReplicationConfiguration\n  ThroughputMode: String\n","awsServiceName":"EFS","awsServiceCategory":"storage"},{"awsResourceType":"AWS::EFS::MountTarget","awsResourceTypeName":"efs-mounttarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EFS::MountTarget\",\n  \"Properties\" : {\n      \"FileSystemId\" : String,\n      \"IpAddress\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EFS::MountTarget\nProperties:\n  FileSystemId: String\n  IpAddress: String\n  SecurityGroups: \n    - String\n  SubnetId: String\n","awsServiceName":"EFS","awsServiceCategory":"storage"},{"awsResourceType":"AWS::EKS::AccessEntry","awsResourceTypeName":"eks-accessentry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::AccessEntry\",\n  \"Properties\" : {\n      \"AccessPolicies\" : [ AccessPolicy, ... ],\n      \"ClusterName\" : String,\n      \"KubernetesGroups\" : [ String, ... ],\n      \"PrincipalArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"Username\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::AccessEntry\nProperties:\n  AccessPolicies: \n    - AccessPolicy\n  ClusterName: String\n  KubernetesGroups: \n    - String\n  PrincipalArn: String\n  Tags: \n    - Tag\n  Type: String\n  Username: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::Addon","awsResourceTypeName":"eks-addon","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::Addon\",\n  \"Properties\" : {\n      \"AddonName\" : String,\n      \"AddonVersion\" : String,\n      \"ClusterName\" : String,\n      \"ConfigurationValues\" : String,\n      \"PreserveOnDelete\" : Boolean,\n      \"ResolveConflicts\" : String,\n      \"ServiceAccountRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::Addon\nProperties:\n  AddonName: String\n  AddonVersion: String\n  ClusterName: String\n  ConfigurationValues: String\n  PreserveOnDelete: Boolean\n  ResolveConflicts: String\n  ServiceAccountRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::Cluster","awsResourceTypeName":"eks-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::Cluster\",\n  \"Properties\" : {\n      \"AccessConfig\" : AccessConfig,\n      \"EncryptionConfig\" : [ EncryptionConfig, ... ],\n      \"KubernetesNetworkConfig\" : KubernetesNetworkConfig,\n      \"Logging\" : Logging,\n      \"Name\" : String,\n      \"OutpostConfig\" : OutpostConfig,\n      \"ResourcesVpcConfig\" : ResourcesVpcConfig,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::Cluster\nProperties:\n  AccessConfig: \n    AccessConfig\n  EncryptionConfig: \n    - EncryptionConfig\n  KubernetesNetworkConfig: \n    KubernetesNetworkConfig\n  Logging: \n    Logging\n  Name: String\n  OutpostConfig: \n    OutpostConfig\n  ResourcesVpcConfig: \n    ResourcesVpcConfig\n  RoleArn: String\n  Tags: \n    - Tag\n  Version: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::FargateProfile","awsResourceTypeName":"eks-fargateprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::FargateProfile\",\n  \"Properties\" : {\n      \"ClusterName\" : String,\n      \"FargateProfileName\" : String,\n      \"PodExecutionRoleArn\" : String,\n      \"Selectors\" : [ Selector, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::FargateProfile\nProperties:\n  ClusterName: String\n  FargateProfileName: String\n  PodExecutionRoleArn: String\n  Selectors: \n    - Selector\n  Subnets: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::IdentityProviderConfig","awsResourceTypeName":"eks-identityproviderconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::IdentityProviderConfig\",\n  \"Properties\" : {\n      \"ClusterName\" : String,\n      \"IdentityProviderConfigName\" : String,\n      \"Oidc\" : OidcIdentityProviderConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::IdentityProviderConfig\nProperties:\n  ClusterName: String\n  IdentityProviderConfigName: String\n  Oidc: \n    OidcIdentityProviderConfig\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::Nodegroup","awsResourceTypeName":"eks-nodegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::Nodegroup\",\n  \"Properties\" : {\n      \"AmiType\" : String,\n      \"CapacityType\" : String,\n      \"ClusterName\" : String,\n      \"DiskSize\" : Integer,\n      \"ForceUpdateEnabled\" : Boolean,\n      \"InstanceTypes\" : [ String, ... ],\n      \"Labels\" : {Key: Value, ...},\n      \"LaunchTemplate\" : LaunchTemplateSpecification,\n      \"NodegroupName\" : String,\n      \"NodeRole\" : String,\n      \"ReleaseVersion\" : String,\n      \"RemoteAccess\" : RemoteAccess,\n      \"ScalingConfig\" : ScalingConfig,\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Taints\" : [ Taint, ... ],\n      \"UpdateConfig\" : UpdateConfig,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::Nodegroup\nProperties:\n  AmiType: String\n  CapacityType: String\n  ClusterName: String\n  DiskSize: Integer\n  ForceUpdateEnabled: Boolean\n  InstanceTypes: \n    - String\n  Labels: \n    Key: Value\n  LaunchTemplate: \n    LaunchTemplateSpecification\n  NodegroupName: String\n  NodeRole: String\n  ReleaseVersion: String\n  RemoteAccess: \n    RemoteAccess\n  ScalingConfig: \n    ScalingConfig\n  Subnets: \n    - String\n  Tags: \n    Key: Value\n  Taints: \n    - Taint\n  UpdateConfig: \n    UpdateConfig\n  Version: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::PodIdentityAssociation","awsResourceTypeName":"eks-podidentityassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::PodIdentityAssociation\",\n  \"Properties\" : {\n      \"ClusterName\" : String,\n      \"Namespace\" : String,\n      \"RoleArn\" : String,\n      \"ServiceAccount\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::PodIdentityAssociation\nProperties:\n  ClusterName: String\n  Namespace: String\n  RoleArn: String\n  ServiceAccount: String\n  Tags: \n    - Tag\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ElasticBeanstalk::Application","awsResourceTypeName":"elasticbeanstalk-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::Application\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Description\" : String,\n      \"ResourceLifecycleConfig\" : ApplicationResourceLifecycleConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::Application\nProperties:\n  ApplicationName: String\n  Description: String\n  ResourceLifecycleConfig: \n    ApplicationResourceLifecycleConfig\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticBeanstalk::ApplicationVersion","awsResourceTypeName":"elasticbeanstalk-applicationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Description\" : String,\n      \"SourceBundle\" : SourceBundle\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::ApplicationVersion\nProperties:\n  ApplicationName: String\n  Description: String\n  SourceBundle: \n    SourceBundle\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticBeanstalk::ConfigurationTemplate","awsResourceTypeName":"elasticbeanstalk-configurationtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::ConfigurationTemplate\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Description\" : String,\n      \"EnvironmentId\" : String,\n      \"OptionSettings\" : [ ConfigurationOptionSetting, ... ],\n      \"PlatformArn\" : String,\n      \"SolutionStackName\" : String,\n      \"SourceConfiguration\" : SourceConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::ConfigurationTemplate\nProperties:\n  ApplicationName: String\n  Description: String\n  EnvironmentId: String\n  OptionSettings: \n    - ConfigurationOptionSetting\n  PlatformArn: String\n  SolutionStackName: String\n  SourceConfiguration: \n    SourceConfiguration\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticBeanstalk::Environment","awsResourceTypeName":"elasticbeanstalk-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::Environment\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"CNAMEPrefix\" : String,\n      \"Description\" : String,\n      \"EnvironmentName\" : String,\n      \"OperationsRole\" : String,\n      \"OptionSettings\" : [ OptionSetting, ... ],\n      \"PlatformArn\" : String,\n      \"SolutionStackName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateName\" : String,\n      \"Tier\" : Tier,\n      \"VersionLabel\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::Environment\nProperties:\n  ApplicationName: String\n  CNAMEPrefix: String\n  Description: String\n  EnvironmentName: String\n  OperationsRole: String\n  OptionSettings: \n    - OptionSetting\n  PlatformArn: String\n  SolutionStackName: String\n  Tags: \n    - Tag\n  TemplateName: String\n  Tier: \n    Tier\n  VersionLabel: String\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticLoadBalancing::LoadBalancer","awsResourceTypeName":"elasticloadbalancing-loadbalancer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancing::LoadBalancer\",\n  \"Properties\" : {\n      \"AccessLoggingPolicy\" : AccessLoggingPolicy,\n      \"AppCookieStickinessPolicy\" : [ AppCookieStickinessPolicy, ... ],\n      \"AvailabilityZones\" : [ String, ... ],\n      \"ConnectionDrainingPolicy\" : ConnectionDrainingPolicy,\n      \"ConnectionSettings\" : ConnectionSettings,\n      \"CrossZone\" : Boolean,\n      \"HealthCheck\" : HealthCheck,\n      \"Instances\" : [ String, ... ],\n      \"LBCookieStickinessPolicy\" : [ LBCookieStickinessPolicy, ... ],\n      \"Listeners\" : [ Listeners, ... ],\n      \"LoadBalancerName\" : String,\n      \"Policies\" : [ Policies, ... ],\n      \"Scheme\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancing::LoadBalancer\nProperties:\n  AccessLoggingPolicy: \n    AccessLoggingPolicy\n  AppCookieStickinessPolicy: \n    - AppCookieStickinessPolicy\n  AvailabilityZones: \n    - String\n  ConnectionDrainingPolicy: \n    ConnectionDrainingPolicy\n  ConnectionSettings: \n    ConnectionSettings\n  CrossZone: Boolean\n  HealthCheck: \n    HealthCheck\n  Instances: \n    - String\n  LBCookieStickinessPolicy: \n    - LBCookieStickinessPolicy\n  Listeners: \n    - Listeners\n  LoadBalancerName: String\n  Policies: \n    - Policies\n  Scheme: String\n  SecurityGroups: \n    - String\n  Subnets: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"ElasticLoadBalancing","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::Listener","awsResourceTypeName":"elasticloadbalancingv2-listener","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::Listener\",\n  \"Properties\" : {\n      \"AlpnPolicy\" : [ String, ... ],\n      \"Certificates\" : [ Certificate, ... ],\n      \"DefaultActions\" : [ Action, ... ],\n      \"LoadBalancerArn\" : String,\n      \"MutualAuthentication\" : MutualAuthentication,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"SslPolicy\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::Listener\nProperties:\n  AlpnPolicy: \n    - String\n  Certificates: \n    - Certificate\n  DefaultActions: \n    - Action\n  LoadBalancerArn: String\n  MutualAuthentication: \n    MutualAuthentication\n  Port: Integer\n  Protocol: String\n  SslPolicy: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::ListenerCertificate","awsResourceTypeName":"elasticloadbalancingv2-listenercertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::ListenerCertificate\",\n  \"Properties\" : {\n      \"Certificates\" : [ Certificate, ... ],\n      \"ListenerArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::ListenerCertificate\nProperties:\n  Certificates: \n    - Certificate\n  ListenerArn: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::ListenerRule","awsResourceTypeName":"elasticloadbalancingv2-listenerrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::ListenerRule\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"Conditions\" : [ RuleCondition, ... ],\n      \"ListenerArn\" : String,\n      \"Priority\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::ListenerRule\nProperties:\n  Actions: \n    - Action\n  Conditions: \n    - RuleCondition\n  ListenerArn: String\n  Priority: Integer\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::LoadBalancer","awsResourceTypeName":"elasticloadbalancingv2-loadbalancer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n  \"Properties\" : {\n      \"EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic\" : String,\n      \"IpAddressType\" : String,\n      \"LoadBalancerAttributes\" : [ LoadBalancerAttribute, ... ],\n      \"Name\" : String,\n      \"Scheme\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"SubnetMappings\" : [ SubnetMapping, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::LoadBalancer\nProperties:\n  EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: String\n  IpAddressType: String\n  LoadBalancerAttributes: \n    - LoadBalancerAttribute\n  Name: String\n  Scheme: String\n  SecurityGroups: \n    - String\n  SubnetMappings: \n    - SubnetMapping\n  Subnets: \n    - String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::TargetGroup","awsResourceTypeName":"elasticloadbalancingv2-targetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::TargetGroup\",\n  \"Properties\" : {\n      \"HealthCheckEnabled\" : Boolean,\n      \"HealthCheckIntervalSeconds\" : Integer,\n      \"HealthCheckPath\" : String,\n      \"HealthCheckPort\" : String,\n      \"HealthCheckProtocol\" : String,\n      \"HealthCheckTimeoutSeconds\" : Integer,\n      \"HealthyThresholdCount\" : Integer,\n      \"IpAddressType\" : String,\n      \"Matcher\" : Matcher,\n      \"Name\" : String,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"ProtocolVersion\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetGroupAttributes\" : [ TargetGroupAttribute, ... ],\n      \"Targets\" : [ TargetDescription, ... ],\n      \"TargetType\" : String,\n      \"UnhealthyThresholdCount\" : Integer,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::TargetGroup\nProperties:\n  HealthCheckEnabled: Boolean\n  HealthCheckIntervalSeconds: Integer\n  HealthCheckPath: String\n  HealthCheckPort: String\n  HealthCheckProtocol: String\n  HealthCheckTimeoutSeconds: Integer\n  HealthyThresholdCount: Integer\n  IpAddressType: String\n  Matcher: \n    Matcher\n  Name: String\n  Port: Integer\n  Protocol: String\n  ProtocolVersion: String\n  Tags: \n    - Tag\n  TargetGroupAttributes: \n    - TargetGroupAttribute\n  Targets: \n    - TargetDescription\n  TargetType: String\n  UnhealthyThresholdCount: Integer\n  VpcId: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::TrustStore","awsResourceTypeName":"elasticloadbalancingv2-truststore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::TrustStore\",\n  \"Properties\" : {\n      \"CaCertificatesBundleS3Bucket\" : String,\n      \"CaCertificatesBundleS3Key\" : String,\n      \"CaCertificatesBundleS3ObjectVersion\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::TrustStore\nProperties:\n  CaCertificatesBundleS3Bucket: String\n  CaCertificatesBundleS3Key: String\n  CaCertificatesBundleS3ObjectVersion: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::TrustStoreRevocation","awsResourceTypeName":"elasticloadbalancingv2-truststorerevocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::TrustStoreRevocation\",\n  \"Properties\" : {\n      \"RevocationContents\" : [ RevocationContent, ... ],\n      \"TrustStoreArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::TrustStoreRevocation\nProperties:\n  RevocationContents: \n    - RevocationContent\n  TrustStoreArn: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::EMR::Cluster","awsResourceTypeName":"emr-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::Cluster\",\n  \"Properties\" : {\n      \"AdditionalInfo\" : Json,\n      \"Applications\" : [ Application, ... ],\n      \"AutoScalingRole\" : String,\n      \"AutoTerminationPolicy\" : AutoTerminationPolicy,\n      \"BootstrapActions\" : [ BootstrapActionConfig, ... ],\n      \"Configurations\" : [ Configuration, ... ],\n      \"CustomAmiId\" : String,\n      \"EbsRootVolumeIops\" : Integer,\n      \"EbsRootVolumeSize\" : Integer,\n      \"EbsRootVolumeThroughput\" : Integer,\n      \"Instances\" : JobFlowInstancesConfig,\n      \"JobFlowRole\" : String,\n      \"KerberosAttributes\" : KerberosAttributes,\n      \"LogEncryptionKmsKeyId\" : String,\n      \"LogUri\" : String,\n      \"ManagedScalingPolicy\" : ManagedScalingPolicy,\n      \"Name\" : String,\n      \"OSReleaseLabel\" : String,\n      \"PlacementGroupConfigs\" : [ PlacementGroupConfig, ... ],\n      \"ReleaseLabel\" : String,\n      \"ScaleDownBehavior\" : String,\n      \"SecurityConfiguration\" : String,\n      \"ServiceRole\" : String,\n      \"StepConcurrencyLevel\" : Integer,\n      \"Steps\" : [ StepConfig, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VisibleToAllUsers\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::Cluster\nProperties:\n  AdditionalInfo: Json\n  Applications: \n    - Application\n  AutoScalingRole: String\n  AutoTerminationPolicy: \n    AutoTerminationPolicy\n  BootstrapActions: \n    - BootstrapActionConfig\n  Configurations: \n    - Configuration\n  CustomAmiId: String\n  EbsRootVolumeIops: Integer\n  EbsRootVolumeSize: Integer\n  EbsRootVolumeThroughput: Integer\n  Instances: \n    JobFlowInstancesConfig\n  JobFlowRole: String\n  KerberosAttributes: \n    KerberosAttributes\n  LogEncryptionKmsKeyId: String\n  LogUri: String\n  ManagedScalingPolicy: \n    ManagedScalingPolicy\n  Name: String\n  OSReleaseLabel: String\n  PlacementGroupConfigs: \n    - PlacementGroupConfig\n  ReleaseLabel: String\n  ScaleDownBehavior: String\n  SecurityConfiguration: String\n  ServiceRole: String\n  StepConcurrencyLevel: Integer\n  Steps: \n    - StepConfig\n  Tags: \n    - Tag\n  VisibleToAllUsers: Boolean\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::InstanceFleetConfig","awsResourceTypeName":"emr-instancefleetconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::InstanceFleetConfig\",\n  \"Properties\" : {\n      \"ClusterId\" : String,\n      \"InstanceFleetType\" : String,\n      \"InstanceTypeConfigs\" : [ InstanceTypeConfig, ... ],\n      \"LaunchSpecifications\" : InstanceFleetProvisioningSpecifications,\n      \"Name\" : String,\n      \"TargetOnDemandCapacity\" : Integer,\n      \"TargetSpotCapacity\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::InstanceFleetConfig\nProperties:\n  ClusterId: String\n  InstanceFleetType: String\n  InstanceTypeConfigs: \n    - InstanceTypeConfig\n  LaunchSpecifications: \n    InstanceFleetProvisioningSpecifications\n  Name: String\n  TargetOnDemandCapacity: Integer\n  TargetSpotCapacity: Integer\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::InstanceGroupConfig","awsResourceTypeName":"emr-instancegroupconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::InstanceGroupConfig\",\n  \"Properties\" : {\n      \"AutoScalingPolicy\" : AutoScalingPolicy,\n      \"BidPrice\" : String,\n      \"Configurations\" : [ Configuration, ... ],\n      \"CustomAmiId\" : String,\n      \"EbsConfiguration\" : EbsConfiguration,\n      \"InstanceCount\" : Integer,\n      \"InstanceRole\" : String,\n      \"InstanceType\" : String,\n      \"JobFlowId\" : String,\n      \"Market\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::InstanceGroupConfig\nProperties:\n  AutoScalingPolicy: \n    AutoScalingPolicy\n  BidPrice: String\n  Configurations: \n    - Configuration\n  CustomAmiId: String\n  EbsConfiguration: \n    EbsConfiguration\n  InstanceCount: Integer\n  InstanceRole: String\n  InstanceType: String\n  JobFlowId: String\n  Market: String\n  Name: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::SecurityConfiguration","awsResourceTypeName":"emr-securityconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::SecurityConfiguration\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SecurityConfiguration\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::SecurityConfiguration\nProperties:\n  Name: String\n  SecurityConfiguration: Json\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::Step","awsResourceTypeName":"emr-step","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::Step\",\n  \"Properties\" : {\n      \"ActionOnFailure\" : String,\n      \"HadoopJarStep\" : HadoopJarStepConfig,\n      \"JobFlowId\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::Step\nProperties:\n  ActionOnFailure: String\n  HadoopJarStep: \n    HadoopJarStepConfig\n  JobFlowId: String\n  Name: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::Studio","awsResourceTypeName":"emr-studio","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::Studio\",\n  \"Properties\" : {\n      \"AuthMode\" : String,\n      \"DefaultS3Location\" : String,\n      \"Description\" : String,\n      \"EncryptionKeyArn\" : String,\n      \"EngineSecurityGroupId\" : String,\n      \"IdcInstanceArn\" : String,\n      \"IdcUserAssignment\" : String,\n      \"IdpAuthUrl\" : String,\n      \"IdpRelayStateParameterName\" : String,\n      \"Name\" : String,\n      \"ServiceRole\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TrustedIdentityPropagationEnabled\" : Boolean,\n      \"UserRole\" : String,\n      \"VpcId\" : String,\n      \"WorkspaceSecurityGroupId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::Studio\nProperties:\n  AuthMode: String\n  DefaultS3Location: String\n  Description: String\n  EncryptionKeyArn: String\n  EngineSecurityGroupId: String\n  IdcInstanceArn: String\n  IdcUserAssignment: String\n  IdpAuthUrl: String\n  IdpRelayStateParameterName: String\n  Name: String\n  ServiceRole: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  TrustedIdentityPropagationEnabled: Boolean\n  UserRole: String\n  VpcId: String\n  WorkspaceSecurityGroupId: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::StudioSessionMapping","awsResourceTypeName":"emr-studiosessionmapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::StudioSessionMapping\",\n  \"Properties\" : {\n      \"IdentityName\" : String,\n      \"IdentityType\" : String,\n      \"SessionPolicyArn\" : String,\n      \"StudioId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::StudioSessionMapping\nProperties:\n  IdentityName: String\n  IdentityType: String\n  SessionPolicyArn: String\n  StudioId: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::WALWorkspace","awsResourceTypeName":"emr-walworkspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::WALWorkspace\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"WALWorkspaceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::WALWorkspace\nProperties:\n  Tags: \n    - Tag\n  WALWorkspaceName: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMRServerless::Application","awsResourceTypeName":"emrserverless-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMRServerless::Application\",\n  \"Properties\" : {\n      \"Architecture\" : String,\n      \"AutoStartConfiguration\" : AutoStartConfiguration,\n      \"AutoStopConfiguration\" : AutoStopConfiguration,\n      \"ImageConfiguration\" : ImageConfigurationInput,\n      \"InitialCapacity\" : [ InitialCapacityConfigKeyValuePair, ... ],\n      \"MaximumCapacity\" : MaximumAllowedResources,\n      \"MonitoringConfiguration\" : MonitoringConfiguration,\n      \"Name\" : String,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"ReleaseLabel\" : String,\n      \"RuntimeConfiguration\" : [ ConfigurationObject, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"WorkerTypeSpecifications\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMRServerless::Application\nProperties:\n  Architecture: String\n  AutoStartConfiguration: \n    AutoStartConfiguration\n  AutoStopConfiguration: \n    AutoStopConfiguration\n  ImageConfiguration: \n    ImageConfigurationInput\n  InitialCapacity: \n    - InitialCapacityConfigKeyValuePair\n  MaximumCapacity: \n    MaximumAllowedResources\n  MonitoringConfiguration: \n    MonitoringConfiguration\n  Name: String\n  NetworkConfiguration: \n    NetworkConfiguration\n  ReleaseLabel: String\n  RuntimeConfiguration: \n    - ConfigurationObject\n  Tags: \n    - Tag\n  Type: String\n  WorkerTypeSpecifications: \n    Key: Value\n","awsServiceName":"EMRServerless","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMRContainers::VirtualCluster","awsResourceTypeName":"emrcontainers-virtualcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMRContainers::VirtualCluster\",\n  \"Properties\" : {\n      \"ContainerProvider\" : ContainerProvider,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMRContainers::VirtualCluster\nProperties:\n  ContainerProvider: \n    ContainerProvider\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"EMRContainers","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElastiCache::CacheCluster","awsResourceTypeName":"elasticache-cachecluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::CacheCluster\",\n  \"Properties\" : {\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AZMode\" : String,\n      \"CacheNodeType\" : String,\n      \"CacheParameterGroupName\" : String,\n      \"CacheSecurityGroupNames\" : [ String, ... ],\n      \"CacheSubnetGroupName\" : String,\n      \"ClusterName\" : String,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"IpDiscovery\" : String,\n      \"LogDeliveryConfigurations\" : [ LogDeliveryConfigurationRequest, ... ],\n      \"NetworkType\" : String,\n      \"NotificationTopicArn\" : String,\n      \"NumCacheNodes\" : Integer,\n      \"Port\" : Integer,\n      \"PreferredAvailabilityZone\" : String,\n      \"PreferredAvailabilityZones\" : [ String, ... ],\n      \"PreferredMaintenanceWindow\" : String,\n      \"SnapshotArns\" : [ String, ... ],\n      \"SnapshotName\" : String,\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SnapshotWindow\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitEncryptionEnabled\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::CacheCluster\nProperties:\n  AutoMinorVersionUpgrade: Boolean\n  AZMode: String\n  CacheNodeType: String\n  CacheParameterGroupName: String\n  CacheSecurityGroupNames: \n    - String\n  CacheSubnetGroupName: String\n  ClusterName: String\n  Engine: String\n  EngineVersion: String\n  IpDiscovery: String\n  LogDeliveryConfigurations: \n    - LogDeliveryConfigurationRequest\n  NetworkType: String\n  NotificationTopicArn: String\n  NumCacheNodes: Integer\n  Port: Integer\n  PreferredAvailabilityZone: String\n  PreferredAvailabilityZones: \n    - String\n  PreferredMaintenanceWindow: String\n  SnapshotArns: \n    - String\n  SnapshotName: String\n  SnapshotRetentionLimit: Integer\n  SnapshotWindow: String\n  Tags: \n    - Tag\n  TransitEncryptionEnabled: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::GlobalReplicationGroup","awsResourceTypeName":"elasticache-globalreplicationgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::GlobalReplicationGroup\",\n  \"Properties\" : {\n      \"AutomaticFailoverEnabled\" : Boolean,\n      \"CacheNodeType\" : String,\n      \"CacheParameterGroupName\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalNodeGroupCount\" : Integer,\n      \"GlobalReplicationGroupDescription\" : String,\n      \"GlobalReplicationGroupIdSuffix\" : String,\n      \"Members\" : [ GlobalReplicationGroupMember, ... ],\n      \"RegionalConfigurations\" : [ RegionalConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::GlobalReplicationGroup\nProperties:\n  AutomaticFailoverEnabled: Boolean\n  CacheNodeType: String\n  CacheParameterGroupName: String\n  EngineVersion: String\n  GlobalNodeGroupCount: Integer\n  GlobalReplicationGroupDescription: String\n  GlobalReplicationGroupIdSuffix: String\n  Members: \n    - GlobalReplicationGroupMember\n  RegionalConfigurations: \n    - RegionalConfiguration\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::ParameterGroup","awsResourceTypeName":"elasticache-parametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::ParameterGroup\",\n  \"Properties\" : {\n      \"CacheParameterGroupFamily\" : String,\n      \"Description\" : String,\n      \"Properties\" : {Key: Value, ...},\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::ParameterGroup\nProperties:\n  CacheParameterGroupFamily: String\n  Description: String\n  Properties: \n    Key: Value\n  Tags: \n    - Tag\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::ReplicationGroup","awsResourceTypeName":"elasticache-replicationgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::ReplicationGroup\",\n  \"Properties\" : {\n      \"AtRestEncryptionEnabled\" : Boolean,\n      \"AuthToken\" : String,\n      \"AutomaticFailoverEnabled\" : Boolean,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"CacheNodeType\" : String,\n      \"CacheParameterGroupName\" : String,\n      \"CacheSecurityGroupNames\" : [ String, ... ],\n      \"CacheSubnetGroupName\" : String,\n      \"ClusterMode\" : String,\n      \"DataTieringEnabled\" : Boolean,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalReplicationGroupId\" : String,\n      \"IpDiscovery\" : String,\n      \"KmsKeyId\" : String,\n      \"LogDeliveryConfigurations\" : [ LogDeliveryConfigurationRequest, ... ],\n      \"MultiAZEnabled\" : Boolean,\n      \"NetworkType\" : String,\n      \"NodeGroupConfiguration\" : [ NodeGroupConfiguration, ... ],\n      \"NotificationTopicArn\" : String,\n      \"NumCacheClusters\" : Integer,\n      \"NumNodeGroups\" : Integer,\n      \"Port\" : Integer,\n      \"PreferredCacheClusterAZs\" : [ String, ... ],\n      \"PreferredMaintenanceWindow\" : String,\n      \"PrimaryClusterId\" : String,\n      \"ReplicasPerNodeGroup\" : Integer,\n      \"ReplicationGroupDescription\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SnapshotArns\" : [ String, ... ],\n      \"SnapshotName\" : String,\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SnapshottingClusterId\" : String,\n      \"SnapshotWindow\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitEncryptionEnabled\" : Boolean,\n      \"TransitEncryptionMode\" : String,\n      \"UserGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::ReplicationGroup\nProperties:\n  AtRestEncryptionEnabled: Boolean\n  AuthToken: String\n  AutomaticFailoverEnabled: Boolean\n  AutoMinorVersionUpgrade: Boolean\n  CacheNodeType: String\n  CacheParameterGroupName: String\n  CacheSecurityGroupNames: \n    - String\n  CacheSubnetGroupName: String\n  ClusterMode: String\n  DataTieringEnabled: Boolean\n  Engine: String\n  EngineVersion: String\n  GlobalReplicationGroupId: String\n  IpDiscovery: String\n  KmsKeyId: String\n  LogDeliveryConfigurations: \n    - LogDeliveryConfigurationRequest\n  MultiAZEnabled: Boolean\n  NetworkType: String\n  NodeGroupConfiguration: \n    - NodeGroupConfiguration\n  NotificationTopicArn: String\n  NumCacheClusters: Integer\n  NumNodeGroups: Integer\n  Port: Integer\n  PreferredCacheClusterAZs: \n    - String\n  PreferredMaintenanceWindow: String\n  PrimaryClusterId: String\n  ReplicasPerNodeGroup: Integer\n  ReplicationGroupDescription: String\n  SecurityGroupIds: \n    - String\n  SnapshotArns: \n    - String\n  SnapshotName: String\n  SnapshotRetentionLimit: Integer\n  SnapshottingClusterId: String\n  SnapshotWindow: String\n  Tags: \n    - Tag\n  TransitEncryptionEnabled: Boolean\n  TransitEncryptionMode: String\n  UserGroupIds: \n    - String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::SecurityGroup","awsResourceTypeName":"elasticache-securitygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::SecurityGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::SecurityGroup\nProperties:\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::SecurityGroupIngress","awsResourceTypeName":"elasticache-securitygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::SecurityGroupIngress\",\n  \"Properties\" : {\n      \"CacheSecurityGroupName\" : String,\n      \"EC2SecurityGroupName\" : String,\n      \"EC2SecurityGroupOwnerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::SecurityGroupIngress\nProperties:\n  CacheSecurityGroupName: String\n  EC2SecurityGroupName: String\n  EC2SecurityGroupOwnerId: String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::ServerlessCache","awsResourceTypeName":"elasticache-serverlesscache","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::ServerlessCache\",\n  \"Properties\" : {\n      \"CacheUsageLimits\" : CacheUsageLimits,\n      \"DailySnapshotTime\" : String,\n      \"Description\" : String,\n      \"Endpoint\" : Endpoint,\n      \"Engine\" : String,\n      \"FinalSnapshotName\" : String,\n      \"KmsKeyId\" : String,\n      \"MajorEngineVersion\" : String,\n      \"ReaderEndpoint\" : Endpoint,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServerlessCacheName\" : String,\n      \"SnapshotArnsToRestore\" : [ String, ... ],\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserGroupId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::ServerlessCache\nProperties:\n  CacheUsageLimits: \n    CacheUsageLimits\n  DailySnapshotTime: String\n  Description: String\n  Endpoint: \n    Endpoint\n  Engine: String\n  FinalSnapshotName: String\n  KmsKeyId: String\n  MajorEngineVersion: String\n  ReaderEndpoint: \n    Endpoint\n  SecurityGroupIds: \n    - String\n  ServerlessCacheName: String\n  SnapshotArnsToRestore: \n    - String\n  SnapshotRetentionLimit: Integer\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  UserGroupId: String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::SubnetGroup","awsResourceTypeName":"elasticache-subnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::SubnetGroup\",\n  \"Properties\" : {\n      \"CacheSubnetGroupName\" : String,\n      \"Description\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::SubnetGroup\nProperties:\n  CacheSubnetGroupName: String\n  Description: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::User","awsResourceTypeName":"elasticache-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::User\",\n  \"Properties\" : {\n      \"AccessString\" : String,\n      \"AuthenticationMode\" : AuthenticationMode,\n      \"Engine\" : String,\n      \"NoPasswordRequired\" : Boolean,\n      \"Passwords\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserId\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::User\nProperties:\n  AccessString: \n    String\n  AuthenticationMode: \n    AuthenticationMode\n  Engine: String\n  NoPasswordRequired: Boolean\n  Passwords: \n    - String\n  Tags: \n    - Tag\n  UserId: String\n  UserName: String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::UserGroup","awsResourceTypeName":"elasticache-usergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::UserGroup\",\n  \"Properties\" : {\n      \"Engine\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UserGroupId\" : String,\n      \"UserIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::UserGroup\nProperties:\n  Engine: String\n  Tags: \n    - Tag\n  UserGroupId: String\n  UserIds: \n    - String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::IdMappingWorkflow","awsResourceTypeName":"entityresolution-idmappingworkflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::IdMappingWorkflow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IdMappingTechniques\" : IdMappingTechniques,\n      \"InputSourceConfig\" : [ IdMappingWorkflowInputSource, ... ],\n      \"OutputSourceConfig\" : [ IdMappingWorkflowOutputSource, ... ],\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkflowName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::IdMappingWorkflow\nProperties:\n  Description: String\n  IdMappingTechniques: \n    IdMappingTechniques\n  InputSourceConfig: \n    - IdMappingWorkflowInputSource\n  OutputSourceConfig: \n    - IdMappingWorkflowOutputSource\n  RoleArn: String\n  Tags: \n    - Tag\n  WorkflowName: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::IdNamespace","awsResourceTypeName":"entityresolution-idnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::IdNamespace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IdMappingWorkflowProperties\" : [ IdNamespaceIdMappingWorkflowProperties, ... ],\n      \"IdNamespaceName\" : String,\n      \"InputSourceConfig\" : [ IdNamespaceInputSource, ... ],\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::IdNamespace\nProperties:\n  Description: String\n  IdMappingWorkflowProperties: \n    - IdNamespaceIdMappingWorkflowProperties\n  IdNamespaceName: String\n  InputSourceConfig: \n    - IdNamespaceInputSource\n  RoleArn: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::MatchingWorkflow","awsResourceTypeName":"entityresolution-matchingworkflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::MatchingWorkflow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InputSourceConfig\" : [ InputSource, ... ],\n      \"OutputSourceConfig\" : [ OutputSource, ... ],\n      \"ResolutionTechniques\" : ResolutionTechniques,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkflowName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::MatchingWorkflow\nProperties:\n  Description: String\n  InputSourceConfig: \n    - InputSource\n  OutputSourceConfig: \n    - OutputSource\n  ResolutionTechniques: \n    ResolutionTechniques\n  RoleArn: String\n  Tags: \n    - Tag\n  WorkflowName: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::PolicyStatement","awsResourceTypeName":"entityresolution-policystatement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::PolicyStatement\",\n  \"Properties\" : {\n      \"Action\" : [ String, ... ],\n      \"Arn\" : String,\n      \"Condition\" : String,\n      \"Effect\" : String,\n      \"Principal\" : [ String, ... ],\n      \"StatementId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::PolicyStatement\nProperties:\n  Action: \n    - String\n  Arn: String\n  Condition: String\n  Effect: String\n  Principal: \n    - String\n  StatementId: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::SchemaMapping","awsResourceTypeName":"entityresolution-schemamapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::SchemaMapping\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MappedInputFields\" : [ SchemaInputAttribute, ... ],\n      \"SchemaName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::SchemaMapping\nProperties:\n  Description: String\n  MappedInputFields: \n    - SchemaInputAttribute\n  SchemaName: String\n  Tags: \n    - Tag\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::ApiDestination","awsResourceTypeName":"events-apidestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::ApiDestination\",\n  \"Properties\" : {\n      \"ConnectionArn\" : String,\n      \"Description\" : String,\n      \"HttpMethod\" : String,\n      \"InvocationEndpoint\" : String,\n      \"InvocationRateLimitPerSecond\" : Integer,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::ApiDestination\nProperties:\n  ConnectionArn: String\n  Description: String\n  HttpMethod: String\n  InvocationEndpoint: String\n  InvocationRateLimitPerSecond: Integer\n  Name: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Archive","awsResourceTypeName":"events-archive","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Archive\",\n  \"Properties\" : {\n      \"ArchiveName\" : String,\n      \"Description\" : String,\n      \"EventPattern\" : Json,\n      \"RetentionDays\" : Integer,\n      \"SourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Archive\nProperties:\n  ArchiveName: String\n  Description: String\n  EventPattern: Json\n  RetentionDays: Integer\n  SourceArn: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Connection","awsResourceTypeName":"events-connection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Connection\",\n  \"Properties\" : {\n      \"AuthorizationType\" : String,\n      \"AuthParameters\" : AuthParameters,\n      \"Description\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Connection\nProperties:\n  AuthorizationType: String\n  AuthParameters: \n    AuthParameters\n  Description: String\n  Name: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Endpoint","awsResourceTypeName":"events-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Endpoint\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBuses\" : [ EndpointEventBus, ... ],\n      \"Name\" : String,\n      \"ReplicationConfig\" : ReplicationConfig,\n      \"RoleArn\" : String,\n      \"RoutingConfig\" : RoutingConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Endpoint\nProperties:\n  Description: String\n  EventBuses: \n    - EndpointEventBus\n  Name: String\n  ReplicationConfig: \n    ReplicationConfig\n  RoleArn: String\n  RoutingConfig: \n    RoutingConfig\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::EventBus","awsResourceTypeName":"events-eventbus","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::EventBus\",\n  \"Properties\" : {\n      \"EventSourceName\" : String,\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::EventBus\nProperties:\n  EventSourceName: String\n  Name: String\n  Policy: Json\n  Tags: \n    - Tag\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::EventBusPolicy","awsResourceTypeName":"events-eventbuspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::EventBusPolicy\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Condition\" : Condition,\n      \"EventBusName\" : String,\n      \"Principal\" : String,\n      \"Statement\" : Json,\n      \"StatementId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::EventBusPolicy\nProperties:\n  Action: String\n  Condition: \n    Condition\n  EventBusName: String\n  Principal: String\n  Statement: Json\n  StatementId: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Rule","awsResourceTypeName":"events-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Rule\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBusName\" : String,\n      \"EventPattern\" : Json,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"ScheduleExpression\" : String,\n      \"State\" : String,\n      \"Targets\" : [ Target, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Rule\nProperties:\n  Description: String\n  EventBusName: String\n  EventPattern: Json\n  Name: String\n  RoleArn: String\n  ScheduleExpression: String\n  State: String\n  Targets: \n    - Target\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Pipes::Pipe","awsResourceTypeName":"pipes-pipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pipes::Pipe\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DesiredState\" : String,\n      \"Enrichment\" : String,\n      \"EnrichmentParameters\" : PipeEnrichmentParameters,\n      \"LogConfiguration\" : PipeLogConfiguration,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Source\" : String,\n      \"SourceParameters\" : PipeSourceParameters,\n      \"Tags\" : {Key: Value, ...},\n      \"Target\" : String,\n      \"TargetParameters\" : PipeTargetParameters\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pipes::Pipe\nProperties:\n  Description: String\n  DesiredState: String\n  Enrichment: String\n  EnrichmentParameters: \n    PipeEnrichmentParameters\n  LogConfiguration: \n    PipeLogConfiguration\n  Name: String\n  RoleArn: String\n  Source: String\n  SourceParameters: \n    PipeSourceParameters\n  Tags: \n    Key: Value\n  Target: String\n  TargetParameters: \n    PipeTargetParameters\n","awsServiceName":"Pipes","awsServiceCategory":"other"},{"awsResourceType":"AWS::Scheduler::Schedule","awsResourceTypeName":"scheduler-schedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Scheduler::Schedule\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EndDate\" : String,\n      \"FlexibleTimeWindow\" : FlexibleTimeWindow,\n      \"GroupName\" : String,\n      \"KmsKeyArn\" : String,\n      \"Name\" : String,\n      \"ScheduleExpression\" : String,\n      \"ScheduleExpressionTimezone\" : String,\n      \"StartDate\" : String,\n      \"State\" : String,\n      \"Target\" : Target\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Scheduler::Schedule\nProperties:\n  Description: String\n  EndDate: String\n  FlexibleTimeWindow: \n    FlexibleTimeWindow\n  GroupName: String\n  KmsKeyArn: String\n  Name: String\n  ScheduleExpression: String\n  ScheduleExpressionTimezone: String\n  StartDate: String\n  State: String\n  Target: \n    Target\n","awsServiceName":"Scheduler","awsServiceCategory":"other"},{"awsResourceType":"AWS::Scheduler::ScheduleGroup","awsResourceTypeName":"scheduler-schedulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Scheduler::ScheduleGroup\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Scheduler::ScheduleGroup\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Scheduler","awsServiceCategory":"other"},{"awsResourceType":"AWS::EventSchemas::Discoverer","awsResourceTypeName":"eventschemas-discoverer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::Discoverer\",\n  \"Properties\" : {\n      \"CrossAccount\" : Boolean,\n      \"Description\" : String,\n      \"SourceArn\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::Discoverer\nProperties:\n  CrossAccount: Boolean\n  Description: String\n  SourceArn: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::EventSchemas::Registry","awsResourceTypeName":"eventschemas-registry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::Registry\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"RegistryName\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::Registry\nProperties:\n  Description: String\n  RegistryName: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::EventSchemas::RegistryPolicy","awsResourceTypeName":"eventschemas-registrypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::RegistryPolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"RegistryName\" : String,\n      \"RevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::RegistryPolicy\nProperties:\n  Policy: Json\n  RegistryName: String\n  RevisionId: String\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::EventSchemas::Schema","awsResourceTypeName":"eventschemas-schema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::Schema\",\n  \"Properties\" : {\n      \"Content\" : String,\n      \"Description\" : String,\n      \"RegistryName\" : String,\n      \"SchemaName\" : String,\n      \"Tags\" : [ TagsEntry, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::Schema\nProperties:\n  Content: String\n  Description: String\n  RegistryName: String\n  SchemaName: String\n  Tags: \n    - TagsEntry\n  Type: String\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::FinSpace::Environment","awsResourceTypeName":"finspace-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FinSpace::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FederationMode\" : String,\n      \"FederationParameters\" : FederationParameters,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"SuperuserParameters\" : SuperuserParameters,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FinSpace::Environment\nProperties:\n  Description: String\n  FederationMode: String\n  FederationParameters: \n    FederationParameters\n  KmsKeyId: String\n  Name: String\n  SuperuserParameters: \n    SuperuserParameters\n  Tags: \n    - Tag\n","awsServiceName":"FinSpace","awsServiceCategory":"other"},{"awsResourceType":"AWS::FIS::ExperimentTemplate","awsResourceTypeName":"fis-experimenttemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FIS::ExperimentTemplate\",\n  \"Properties\" : {\n      \"Actions\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"ExperimentOptions\" : ExperimentTemplateExperimentOptions,\n      \"LogConfiguration\" : ExperimentTemplateLogConfiguration,\n      \"RoleArn\" : String,\n      \"StopConditions\" : [ ExperimentTemplateStopCondition, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Targets\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FIS::ExperimentTemplate\nProperties:\n  Actions: \n    Key: Value\n  Description: String\n  ExperimentOptions: \n    ExperimentTemplateExperimentOptions\n  LogConfiguration: \n    ExperimentTemplateLogConfiguration\n  RoleArn: String\n  StopConditions: \n    - ExperimentTemplateStopCondition\n  Tags: \n    Key: Value\n  Targets: \n    Key: Value\n","awsServiceName":"FIS","awsServiceCategory":"other"},{"awsResourceType":"AWS::FIS::TargetAccountConfiguration","awsResourceTypeName":"fis-targetaccountconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FIS::TargetAccountConfiguration\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"Description\" : String,\n      \"ExperimentTemplateId\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FIS::TargetAccountConfiguration\nProperties:\n  AccountId: String\n  Description: String\n  ExperimentTemplateId: String\n  RoleArn: String\n","awsServiceName":"FIS","awsServiceCategory":"other"},{"awsResourceType":"AWS::FMS::NotificationChannel","awsResourceTypeName":"fms-notificationchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FMS::NotificationChannel\",\n  \"Properties\" : {\n      \"SnsRoleName\" : String,\n      \"SnsTopicArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FMS::NotificationChannel\nProperties:\n  SnsRoleName: String\n  SnsTopicArn: String\n","awsServiceName":"FMS","awsServiceCategory":"security"},{"awsResourceType":"AWS::FMS::Policy","awsResourceTypeName":"fms-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FMS::Policy\",\n  \"Properties\" : {\n      \"DeleteAllPolicyResources\" : Boolean,\n      \"ExcludeMap\" : IEMap,\n      \"ExcludeResourceTags\" : Boolean,\n      \"IncludeMap\" : IEMap,\n      \"PolicyDescription\" : String,\n      \"PolicyName\" : String,\n      \"RemediationEnabled\" : Boolean,\n      \"ResourcesCleanUp\" : Boolean,\n      \"ResourceSetIds\" : [ String, ... ],\n      \"ResourceTags\" : [ ResourceTag, ... ],\n      \"ResourceType\" : String,\n      \"ResourceTypeList\" : [ String, ... ],\n      \"SecurityServicePolicyData\" : SecurityServicePolicyData,\n      \"Tags\" : [ PolicyTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FMS::Policy\nProperties:\n  DeleteAllPolicyResources: Boolean\n  ExcludeMap: \n    IEMap\n  ExcludeResourceTags: Boolean\n  IncludeMap: \n    IEMap\n  PolicyDescription: String\n  PolicyName: String\n  RemediationEnabled: Boolean\n  ResourcesCleanUp: Boolean\n  ResourceSetIds: \n    - String\n  ResourceTags: \n    - ResourceTag\n  ResourceType: String\n  ResourceTypeList: \n    - String\n  SecurityServicePolicyData: \n    SecurityServicePolicyData\n  Tags: \n    - PolicyTag\n","awsServiceName":"FMS","awsServiceCategory":"security"},{"awsResourceType":"AWS::FMS::ResourceSet","awsResourceTypeName":"fms-resourceset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FMS::ResourceSet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Resources\" : [ String, ... ],\n      \"ResourceTypeList\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FMS::ResourceSet\nProperties:\n  Description: String\n  Name: String\n  Resources: \n    - String\n  ResourceTypeList: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"FMS","awsServiceCategory":"security"},{"awsResourceType":"AWS::Forecast::Dataset","awsResourceTypeName":"forecast-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Forecast::Dataset\",\n  \"Properties\" : {\n      \"DataFrequency\" : String,\n      \"DatasetName\" : String,\n      \"DatasetType\" : String,\n      \"Domain\" : String,\n      \"EncryptionConfig\" : EncryptionConfig,\n      \"Schema\" : Schema,\n      \"Tags\" : [ TagsItems, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Forecast::Dataset\nProperties:\n  DataFrequency: String\n  DatasetName: String\n  DatasetType: String\n  Domain: String\n  EncryptionConfig: \n    EncryptionConfig\n  Schema: \n    Schema\n  Tags: \n    - TagsItems\n","awsServiceName":"Forecast","awsServiceCategory":"financial"},{"awsResourceType":"AWS::Forecast::DatasetGroup","awsResourceTypeName":"forecast-datasetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Forecast::DatasetGroup\",\n  \"Properties\" : {\n      \"DatasetArns\" : [ String, ... ],\n      \"DatasetGroupName\" : String,\n      \"Domain\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Forecast::DatasetGroup\nProperties:\n  DatasetArns: \n    - String\n  DatasetGroupName: String\n  Domain: String\n  Tags: \n    - Tag\n","awsServiceName":"Forecast","awsServiceCategory":"financial"},{"awsResourceType":"AWS::FraudDetector::Detector","awsResourceTypeName":"frauddetector-detector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Detector\",\n  \"Properties\" : {\n      \"AssociatedModels\" : [ Model, ... ],\n      \"Description\" : String,\n      \"DetectorId\" : String,\n      \"DetectorVersionStatus\" : String,\n      \"EventType\" : EventType,\n      \"RuleExecutionMode\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Detector\nProperties:\n  AssociatedModels: \n    - Model\n  Description: String\n  DetectorId: String\n  DetectorVersionStatus: String\n  EventType: \n    EventType\n  RuleExecutionMode: String\n  Rules: \n    - Rule\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::EntityType","awsResourceTypeName":"frauddetector-entitytype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::EntityType\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::EntityType\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::EventType","awsResourceTypeName":"frauddetector-eventtype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::EventType\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EntityTypes\" : [ EntityType, ... ],\n      \"EventVariables\" : [ EventVariable, ... ],\n      \"Labels\" : [ Label, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::EventType\nProperties:\n  Description: String\n  EntityTypes: \n    - EntityType\n  EventVariables: \n    - EventVariable\n  Labels: \n    - Label\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::Label","awsResourceTypeName":"frauddetector-label","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Label\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Label\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::List","awsResourceTypeName":"frauddetector-list","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::List\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Elements\" : [ String, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VariableType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::List\nProperties:\n  Description: String\n  Elements: \n    - String\n  Name: String\n  Tags: \n    - Tag\n  VariableType: String\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::Outcome","awsResourceTypeName":"frauddetector-outcome","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Outcome\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Outcome\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::Variable","awsResourceTypeName":"frauddetector-variable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Variable\",\n  \"Properties\" : {\n      \"DataSource\" : String,\n      \"DataType\" : String,\n      \"DefaultValue\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VariableType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Variable\nProperties:\n  DataSource: String\n  DataType: String\n  DefaultValue: String\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  VariableType: String\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FSx::DataRepositoryAssociation","awsResourceTypeName":"fsx-datarepositoryassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::DataRepositoryAssociation\",\n  \"Properties\" : {\n      \"BatchImportMetaDataOnCreate\" : Boolean,\n      \"DataRepositoryPath\" : String,\n      \"FileSystemId\" : String,\n      \"FileSystemPath\" : String,\n      \"ImportedFileChunkSize\" : Integer,\n      \"S3\" : S3,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::DataRepositoryAssociation\nProperties:\n  BatchImportMetaDataOnCreate: Boolean\n  DataRepositoryPath: String\n  FileSystemId: String\n  FileSystemPath: String\n  ImportedFileChunkSize: Integer\n  S3: \n    S3\n  Tags: \n    - Tag\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::FileSystem","awsResourceTypeName":"fsx-filesystem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::FileSystem\",\n  \"Properties\" : {\n      \"BackupId\" : String,\n      \"FileSystemType\" : String,\n      \"FileSystemTypeVersion\" : String,\n      \"KmsKeyId\" : String,\n      \"LustreConfiguration\" : LustreConfiguration,\n      \"OntapConfiguration\" : OntapConfiguration,\n      \"OpenZFSConfiguration\" : OpenZFSConfiguration,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"StorageCapacity\" : Integer,\n      \"StorageType\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WindowsConfiguration\" : WindowsConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::FileSystem\nProperties:\n  BackupId: String\n  FileSystemType: String\n  FileSystemTypeVersion: String\n  KmsKeyId: String\n  LustreConfiguration: \n    LustreConfiguration\n  OntapConfiguration: \n    OntapConfiguration\n  OpenZFSConfiguration: \n    OpenZFSConfiguration\n  SecurityGroupIds: \n    - String\n  StorageCapacity: Integer\n  StorageType: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  WindowsConfiguration: \n    WindowsConfiguration\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::Snapshot","awsResourceTypeName":"fsx-snapshot","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::Snapshot\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VolumeId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::Snapshot\nProperties:\n  Name: String\n  Tags: \n    - Tag\n  VolumeId: String\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::StorageVirtualMachine","awsResourceTypeName":"fsx-storagevirtualmachine","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::StorageVirtualMachine\",\n  \"Properties\" : {\n      \"ActiveDirectoryConfiguration\" : ActiveDirectoryConfiguration,\n      \"FileSystemId\" : String,\n      \"Name\" : String,\n      \"RootVolumeSecurityStyle\" : String,\n      \"SvmAdminPassword\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::StorageVirtualMachine\nProperties:\n  ActiveDirectoryConfiguration: \n    ActiveDirectoryConfiguration\n  FileSystemId: String\n  Name: String\n  RootVolumeSecurityStyle: String\n  SvmAdminPassword: String\n  Tags: \n    - Tag\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::Volume","awsResourceTypeName":"fsx-volume","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::Volume\",\n  \"Properties\" : {\n      \"BackupId\" : String,\n      \"Name\" : String,\n      \"OntapConfiguration\" : OntapConfiguration,\n      \"OpenZFSConfiguration\" : OpenZFSConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"VolumeType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::Volume\nProperties:\n  BackupId: String\n  Name: String\n  OntapConfiguration: \n    OntapConfiguration\n  OpenZFSConfiguration: \n    OpenZFSConfiguration\n  Tags: \n    - Tag\n  VolumeType: String\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::GameLift::Alias","awsResourceTypeName":"gamelift-alias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Alias\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RoutingStrategy\" : RoutingStrategy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Alias\nProperties:\n  Description: String\n  Name: String\n  RoutingStrategy: \n    RoutingStrategy\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Build","awsResourceTypeName":"gamelift-build","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Build\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"OperatingSystem\" : String,\n      \"ServerSdkVersion\" : String,\n      \"StorageLocation\" : StorageLocation,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Build\nProperties:\n  Name: String\n  OperatingSystem: String\n  ServerSdkVersion: String\n  StorageLocation: \n    StorageLocation\n  Version: String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Fleet","awsResourceTypeName":"gamelift-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Fleet\",\n  \"Properties\" : {\n      \"AnywhereConfiguration\" : AnywhereConfiguration,\n      \"ApplyCapacity\" : String,\n      \"BuildId\" : String,\n      \"CertificateConfiguration\" : CertificateConfiguration,\n      \"ComputeType\" : String,\n      \"Description\" : String,\n      \"DesiredEC2Instances\" : Integer,\n      \"EC2InboundPermissions\" : [ IpPermission, ... ],\n      \"EC2InstanceType\" : String,\n      \"FleetType\" : String,\n      \"InstanceRoleARN\" : String,\n      \"InstanceRoleCredentialsProvider\" : String,\n      \"Locations\" : [ LocationConfiguration, ... ],\n      \"MaxSize\" : Integer,\n      \"MetricGroups\" : [ String, ... ],\n      \"MinSize\" : Integer,\n      \"Name\" : String,\n      \"NewGameSessionProtectionPolicy\" : String,\n      \"PeerVpcAwsAccountId\" : String,\n      \"PeerVpcId\" : String,\n      \"ResourceCreationLimitPolicy\" : ResourceCreationLimitPolicy,\n      \"RuntimeConfiguration\" : RuntimeConfiguration,\n      \"ScalingPolicies\" : [ ScalingPolicy, ... ],\n      \"ScriptId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Fleet\nProperties:\n  AnywhereConfiguration: \n    AnywhereConfiguration\n  ApplyCapacity: String\n  BuildId: String\n  CertificateConfiguration: \n    CertificateConfiguration\n  ComputeType: String\n  Description: String\n  DesiredEC2Instances: Integer\n  EC2InboundPermissions: \n    - IpPermission\n  EC2InstanceType: String\n  FleetType: String\n  InstanceRoleARN: String\n  InstanceRoleCredentialsProvider: String\n  Locations: \n    - LocationConfiguration\n  MaxSize: Integer\n  MetricGroups: \n    - String\n  MinSize: Integer\n  Name: String\n  NewGameSessionProtectionPolicy: String\n  PeerVpcAwsAccountId: String\n  PeerVpcId: String\n  ResourceCreationLimitPolicy: \n    ResourceCreationLimitPolicy\n  RuntimeConfiguration: \n    RuntimeConfiguration\n  ScalingPolicies: \n    - ScalingPolicy\n  ScriptId: String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::GameServerGroup","awsResourceTypeName":"gamelift-gameservergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::GameServerGroup\",\n  \"Properties\" : {\n      \"AutoScalingPolicy\" : AutoScalingPolicy,\n      \"BalancingStrategy\" : String,\n      \"DeleteOption\" : String,\n      \"GameServerGroupName\" : String,\n      \"GameServerProtectionPolicy\" : String,\n      \"InstanceDefinitions\" : [ InstanceDefinition, ... ],\n      \"LaunchTemplate\" : LaunchTemplate,\n      \"MaxSize\" : Number,\n      \"MinSize\" : Number,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSubnets\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::GameServerGroup\nProperties:\n  AutoScalingPolicy: \n    AutoScalingPolicy\n  BalancingStrategy: String\n  DeleteOption: String\n  GameServerGroupName: String\n  GameServerProtectionPolicy: String\n  InstanceDefinitions: \n    - InstanceDefinition\n  LaunchTemplate: \n    LaunchTemplate\n  MaxSize: Number\n  MinSize: Number\n  RoleArn: String\n  Tags: \n    - Tag\n  VpcSubnets: \n    - String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::GameSessionQueue","awsResourceTypeName":"gamelift-gamesessionqueue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::GameSessionQueue\",\n  \"Properties\" : {\n      \"CustomEventData\" : String,\n      \"Destinations\" : [ GameSessionQueueDestination, ... ],\n      \"FilterConfiguration\" : FilterConfiguration,\n      \"Name\" : String,\n      \"NotificationTarget\" : String,\n      \"PlayerLatencyPolicies\" : [ PlayerLatencyPolicy, ... ],\n      \"PriorityConfiguration\" : PriorityConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeoutInSeconds\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::GameSessionQueue\nProperties:\n  CustomEventData: String\n  Destinations: \n    - GameSessionQueueDestination\n  FilterConfiguration: \n    FilterConfiguration\n  Name: String\n  NotificationTarget: String\n  PlayerLatencyPolicies: \n    - PlayerLatencyPolicy\n  PriorityConfiguration: \n    PriorityConfiguration\n  Tags: \n    - Tag\n  TimeoutInSeconds: Integer\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Location","awsResourceTypeName":"gamelift-location","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Location\",\n  \"Properties\" : {\n      \"LocationName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Location\nProperties:\n  LocationName: String\n  Tags: \n    - Tag\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::MatchmakingConfiguration","awsResourceTypeName":"gamelift-matchmakingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::MatchmakingConfiguration\",\n  \"Properties\" : {\n      \"AcceptanceRequired\" : Boolean,\n      \"AcceptanceTimeoutSeconds\" : Integer,\n      \"AdditionalPlayerCount\" : Integer,\n      \"BackfillMode\" : String,\n      \"CreationTime\" : String,\n      \"CustomEventData\" : String,\n      \"Description\" : String,\n      \"FlexMatchMode\" : String,\n      \"GameProperties\" : [ GameProperty, ... ],\n      \"GameSessionData\" : String,\n      \"GameSessionQueueArns\" : [ String, ... ],\n      \"Name\" : String,\n      \"NotificationTarget\" : String,\n      \"RequestTimeoutSeconds\" : Integer,\n      \"RuleSetArn\" : String,\n      \"RuleSetName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::MatchmakingConfiguration\nProperties:\n  AcceptanceRequired: Boolean\n  AcceptanceTimeoutSeconds: Integer\n  AdditionalPlayerCount: Integer\n  BackfillMode: String\n  CreationTime: String\n  CustomEventData: String\n  Description: String\n  FlexMatchMode: String\n  GameProperties: \n    - GameProperty\n  GameSessionData: String\n  GameSessionQueueArns: \n    - String\n  Name: String\n  NotificationTarget: String\n  RequestTimeoutSeconds: Integer\n  RuleSetArn: String\n  RuleSetName: String\n  Tags: \n    - Tag\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::MatchmakingRuleSet","awsResourceTypeName":"gamelift-matchmakingruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::MatchmakingRuleSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RuleSetBody\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::MatchmakingRuleSet\nProperties:\n  Name: String\n  RuleSetBody: String\n  Tags: \n    - Tag\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Script","awsResourceTypeName":"gamelift-script","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Script\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"StorageLocation\" : S3Location,\n      \"Tags\" : [ Tag, ... ],\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Script\nProperties:\n  Name: String\n  StorageLocation: \n    S3Location\n  Tags: \n    - Tag\n  Version: String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GlobalAccelerator::Accelerator","awsResourceTypeName":"globalaccelerator-accelerator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::Accelerator\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"IpAddresses\" : [ String, ... ],\n      \"IpAddressType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::Accelerator\nProperties:\n  Enabled: Boolean\n  IpAddresses: \n    - String\n  IpAddressType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::GlobalAccelerator::CrossAccountAttachment","awsResourceTypeName":"globalaccelerator-crossaccountattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::CrossAccountAttachment\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Principals\" : [ String, ... ],\n      \"Resources\" : [ Resource, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::CrossAccountAttachment\nProperties:\n  Name: String\n  Principals: \n    - String\n  Resources: \n    - Resource\n  Tags: \n    - Tag\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::GlobalAccelerator::EndpointGroup","awsResourceTypeName":"globalaccelerator-endpointgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::EndpointGroup\",\n  \"Properties\" : {\n      \"EndpointConfigurations\" : [ EndpointConfiguration, ... ],\n      \"EndpointGroupRegion\" : String,\n      \"HealthCheckIntervalSeconds\" : Integer,\n      \"HealthCheckPath\" : String,\n      \"HealthCheckPort\" : Integer,\n      \"HealthCheckProtocol\" : String,\n      \"ListenerArn\" : String,\n      \"PortOverrides\" : [ PortOverride, ... ],\n      \"ThresholdCount\" : Integer,\n      \"TrafficDialPercentage\" : Number\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::EndpointGroup\nProperties:\n  EndpointConfigurations: \n    - EndpointConfiguration\n  EndpointGroupRegion: String\n  HealthCheckIntervalSeconds: Integer\n  HealthCheckPath: String\n  HealthCheckPort: Integer\n  HealthCheckProtocol: String\n  ListenerArn: String\n  PortOverrides: \n    - PortOverride\n  ThresholdCount: Integer\n  TrafficDialPercentage: Number\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::GlobalAccelerator::Listener","awsResourceTypeName":"globalaccelerator-listener","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::Listener\",\n  \"Properties\" : {\n      \"AcceleratorArn\" : String,\n      \"ClientAffinity\" : String,\n      \"PortRanges\" : [ PortRange, ... ],\n      \"Protocol\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::Listener\nProperties:\n  AcceleratorArn: String\n  ClientAffinity: String\n  PortRanges: \n    - PortRange\n  Protocol: String\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Glue::Classifier","awsResourceTypeName":"glue-classifier","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Classifier\",\n  \"Properties\" : {\n      \"CsvClassifier\" : CsvClassifier,\n      \"GrokClassifier\" : GrokClassifier,\n      \"JsonClassifier\" : JsonClassifier,\n      \"XMLClassifier\" : XMLClassifier\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Classifier\nProperties:\n  CsvClassifier: \n    CsvClassifier\n  GrokClassifier: \n    GrokClassifier\n  JsonClassifier: \n    JsonClassifier\n  XMLClassifier: \n    XMLClassifier\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Connection","awsResourceTypeName":"glue-connection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Connection\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"ConnectionInput\" : ConnectionInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Connection\nProperties:\n  CatalogId: String\n  ConnectionInput: \n    ConnectionInput\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Crawler","awsResourceTypeName":"glue-crawler","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Crawler\",\n  \"Properties\" : {\n      \"Classifiers\" : [ String, ... ],\n      \"Configuration\" : String,\n      \"CrawlerSecurityConfiguration\" : String,\n      \"DatabaseName\" : String,\n      \"Description\" : String,\n      \"LakeFormationConfiguration\" : LakeFormationConfiguration,\n      \"Name\" : String,\n      \"RecrawlPolicy\" : RecrawlPolicy,\n      \"Role\" : String,\n      \"Schedule\" : Schedule,\n      \"SchemaChangePolicy\" : SchemaChangePolicy,\n      \"TablePrefix\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Targets\" : Targets\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Crawler\nProperties:\n  Classifiers: \n    - String\n  Configuration: String\n  CrawlerSecurityConfiguration: String\n  DatabaseName: String\n  Description: String\n  LakeFormationConfiguration: \n    LakeFormationConfiguration\n  Name: String\n  RecrawlPolicy: \n    RecrawlPolicy\n  Role: String\n  Schedule: \n    Schedule\n  SchemaChangePolicy: \n    SchemaChangePolicy\n  TablePrefix: String\n  Tags: \n    - Tag\n  Targets: \n    Targets\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::CustomEntityType","awsResourceTypeName":"glue-customentitytype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::CustomEntityType\",\n  \"Properties\" : {\n      \"ContextWords\" : [ String, ... ],\n      \"Name\" : String,\n      \"RegexString\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::CustomEntityType\nProperties:\n  ContextWords: \n    - String\n  Name: String\n  RegexString: \n    String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Database","awsResourceTypeName":"glue-database","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Database\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseInput\" : DatabaseInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Database\nProperties:\n  CatalogId: String\n  DatabaseInput: \n    DatabaseInput\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::DataCatalogEncryptionSettings","awsResourceTypeName":"glue-datacatalogencryptionsettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::DataCatalogEncryptionSettings\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DataCatalogEncryptionSettings\" : DataCatalogEncryptionSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::DataCatalogEncryptionSettings\nProperties:\n  CatalogId: String\n  DataCatalogEncryptionSettings: \n    DataCatalogEncryptionSettings\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::DataQualityRuleset","awsResourceTypeName":"glue-dataqualityruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::DataQualityRuleset\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Ruleset\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetTable\" : DataQualityTargetTable\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::DataQualityRuleset\nProperties:\n  ClientToken: String\n  Description: String\n  Name: String\n  Ruleset: String\n  Tags: \n    - Tag\n  TargetTable: \n    DataQualityTargetTable\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::DevEndpoint","awsResourceTypeName":"glue-devendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::DevEndpoint\",\n  \"Properties\" : {\n      \"Arguments\" : Json,\n      \"EndpointName\" : String,\n      \"ExtraJarsS3Path\" : String,\n      \"ExtraPythonLibsS3Path\" : String,\n      \"GlueVersion\" : String,\n      \"NumberOfNodes\" : Integer,\n      \"NumberOfWorkers\" : Integer,\n      \"PublicKey\" : String,\n      \"PublicKeys\" : [ String, ... ],\n      \"RoleArn\" : String,\n      \"SecurityConfiguration\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkerType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::DevEndpoint\nProperties:\n  Arguments: Json\n  EndpointName: String\n  ExtraJarsS3Path: String\n  ExtraPythonLibsS3Path: String\n  GlueVersion: String\n  NumberOfNodes: Integer\n  NumberOfWorkers: Integer\n  PublicKey: String\n  PublicKeys: \n    - String\n  RoleArn: String\n  SecurityConfiguration: String\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n  WorkerType: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Job","awsResourceTypeName":"glue-job","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Job\",\n  \"Properties\" : {\n      \"AllocatedCapacity\" : Number,\n      \"Command\" : JobCommand,\n      \"Connections\" : ConnectionsList,\n      \"DefaultArguments\" : Json,\n      \"Description\" : String,\n      \"ExecutionClass\" : String,\n      \"ExecutionProperty\" : ExecutionProperty,\n      \"GlueVersion\" : String,\n      \"LogUri\" : String,\n      \"MaxCapacity\" : Number,\n      \"MaxRetries\" : Number,\n      \"Name\" : String,\n      \"NonOverridableArguments\" : Json,\n      \"NotificationProperty\" : NotificationProperty,\n      \"NumberOfWorkers\" : Integer,\n      \"Role\" : String,\n      \"SecurityConfiguration\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"WorkerType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Job\nProperties:\n  AllocatedCapacity: Number\n  Command: \n    JobCommand\n  Connections: \n    ConnectionsList\n  DefaultArguments: Json\n  Description: String\n  ExecutionClass: String\n  ExecutionProperty: \n    ExecutionProperty\n  GlueVersion: String\n  LogUri: String\n  MaxCapacity: Number\n  MaxRetries: Number\n  Name: String\n  NonOverridableArguments: Json\n  NotificationProperty: \n    NotificationProperty\n  NumberOfWorkers: Integer\n  Role: String\n  SecurityConfiguration: String\n  Tags: \n    - Tag\n  Timeout: Integer\n  WorkerType: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::MLTransform","awsResourceTypeName":"glue-mltransform","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::MLTransform\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GlueVersion\" : String,\n      \"InputRecordTables\" : InputRecordTables,\n      \"MaxCapacity\" : Number,\n      \"MaxRetries\" : Integer,\n      \"Name\" : String,\n      \"NumberOfWorkers\" : Integer,\n      \"Role\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"TransformEncryption\" : TransformEncryption,\n      \"TransformParameters\" : TransformParameters,\n      \"WorkerType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::MLTransform\nProperties:\n  Description: String\n  GlueVersion: String\n  InputRecordTables: \n    InputRecordTables\n  MaxCapacity: Number\n  MaxRetries: Integer\n  Name: String\n  NumberOfWorkers: Integer\n  Role: String\n  Tags: \n    - Tag\n  Timeout: Integer\n  TransformEncryption: \n    TransformEncryption\n  TransformParameters: \n    TransformParameters\n  WorkerType: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Partition","awsResourceTypeName":"glue-partition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Partition\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseName\" : String,\n      \"PartitionInput\" : PartitionInput,\n      \"TableName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Partition\nProperties:\n  CatalogId: String\n  DatabaseName: String\n  PartitionInput: \n    PartitionInput\n  TableName: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Registry","awsResourceTypeName":"glue-registry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Registry\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Registry\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Schema","awsResourceTypeName":"glue-schema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Schema\",\n  \"Properties\" : {\n      \"CheckpointVersion\" : SchemaVersion,\n      \"Compatibility\" : String,\n      \"DataFormat\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Registry\" : Registry,\n      \"SchemaDefinition\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Schema\nProperties:\n  CheckpointVersion: \n    SchemaVersion\n  Compatibility: String\n  DataFormat: String\n  Description: String\n  Name: String\n  Registry: \n    Registry\n  SchemaDefinition: String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::SchemaVersion","awsResourceTypeName":"glue-schemaversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::SchemaVersion\",\n  \"Properties\" : {\n      \"Schema\" : Schema,\n      \"SchemaDefinition\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::SchemaVersion\nProperties:\n  Schema: \n    Schema\n  SchemaDefinition: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::SchemaVersionMetadata","awsResourceTypeName":"glue-schemaversionmetadata","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::SchemaVersionMetadata\",\n  \"Properties\" : {\n      \"Key\" : String,\n      \"SchemaVersionId\" : String,\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::SchemaVersionMetadata\nProperties:\n  Key: String\n  SchemaVersionId: String\n  Value: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::SecurityConfiguration","awsResourceTypeName":"glue-securityconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::SecurityConfiguration\",\n  \"Properties\" : {\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::SecurityConfiguration\nProperties:\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  Name: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Table","awsResourceTypeName":"glue-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Table\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseName\" : String,\n      \"OpenTableFormatInput\" : OpenTableFormatInput,\n      \"TableInput\" : TableInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Table\nProperties:\n  CatalogId: String\n  DatabaseName: String\n  OpenTableFormatInput: \n    OpenTableFormatInput\n  TableInput: \n    TableInput\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::TableOptimizer","awsResourceTypeName":"glue-tableoptimizer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::TableOptimizer\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseName\" : String,\n      \"TableName\" : String,\n      \"TableOptimizerConfiguration\" : TableOptimizerConfiguration,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::TableOptimizer\nProperties:\n  CatalogId: String\n  DatabaseName: String\n  TableName: String\n  TableOptimizerConfiguration: \n    TableOptimizerConfiguration\n  Type: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Trigger","awsResourceTypeName":"glue-trigger","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Trigger\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"Description\" : String,\n      \"EventBatchingCondition\" : EventBatchingCondition,\n      \"Name\" : String,\n      \"Predicate\" : Predicate,\n      \"Schedule\" : String,\n      \"StartOnCreation\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"WorkflowName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Trigger\nProperties:\n  Actions: \n    - Action\n  Description: String\n  EventBatchingCondition: \n    EventBatchingCondition\n  Name: String\n  Predicate: \n    Predicate\n  Schedule: String\n  StartOnCreation: Boolean\n  Tags: \n    - Tag\n  Type: String\n  WorkflowName: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Workflow","awsResourceTypeName":"glue-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Workflow\",\n  \"Properties\" : {\n      \"DefaultRunProperties\" : Json,\n      \"Description\" : String,\n      \"MaxConcurrentRuns\" : Integer,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Workflow\nProperties:\n  DefaultRunProperties: Json\n  Description: String\n  MaxConcurrentRuns: Integer\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Dataset","awsResourceTypeName":"databrew-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Dataset\",\n  \"Properties\" : {\n      \"Format\" : String,\n      \"FormatOptions\" : FormatOptions,\n      \"Input\" : Input,\n      \"Name\" : String,\n      \"PathOptions\" : PathOptions,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Dataset\nProperties:\n  Format: String\n  FormatOptions: \n    FormatOptions\n  Input: \n    Input\n  Name: String\n  PathOptions: \n    PathOptions\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Job","awsResourceTypeName":"databrew-job","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Job\",\n  \"Properties\" : {\n      \"DatabaseOutputs\" : [ DatabaseOutput, ... ],\n      \"DataCatalogOutputs\" : [ DataCatalogOutput, ... ],\n      \"DatasetName\" : String,\n      \"EncryptionKeyArn\" : String,\n      \"EncryptionMode\" : String,\n      \"JobSample\" : JobSample,\n      \"LogSubscription\" : String,\n      \"MaxCapacity\" : Integer,\n      \"MaxRetries\" : Integer,\n      \"Name\" : String,\n      \"OutputLocation\" : OutputLocation,\n      \"Outputs\" : [ Output, ... ],\n      \"ProfileConfiguration\" : ProfileConfiguration,\n      \"ProjectName\" : String,\n      \"Recipe\" : Recipe,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"Type\" : String,\n      \"ValidationConfigurations\" : [ ValidationConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Job\nProperties:\n  DatabaseOutputs: \n    - DatabaseOutput\n  DataCatalogOutputs: \n    - DataCatalogOutput\n  DatasetName: String\n  EncryptionKeyArn: String\n  EncryptionMode: String\n  JobSample: \n    JobSample\n  LogSubscription: String\n  MaxCapacity: Integer\n  MaxRetries: Integer\n  Name: String\n  OutputLocation: \n    OutputLocation\n  Outputs: \n    - Output\n  ProfileConfiguration: \n    ProfileConfiguration\n  ProjectName: String\n  Recipe: \n    Recipe\n  RoleArn: String\n  Tags: \n    - Tag\n  Timeout: Integer\n  Type: String\n  ValidationConfigurations: \n    - ValidationConfiguration\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Project","awsResourceTypeName":"databrew-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Project\",\n  \"Properties\" : {\n      \"DatasetName\" : String,\n      \"Name\" : String,\n      \"RecipeName\" : String,\n      \"RoleArn\" : String,\n      \"Sample\" : Sample,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Project\nProperties:\n  DatasetName: String\n  Name: String\n  RecipeName: String\n  RoleArn: String\n  Sample: \n    Sample\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Recipe","awsResourceTypeName":"databrew-recipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Recipe\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Steps\" : [ RecipeStep, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Recipe\nProperties:\n  Description: String\n  Name: String\n  Steps: \n    - RecipeStep\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Ruleset","awsResourceTypeName":"databrew-ruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Ruleset\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Ruleset\nProperties:\n  Description: String\n  Name: String\n  Rules: \n    - Rule\n  Tags: \n    - Tag\n  TargetArn: String\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Schedule","awsResourceTypeName":"databrew-schedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Schedule\",\n  \"Properties\" : {\n      \"CronExpression\" : String,\n      \"JobNames\" : [ String, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Schedule\nProperties:\n  CronExpression: String\n  JobNames: \n    - String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Grafana::Workspace","awsResourceTypeName":"grafana-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Grafana::Workspace\",\n  \"Properties\" : {\n      \"AccountAccessType\" : String,\n      \"AuthenticationProviders\" : [ String, ... ],\n      \"ClientToken\" : String,\n      \"DataSources\" : [ String, ... ],\n      \"Description\" : String,\n      \"GrafanaVersion\" : String,\n      \"Name\" : String,\n      \"NetworkAccessControl\" : NetworkAccessControl,\n      \"NotificationDestinations\" : [ String, ... ],\n      \"OrganizationalUnits\" : [ String, ... ],\n      \"OrganizationRoleName\" : String,\n      \"PermissionType\" : String,\n      \"PluginAdminEnabled\" : Boolean,\n      \"RoleArn\" : String,\n      \"SamlConfiguration\" : SamlConfiguration,\n      \"StackSetName\" : String,\n      \"VpcConfiguration\" : VpcConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Grafana::Workspace\nProperties:\n  AccountAccessType: String\n  AuthenticationProviders: \n    - String\n  ClientToken: String\n  DataSources: \n    - String\n  Description: String\n  GrafanaVersion: String\n  Name: String\n  NetworkAccessControl: \n    NetworkAccessControl\n  NotificationDestinations: \n    - String\n  OrganizationalUnits: \n    - String\n  OrganizationRoleName: String\n  PermissionType: String\n  PluginAdminEnabled: Boolean\n  RoleArn: String\n  SamlConfiguration: \n    SamlConfiguration\n  StackSetName: String\n  VpcConfiguration: \n    VpcConfiguration\n","awsServiceName":"Grafana","awsServiceCategory":"other"},{"awsResourceType":"AWS::GroundStation::Config","awsResourceTypeName":"groundstation-config","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GroundStation::Config\",\n  \"Properties\" : {\n      \"ConfigData\" : ConfigData,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GroundStation::Config\nProperties:\n  ConfigData: \n    ConfigData\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"GroundStation","awsServiceCategory":"compute"},{"awsResourceType":"AWS::GroundStation::DataflowEndpointGroup","awsResourceTypeName":"groundstation-dataflowendpointgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GroundStation::DataflowEndpointGroup\",\n  \"Properties\" : {\n      \"ContactPostPassDurationSeconds\" : Integer,\n      \"ContactPrePassDurationSeconds\" : Integer,\n      \"EndpointDetails\" : [ EndpointDetails, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GroundStation::DataflowEndpointGroup\nProperties:\n  ContactPostPassDurationSeconds: Integer\n  ContactPrePassDurationSeconds: Integer\n  EndpointDetails: \n    - EndpointDetails\n  Tags: \n    - Tag\n","awsServiceName":"GroundStation","awsServiceCategory":"compute"},{"awsResourceType":"AWS::GroundStation::MissionProfile","awsResourceTypeName":"groundstation-missionprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GroundStation::MissionProfile\",\n  \"Properties\" : {\n      \"ContactPostPassDurationSeconds\" : Integer,\n      \"ContactPrePassDurationSeconds\" : Integer,\n      \"DataflowEdges\" : [ DataflowEdge, ... ],\n      \"MinimumViableContactDurationSeconds\" : Integer,\n      \"Name\" : String,\n      \"StreamsKmsKey\" : StreamsKmsKey,\n      \"StreamsKmsRole\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrackingConfigArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GroundStation::MissionProfile\nProperties:\n  ContactPostPassDurationSeconds: Integer\n  ContactPrePassDurationSeconds: Integer\n  DataflowEdges: \n    - DataflowEdge\n  MinimumViableContactDurationSeconds: Integer\n  Name: String\n  StreamsKmsKey: \n    StreamsKmsKey\n  StreamsKmsRole: String\n  Tags: \n    - Tag\n  TrackingConfigArn: String\n","awsServiceName":"GroundStation","awsServiceCategory":"compute"},{"awsResourceType":"AWS::GuardDuty::Detector","awsResourceTypeName":"guardduty-detector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Detector\",\n  \"Properties\" : {\n      \"DataSources\" : CFNDataSourceConfigurations,\n      \"Enable\" : Boolean,\n      \"Features\" : [ CFNFeatureConfiguration, ... ],\n      \"FindingPublishingFrequency\" : String,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Detector\nProperties:\n  DataSources: \n    CFNDataSourceConfigurations\n  Enable: Boolean\n  Features: \n    - CFNFeatureConfiguration\n  FindingPublishingFrequency: String\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::Filter","awsResourceTypeName":"guardduty-filter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Filter\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Description\" : String,\n      \"DetectorId\" : String,\n      \"FindingCriteria\" : FindingCriteria,\n      \"Name\" : String,\n      \"Rank\" : Integer,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Filter\nProperties:\n  Action: String\n  Description: String\n  DetectorId: String\n  FindingCriteria: \n    FindingCriteria\n  Name: String\n  Rank: Integer\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::IPSet","awsResourceTypeName":"guardduty-ipset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::IPSet\",\n  \"Properties\" : {\n      \"Activate\" : Boolean,\n      \"DetectorId\" : String,\n      \"Format\" : String,\n      \"Location\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::IPSet\nProperties:\n  Activate: Boolean\n  DetectorId: String\n  Format: String\n  Location: String\n  Name: String\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::Master","awsResourceTypeName":"guardduty-master","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Master\",\n  \"Properties\" : {\n      \"DetectorId\" : String,\n      \"InvitationId\" : String,\n      \"MasterId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Master\nProperties:\n  DetectorId: String\n  InvitationId: String\n  MasterId: String\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::Member","awsResourceTypeName":"guardduty-member","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Member\",\n  \"Properties\" : {\n      \"DetectorId\" : String,\n      \"DisableEmailNotification\" : Boolean,\n      \"Email\" : String,\n      \"MemberId\" : String,\n      \"Message\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Member\nProperties:\n  DetectorId: String\n  DisableEmailNotification: Boolean\n  Email: String\n  MemberId: String\n  Message: String\n  Status: String\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::ThreatIntelSet","awsResourceTypeName":"guardduty-threatintelset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::ThreatIntelSet\",\n  \"Properties\" : {\n      \"Activate\" : Boolean,\n      \"DetectorId\" : String,\n      \"Format\" : String,\n      \"Location\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::ThreatIntelSet\nProperties:\n  Activate: Boolean\n  DetectorId: String\n  Format: String\n  Location: String\n  Name: String\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::HealthImaging::Datastore","awsResourceTypeName":"healthimaging-datastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::HealthImaging::Datastore\",\n  \"Properties\" : {\n      \"DatastoreName\" : String,\n      \"KmsKeyArn\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::HealthImaging::Datastore\nProperties:\n  DatastoreName: String\n  KmsKeyArn: String\n  Tags: \n    Key: Value\n","awsServiceName":"HealthImaging","awsServiceCategory":"other"},{"awsResourceType":"AWS::HealthLake::FHIRDatastore","awsResourceTypeName":"healthlake-fhirdatastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::HealthLake::FHIRDatastore\",\n  \"Properties\" : {\n      \"DatastoreName\" : String,\n      \"DatastoreTypeVersion\" : String,\n      \"IdentityProviderConfiguration\" : IdentityProviderConfiguration,\n      \"PreloadDataConfig\" : PreloadDataConfig,\n      \"SseConfiguration\" : SseConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::HealthLake::FHIRDatastore\nProperties:\n  DatastoreName: String\n  DatastoreTypeVersion: String\n  IdentityProviderConfiguration: \n    IdentityProviderConfiguration\n  PreloadDataConfig: \n    PreloadDataConfig\n  SseConfiguration: \n    SseConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"HealthLake","awsServiceCategory":"other"},{"awsResourceType":"AWS::IAM::AccessKey","awsResourceTypeName":"iam-accesskey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::AccessKey\",\n  \"Properties\" : {\n      \"Serial\" : Integer,\n      \"Status\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::AccessKey\nProperties:\n  Serial: Integer\n  Status: String\n  UserName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"}]