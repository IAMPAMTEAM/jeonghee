[{"awsResourceType":"AWS::IAM::Group","awsResourceTypeName":"iam-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::Group\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"Path\" : String,\n      \"Policies\" : [ Policy, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::Group\nProperties:\n  GroupName: String\n  ManagedPolicyArns: \n    - String\n  Path: String\n  Policies: \n    - Policy\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::GroupPolicy","awsResourceTypeName":"iam-grouppolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::GroupPolicy\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::GroupPolicy\nProperties:\n  GroupName: String\n  PolicyDocument: Json\n  PolicyName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::InstanceProfile","awsResourceTypeName":"iam-instanceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::InstanceProfile\",\n  \"Properties\" : {\n      \"InstanceProfileName\" : String,\n      \"Path\" : String,\n      \"Roles\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::InstanceProfile\nProperties:\n  InstanceProfileName: String\n  Path: String\n  Roles: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::ManagedPolicy","awsResourceTypeName":"iam-managedpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::ManagedPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Groups\" : [ String, ... ],\n      \"ManagedPolicyName\" : String,\n      \"Path\" : String,\n      \"PolicyDocument\" : Json,\n      \"Roles\" : [ String, ... ],\n      \"Users\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::ManagedPolicy\nProperties:\n  Description: String\n  Groups: \n    - String\n  ManagedPolicyName: String\n  Path: String\n  PolicyDocument: Json\n  Roles: \n    - String\n  Users: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::OIDCProvider","awsResourceTypeName":"iam-oidcprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::OIDCProvider\",\n  \"Properties\" : {\n      \"ClientIdList\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"ThumbprintList\" : [ String, ... ],\n      \"Url\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::OIDCProvider\nProperties:\n  ClientIdList: \n    - String\n  Tags: \n    - Tag\n  ThumbprintList: \n    - String\n  Url: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::Policy","awsResourceTypeName":"iam-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::Policy\",\n  \"Properties\" : {\n      \"Groups\" : [ String, ... ],\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"Roles\" : [ String, ... ],\n      \"Users\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::Policy\nProperties:\n  Groups: \n    - String\n  PolicyDocument: Json\n  PolicyName: String\n  Roles: \n    - String\n  Users: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::Role","awsResourceTypeName":"iam-role","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::Role\",\n  \"Properties\" : {\n      \"AssumeRolePolicyDocument\" : Json,\n      \"Description\" : String,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"MaxSessionDuration\" : Integer,\n      \"Path\" : String,\n      \"PermissionsBoundary\" : String,\n      \"Policies\" : [ Policy, ... ],\n      \"RoleName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::Role\nProperties:\n  AssumeRolePolicyDocument: Json\n  Description: String\n  ManagedPolicyArns: \n    - String\n  MaxSessionDuration: Integer\n  Path: String\n  PermissionsBoundary: String\n  Policies: \n    - Policy\n  RoleName: String\n  Tags: \n    - Tag\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::RolePolicy","awsResourceTypeName":"iam-rolepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::RolePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"RoleName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::RolePolicy\nProperties:\n  PolicyDocument: Json\n  PolicyName: String\n  RoleName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::SAMLProvider","awsResourceTypeName":"iam-samlprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::SAMLProvider\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SamlMetadataDocument\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::SAMLProvider\nProperties:\n  Name: String\n  SamlMetadataDocument: String\n  Tags: \n    - Tag\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::ServerCertificate","awsResourceTypeName":"iam-servercertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::ServerCertificate\",\n  \"Properties\" : {\n      \"CertificateBody\" : String,\n      \"CertificateChain\" : String,\n      \"Path\" : String,\n      \"PrivateKey\" : String,\n      \"ServerCertificateName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::ServerCertificate\nProperties:\n  CertificateBody: String\n  CertificateChain: String\n  Path: String\n  PrivateKey: String\n  ServerCertificateName: String\n  Tags: \n    - Tag\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::ServiceLinkedRole","awsResourceTypeName":"iam-servicelinkedrole","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::ServiceLinkedRole\",\n  \"Properties\" : {\n      \"AWSServiceName\" : String,\n      \"CustomSuffix\" : String,\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::ServiceLinkedRole\nProperties:\n  AWSServiceName: String\n  CustomSuffix: String\n  Description: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::User","awsResourceTypeName":"iam-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::User\",\n  \"Properties\" : {\n      \"Groups\" : [ String, ... ],\n      \"LoginProfile\" : LoginProfile,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"Path\" : String,\n      \"PermissionsBoundary\" : String,\n      \"Policies\" : [ Policy, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::User\nProperties:\n  Groups: \n    - String\n  LoginProfile: \n    LoginProfile\n  ManagedPolicyArns: \n    - String\n  Path: String\n  PermissionsBoundary: String\n  Policies: \n    - Policy\n  Tags: \n    - Tag\n  UserName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::UserPolicy","awsResourceTypeName":"iam-userpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::UserPolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::UserPolicy\nProperties:\n  PolicyDocument: Json\n  PolicyName: String\n  UserName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::UserToGroupAddition","awsResourceTypeName":"iam-usertogroupaddition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::UserToGroupAddition\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"Users\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::UserToGroupAddition\nProperties:\n  GroupName: String\n  Users: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::VirtualMFADevice","awsResourceTypeName":"iam-virtualmfadevice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::VirtualMFADevice\",\n  \"Properties\" : {\n      \"Path\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Users\" : [ String, ... ],\n      \"VirtualMfaDeviceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::VirtualMFADevice\nProperties:\n  Path: String\n  Tags: \n    - Tag\n  Users: \n    - String\n  VirtualMfaDeviceName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::SSO::Assignment","awsResourceTypeName":"sso-assignment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSO::Assignment\",\n  \"Properties\" : {\n      \"InstanceArn\" : String,\n      \"PermissionSetArn\" : String,\n      \"PrincipalId\" : String,\n      \"PrincipalType\" : String,\n      \"TargetId\" : String,\n      \"TargetType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSO::Assignment\nProperties:\n  InstanceArn: String\n  PermissionSetArn: String\n  PrincipalId: String\n  PrincipalType: String\n  TargetId: String\n  TargetType: String\n","awsServiceName":"SSO","awsServiceCategory":"security"},{"awsResourceType":"AWS::SSO::InstanceAccessControlAttributeConfiguration","awsResourceTypeName":"sso-instanceaccesscontrolattributeconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSO::InstanceAccessControlAttributeConfiguration\",\n  \"Properties\" : {\n      \"AccessControlAttributes\" : [ AccessControlAttribute, ... ],\n      \"InstanceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSO::InstanceAccessControlAttributeConfiguration\nProperties:\n  AccessControlAttributes: \n    - AccessControlAttribute\n  InstanceArn: String\n","awsServiceName":"SSO","awsServiceCategory":"security"},{"awsResourceType":"AWS::SSO::PermissionSet","awsResourceTypeName":"sso-permissionset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSO::PermissionSet\",\n  \"Properties\" : {\n      \"CustomerManagedPolicyReferences\" : [ CustomerManagedPolicyReference, ... ],\n      \"Description\" : String,\n      \"InlinePolicy\" : Json,\n      \"InstanceArn\" : String,\n      \"ManagedPolicies\" : [ String, ... ],\n      \"Name\" : String,\n      \"PermissionsBoundary\" : PermissionsBoundary,\n      \"RelayStateType\" : String,\n      \"SessionDuration\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSO::PermissionSet\nProperties:\n  CustomerManagedPolicyReferences: \n    - CustomerManagedPolicyReference\n  Description: String\n  InlinePolicy: Json\n  InstanceArn: String\n  ManagedPolicies: \n    - String\n  Name: String\n  PermissionsBoundary: \n    PermissionsBoundary\n  RelayStateType: String\n  SessionDuration: String\n  Tags: \n    - Tag\n","awsServiceName":"SSO","awsServiceCategory":"security"},{"awsResourceType":"AWS::IdentityStore::Group","awsResourceTypeName":"identitystore-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IdentityStore::Group\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"IdentityStoreId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IdentityStore::Group\nProperties:\n  Description: String\n  DisplayName: String\n  IdentityStoreId: String\n","awsServiceName":"IdentityStore","awsServiceCategory":"security"},{"awsResourceType":"AWS::IdentityStore::GroupMembership","awsResourceTypeName":"identitystore-groupmembership","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IdentityStore::GroupMembership\",\n  \"Properties\" : {\n      \"GroupId\" : String,\n      \"IdentityStoreId\" : String,\n      \"MemberId\" : MemberId\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IdentityStore::GroupMembership\nProperties:\n  GroupId: String\n  IdentityStoreId: String\n  MemberId: \n    MemberId\n","awsServiceName":"IdentityStore","awsServiceCategory":"security"},{"awsResourceType":"AWS::AccessAnalyzer::Analyzer","awsResourceTypeName":"accessanalyzer-analyzer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AccessAnalyzer::Analyzer\",\n  \"Properties\" : {\n      \"AnalyzerConfiguration\" : AnalyzerConfiguration,\n      \"AnalyzerName\" : String,\n      \"ArchiveRules\" : [ ArchiveRule, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AccessAnalyzer::Analyzer\nProperties:\n  AnalyzerConfiguration: \n    AnalyzerConfiguration\n  AnalyzerName: String\n  ArchiveRules: \n    - ArchiveRule\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"AccessAnalyzer","awsServiceCategory":"security"},{"awsResourceType":"AWS::ImageBuilder::Component","awsResourceTypeName":"imagebuilder-component","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::Component\",\n  \"Properties\" : {\n      \"ChangeDescription\" : String,\n      \"Data\" : String,\n      \"Description\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"Platform\" : String,\n      \"SupportedOsVersions\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Uri\" : String,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::Component\nProperties:\n  ChangeDescription: String\n  Data: String\n  Description: String\n  KmsKeyId: String\n  Name: String\n  Platform: String\n  SupportedOsVersions: \n    - String\n  Tags: \n    Key: Value\n  Uri: String\n  Version: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::ContainerRecipe","awsResourceTypeName":"imagebuilder-containerrecipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::ContainerRecipe\",\n  \"Properties\" : {\n      \"Components\" : [ ComponentConfiguration, ... ],\n      \"ContainerType\" : String,\n      \"Description\" : String,\n      \"DockerfileTemplateData\" : String,\n      \"DockerfileTemplateUri\" : String,\n      \"ImageOsVersionOverride\" : String,\n      \"InstanceConfiguration\" : InstanceConfiguration,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"ParentImage\" : String,\n      \"PlatformOverride\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TargetRepository\" : TargetContainerRepository,\n      \"Version\" : String,\n      \"WorkingDirectory\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::ContainerRecipe\nProperties:\n  Components: \n    - ComponentConfiguration\n  ContainerType: String\n  Description: String\n  DockerfileTemplateData: String\n  DockerfileTemplateUri: String\n  ImageOsVersionOverride: String\n  InstanceConfiguration: \n    InstanceConfiguration\n  KmsKeyId: String\n  Name: String\n  ParentImage: String\n  PlatformOverride: String\n  Tags: \n    Key: Value\n  TargetRepository: \n    TargetContainerRepository\n  Version: String\n  WorkingDirectory: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::DistributionConfiguration","awsResourceTypeName":"imagebuilder-distributionconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::DistributionConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Distributions\" : [ Distribution, ... ],\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::DistributionConfiguration\nProperties:\n  Description: String\n  Distributions: \n    - Distribution\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::Image","awsResourceTypeName":"imagebuilder-image","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::Image\",\n  \"Properties\" : {\n      \"ContainerRecipeArn\" : String,\n      \"DistributionConfigurationArn\" : String,\n      \"EnhancedImageMetadataEnabled\" : Boolean,\n      \"ExecutionRole\" : String,\n      \"ImageRecipeArn\" : String,\n      \"ImageScanningConfiguration\" : ImageScanningConfiguration,\n      \"ImageTestsConfiguration\" : ImageTestsConfiguration,\n      \"InfrastructureConfigurationArn\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Workflows\" : [ WorkflowConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::Image\nProperties:\n  ContainerRecipeArn: String\n  DistributionConfigurationArn: String\n  EnhancedImageMetadataEnabled: Boolean\n  ExecutionRole: String\n  ImageRecipeArn: String\n  ImageScanningConfiguration: \n    ImageScanningConfiguration\n  ImageTestsConfiguration: \n    ImageTestsConfiguration\n  InfrastructureConfigurationArn: String\n  Tags: \n    Key: Value\n  Workflows: \n    - WorkflowConfiguration\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::ImagePipeline","awsResourceTypeName":"imagebuilder-imagepipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::ImagePipeline\",\n  \"Properties\" : {\n      \"ContainerRecipeArn\" : String,\n      \"Description\" : String,\n      \"DistributionConfigurationArn\" : String,\n      \"EnhancedImageMetadataEnabled\" : Boolean,\n      \"ExecutionRole\" : String,\n      \"ImageRecipeArn\" : String,\n      \"ImageScanningConfiguration\" : ImageScanningConfiguration,\n      \"ImageTestsConfiguration\" : ImageTestsConfiguration,\n      \"InfrastructureConfigurationArn\" : String,\n      \"Name\" : String,\n      \"Schedule\" : Schedule,\n      \"Status\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Workflows\" : [ WorkflowConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::ImagePipeline\nProperties:\n  ContainerRecipeArn: String\n  Description: String\n  DistributionConfigurationArn: String\n  EnhancedImageMetadataEnabled: Boolean\n  ExecutionRole: String\n  ImageRecipeArn: String\n  ImageScanningConfiguration: \n    ImageScanningConfiguration\n  ImageTestsConfiguration: \n    ImageTestsConfiguration\n  InfrastructureConfigurationArn: String\n  Name: String\n  Schedule: \n    Schedule\n  Status: String\n  Tags: \n    Key: Value\n  Workflows: \n    - WorkflowConfiguration\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::ImageRecipe","awsResourceTypeName":"imagebuilder-imagerecipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::ImageRecipe\",\n  \"Properties\" : {\n      \"AdditionalInstanceConfiguration\" : AdditionalInstanceConfiguration,\n      \"BlockDeviceMappings\" : [ InstanceBlockDeviceMapping, ... ],\n      \"Components\" : [ ComponentConfiguration, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ParentImage\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Version\" : String,\n      \"WorkingDirectory\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::ImageRecipe\nProperties:\n  AdditionalInstanceConfiguration: \n    AdditionalInstanceConfiguration\n  BlockDeviceMappings: \n    - InstanceBlockDeviceMapping\n  Components: \n    - ComponentConfiguration\n  Description: String\n  Name: String\n  ParentImage: String\n  Tags: \n    Key: Value\n  Version: String\n  WorkingDirectory: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::InfrastructureConfiguration","awsResourceTypeName":"imagebuilder-infrastructureconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::InfrastructureConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceMetadataOptions\" : InstanceMetadataOptions,\n      \"InstanceProfileName\" : String,\n      \"InstanceTypes\" : [ String, ... ],\n      \"KeyPair\" : String,\n      \"Logging\" : Logging,\n      \"Name\" : String,\n      \"ResourceTags\" : {Key: Value, ...},\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SubnetId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TerminateInstanceOnFailure\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::InfrastructureConfiguration\nProperties:\n  Description: String\n  InstanceMetadataOptions: \n    InstanceMetadataOptions\n  InstanceProfileName: String\n  InstanceTypes: \n    - String\n  KeyPair: String\n  Logging: \n    Logging\n  Name: String\n  ResourceTags: \n    Key: Value\n  SecurityGroupIds: \n    - String\n  SnsTopicArn: String\n  SubnetId: String\n  Tags: \n    Key: Value\n  TerminateInstanceOnFailure: Boolean\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::LifecyclePolicy","awsResourceTypeName":"imagebuilder-lifecyclepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::LifecyclePolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExecutionRole\" : String,\n      \"Name\" : String,\n      \"PolicyDetails\" : [ PolicyDetail, ... ],\n      \"ResourceSelection\" : ResourceSelection,\n      \"ResourceType\" : String,\n      \"Status\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::LifecyclePolicy\nProperties:\n  Description: String\n  ExecutionRole: String\n  Name: String\n  PolicyDetails: \n    - PolicyDetail\n  ResourceSelection: \n    ResourceSelection\n  ResourceType: String\n  Status: String\n  Tags: \n    Key: Value\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::Workflow","awsResourceTypeName":"imagebuilder-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::Workflow\",\n  \"Properties\" : {\n      \"ChangeDescription\" : String,\n      \"Data\" : String,\n      \"Description\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String,\n      \"Uri\" : String,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::Workflow\nProperties:\n  ChangeDescription: String\n  Data: String\n  Description: String\n  KmsKeyId: String\n  Name: String\n  Tags: \n    Key: Value\n  Type: String\n  Uri: String\n  Version: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSMIncidents::ReplicationSet","awsResourceTypeName":"ssmincidents-replicationset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMIncidents::ReplicationSet\",\n  \"Properties\" : {\n      \"DeletionProtected\" : Boolean,\n      \"Regions\" : [ ReplicationRegion, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMIncidents::ReplicationSet\nProperties:\n  DeletionProtected: Boolean\n  Regions: \n    - ReplicationRegion\n  Tags: \n    - Tag\n","awsServiceName":"SSMIncidents","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMIncidents::ResponsePlan","awsResourceTypeName":"ssmincidents-responseplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMIncidents::ResponsePlan\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"ChatChannel\" : ChatChannel,\n      \"DisplayName\" : String,\n      \"Engagements\" : [ String, ... ],\n      \"IncidentTemplate\" : IncidentTemplate,\n      \"Integrations\" : [ Integration, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMIncidents::ResponsePlan\nProperties:\n  Actions: \n    - Action\n  ChatChannel: \n    ChatChannel\n  DisplayName: String\n  Engagements: \n    - String\n  IncidentTemplate: \n    IncidentTemplate\n  Integrations: \n    - Integration\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"SSMIncidents","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::Contact","awsResourceTypeName":"ssmcontacts-contact","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::Contact\",\n  \"Properties\" : {\n      \"Alias\" : String,\n      \"DisplayName\" : String,\n      \"Plan\" : [ Stage, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::Contact\nProperties:\n  Alias: String\n  DisplayName: String\n  Plan: \n    - Stage\n  Type: String\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::ContactChannel","awsResourceTypeName":"ssmcontacts-contactchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::ContactChannel\",\n  \"Properties\" : {\n      \"ChannelAddress\" : String,\n      \"ChannelName\" : String,\n      \"ChannelType\" : String,\n      \"ContactId\" : String,\n      \"DeferActivation\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::ContactChannel\nProperties:\n  ChannelAddress: String\n  ChannelName: String\n  ChannelType: String\n  ContactId: String\n  DeferActivation: Boolean\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::Plan","awsResourceTypeName":"ssmcontacts-plan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::Plan\",\n  \"Properties\" : {\n      \"ContactId\" : String,\n      \"RotationIds\" : [ String, ... ],\n      \"Stages\" : [ Stage, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::Plan\nProperties:\n  ContactId: String\n  RotationIds: \n    - String\n  Stages: \n    - Stage\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::Rotation","awsResourceTypeName":"ssmcontacts-rotation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::Rotation\",\n  \"Properties\" : {\n      \"ContactIds\" : [ String, ... ],\n      \"Name\" : String,\n      \"Recurrence\" : RecurrenceSettings,\n      \"StartTime\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeZoneId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::Rotation\nProperties:\n  ContactIds: \n    - String\n  Name: String\n  Recurrence: \n    RecurrenceSettings\n  StartTime: String\n  Tags: \n    - Tag\n  TimeZoneId: String\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::Inspector::AssessmentTarget","awsResourceTypeName":"inspector-assessmenttarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Inspector::AssessmentTarget\",\n  \"Properties\" : {\n      \"AssessmentTargetName\" : String,\n      \"ResourceGroupArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Inspector::AssessmentTarget\nProperties:\n  AssessmentTargetName: String\n  ResourceGroupArn: String\n","awsServiceName":"Inspector","awsServiceCategory":"security"},{"awsResourceType":"AWS::Inspector::AssessmentTemplate","awsResourceTypeName":"inspector-assessmenttemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Inspector::AssessmentTemplate\",\n  \"Properties\" : {\n      \"AssessmentTargetArn\" : String,\n      \"AssessmentTemplateName\" : String,\n      \"DurationInSeconds\" : Integer,\n      \"RulesPackageArns\" : [ String, ... ],\n      \"UserAttributesForFindings\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Inspector::AssessmentTemplate\nProperties:\n  AssessmentTargetArn: String\n  AssessmentTemplateName: String\n  DurationInSeconds: Integer\n  RulesPackageArns: \n    - String\n  UserAttributesForFindings: \n    - Tag\n","awsServiceName":"Inspector","awsServiceCategory":"security"},{"awsResourceType":"AWS::Inspector::ResourceGroup","awsResourceTypeName":"inspector-resourcegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Inspector::ResourceGroup\",\n  \"Properties\" : {\n      \"ResourceGroupTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Inspector::ResourceGroup\nProperties:\n  ResourceGroupTags: \n    - Tag\n","awsServiceName":"Inspector","awsServiceCategory":"security"},{"awsResourceType":"AWS::InspectorV2::CisScanConfiguration","awsResourceTypeName":"inspectorv2-cisscanconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::InspectorV2::CisScanConfiguration\",\n  \"Properties\" : {\n      \"ScanName\" : String,\n      \"Schedule\" : Schedule,\n      \"SecurityLevel\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Targets\" : CisTargets\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::InspectorV2::CisScanConfiguration\nProperties:\n  ScanName: String\n  Schedule: \n    Schedule\n  SecurityLevel: String\n  Tags: \n    Key: Value\n  Targets: \n    CisTargets\n","awsServiceName":"InspectorV2","awsServiceCategory":"security"},{"awsResourceType":"AWS::InspectorV2::Filter","awsResourceTypeName":"inspectorv2-filter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::InspectorV2::Filter\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FilterAction\" : String,\n      \"FilterCriteria\" : FilterCriteria,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::InspectorV2::Filter\nProperties:\n  Description: String\n  FilterAction: String\n  FilterCriteria: \n    FilterCriteria\n  Name: String\n","awsServiceName":"InspectorV2","awsServiceCategory":"security"},{"awsResourceType":"AWS::IoT::AccountAuditConfiguration","awsResourceTypeName":"iot-accountauditconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::AccountAuditConfiguration\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"AuditCheckConfigurations\" : AuditCheckConfigurations,\n      \"AuditNotificationTargetConfigurations\" : AuditNotificationTargetConfigurations,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::AccountAuditConfiguration\nProperties:\n  AccountId: String\n  AuditCheckConfigurations: \n    AuditCheckConfigurations\n  AuditNotificationTargetConfigurations: \n    AuditNotificationTargetConfigurations\n  RoleArn: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Authorizer","awsResourceTypeName":"iot-authorizer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Authorizer\",\n  \"Properties\" : {\n      \"AuthorizerFunctionArn\" : String,\n      \"AuthorizerName\" : String,\n      \"EnableCachingForHttp\" : Boolean,\n      \"SigningDisabled\" : Boolean,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TokenKeyName\" : String,\n      \"TokenSigningPublicKeys\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Authorizer\nProperties:\n  AuthorizerFunctionArn: String\n  AuthorizerName: String\n  EnableCachingForHttp: Boolean\n  SigningDisabled: Boolean\n  Status: String\n  Tags: \n    - Tag\n  TokenKeyName: String\n  TokenSigningPublicKeys: \n    Key: Value\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::BillingGroup","awsResourceTypeName":"iot-billinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::BillingGroup\",\n  \"Properties\" : {\n      \"BillingGroupName\" : String,\n      \"BillingGroupProperties\" : BillingGroupProperties,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::BillingGroup\nProperties:\n  BillingGroupName: String\n  BillingGroupProperties: \n    BillingGroupProperties\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::CACertificate","awsResourceTypeName":"iot-cacertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::CACertificate\",\n  \"Properties\" : {\n      \"AutoRegistrationStatus\" : String,\n      \"CACertificatePem\" : String,\n      \"CertificateMode\" : String,\n      \"RegistrationConfig\" : RegistrationConfig,\n      \"RemoveAutoRegistration\" : Boolean,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VerificationCertificatePem\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::CACertificate\nProperties:\n  AutoRegistrationStatus: String\n  CACertificatePem: String\n  CertificateMode: String\n  RegistrationConfig: \n    RegistrationConfig\n  RemoveAutoRegistration: Boolean\n  Status: String\n  Tags: \n    - Tag\n  VerificationCertificatePem: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Certificate","awsResourceTypeName":"iot-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Certificate\",\n  \"Properties\" : {\n      \"CACertificatePem\" : String,\n      \"CertificateMode\" : String,\n      \"CertificatePem\" : String,\n      \"CertificateSigningRequest\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Certificate\nProperties:\n  CACertificatePem: String\n  CertificateMode: String\n  CertificatePem: String\n  CertificateSigningRequest: String\n  Status: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::CertificateProvider","awsResourceTypeName":"iot-certificateprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::CertificateProvider\",\n  \"Properties\" : {\n      \"AccountDefaultForOperations\" : [ String, ... ],\n      \"CertificateProviderName\" : String,\n      \"LambdaFunctionArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::CertificateProvider\nProperties:\n  AccountDefaultForOperations: \n    - String\n  CertificateProviderName: String\n  LambdaFunctionArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::CustomMetric","awsResourceTypeName":"iot-custommetric","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::CustomMetric\",\n  \"Properties\" : {\n      \"DisplayName\" : String,\n      \"MetricName\" : String,\n      \"MetricType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::CustomMetric\nProperties:\n  DisplayName: String\n  MetricName: String\n  MetricType: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Dimension","awsResourceTypeName":"iot-dimension","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Dimension\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"StringValues\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Dimension\nProperties:\n  Name: String\n  StringValues: \n    - String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::DomainConfiguration","awsResourceTypeName":"iot-domainconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::DomainConfiguration\",\n  \"Properties\" : {\n      \"AuthorizerConfig\" : AuthorizerConfig,\n      \"DomainConfigurationName\" : String,\n      \"DomainConfigurationStatus\" : String,\n      \"DomainName\" : String,\n      \"ServerCertificateArns\" : [ String, ... ],\n      \"ServerCertificateConfig\" : ServerCertificateConfig,\n      \"ServiceType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TlsConfig\" : TlsConfig,\n      \"ValidationCertificateArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::DomainConfiguration\nProperties:\n  AuthorizerConfig: \n    AuthorizerConfig\n  DomainConfigurationName: String\n  DomainConfigurationStatus: String\n  DomainName: String\n  ServerCertificateArns: \n    - String\n  ServerCertificateConfig: \n    ServerCertificateConfig\n  ServiceType: String\n  Tags: \n    - Tag\n  TlsConfig: \n    TlsConfig\n  ValidationCertificateArn: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::FleetMetric","awsResourceTypeName":"iot-fleetmetric","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::FleetMetric\",\n  \"Properties\" : {\n      \"AggregationField\" : String,\n      \"AggregationType\" : AggregationType,\n      \"Description\" : String,\n      \"IndexName\" : String,\n      \"MetricName\" : String,\n      \"Period\" : Integer,\n      \"QueryString\" : String,\n      \"QueryVersion\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Unit\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::FleetMetric\nProperties:\n  AggregationField: String\n  AggregationType: \n    AggregationType\n  Description: String\n  IndexName: String\n  MetricName: String\n  Period: Integer\n  QueryString: \n    String\n  QueryVersion: String\n  Tags: \n    - Tag\n  Unit: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::JobTemplate","awsResourceTypeName":"iot-jobtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::JobTemplate\",\n  \"Properties\" : {\n      \"AbortConfig\" : AbortConfig,\n      \"Description\" : String,\n      \"DestinationPackageVersions\" : [ String, ... ],\n      \"Document\" : String,\n      \"DocumentSource\" : String,\n      \"JobArn\" : String,\n      \"JobExecutionsRetryConfig\" : JobExecutionsRetryConfig,\n      \"JobExecutionsRolloutConfig\" : JobExecutionsRolloutConfig,\n      \"JobTemplateId\" : String,\n      \"MaintenanceWindows\" : [ MaintenanceWindow, ... ],\n      \"PresignedUrlConfig\" : PresignedUrlConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeoutConfig\" : TimeoutConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::JobTemplate\nProperties:\n  AbortConfig: \n    AbortConfig\n  Description: String\n  DestinationPackageVersions: \n    - String\n  Document: String\n  DocumentSource: String\n  JobArn: String\n  JobExecutionsRetryConfig: \n    JobExecutionsRetryConfig\n  JobExecutionsRolloutConfig: \n    JobExecutionsRolloutConfig\n  JobTemplateId: String\n  MaintenanceWindows: \n    - MaintenanceWindow\n  PresignedUrlConfig: \n    PresignedUrlConfig\n  Tags: \n    - Tag\n  TimeoutConfig: \n    TimeoutConfig\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Logging","awsResourceTypeName":"iot-logging","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Logging\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"DefaultLogLevel\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Logging\nProperties:\n  AccountId: String\n  DefaultLogLevel: String\n  RoleArn: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::MitigationAction","awsResourceTypeName":"iot-mitigationaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::MitigationAction\",\n  \"Properties\" : {\n      \"ActionName\" : String,\n      \"ActionParams\" : ActionParams,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::MitigationAction\nProperties:\n  ActionName: String\n  ActionParams: \n    ActionParams\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Policy","awsResourceTypeName":"iot-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Policy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Policy\nProperties:\n  PolicyDocument: Json\n  PolicyName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::PolicyPrincipalAttachment","awsResourceTypeName":"iot-policyprincipalattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::PolicyPrincipalAttachment\",\n  \"Properties\" : {\n      \"PolicyName\" : String,\n      \"Principal\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::PolicyPrincipalAttachment\nProperties:\n  PolicyName: String\n  Principal: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ProvisioningTemplate","awsResourceTypeName":"iot-provisioningtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ProvisioningTemplate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"PreProvisioningHook\" : ProvisioningHook,\n      \"ProvisioningRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateBody\" : String,\n      \"TemplateName\" : String,\n      \"TemplateType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ProvisioningTemplate\nProperties:\n  Description: String\n  Enabled: Boolean\n  PreProvisioningHook: \n    ProvisioningHook\n  ProvisioningRoleArn: String\n  Tags: \n    - Tag\n  TemplateBody: String\n  TemplateName: String\n  TemplateType: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ResourceSpecificLogging","awsResourceTypeName":"iot-resourcespecificlogging","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ResourceSpecificLogging\",\n  \"Properties\" : {\n      \"LogLevel\" : String,\n      \"TargetName\" : String,\n      \"TargetType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ResourceSpecificLogging\nProperties:\n  LogLevel: String\n  TargetName: String\n  TargetType: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::RoleAlias","awsResourceTypeName":"iot-rolealias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::RoleAlias\",\n  \"Properties\" : {\n      \"CredentialDurationSeconds\" : Integer,\n      \"RoleAlias\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::RoleAlias\nProperties:\n  CredentialDurationSeconds: Integer\n  RoleAlias: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ScheduledAudit","awsResourceTypeName":"iot-scheduledaudit","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ScheduledAudit\",\n  \"Properties\" : {\n      \"DayOfMonth\" : String,\n      \"DayOfWeek\" : String,\n      \"Frequency\" : String,\n      \"ScheduledAuditName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetCheckNames\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ScheduledAudit\nProperties:\n  DayOfMonth: String\n  DayOfWeek: String\n  Frequency: String\n  ScheduledAuditName: String\n  Tags: \n    - Tag\n  TargetCheckNames: \n    - String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::SecurityProfile","awsResourceTypeName":"iot-securityprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::SecurityProfile\",\n  \"Properties\" : {\n      \"AdditionalMetricsToRetainV2\" : [ MetricToRetain, ... ],\n      \"AlertTargets\" : {Key: Value, ...},\n      \"Behaviors\" : [ Behavior, ... ],\n      \"MetricsExportConfig\" : MetricsExportConfig,\n      \"SecurityProfileDescription\" : String,\n      \"SecurityProfileName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArns\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::SecurityProfile\nProperties:\n  AdditionalMetricsToRetainV2: \n    - MetricToRetain\n  AlertTargets: \n    Key: Value\n  Behaviors: \n    - Behavior\n  MetricsExportConfig: \n    MetricsExportConfig\n  SecurityProfileDescription: String\n  SecurityProfileName: String\n  Tags: \n    - Tag\n  TargetArns: \n    - String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::SoftwarePackage","awsResourceTypeName":"iot-softwarepackage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::SoftwarePackage\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"PackageName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::SoftwarePackage\nProperties:\n  Description: String\n  PackageName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::SoftwarePackageVersion","awsResourceTypeName":"iot-softwarepackageversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::SoftwarePackageVersion\",\n  \"Properties\" : {\n      \"Attributes\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"PackageName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VersionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::SoftwarePackageVersion\nProperties:\n  Attributes: \n    Key: Value\n  Description: String\n  PackageName: String\n  Tags: \n    - Tag\n  VersionName: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Thing","awsResourceTypeName":"iot-thing","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Thing\",\n  \"Properties\" : {\n      \"AttributePayload\" : AttributePayload,\n      \"ThingName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Thing\nProperties:\n  AttributePayload: \n    AttributePayload\n  ThingName: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ThingGroup","awsResourceTypeName":"iot-thinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ThingGroup\",\n  \"Properties\" : {\n      \"ParentGroupName\" : String,\n      \"QueryString\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingGroupName\" : String,\n      \"ThingGroupProperties\" : ThingGroupProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ThingGroup\nProperties:\n  ParentGroupName: String\n  QueryString: \n    String\n  Tags: \n    - Tag\n  ThingGroupName: String\n  ThingGroupProperties: \n    ThingGroupProperties\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ThingPrincipalAttachment","awsResourceTypeName":"iot-thingprincipalattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ThingPrincipalAttachment\",\n  \"Properties\" : {\n      \"Principal\" : String,\n      \"ThingName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ThingPrincipalAttachment\nProperties:\n  Principal: String\n  ThingName: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ThingType","awsResourceTypeName":"iot-thingtype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ThingType\",\n  \"Properties\" : {\n      \"DeprecateThingType\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingTypeName\" : String,\n      \"ThingTypeProperties\" : ThingTypeProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ThingType\nProperties:\n  DeprecateThingType: Boolean\n  Tags: \n    - Tag\n  ThingTypeName: String\n  ThingTypeProperties: \n    ThingTypeProperties\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::TopicRule","awsResourceTypeName":"iot-topicrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::TopicRule\",\n  \"Properties\" : {\n      \"RuleName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TopicRulePayload\" : TopicRulePayload\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::TopicRule\nProperties:\n  RuleName: String\n  Tags: \n    - Tag\n  TopicRulePayload: \n    TopicRulePayload\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::TopicRuleDestination","awsResourceTypeName":"iot-topicruledestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::TopicRuleDestination\",\n  \"Properties\" : {\n      \"HttpUrlProperties\" : HttpUrlDestinationSummary,\n      \"Status\" : String,\n      \"VpcProperties\" : VpcDestinationProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::TopicRuleDestination\nProperties:\n  HttpUrlProperties: \n    HttpUrlDestinationSummary\n  Status: String\n  VpcProperties: \n    VpcDestinationProperties\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT1Click::Device","awsResourceTypeName":"iot1click-device","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT1Click::Device\",\n  \"Properties\" : {\n      \"DeviceId\" : String,\n      \"Enabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT1Click::Device\nProperties:\n  DeviceId: String\n  Enabled: Boolean\n","awsServiceName":"IoT1Click","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT1Click::Placement","awsResourceTypeName":"iot1click-placement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT1Click::Placement\",\n  \"Properties\" : {\n      \"AssociatedDevices\" : Json,\n      \"Attributes\" : Json,\n      \"PlacementName\" : String,\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT1Click::Placement\nProperties:\n  AssociatedDevices: Json\n  Attributes: Json\n  PlacementName: String\n  ProjectName: String\n","awsServiceName":"IoT1Click","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT1Click::Project","awsResourceTypeName":"iot1click-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT1Click::Project\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"PlacementTemplate\" : PlacementTemplate,\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT1Click::Project\nProperties:\n  Description: String\n  PlacementTemplate: \n    PlacementTemplate\n  ProjectName: String\n","awsServiceName":"IoT1Click","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Channel","awsResourceTypeName":"iotanalytics-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Channel\",\n  \"Properties\" : {\n      \"ChannelName\" : String,\n      \"ChannelStorage\" : ChannelStorage,\n      \"RetentionPeriod\" : RetentionPeriod,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Channel\nProperties:\n  ChannelName: String\n  ChannelStorage: \n    ChannelStorage\n  RetentionPeriod: \n    RetentionPeriod\n  Tags: \n    - Tag\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Dataset","awsResourceTypeName":"iotanalytics-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Dataset\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"ContentDeliveryRules\" : [ DatasetContentDeliveryRule, ... ],\n      \"DatasetName\" : String,\n      \"LateDataRules\" : [ LateDataRule, ... ],\n      \"RetentionPeriod\" : RetentionPeriod,\n      \"Tags\" : [ Tag, ... ],\n      \"Triggers\" : [ Trigger, ... ],\n      \"VersioningConfiguration\" : VersioningConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Dataset\nProperties:\n  Actions: \n    - Action\n  ContentDeliveryRules: \n    - DatasetContentDeliveryRule\n  DatasetName: String\n  LateDataRules: \n    - LateDataRule\n  RetentionPeriod: \n    RetentionPeriod\n  Tags: \n    - Tag\n  Triggers: \n    - Trigger\n  VersioningConfiguration: \n    VersioningConfiguration\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Datastore","awsResourceTypeName":"iotanalytics-datastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Datastore\",\n  \"Properties\" : {\n      \"DatastoreName\" : String,\n      \"DatastorePartitions\" : DatastorePartitions,\n      \"DatastoreStorage\" : DatastoreStorage,\n      \"FileFormatConfiguration\" : FileFormatConfiguration,\n      \"RetentionPeriod\" : RetentionPeriod,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Datastore\nProperties:\n  DatastoreName: String\n  DatastorePartitions: \n    DatastorePartitions\n  DatastoreStorage: \n    DatastoreStorage\n  FileFormatConfiguration: \n    FileFormatConfiguration\n  RetentionPeriod: \n    RetentionPeriod\n  Tags: \n    - Tag\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Pipeline","awsResourceTypeName":"iotanalytics-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Pipeline\",\n  \"Properties\" : {\n      \"PipelineActivities\" : [ Activity, ... ],\n      \"PipelineName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Pipeline\nProperties:\n  PipelineActivities: \n    - Activity\n  PipelineName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTCoreDeviceAdvisor::SuiteDefinition","awsResourceTypeName":"iotcoredeviceadvisor-suitedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTCoreDeviceAdvisor::SuiteDefinition\",\n  \"Properties\" : {\n      \"SuiteDefinitionConfiguration\" : SuiteDefinitionConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTCoreDeviceAdvisor::SuiteDefinition\nProperties:\n  SuiteDefinitionConfiguration: \n    SuiteDefinitionConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"IoTCoreDeviceAdvisor","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTEvents::AlarmModel","awsResourceTypeName":"iotevents-alarmmodel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTEvents::AlarmModel\",\n  \"Properties\" : {\n      \"AlarmCapabilities\" : AlarmCapabilities,\n      \"AlarmEventActions\" : AlarmEventActions,\n      \"AlarmModelDescription\" : String,\n      \"AlarmModelName\" : String,\n      \"AlarmRule\" : AlarmRule,\n      \"Key\" : String,\n      \"RoleArn\" : String,\n      \"Severity\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTEvents::AlarmModel\nProperties:\n  AlarmCapabilities: \n    AlarmCapabilities\n  AlarmEventActions: \n    AlarmEventActions\n  AlarmModelDescription: String\n  AlarmModelName: String\n  AlarmRule: \n    AlarmRule\n  Key: String\n  RoleArn: String\n  Severity: Integer\n  Tags: \n    - Tag\n","awsServiceName":"IoTEvents","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTEvents::DetectorModel","awsResourceTypeName":"iotevents-detectormodel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTEvents::DetectorModel\",\n  \"Properties\" : {\n      \"DetectorModelDefinition\" : DetectorModelDefinition,\n      \"DetectorModelDescription\" : String,\n      \"DetectorModelName\" : String,\n      \"EvaluationMethod\" : String,\n      \"Key\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTEvents::DetectorModel\nProperties:\n  DetectorModelDefinition: \n    DetectorModelDefinition\n  DetectorModelDescription: String\n  DetectorModelName: String\n  EvaluationMethod: String\n  Key: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTEvents","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTEvents::Input","awsResourceTypeName":"iotevents-input","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTEvents::Input\",\n  \"Properties\" : {\n      \"InputDefinition\" : InputDefinition,\n      \"InputDescription\" : String,\n      \"InputName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTEvents::Input\nProperties:\n  InputDefinition: \n    InputDefinition\n  InputDescription: String\n  InputName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTEvents","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetHub::Application","awsResourceTypeName":"iotfleethub-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetHub::Application\",\n  \"Properties\" : {\n      \"ApplicationDescription\" : String,\n      \"ApplicationName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetHub::Application\nProperties:\n  ApplicationDescription: String\n  ApplicationName: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetHub","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::Campaign","awsResourceTypeName":"iotfleetwise-campaign","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::Campaign\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"CollectionScheme\" : CollectionScheme,\n      \"Compression\" : String,\n      \"DataDestinationConfigs\" : [ DataDestinationConfig, ... ],\n      \"DataExtraDimensions\" : [ String, ... ],\n      \"Description\" : String,\n      \"DiagnosticsMode\" : String,\n      \"ExpiryTime\" : String,\n      \"Name\" : String,\n      \"PostTriggerCollectionDuration\" : Number,\n      \"Priority\" : Integer,\n      \"SignalCatalogArn\" : String,\n      \"SignalsToCollect\" : [ SignalInformation, ... ],\n      \"SpoolingMode\" : String,\n      \"StartTime\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::Campaign\nProperties:\n  Action: String\n  CollectionScheme: \n    CollectionScheme\n  Compression: String\n  DataDestinationConfigs: \n    - DataDestinationConfig\n  DataExtraDimensions: \n    - String\n  Description: String\n  DiagnosticsMode: String\n  ExpiryTime: String\n  Name: String\n  PostTriggerCollectionDuration: Number\n  Priority: Integer\n  SignalCatalogArn: String\n  SignalsToCollect: \n    - SignalInformation\n  SpoolingMode: String\n  StartTime: String\n  Tags: \n    - Tag\n  TargetArn: String\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::DecoderManifest","awsResourceTypeName":"iotfleetwise-decodermanifest","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::DecoderManifest\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ModelManifestArn\" : String,\n      \"Name\" : String,\n      \"NetworkInterfaces\" : [ NetworkInterfacesItems, ... ],\n      \"SignalDecoders\" : [ SignalDecodersItems, ... ],\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::DecoderManifest\nProperties:\n  Description: String\n  ModelManifestArn: String\n  Name: String\n  NetworkInterfaces: \n    - NetworkInterfacesItems\n  SignalDecoders: \n    - SignalDecodersItems\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::Fleet","awsResourceTypeName":"iotfleetwise-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::Fleet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Id\" : String,\n      \"SignalCatalogArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::Fleet\nProperties:\n  Description: String\n  Id: String\n  SignalCatalogArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::ModelManifest","awsResourceTypeName":"iotfleetwise-modelmanifest","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::ModelManifest\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Nodes\" : [ String, ... ],\n      \"SignalCatalogArn\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::ModelManifest\nProperties:\n  Description: String\n  Name: String\n  Nodes: \n    - String\n  SignalCatalogArn: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::SignalCatalog","awsResourceTypeName":"iotfleetwise-signalcatalog","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::SignalCatalog\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"NodeCounts\" : NodeCounts,\n      \"Nodes\" : [ Node, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::SignalCatalog\nProperties:\n  Description: String\n  Name: String\n  NodeCounts: \n    NodeCounts\n  Nodes: \n    - Node\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::Vehicle","awsResourceTypeName":"iotfleetwise-vehicle","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::Vehicle\",\n  \"Properties\" : {\n      \"AssociationBehavior\" : String,\n      \"Attributes\" : {Key: Value, ...},\n      \"DecoderManifestArn\" : String,\n      \"ModelManifestArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::Vehicle\nProperties:\n  AssociationBehavior: String\n  Attributes: \n    Key: Value\n  DecoderManifestArn: String\n  ModelManifestArn: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ConnectorDefinition","awsResourceTypeName":"greengrass-connectordefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ConnectorDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : ConnectorDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ConnectorDefinition\nProperties:\n  InitialVersion: \n    ConnectorDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ConnectorDefinitionVersion","awsResourceTypeName":"greengrass-connectordefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ConnectorDefinitionVersion\",\n  \"Properties\" : {\n      \"ConnectorDefinitionId\" : String,\n      \"Connectors\" : [ Connector, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ConnectorDefinitionVersion\nProperties:\n  ConnectorDefinitionId: String\n  Connectors: \n    - Connector\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::CoreDefinition","awsResourceTypeName":"greengrass-coredefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::CoreDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : CoreDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::CoreDefinition\nProperties:\n  InitialVersion: \n    CoreDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::CoreDefinitionVersion","awsResourceTypeName":"greengrass-coredefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::CoreDefinitionVersion\",\n  \"Properties\" : {\n      \"CoreDefinitionId\" : String,\n      \"Cores\" : [ Core, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::CoreDefinitionVersion\nProperties:\n  CoreDefinitionId: String\n  Cores: \n    - Core\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::DeviceDefinition","awsResourceTypeName":"greengrass-devicedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::DeviceDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : DeviceDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::DeviceDefinition\nProperties:\n  InitialVersion: \n    DeviceDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::DeviceDefinitionVersion","awsResourceTypeName":"greengrass-devicedefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::DeviceDefinitionVersion\",\n  \"Properties\" : {\n      \"DeviceDefinitionId\" : String,\n      \"Devices\" : [ Device, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::DeviceDefinitionVersion\nProperties:\n  DeviceDefinitionId: String\n  Devices: \n    - Device\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::FunctionDefinition","awsResourceTypeName":"greengrass-functiondefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::FunctionDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : FunctionDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::FunctionDefinition\nProperties:\n  InitialVersion: \n    FunctionDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::FunctionDefinitionVersion","awsResourceTypeName":"greengrass-functiondefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::FunctionDefinitionVersion\",\n  \"Properties\" : {\n      \"DefaultConfig\" : DefaultConfig,\n      \"FunctionDefinitionId\" : String,\n      \"Functions\" : [ Function, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::FunctionDefinitionVersion\nProperties:\n  DefaultConfig: \n    DefaultConfig\n  FunctionDefinitionId: String\n  Functions: \n    - Function\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::Group","awsResourceTypeName":"greengrass-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::Group\",\n  \"Properties\" : {\n      \"InitialVersion\" : GroupVersion,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::Group\nProperties:\n  InitialVersion: \n    GroupVersion\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::GroupVersion","awsResourceTypeName":"greengrass-groupversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::GroupVersion\",\n  \"Properties\" : {\n      \"ConnectorDefinitionVersionArn\" : String,\n      \"CoreDefinitionVersionArn\" : String,\n      \"DeviceDefinitionVersionArn\" : String,\n      \"FunctionDefinitionVersionArn\" : String,\n      \"GroupId\" : String,\n      \"LoggerDefinitionVersionArn\" : String,\n      \"ResourceDefinitionVersionArn\" : String,\n      \"SubscriptionDefinitionVersionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::GroupVersion\nProperties:\n  ConnectorDefinitionVersionArn: String\n  CoreDefinitionVersionArn: String\n  DeviceDefinitionVersionArn: String\n  FunctionDefinitionVersionArn: String\n  GroupId: String\n  LoggerDefinitionVersionArn: String\n  ResourceDefinitionVersionArn: String\n  SubscriptionDefinitionVersionArn: String\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::LoggerDefinition","awsResourceTypeName":"greengrass-loggerdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::LoggerDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : LoggerDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::LoggerDefinition\nProperties:\n  InitialVersion: \n    LoggerDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::LoggerDefinitionVersion","awsResourceTypeName":"greengrass-loggerdefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::LoggerDefinitionVersion\",\n  \"Properties\" : {\n      \"LoggerDefinitionId\" : String,\n      \"Loggers\" : [ Logger, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::LoggerDefinitionVersion\nProperties:\n  LoggerDefinitionId: String\n  Loggers: \n    - Logger\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ResourceDefinition","awsResourceTypeName":"greengrass-resourcedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ResourceDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : ResourceDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ResourceDefinition\nProperties:\n  InitialVersion: \n    ResourceDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ResourceDefinitionVersion","awsResourceTypeName":"greengrass-resourcedefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ResourceDefinitionVersion\",\n  \"Properties\" : {\n      \"ResourceDefinitionId\" : String,\n      \"Resources\" : [ ResourceInstance, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ResourceDefinitionVersion\nProperties:\n  ResourceDefinitionId: String\n  Resources: \n    - ResourceInstance\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::SubscriptionDefinition","awsResourceTypeName":"greengrass-subscriptiondefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::SubscriptionDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : SubscriptionDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::SubscriptionDefinition\nProperties:\n  InitialVersion: \n    SubscriptionDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::SubscriptionDefinitionVersion","awsResourceTypeName":"greengrass-subscriptiondefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::SubscriptionDefinitionVersion\",\n  \"Properties\" : {\n      \"SubscriptionDefinitionId\" : String,\n      \"Subscriptions\" : [ Subscription, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::SubscriptionDefinitionVersion\nProperties:\n  SubscriptionDefinitionId: String\n  Subscriptions: \n    - Subscription\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::GreengrassV2::ComponentVersion","awsResourceTypeName":"greengrassv2-componentversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GreengrassV2::ComponentVersion\",\n  \"Properties\" : {\n      \"InlineRecipe\" : String,\n      \"LambdaFunction\" : LambdaFunctionRecipeSource,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GreengrassV2::ComponentVersion\nProperties:\n  InlineRecipe: String\n  LambdaFunction: \n    LambdaFunctionRecipeSource\n  Tags: \n    Key: Value\n","awsServiceName":"GreengrassV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::GreengrassV2::Deployment","awsResourceTypeName":"greengrassv2-deployment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GreengrassV2::Deployment\",\n  \"Properties\" : {\n      \"Components\" : {Key: Value, ...},\n      \"DeploymentName\" : String,\n      \"DeploymentPolicies\" : DeploymentPolicies,\n      \"IotJobConfiguration\" : DeploymentIoTJobConfiguration,\n      \"ParentTargetArn\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GreengrassV2::Deployment\nProperties:\n  Components: \n    Key: Value\n  DeploymentName: String\n  DeploymentPolicies: \n    DeploymentPolicies\n  IotJobConfiguration: \n    DeploymentIoTJobConfiguration\n  ParentTargetArn: String\n  Tags: \n    Key: Value\n  TargetArn: String\n","awsServiceName":"GreengrassV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::IoTSiteWise::AccessPolicy","awsResourceTypeName":"iotsitewise-accesspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::AccessPolicy\",\n  \"Properties\" : {\n      \"AccessPolicyIdentity\" : AccessPolicyIdentity,\n      \"AccessPolicyPermission\" : String,\n      \"AccessPolicyResource\" : AccessPolicyResource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::AccessPolicy\nProperties:\n  AccessPolicyIdentity: \n    AccessPolicyIdentity\n  AccessPolicyPermission: String\n  AccessPolicyResource: \n    AccessPolicyResource\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Asset","awsResourceTypeName":"iotsitewise-asset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Asset\",\n  \"Properties\" : {\n      \"AssetDescription\" : String,\n      \"AssetExternalId\" : String,\n      \"AssetHierarchies\" : [ AssetHierarchy, ... ],\n      \"AssetModelId\" : String,\n      \"AssetName\" : String,\n      \"AssetProperties\" : [ AssetProperty, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Asset\nProperties:\n  AssetDescription: String\n  AssetExternalId: String\n  AssetHierarchies: \n    - AssetHierarchy\n  AssetModelId: String\n  AssetName: String\n  AssetProperties: \n    - AssetProperty\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::AssetModel","awsResourceTypeName":"iotsitewise-assetmodel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::AssetModel\",\n  \"Properties\" : {\n      \"AssetModelCompositeModels\" : [ AssetModelCompositeModel, ... ],\n      \"AssetModelDescription\" : String,\n      \"AssetModelExternalId\" : String,\n      \"AssetModelHierarchies\" : [ AssetModelHierarchy, ... ],\n      \"AssetModelName\" : String,\n      \"AssetModelProperties\" : [ AssetModelProperty, ... ],\n      \"AssetModelType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::AssetModel\nProperties:\n  AssetModelCompositeModels: \n    - AssetModelCompositeModel\n  AssetModelDescription: String\n  AssetModelExternalId: String\n  AssetModelHierarchies: \n    - AssetModelHierarchy\n  AssetModelName: String\n  AssetModelProperties: \n    - AssetModelProperty\n  AssetModelType: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Dashboard","awsResourceTypeName":"iotsitewise-dashboard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Dashboard\",\n  \"Properties\" : {\n      \"DashboardDefinition\" : String,\n      \"DashboardDescription\" : String,\n      \"DashboardName\" : String,\n      \"ProjectId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Dashboard\nProperties:\n  DashboardDefinition: String\n  DashboardDescription: String\n  DashboardName: String\n  ProjectId: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Gateway","awsResourceTypeName":"iotsitewise-gateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Gateway\",\n  \"Properties\" : {\n      \"GatewayCapabilitySummaries\" : [ GatewayCapabilitySummary, ... ],\n      \"GatewayName\" : String,\n      \"GatewayPlatform\" : GatewayPlatform,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Gateway\nProperties:\n  GatewayCapabilitySummaries: \n    - GatewayCapabilitySummary\n  GatewayName: String\n  GatewayPlatform: \n    GatewayPlatform\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Portal","awsResourceTypeName":"iotsitewise-portal","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Portal\",\n  \"Properties\" : {\n      \"Alarms\" : Alarms,\n      \"NotificationSenderEmail\" : String,\n      \"PortalAuthMode\" : String,\n      \"PortalContactEmail\" : String,\n      \"PortalDescription\" : String,\n      \"PortalName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Portal\nProperties:\n  Alarms: \n    Alarms\n  NotificationSenderEmail: String\n  PortalAuthMode: String\n  PortalContactEmail: String\n  PortalDescription: String\n  PortalName: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Project","awsResourceTypeName":"iotsitewise-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Project\",\n  \"Properties\" : {\n      \"AssetIds\" : [ String, ... ],\n      \"PortalId\" : String,\n      \"ProjectDescription\" : String,\n      \"ProjectName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Project\nProperties:\n  AssetIds: \n    - String\n  PortalId: String\n  ProjectDescription: String\n  ProjectName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::ComponentType","awsResourceTypeName":"iottwinmaker-componenttype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::ComponentType\",\n  \"Properties\" : {\n      \"ComponentTypeId\" : String,\n      \"CompositeComponentTypes\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"ExtendsFrom\" : [ String, ... ],\n      \"Functions\" : {Key: Value, ...},\n      \"IsSingleton\" : Boolean,\n      \"PropertyDefinitions\" : {Key: Value, ...},\n      \"PropertyGroups\" : {Key: Value, ...},\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::ComponentType\nProperties:\n  ComponentTypeId: String\n  CompositeComponentTypes: \n    Key: Value\n  Description: String\n  ExtendsFrom: \n    - String\n  Functions: \n    Key: Value\n  IsSingleton: Boolean\n  PropertyDefinitions: \n    Key: Value\n  PropertyGroups: \n    Key: Value\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::Entity","awsResourceTypeName":"iottwinmaker-entity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::Entity\",\n  \"Properties\" : {\n      \"Components\" : {Key: Value, ...},\n      \"CompositeComponents\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"EntityId\" : String,\n      \"EntityName\" : String,\n      \"ParentEntityId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::Entity\nProperties:\n  Components: \n    Key: Value\n  CompositeComponents: \n    Key: Value\n  Description: String\n  EntityId: String\n  EntityName: String\n  ParentEntityId: String\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::Scene","awsResourceTypeName":"iottwinmaker-scene","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::Scene\",\n  \"Properties\" : {\n      \"Capabilities\" : [ String, ... ],\n      \"ContentLocation\" : String,\n      \"Description\" : String,\n      \"SceneId\" : String,\n      \"SceneMetadata\" : {Key: Value, ...},\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::Scene\nProperties:\n  Capabilities: \n    - String\n  ContentLocation: String\n  Description: String\n  SceneId: String\n  SceneMetadata: \n    Key: Value\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::SyncJob","awsResourceTypeName":"iottwinmaker-syncjob","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::SyncJob\",\n  \"Properties\" : {\n      \"SyncRole\" : String,\n      \"SyncSource\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::SyncJob\nProperties:\n  SyncRole: String\n  SyncSource: String\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::Workspace","awsResourceTypeName":"iottwinmaker-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::Workspace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Role\" : String,\n      \"S3Location\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::Workspace\nProperties:\n  Description: String\n  Role: String\n  S3Location: String\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::Destination","awsResourceTypeName":"iotwireless-destination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::Destination\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Expression\" : String,\n      \"ExpressionType\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::Destination\nProperties:\n  Description: String\n  Expression: String\n  ExpressionType: String\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::DeviceProfile","awsResourceTypeName":"iotwireless-deviceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::DeviceProfile\",\n  \"Properties\" : {\n      \"LoRaWAN\" : LoRaWANDeviceProfile,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::DeviceProfile\nProperties:\n  LoRaWAN: \n    LoRaWANDeviceProfile\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::FuotaTask","awsResourceTypeName":"iotwireless-fuotatask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::FuotaTask\",\n  \"Properties\" : {\n      \"AssociateMulticastGroup\" : String,\n      \"AssociateWirelessDevice\" : String,\n      \"Description\" : String,\n      \"DisassociateMulticastGroup\" : String,\n      \"DisassociateWirelessDevice\" : String,\n      \"FirmwareUpdateImage\" : String,\n      \"FirmwareUpdateRole\" : String,\n      \"LoRaWAN\" : LoRaWAN,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::FuotaTask\nProperties:\n  AssociateMulticastGroup: String\n  AssociateWirelessDevice: String\n  Description: String\n  DisassociateMulticastGroup: String\n  DisassociateWirelessDevice: String\n  FirmwareUpdateImage: String\n  FirmwareUpdateRole: String\n  LoRaWAN: \n    LoRaWAN\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::MulticastGroup","awsResourceTypeName":"iotwireless-multicastgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::MulticastGroup\",\n  \"Properties\" : {\n      \"AssociateWirelessDevice\" : String,\n      \"Description\" : String,\n      \"DisassociateWirelessDevice\" : String,\n      \"LoRaWAN\" : LoRaWAN,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::MulticastGroup\nProperties:\n  AssociateWirelessDevice: String\n  Description: String\n  DisassociateWirelessDevice: String\n  LoRaWAN: \n    LoRaWAN\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::NetworkAnalyzerConfiguration","awsResourceTypeName":"iotwireless-networkanalyzerconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::NetworkAnalyzerConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TraceContent\" : TraceContent,\n      \"WirelessDevices\" : [ String, ... ],\n      \"WirelessGateways\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::NetworkAnalyzerConfiguration\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  TraceContent: \n    TraceContent\n  WirelessDevices: \n    - String\n  WirelessGateways: \n    - String\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::PartnerAccount","awsResourceTypeName":"iotwireless-partneraccount","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::PartnerAccount\",\n  \"Properties\" : {\n      \"AccountLinked\" : Boolean,\n      \"PartnerAccountId\" : String,\n      \"PartnerType\" : String,\n      \"Sidewalk\" : SidewalkAccountInfo,\n      \"SidewalkResponse\" : SidewalkAccountInfoWithFingerprint,\n      \"SidewalkUpdate\" : SidewalkUpdateAccount,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::PartnerAccount\nProperties:\n  AccountLinked: Boolean\n  PartnerAccountId: String\n  PartnerType: String\n  Sidewalk: \n    SidewalkAccountInfo\n  SidewalkResponse: \n    SidewalkAccountInfoWithFingerprint\n  SidewalkUpdate: \n    SidewalkUpdateAccount\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::ServiceProfile","awsResourceTypeName":"iotwireless-serviceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::ServiceProfile\",\n  \"Properties\" : {\n      \"LoRaWAN\" : LoRaWANServiceProfile,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::ServiceProfile\nProperties:\n  LoRaWAN: \n    LoRaWANServiceProfile\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::TaskDefinition","awsResourceTypeName":"iotwireless-taskdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::TaskDefinition\",\n  \"Properties\" : {\n      \"AutoCreateTasks\" : Boolean,\n      \"LoRaWANUpdateGatewayTaskEntry\" : LoRaWANUpdateGatewayTaskEntry,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskDefinitionType\" : String,\n      \"Update\" : UpdateWirelessGatewayTaskCreate\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::TaskDefinition\nProperties:\n  AutoCreateTasks: Boolean\n  LoRaWANUpdateGatewayTaskEntry: \n    LoRaWANUpdateGatewayTaskEntry\n  Name: String\n  Tags: \n    - Tag\n  TaskDefinitionType: String\n  Update: \n    UpdateWirelessGatewayTaskCreate\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::WirelessDevice","awsResourceTypeName":"iotwireless-wirelessdevice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::WirelessDevice\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DestinationName\" : String,\n      \"LastUplinkReceivedAt\" : String,\n      \"LoRaWAN\" : LoRaWANDevice,\n      \"Name\" : String,\n      \"Positioning\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingArn\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::WirelessDevice\nProperties:\n  Description: String\n  DestinationName: String\n  LastUplinkReceivedAt: String\n  LoRaWAN: \n    LoRaWANDevice\n  Name: String\n  Positioning: String\n  Tags: \n    - Tag\n  ThingArn: String\n  Type: String\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::WirelessDeviceImportTask","awsResourceTypeName":"iotwireless-wirelessdeviceimporttask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::WirelessDeviceImportTask\",\n  \"Properties\" : {\n      \"DestinationName\" : String,\n      \"Sidewalk\" : Sidewalk,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::WirelessDeviceImportTask\nProperties:\n  DestinationName: String\n  Sidewalk: \n    Sidewalk\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::WirelessGateway","awsResourceTypeName":"iotwireless-wirelessgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::WirelessGateway\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"LastUplinkReceivedAt\" : String,\n      \"LoRaWAN\" : LoRaWANGateway,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingArn\" : String,\n      \"ThingName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::WirelessGateway\nProperties:\n  Description: String\n  LastUplinkReceivedAt: String\n  LoRaWAN: \n    LoRaWANGateway\n  Name: String\n  Tags: \n    - Tag\n  ThingArn: String\n  ThingName: String\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IVS::Channel","awsResourceTypeName":"ivs-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::Channel\",\n  \"Properties\" : {\n      \"Authorized\" : Boolean,\n      \"InsecureIngest\" : Boolean,\n      \"LatencyMode\" : String,\n      \"Name\" : String,\n      \"Preset\" : String,\n      \"RecordingConfigurationArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::Channel\nProperties:\n  Authorized: Boolean\n  InsecureIngest: Boolean\n  LatencyMode: String\n  Name: String\n  Preset: String\n  RecordingConfigurationArn: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::EncoderConfiguration","awsResourceTypeName":"ivs-encoderconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::EncoderConfiguration\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Video\" : Video\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::EncoderConfiguration\nProperties:\n  Name: String\n  Tags: \n    - Tag\n  Video: \n    Video\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::PlaybackKeyPair","awsResourceTypeName":"ivs-playbackkeypair","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::PlaybackKeyPair\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"PublicKeyMaterial\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::PlaybackKeyPair\nProperties:\n  Name: String\n  PublicKeyMaterial: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::PlaybackRestrictionPolicy","awsResourceTypeName":"ivs-playbackrestrictionpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::PlaybackRestrictionPolicy\",\n  \"Properties\" : {\n      \"AllowedCountries\" : [ String, ... ],\n      \"AllowedOrigins\" : [ String, ... ],\n      \"EnableStrictOriginEnforcement\" : Boolean,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::PlaybackRestrictionPolicy\nProperties:\n  AllowedCountries: \n    - String\n  AllowedOrigins: \n    - String\n  EnableStrictOriginEnforcement: Boolean\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::RecordingConfiguration","awsResourceTypeName":"ivs-recordingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::RecordingConfiguration\",\n  \"Properties\" : {\n      \"DestinationConfiguration\" : DestinationConfiguration,\n      \"Name\" : String,\n      \"RecordingReconnectWindowSeconds\" : Integer,\n      \"RenditionConfiguration\" : RenditionConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"ThumbnailConfiguration\" : ThumbnailConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::RecordingConfiguration\nProperties:\n  DestinationConfiguration: \n    DestinationConfiguration\n  Name: String\n  RecordingReconnectWindowSeconds: Integer\n  RenditionConfiguration: \n    RenditionConfiguration\n  Tags: \n    - Tag\n  ThumbnailConfiguration: \n    ThumbnailConfiguration\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::Stage","awsResourceTypeName":"ivs-stage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::Stage\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::Stage\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::StorageConfiguration","awsResourceTypeName":"ivs-storageconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::StorageConfiguration\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"S3\" : S3StorageConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::StorageConfiguration\nProperties:\n  Name: String\n  S3: \n    S3StorageConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::StreamKey","awsResourceTypeName":"ivs-streamkey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::StreamKey\",\n  \"Properties\" : {\n      \"ChannelArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::StreamKey\nProperties:\n  ChannelArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVSChat::LoggingConfiguration","awsResourceTypeName":"ivschat-loggingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVSChat::LoggingConfiguration\",\n  \"Properties\" : {\n      \"DestinationConfiguration\" : DestinationConfiguration,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVSChat::LoggingConfiguration\nProperties:\n  DestinationConfiguration: \n    DestinationConfiguration\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVSChat","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVSChat::Room","awsResourceTypeName":"ivschat-room","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVSChat::Room\",\n  \"Properties\" : {\n      \"LoggingConfigurationIdentifiers\" : [ String, ... ],\n      \"MaximumMessageLength\" : Integer,\n      \"MaximumMessageRatePerSecond\" : Integer,\n      \"MessageReviewHandler\" : MessageReviewHandler,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVSChat::Room\nProperties:\n  LoggingConfigurationIdentifiers: \n    - String\n  MaximumMessageLength: Integer\n  MaximumMessageRatePerSecond: Integer\n  MessageReviewHandler: \n    MessageReviewHandler\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVSChat","awsServiceCategory":"other"},{"awsResourceType":"AWS::Kendra::DataSource","awsResourceTypeName":"kendra-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kendra::DataSource\",\n  \"Properties\" : {\n      \"CustomDocumentEnrichmentConfiguration\" : CustomDocumentEnrichmentConfiguration,\n      \"DataSourceConfiguration\" : DataSourceConfiguration,\n      \"Description\" : String,\n      \"IndexId\" : String,\n      \"LanguageCode\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Schedule\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kendra::DataSource\nProperties:\n  CustomDocumentEnrichmentConfiguration: \n    CustomDocumentEnrichmentConfiguration\n  DataSourceConfiguration: \n    DataSourceConfiguration\n  Description: String\n  IndexId: String\n  LanguageCode: String\n  Name: String\n  RoleArn: String\n  Schedule: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"Kendra","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Kendra::Faq","awsResourceTypeName":"kendra-faq","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kendra::Faq\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FileFormat\" : String,\n      \"IndexId\" : String,\n      \"LanguageCode\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"S3Path\" : S3Path,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kendra::Faq\nProperties:\n  Description: String\n  FileFormat: String\n  IndexId: String\n  LanguageCode: String\n  Name: String\n  RoleArn: String\n  S3Path: \n    S3Path\n  Tags: \n    - Tag\n","awsServiceName":"Kendra","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Kendra::Index","awsResourceTypeName":"kendra-index","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kendra::Index\",\n  \"Properties\" : {\n      \"CapacityUnits\" : CapacityUnitsConfiguration,\n      \"Description\" : String,\n      \"DocumentMetadataConfigurations\" : [ DocumentMetadataConfiguration, ... ],\n      \"Edition\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"UserContextPolicy\" : String,\n      \"UserTokenConfigurations\" : [ UserTokenConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kendra::Index\nProperties:\n  CapacityUnits: \n    CapacityUnitsConfiguration\n  Description: String\n  DocumentMetadataConfigurations: \n    - DocumentMetadataConfiguration\n  Edition: String\n  Name: String\n  RoleArn: String\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  Tags: \n    - Tag\n  UserContextPolicy: String\n  UserTokenConfigurations: \n    - UserTokenConfiguration\n","awsServiceName":"Kendra","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::KendraRanking::ExecutionPlan","awsResourceTypeName":"kendraranking-executionplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KendraRanking::ExecutionPlan\",\n  \"Properties\" : {\n      \"CapacityUnits\" : CapacityUnitsConfiguration,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KendraRanking::ExecutionPlan\nProperties:\n  CapacityUnits: \n    CapacityUnitsConfiguration\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"KendraRanking","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Cassandra::Keyspace","awsResourceTypeName":"cassandra-keyspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cassandra::Keyspace\",\n  \"Properties\" : {\n      \"KeyspaceName\" : String,\n      \"ReplicationSpecification\" : ReplicationSpecification,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cassandra::Keyspace\nProperties:\n  KeyspaceName: String\n  ReplicationSpecification: \n    ReplicationSpecification\n  Tags: \n    - Tag\n","awsServiceName":"Cassandra","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cassandra::Table","awsResourceTypeName":"cassandra-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cassandra::Table\",\n  \"Properties\" : {\n      \"AutoScalingSpecifications\" : AutoScalingSpecification,\n      \"BillingMode\" : BillingMode,\n      \"ClientSideTimestampsEnabled\" : Boolean,\n      \"ClusteringKeyColumns\" : [ ClusteringKeyColumn, ... ],\n      \"DefaultTimeToLive\" : Integer,\n      \"EncryptionSpecification\" : EncryptionSpecification,\n      \"KeyspaceName\" : String,\n      \"PartitionKeyColumns\" : [ Column, ... ],\n      \"PointInTimeRecoveryEnabled\" : Boolean,\n      \"RegularColumns\" : [ Column, ... ],\n      \"ReplicaSpecifications\" : [ ReplicaSpecification, ... ],\n      \"TableName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cassandra::Table\nProperties:\n  AutoScalingSpecifications: \n    AutoScalingSpecification\n  BillingMode: \n    BillingMode\n  ClientSideTimestampsEnabled: Boolean\n  ClusteringKeyColumns: \n    - ClusteringKeyColumn\n  DefaultTimeToLive: Integer\n  EncryptionSpecification: \n    EncryptionSpecification\n  KeyspaceName: String\n  PartitionKeyColumns: \n    - Column\n  PointInTimeRecoveryEnabled: Boolean\n  RegularColumns: \n    - Column\n  ReplicaSpecifications: \n    - ReplicaSpecification\n  TableName: String\n  Tags: \n    - Tag\n","awsServiceName":"Cassandra","awsServiceCategory":"other"},{"awsResourceType":"AWS::Kinesis::Stream","awsResourceTypeName":"kinesis-stream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kinesis::Stream\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RetentionPeriodHours\" : Integer,\n      \"ShardCount\" : Integer,\n      \"StreamEncryption\" : StreamEncryption,\n      \"StreamModeDetails\" : StreamModeDetails,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kinesis::Stream\nProperties:\n  Name: String\n  RetentionPeriodHours: Integer\n  ShardCount: Integer\n  StreamEncryption: \n    StreamEncryption\n  StreamModeDetails: \n    StreamModeDetails\n  Tags: \n    - Tag\n","awsServiceName":"Kinesis","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Kinesis::StreamConsumer","awsResourceTypeName":"kinesis-streamconsumer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kinesis::StreamConsumer\",\n  \"Properties\" : {\n      \"ConsumerName\" : String,\n      \"StreamARN\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kinesis::StreamConsumer\nProperties:\n  ConsumerName: String\n  StreamARN: String\n","awsServiceName":"Kinesis","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalytics::Application","awsResourceTypeName":"kinesisanalytics-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalytics::Application\",\n  \"Properties\" : {\n      \"ApplicationCode\" : String,\n      \"ApplicationDescription\" : String,\n      \"ApplicationName\" : String,\n      \"Inputs\" : [ Input, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalytics::Application\nProperties:\n  ApplicationCode: String\n  ApplicationDescription: String\n  ApplicationName: String\n  Inputs: \n    - Input\n","awsServiceName":"KinesisAnalytics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalytics::ApplicationOutput","awsResourceTypeName":"kinesisanalytics-applicationoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalytics::ApplicationOutput\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Output\" : Output\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalytics::ApplicationOutput\nProperties:\n  ApplicationName: String\n  Output: \n    Output\n","awsServiceName":"KinesisAnalytics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalytics::ApplicationReferenceDataSource","awsResourceTypeName":"kinesisanalytics-applicationreferencedatasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalytics::ApplicationReferenceDataSource\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"ReferenceDataSource\" : ReferenceDataSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalytics::ApplicationReferenceDataSource\nProperties:\n  ApplicationName: String\n  ReferenceDataSource: \n    ReferenceDataSource\n","awsServiceName":"KinesisAnalytics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::Application","awsResourceTypeName":"kinesisanalyticsv2-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::Application\",\n  \"Properties\" : {\n      \"ApplicationConfiguration\" : ApplicationConfiguration,\n      \"ApplicationDescription\" : String,\n      \"ApplicationMaintenanceConfiguration\" : ApplicationMaintenanceConfiguration,\n      \"ApplicationMode\" : String,\n      \"ApplicationName\" : String,\n      \"RunConfiguration\" : RunConfiguration,\n      \"RuntimeEnvironment\" : String,\n      \"ServiceExecutionRole\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::Application\nProperties:\n  ApplicationConfiguration: \n    ApplicationConfiguration\n  ApplicationDescription: String\n  ApplicationMaintenanceConfiguration: \n    ApplicationMaintenanceConfiguration\n  ApplicationMode: String\n  ApplicationName: String\n  RunConfiguration: \n    RunConfiguration\n  RuntimeEnvironment: String\n  ServiceExecutionRole: String\n  Tags: \n    - Tag\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption","awsResourceTypeName":"kinesisanalyticsv2-applicationcloudwatchloggingoption","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"CloudWatchLoggingOption\" : CloudWatchLoggingOption\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\nProperties:\n  ApplicationName: String\n  CloudWatchLoggingOption: \n    CloudWatchLoggingOption\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::ApplicationOutput","awsResourceTypeName":"kinesisanalyticsv2-applicationoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::ApplicationOutput\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Output\" : Output\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::ApplicationOutput\nProperties:\n  ApplicationName: String\n  Output: \n    Output\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource","awsResourceTypeName":"kinesisanalyticsv2-applicationreferencedatasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"ReferenceDataSource\" : ReferenceDataSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\nProperties:\n  ApplicationName: String\n  ReferenceDataSource: \n    ReferenceDataSource\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisFirehose::DeliveryStream","awsResourceTypeName":"kinesisfirehose-deliverystream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisFirehose::DeliveryStream\",\n  \"Properties\" : {\n      \"AmazonOpenSearchServerlessDestinationConfiguration\" : AmazonOpenSearchServerlessDestinationConfiguration,\n      \"AmazonopensearchserviceDestinationConfiguration\" : AmazonopensearchserviceDestinationConfiguration,\n      \"DeliveryStreamEncryptionConfigurationInput\" : DeliveryStreamEncryptionConfigurationInput,\n      \"DeliveryStreamName\" : String,\n      \"DeliveryStreamType\" : String,\n      \"ElasticsearchDestinationConfiguration\" : ElasticsearchDestinationConfiguration,\n      \"ExtendedS3DestinationConfiguration\" : ExtendedS3DestinationConfiguration,\n      \"HttpEndpointDestinationConfiguration\" : HttpEndpointDestinationConfiguration,\n      \"KinesisStreamSourceConfiguration\" : KinesisStreamSourceConfiguration,\n      \"MSKSourceConfiguration\" : MSKSourceConfiguration,\n      \"RedshiftDestinationConfiguration\" : RedshiftDestinationConfiguration,\n      \"S3DestinationConfiguration\" : S3DestinationConfiguration,\n      \"SnowflakeDestinationConfiguration\" : SnowflakeDestinationConfiguration,\n      \"SplunkDestinationConfiguration\" : SplunkDestinationConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisFirehose::DeliveryStream\nProperties:\n  AmazonOpenSearchServerlessDestinationConfiguration: \n    AmazonOpenSearchServerlessDestinationConfiguration\n  AmazonopensearchserviceDestinationConfiguration: \n    AmazonopensearchserviceDestinationConfiguration\n  DeliveryStreamEncryptionConfigurationInput: \n    DeliveryStreamEncryptionConfigurationInput\n  DeliveryStreamName: String\n  DeliveryStreamType: String\n  ElasticsearchDestinationConfiguration: \n    ElasticsearchDestinationConfiguration\n  ExtendedS3DestinationConfiguration: \n    ExtendedS3DestinationConfiguration\n  HttpEndpointDestinationConfiguration: \n    HttpEndpointDestinationConfiguration\n  KinesisStreamSourceConfiguration: \n    KinesisStreamSourceConfiguration\n  MSKSourceConfiguration: \n    MSKSourceConfiguration\n  RedshiftDestinationConfiguration: \n    RedshiftDestinationConfiguration\n  S3DestinationConfiguration: \n    S3DestinationConfiguration\n  SnowflakeDestinationConfiguration: \n    SnowflakeDestinationConfiguration\n  SplunkDestinationConfiguration: \n    SplunkDestinationConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"KinesisFirehose","awsServiceCategory":"other"},{"awsResourceType":"AWS::KinesisVideo::SignalingChannel","awsResourceTypeName":"kinesisvideo-signalingchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisVideo::SignalingChannel\",\n  \"Properties\" : {\n      \"MessageTtlSeconds\" : Integer,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisVideo::SignalingChannel\nProperties:\n  MessageTtlSeconds: Integer\n  Name: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"KinesisVideo","awsServiceCategory":"other"},{"awsResourceType":"AWS::KinesisVideo::Stream","awsResourceTypeName":"kinesisvideo-stream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisVideo::Stream\",\n  \"Properties\" : {\n      \"DataRetentionInHours\" : Integer,\n      \"DeviceName\" : String,\n      \"KmsKeyId\" : String,\n      \"MediaType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisVideo::Stream\nProperties:\n  DataRetentionInHours: Integer\n  DeviceName: String\n  KmsKeyId: String\n  MediaType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"KinesisVideo","awsServiceCategory":"other"},{"awsResourceType":"AWS::KMS::Alias","awsResourceTypeName":"kms-alias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KMS::Alias\",\n  \"Properties\" : {\n      \"AliasName\" : String,\n      \"TargetKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KMS::Alias\nProperties:\n  AliasName: String\n  TargetKeyId: String\n","awsServiceName":"KMS","awsServiceCategory":"other"},{"awsResourceType":"AWS::KMS::Key","awsResourceTypeName":"kms-key","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KMS::Key\",\n  \"Properties\" : {\n      \"BypassPolicyLockoutSafetyCheck\" : Boolean,\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"EnableKeyRotation\" : Boolean,\n      \"KeyPolicy\" : Json,\n      \"KeySpec\" : String,\n      \"KeyUsage\" : String,\n      \"MultiRegion\" : Boolean,\n      \"Origin\" : String,\n      \"PendingWindowInDays\" : Integer,\n      \"RotationPeriodInDays\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KMS::Key\nProperties:\n  BypassPolicyLockoutSafetyCheck: Boolean\n  Description: String\n  Enabled: Boolean\n  EnableKeyRotation: Boolean\n  KeyPolicy: Json\n  KeySpec: String\n  KeyUsage: String\n  MultiRegion: Boolean\n  Origin: String\n  PendingWindowInDays: Integer\n  RotationPeriodInDays: Integer\n  Tags: \n    - Tag\n","awsServiceName":"KMS","awsServiceCategory":"other"},{"awsResourceType":"AWS::KMS::ReplicaKey","awsResourceTypeName":"kms-replicakey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KMS::ReplicaKey\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"KeyPolicy\" : Json,\n      \"PendingWindowInDays\" : Integer,\n      \"PrimaryKeyArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KMS::ReplicaKey\nProperties:\n  Description: String\n  Enabled: Boolean\n  KeyPolicy: Json\n  PendingWindowInDays: Integer\n  PrimaryKeyArn: String\n  Tags: \n    - Tag\n","awsServiceName":"KMS","awsServiceCategory":"other"},{"awsResourceType":"AWS::LakeFormation::DataCellsFilter","awsResourceTypeName":"lakeformation-datacellsfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::DataCellsFilter\",\n  \"Properties\" : {\n      \"ColumnNames\" : [ String, ... ],\n      \"ColumnWildcard\" : ColumnWildcard,\n      \"DatabaseName\" : String,\n      \"Name\" : String,\n      \"RowFilter\" : RowFilter,\n      \"TableCatalogId\" : String,\n      \"TableName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::DataCellsFilter\nProperties:\n  ColumnNames: \n    - String\n  ColumnWildcard: \n    ColumnWildcard\n  DatabaseName: String\n  Name: String\n  RowFilter: \n    RowFilter\n  TableCatalogId: String\n  TableName: String\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::DataLakeSettings","awsResourceTypeName":"lakeformation-datalakesettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::DataLakeSettings\",\n  \"Properties\" : {\n      \"Admins\" : [ DataLakePrincipal, ... ],\n      \"AllowExternalDataFiltering\" : Boolean,\n      \"AllowFullTableExternalDataAccess\" : Boolean,\n      \"AuthorizedSessionTagValueList\" : [ String, ... ],\n      \"CreateDatabaseDefaultPermissions\" : [ PrincipalPermissions, ... ],\n      \"CreateTableDefaultPermissions\" : [ PrincipalPermissions, ... ],\n      \"ExternalDataFilteringAllowList\" : [ DataLakePrincipal, ... ],\n      \"MutationType\" : String,\n      \"Parameters\" : Json,\n      \"TrustedResourceOwners\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::DataLakeSettings\nProperties:\n  Admins: \n    - DataLakePrincipal\n  AllowExternalDataFiltering: Boolean\n  AllowFullTableExternalDataAccess: Boolean\n  AuthorizedSessionTagValueList: \n    - String\n  CreateDatabaseDefaultPermissions: \n    - PrincipalPermissions\n  CreateTableDefaultPermissions: \n    - PrincipalPermissions\n  ExternalDataFilteringAllowList: \n    - DataLakePrincipal\n  MutationType: String\n  Parameters: Json\n  TrustedResourceOwners: \n    - String\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::Permissions","awsResourceTypeName":"lakeformation-permissions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::Permissions\",\n  \"Properties\" : {\n      \"DataLakePrincipal\" : DataLakePrincipal,\n      \"Permissions\" : [ String, ... ],\n      \"PermissionsWithGrantOption\" : [ String, ... ],\n      \"Resource\" : Resource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::Permissions\nProperties:\n  DataLakePrincipal: \n    DataLakePrincipal\n  Permissions: \n    - String\n  PermissionsWithGrantOption: \n    - String\n  Resource: \n    Resource\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::PrincipalPermissions","awsResourceTypeName":"lakeformation-principalpermissions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::PrincipalPermissions\",\n  \"Properties\" : {\n      \"Catalog\" : String,\n      \"Permissions\" : [ String, ... ],\n      \"PermissionsWithGrantOption\" : [ String, ... ],\n      \"Principal\" : DataLakePrincipal,\n      \"Resource\" : Resource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::PrincipalPermissions\nProperties:\n  Catalog: String\n  Permissions: \n    - String\n  PermissionsWithGrantOption: \n    - String\n  Principal: \n    DataLakePrincipal\n  Resource: \n    Resource\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::Resource","awsResourceTypeName":"lakeformation-resource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::Resource\",\n  \"Properties\" : {\n      \"HybridAccessEnabled\" : Boolean,\n      \"ResourceArn\" : String,\n      \"RoleArn\" : String,\n      \"UseServiceLinkedRole\" : Boolean,\n      \"WithFederation\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::Resource\nProperties:\n  HybridAccessEnabled: Boolean\n  ResourceArn: String\n  RoleArn: String\n  UseServiceLinkedRole: Boolean\n  WithFederation: Boolean\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::Tag","awsResourceTypeName":"lakeformation-tag","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::Tag\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"TagKey\" : String,\n      \"TagValues\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::Tag\nProperties:\n  CatalogId: String\n  TagKey: String\n  TagValues: \n    - String\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::TagAssociation","awsResourceTypeName":"lakeformation-tagassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::TagAssociation\",\n  \"Properties\" : {\n      \"LFTags\" : [ LFTagPair, ... ],\n      \"Resource\" : Resource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::TagAssociation\nProperties:\n  LFTags: \n    - LFTagPair\n  Resource: \n    Resource\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::Lambda::Alias","awsResourceTypeName":"lambda-alias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Alias\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FunctionName\" : String,\n      \"FunctionVersion\" : String,\n      \"Name\" : String,\n      \"ProvisionedConcurrencyConfig\" : ProvisionedConcurrencyConfiguration,\n      \"RoutingConfig\" : AliasRoutingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Alias\nProperties:\n  Description: String\n  FunctionName: String\n  FunctionVersion: String\n  Name: String\n  ProvisionedConcurrencyConfig: \n    ProvisionedConcurrencyConfiguration\n  RoutingConfig: \n    AliasRoutingConfiguration\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::CodeSigningConfig","awsResourceTypeName":"lambda-codesigningconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::CodeSigningConfig\",\n  \"Properties\" : {\n      \"AllowedPublishers\" : AllowedPublishers,\n      \"CodeSigningPolicies\" : CodeSigningPolicies,\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::CodeSigningConfig\nProperties:\n  AllowedPublishers: \n    AllowedPublishers\n  CodeSigningPolicies: \n    CodeSigningPolicies\n  Description: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::EventInvokeConfig","awsResourceTypeName":"lambda-eventinvokeconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::EventInvokeConfig\",\n  \"Properties\" : {\n      \"DestinationConfig\" : DestinationConfig,\n      \"FunctionName\" : String,\n      \"MaximumEventAgeInSeconds\" : Integer,\n      \"MaximumRetryAttempts\" : Integer,\n      \"Qualifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::EventInvokeConfig\nProperties:\n  DestinationConfig: \n    DestinationConfig\n  FunctionName: String\n  MaximumEventAgeInSeconds: Integer\n  MaximumRetryAttempts: Integer\n  Qualifier: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::EventSourceMapping","awsResourceTypeName":"lambda-eventsourcemapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::EventSourceMapping\",\n  \"Properties\" : {\n      \"AmazonManagedKafkaEventSourceConfig\" : AmazonManagedKafkaEventSourceConfig,\n      \"BatchSize\" : Integer,\n      \"BisectBatchOnFunctionError\" : Boolean,\n      \"DestinationConfig\" : DestinationConfig,\n      \"DocumentDBEventSourceConfig\" : DocumentDBEventSourceConfig,\n      \"Enabled\" : Boolean,\n      \"EventSourceArn\" : String,\n      \"FilterCriteria\" : FilterCriteria,\n      \"FunctionName\" : String,\n      \"FunctionResponseTypes\" : [ String, ... ],\n      \"MaximumBatchingWindowInSeconds\" : Integer,\n      \"MaximumRecordAgeInSeconds\" : Integer,\n      \"MaximumRetryAttempts\" : Integer,\n      \"ParallelizationFactor\" : Integer,\n      \"Queues\" : [ String, ... ],\n      \"ScalingConfig\" : ScalingConfig,\n      \"SelfManagedEventSource\" : SelfManagedEventSource,\n      \"SelfManagedKafkaEventSourceConfig\" : SelfManagedKafkaEventSourceConfig,\n      \"SourceAccessConfigurations\" : [ SourceAccessConfiguration, ... ],\n      \"StartingPosition\" : String,\n      \"StartingPositionTimestamp\" : Number,\n      \"Topics\" : [ String, ... ],\n      \"TumblingWindowInSeconds\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::EventSourceMapping\nProperties:\n  AmazonManagedKafkaEventSourceConfig: \n    AmazonManagedKafkaEventSourceConfig\n  BatchSize: Integer\n  BisectBatchOnFunctionError: Boolean\n  DestinationConfig: \n    DestinationConfig\n  DocumentDBEventSourceConfig: \n    DocumentDBEventSourceConfig\n  Enabled: Boolean\n  EventSourceArn: String\n  FilterCriteria: \n    FilterCriteria\n  FunctionName: String\n  FunctionResponseTypes: \n    - String\n  MaximumBatchingWindowInSeconds: Integer\n  MaximumRecordAgeInSeconds: Integer\n  MaximumRetryAttempts: Integer\n  ParallelizationFactor: Integer\n  Queues: \n    - String\n  ScalingConfig: \n    ScalingConfig\n  SelfManagedEventSource: \n    SelfManagedEventSource\n  SelfManagedKafkaEventSourceConfig: \n    SelfManagedKafkaEventSourceConfig\n  SourceAccessConfigurations: \n    - SourceAccessConfiguration\n  StartingPosition: String\n  StartingPositionTimestamp: Number\n  Topics: \n    - String\n  TumblingWindowInSeconds: Integer\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Function","awsResourceTypeName":"lambda-function","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Function\",\n  \"Properties\" : {\n      \"Architectures\" : [ String, ... ],\n      \"Code\" : Code,\n      \"CodeSigningConfigArn\" : String,\n      \"DeadLetterConfig\" : DeadLetterConfig,\n      \"Description\" : String,\n      \"Environment\" : Environment,\n      \"EphemeralStorage\" : EphemeralStorage,\n      \"FileSystemConfigs\" : [ FileSystemConfig, ... ],\n      \"FunctionName\" : String,\n      \"Handler\" : String,\n      \"ImageConfig\" : ImageConfig,\n      \"KmsKeyArn\" : String,\n      \"Layers\" : [ String, ... ],\n      \"LoggingConfig\" : LoggingConfig,\n      \"MemorySize\" : Integer,\n      \"PackageType\" : String,\n      \"ReservedConcurrentExecutions\" : Integer,\n      \"Role\" : String,\n      \"Runtime\" : String,\n      \"RuntimeManagementConfig\" : RuntimeManagementConfig,\n      \"SnapStart\" : SnapStart,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"TracingConfig\" : TracingConfig,\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Function\nProperties:\n  Architectures: \n    - String\n  Code: \n    Code\n  CodeSigningConfigArn: String\n  DeadLetterConfig: \n    DeadLetterConfig\n  Description: String\n  Environment: \n    Environment\n  EphemeralStorage: \n    EphemeralStorage\n  FileSystemConfigs: \n    - FileSystemConfig\n  FunctionName: String\n  Handler: String\n  ImageConfig: \n    ImageConfig\n  KmsKeyArn: String\n  Layers: \n    - String\n  LoggingConfig: \n    LoggingConfig\n  MemorySize: Integer\n  PackageType: String\n  ReservedConcurrentExecutions: Integer\n  Role: String\n  Runtime: String\n  RuntimeManagementConfig: \n    RuntimeManagementConfig\n  SnapStart: \n    SnapStart\n  Tags: \n    - Tag\n  Timeout: Integer\n  TracingConfig: \n    TracingConfig\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::LayerVersion","awsResourceTypeName":"lambda-layerversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::LayerVersion\",\n  \"Properties\" : {\n      \"CompatibleArchitectures\" : [ String, ... ],\n      \"CompatibleRuntimes\" : [ String, ... ],\n      \"Content\" : Content,\n      \"Description\" : String,\n      \"LayerName\" : String,\n      \"LicenseInfo\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::LayerVersion\nProperties:\n  CompatibleArchitectures: \n    - String\n  CompatibleRuntimes: \n    - String\n  Content: \n    Content\n  Description: String\n  LayerName: String\n  LicenseInfo: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::LayerVersionPermission","awsResourceTypeName":"lambda-layerversionpermission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::LayerVersionPermission\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"LayerVersionArn\" : String,\n      \"OrganizationId\" : String,\n      \"Principal\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::LayerVersionPermission\nProperties:\n  Action: String\n  LayerVersionArn: String\n  OrganizationId: String\n  Principal: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Permission","awsResourceTypeName":"lambda-permission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Permission\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"EventSourceToken\" : String,\n      \"FunctionName\" : String,\n      \"FunctionUrlAuthType\" : String,\n      \"Principal\" : String,\n      \"PrincipalOrgID\" : String,\n      \"SourceAccount\" : String,\n      \"SourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Permission\nProperties:\n  Action: String\n  EventSourceToken: String\n  FunctionName: String\n  FunctionUrlAuthType: String\n  Principal: String\n  PrincipalOrgID: String\n  SourceAccount: String\n  SourceArn: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Url","awsResourceTypeName":"lambda-url","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Url\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"Cors\" : Cors,\n      \"InvokeMode\" : String,\n      \"Qualifier\" : String,\n      \"TargetFunctionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Url\nProperties:\n  AuthType: String\n  Cors: \n    Cors\n  InvokeMode: String\n  Qualifier: String\n  TargetFunctionArn: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Version","awsResourceTypeName":"lambda-version","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Version\",\n  \"Properties\" : {\n      \"CodeSha256\" : String,\n      \"Description\" : String,\n      \"FunctionName\" : String,\n      \"ProvisionedConcurrencyConfig\" : ProvisionedConcurrencyConfiguration,\n      \"RuntimePolicy\" : RuntimePolicy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Version\nProperties:\n  CodeSha256: String\n  Description: String\n  FunctionName: String\n  ProvisionedConcurrencyConfig: \n    ProvisionedConcurrencyConfiguration\n  RuntimePolicy: \n    RuntimePolicy\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lex::Bot","awsResourceTypeName":"lex-bot","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::Bot\",\n  \"Properties\" : {\n      \"AutoBuildBotLocales\" : Boolean,\n      \"BotFileS3Location\" : S3Location,\n      \"BotLocales\" : [ BotLocale, ... ],\n      \"BotTags\" : [ Tag, ... ],\n      \"DataPrivacy\" : DataPrivacy,\n      \"Description\" : String,\n      \"IdleSessionTTLInSeconds\" : Integer,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"TestBotAliasSettings\" : TestBotAliasSettings,\n      \"TestBotAliasTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::Bot\nProperties:\n  AutoBuildBotLocales: Boolean\n  BotFileS3Location: \n    S3Location\n  BotLocales: \n    - BotLocale\n  BotTags: \n    - Tag\n  DataPrivacy: \n    DataPrivacy\n  Description: String\n  IdleSessionTTLInSeconds: Integer\n  Name: String\n  RoleArn: String\n  TestBotAliasSettings: \n    TestBotAliasSettings\n  TestBotAliasTags: \n    - Tag\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Lex::BotAlias","awsResourceTypeName":"lex-botalias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::BotAlias\",\n  \"Properties\" : {\n      \"BotAliasLocaleSettings\" : [ BotAliasLocaleSettingsItem, ... ],\n      \"BotAliasName\" : String,\n      \"BotAliasTags\" : [ Tag, ... ],\n      \"BotId\" : String,\n      \"BotVersion\" : String,\n      \"ConversationLogSettings\" : ConversationLogSettings,\n      \"Description\" : String,\n      \"SentimentAnalysisSettings\" : SentimentAnalysisSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::BotAlias\nProperties:\n  BotAliasLocaleSettings: \n    - BotAliasLocaleSettingsItem\n  BotAliasName: String\n  BotAliasTags: \n    - Tag\n  BotId: String\n  BotVersion: String\n  ConversationLogSettings: \n    ConversationLogSettings\n  Description: String\n  SentimentAnalysisSettings: \n    SentimentAnalysisSettings\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Lex::BotVersion","awsResourceTypeName":"lex-botversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::BotVersion\",\n  \"Properties\" : {\n      \"BotId\" : String,\n      \"BotVersionLocaleSpecification\" : [ BotVersionLocaleSpecification, ... ],\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::BotVersion\nProperties:\n  BotId: String\n  BotVersionLocaleSpecification: \n    - BotVersionLocaleSpecification\n  Description: String\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Lex::ResourcePolicy","awsResourceTypeName":"lex-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::ResourcePolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::ResourcePolicy\nProperties:\n  Policy: Json\n  ResourceArn: String\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::LicenseManager::Grant","awsResourceTypeName":"licensemanager-grant","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LicenseManager::Grant\",\n  \"Properties\" : {\n      \"AllowedOperations\" : [ String, ... ],\n      \"GrantName\" : String,\n      \"HomeRegion\" : String,\n      \"LicenseArn\" : String,\n      \"Principals\" : [ String, ... ],\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LicenseManager::Grant\nProperties:\n  AllowedOperations: \n    - String\n  GrantName: String\n  HomeRegion: String\n  LicenseArn: String\n  Principals: \n    - String\n  Status: String\n","awsServiceName":"LicenseManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::LicenseManager::License","awsResourceTypeName":"licensemanager-license","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LicenseManager::License\",\n  \"Properties\" : {\n      \"Beneficiary\" : String,\n      \"ConsumptionConfiguration\" : ConsumptionConfiguration,\n      \"Entitlements\" : [ Entitlement, ... ],\n      \"HomeRegion\" : String,\n      \"Issuer\" : IssuerData,\n      \"LicenseMetadata\" : [ Metadata, ... ],\n      \"LicenseName\" : String,\n      \"ProductName\" : String,\n      \"ProductSKU\" : String,\n      \"Status\" : String,\n      \"Validity\" : ValidityDateFormat\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LicenseManager::License\nProperties:\n  Beneficiary: String\n  ConsumptionConfiguration: \n    ConsumptionConfiguration\n  Entitlements: \n    - Entitlement\n  HomeRegion: String\n  Issuer: \n    IssuerData\n  LicenseMetadata: \n    - Metadata\n  LicenseName: String\n  ProductName: String\n  ProductSKU: String\n  Status: String\n  Validity: \n    ValidityDateFormat\n","awsServiceName":"LicenseManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::Lightsail::Alarm","awsResourceTypeName":"lightsail-alarm","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Alarm\",\n  \"Properties\" : {\n      \"AlarmName\" : String,\n      \"ComparisonOperator\" : String,\n      \"ContactProtocols\" : [ String, ... ],\n      \"DatapointsToAlarm\" : Integer,\n      \"EvaluationPeriods\" : Integer,\n      \"MetricName\" : String,\n      \"MonitoredResourceName\" : String,\n      \"NotificationEnabled\" : Boolean,\n      \"NotificationTriggers\" : [ String, ... ],\n      \"Threshold\" : Number,\n      \"TreatMissingData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Alarm\nProperties:\n  AlarmName: String\n  ComparisonOperator: String\n  ContactProtocols: \n    - String\n  DatapointsToAlarm: Integer\n  EvaluationPeriods: Integer\n  MetricName: String\n  MonitoredResourceName: String\n  NotificationEnabled: Boolean\n  NotificationTriggers: \n    - String\n  Threshold: Number\n  TreatMissingData: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Bucket","awsResourceTypeName":"lightsail-bucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Bucket\",\n  \"Properties\" : {\n      \"AccessRules\" : AccessRules,\n      \"BucketName\" : String,\n      \"BundleId\" : String,\n      \"ObjectVersioning\" : Boolean,\n      \"ReadOnlyAccessAccounts\" : [ String, ... ],\n      \"ResourcesReceivingAccess\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Bucket\nProperties:\n  AccessRules: \n    AccessRules\n  BucketName: String\n  BundleId: String\n  ObjectVersioning: Boolean\n  ReadOnlyAccessAccounts: \n    - String\n  ResourcesReceivingAccess: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Certificate","awsResourceTypeName":"lightsail-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Certificate\",\n  \"Properties\" : {\n      \"CertificateName\" : String,\n      \"DomainName\" : String,\n      \"SubjectAlternativeNames\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Certificate\nProperties:\n  CertificateName: String\n  DomainName: String\n  SubjectAlternativeNames: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Container","awsResourceTypeName":"lightsail-container","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Container\",\n  \"Properties\" : {\n      \"ContainerServiceDeployment\" : ContainerServiceDeployment,\n      \"IsDisabled\" : Boolean,\n      \"Power\" : String,\n      \"PrivateRegistryAccess\" : PrivateRegistryAccess,\n      \"PublicDomainNames\" : [ PublicDomainName, ... ],\n      \"Scale\" : Integer,\n      \"ServiceName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Container\nProperties:\n  ContainerServiceDeployment: \n    ContainerServiceDeployment\n  IsDisabled: Boolean\n  Power: String\n  PrivateRegistryAccess: \n    PrivateRegistryAccess\n  PublicDomainNames: \n    - PublicDomainName\n  Scale: Integer\n  ServiceName: String\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Database","awsResourceTypeName":"lightsail-database","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Database\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"BackupRetention\" : Boolean,\n      \"CaCertificateIdentifier\" : String,\n      \"MasterDatabaseName\" : String,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"RelationalDatabaseBlueprintId\" : String,\n      \"RelationalDatabaseBundleId\" : String,\n      \"RelationalDatabaseName\" : String,\n      \"RelationalDatabaseParameters\" : [ RelationalDatabaseParameter, ... ],\n      \"RotateMasterUserPassword\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Database\nProperties:\n  AvailabilityZone: String\n  BackupRetention: Boolean\n  CaCertificateIdentifier: String\n  MasterDatabaseName: String\n  MasterUsername: String\n  MasterUserPassword: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  RelationalDatabaseBlueprintId: String\n  RelationalDatabaseBundleId: String\n  RelationalDatabaseName: String\n  RelationalDatabaseParameters: \n    - RelationalDatabaseParameter\n  RotateMasterUserPassword: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Disk","awsResourceTypeName":"lightsail-disk","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Disk\",\n  \"Properties\" : {\n      \"AddOns\" : [ AddOn, ... ],\n      \"AvailabilityZone\" : String,\n      \"DiskName\" : String,\n      \"Location\" : Location,\n      \"SizeInGb\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Disk\nProperties:\n  AddOns: \n    - AddOn\n  AvailabilityZone: String\n  DiskName: String\n  Location: \n    Location\n  SizeInGb: Integer\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Distribution","awsResourceTypeName":"lightsail-distribution","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Distribution\",\n  \"Properties\" : {\n      \"BundleId\" : String,\n      \"CacheBehaviors\" : [ CacheBehaviorPerPath, ... ],\n      \"CacheBehaviorSettings\" : CacheSettings,\n      \"CertificateName\" : String,\n      \"DefaultCacheBehavior\" : CacheBehavior,\n      \"DistributionName\" : String,\n      \"IpAddressType\" : String,\n      \"IsEnabled\" : Boolean,\n      \"Origin\" : InputOrigin,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Distribution\nProperties:\n  BundleId: String\n  CacheBehaviors: \n    - CacheBehaviorPerPath\n  CacheBehaviorSettings: \n    CacheSettings\n  CertificateName: String\n  DefaultCacheBehavior: \n    CacheBehavior\n  DistributionName: String\n  IpAddressType: String\n  IsEnabled: Boolean\n  Origin: \n    InputOrigin\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Instance","awsResourceTypeName":"lightsail-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Instance\",\n  \"Properties\" : {\n      \"AddOns\" : [ AddOn, ... ],\n      \"AvailabilityZone\" : String,\n      \"BlueprintId\" : String,\n      \"BundleId\" : String,\n      \"Hardware\" : Hardware,\n      \"InstanceName\" : String,\n      \"KeyPairName\" : String,\n      \"Location\" : Location,\n      \"Networking\" : Networking,\n      \"State\" : State,\n      \"Tags\" : [ Tag, ... ],\n      \"UserData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Instance\nProperties:\n  AddOns: \n    - AddOn\n  AvailabilityZone: String\n  BlueprintId: String\n  BundleId: String\n  Hardware: \n    Hardware\n  InstanceName: String\n  KeyPairName: String\n  Location: \n    Location\n  Networking: \n    Networking\n  State: \n    State\n  Tags: \n    - Tag\n  UserData: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::LoadBalancer","awsResourceTypeName":"lightsail-loadbalancer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::LoadBalancer\",\n  \"Properties\" : {\n      \"AttachedInstances\" : [ String, ... ],\n      \"HealthCheckPath\" : String,\n      \"InstancePort\" : Integer,\n      \"IpAddressType\" : String,\n      \"LoadBalancerName\" : String,\n      \"SessionStickinessEnabled\" : Boolean,\n      \"SessionStickinessLBCookieDurationSeconds\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TlsPolicyName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::LoadBalancer\nProperties:\n  AttachedInstances: \n    - String\n  HealthCheckPath: String\n  InstancePort: Integer\n  IpAddressType: String\n  LoadBalancerName: String\n  SessionStickinessEnabled: Boolean\n  SessionStickinessLBCookieDurationSeconds: String\n  Tags: \n    - Tag\n  TlsPolicyName: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::LoadBalancerTlsCertificate","awsResourceTypeName":"lightsail-loadbalancertlscertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::LoadBalancerTlsCertificate\",\n  \"Properties\" : {\n      \"CertificateAlternativeNames\" : [ String, ... ],\n      \"CertificateDomainName\" : String,\n      \"CertificateName\" : String,\n      \"HttpsRedirectionEnabled\" : Boolean,\n      \"IsAttached\" : Boolean,\n      \"LoadBalancerName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::LoadBalancerTlsCertificate\nProperties:\n  CertificateAlternativeNames: \n    - String\n  CertificateDomainName: String\n  CertificateName: String\n  HttpsRedirectionEnabled: Boolean\n  IsAttached: Boolean\n  LoadBalancerName: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::StaticIp","awsResourceTypeName":"lightsail-staticip","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::StaticIp\",\n  \"Properties\" : {\n      \"AttachedTo\" : String,\n      \"StaticIpName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::StaticIp\nProperties:\n  AttachedTo: String\n  StaticIpName: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Location::APIKey","awsResourceTypeName":"location-apikey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::APIKey\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExpireTime\" : String,\n      \"ForceDelete\" : Boolean,\n      \"ForceUpdate\" : Boolean,\n      \"KeyName\" : String,\n      \"NoExpiry\" : Boolean,\n      \"Restrictions\" : ApiKeyRestrictions,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::APIKey\nProperties:\n  Description: String\n  ExpireTime: String\n  ForceDelete: Boolean\n  ForceUpdate: Boolean\n  KeyName: String\n  NoExpiry: Boolean\n  Restrictions: \n    ApiKeyRestrictions\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::GeofenceCollection","awsResourceTypeName":"location-geofencecollection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::GeofenceCollection\",\n  \"Properties\" : {\n      \"CollectionName\" : String,\n      \"Description\" : String,\n      \"KmsKeyId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::GeofenceCollection\nProperties:\n  CollectionName: String\n  Description: String\n  KmsKeyId: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::Map","awsResourceTypeName":"location-map","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::Map\",\n  \"Properties\" : {\n      \"Configuration\" : MapConfiguration,\n      \"Description\" : String,\n      \"MapName\" : String,\n      \"PricingPlan\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::Map\nProperties:\n  Configuration: \n    MapConfiguration\n  Description: String\n  MapName: String\n  PricingPlan: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::PlaceIndex","awsResourceTypeName":"location-placeindex","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::PlaceIndex\",\n  \"Properties\" : {\n      \"DataSource\" : String,\n      \"DataSourceConfiguration\" : DataSourceConfiguration,\n      \"Description\" : String,\n      \"IndexName\" : String,\n      \"PricingPlan\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::PlaceIndex\nProperties:\n  DataSource: String\n  DataSourceConfiguration: \n    DataSourceConfiguration\n  Description: String\n  IndexName: String\n  PricingPlan: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::RouteCalculator","awsResourceTypeName":"location-routecalculator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::RouteCalculator\",\n  \"Properties\" : {\n      \"CalculatorName\" : String,\n      \"DataSource\" : String,\n      \"Description\" : String,\n      \"PricingPlan\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::RouteCalculator\nProperties:\n  CalculatorName: String\n  DataSource: String\n  Description: String\n  PricingPlan: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::Tracker","awsResourceTypeName":"location-tracker","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::Tracker\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBridgeEnabled\" : Boolean,\n      \"KmsKeyEnableGeospatialQueries\" : Boolean,\n      \"KmsKeyId\" : String,\n      \"PositionFiltering\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrackerName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::Tracker\nProperties:\n  Description: String\n  EventBridgeEnabled: Boolean\n  KmsKeyEnableGeospatialQueries: Boolean\n  KmsKeyId: String\n  PositionFiltering: String\n  Tags: \n    - Tag\n  TrackerName: String\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::TrackerConsumer","awsResourceTypeName":"location-trackerconsumer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::TrackerConsumer\",\n  \"Properties\" : {\n      \"ConsumerArn\" : String,\n      \"TrackerName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::TrackerConsumer\nProperties:\n  ConsumerArn: String\n  TrackerName: String\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::LookoutEquipment::InferenceScheduler","awsResourceTypeName":"lookoutequipment-inferencescheduler","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutEquipment::InferenceScheduler\",\n  \"Properties\" : {\n      \"DataDelayOffsetInMinutes\" : Integer,\n      \"DataInputConfiguration\" : DataInputConfiguration,\n      \"DataOutputConfiguration\" : DataOutputConfiguration,\n      \"DataUploadFrequency\" : String,\n      \"InferenceSchedulerName\" : String,\n      \"ModelName\" : String,\n      \"RoleArn\" : String,\n      \"ServerSideKmsKeyId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutEquipment::InferenceScheduler\nProperties:\n  DataDelayOffsetInMinutes: Integer\n  DataInputConfiguration: \n    DataInputConfiguration\n  DataOutputConfiguration: \n    DataOutputConfiguration\n  DataUploadFrequency: String\n  InferenceSchedulerName: String\n  ModelName: String\n  RoleArn: String\n  ServerSideKmsKeyId: String\n  Tags: \n    - Tag\n","awsServiceName":"LookoutEquipment","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::LookoutMetrics::Alert","awsResourceTypeName":"lookoutmetrics-alert","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutMetrics::Alert\",\n  \"Properties\" : {\n      \"Action\" : Action,\n      \"AlertDescription\" : String,\n      \"AlertName\" : String,\n      \"AlertSensitivityThreshold\" : Integer,\n      \"AnomalyDetectorArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutMetrics::Alert\nProperties:\n  Action: \n    Action\n  AlertDescription: String\n  AlertName: String\n  AlertSensitivityThreshold: Integer\n  AnomalyDetectorArn: String\n","awsServiceName":"LookoutMetrics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::LookoutMetrics::AnomalyDetector","awsResourceTypeName":"lookoutmetrics-anomalydetector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutMetrics::AnomalyDetector\",\n  \"Properties\" : {\n      \"AnomalyDetectorConfig\" : AnomalyDetectorConfig,\n      \"AnomalyDetectorDescription\" : String,\n      \"AnomalyDetectorName\" : String,\n      \"KmsKeyArn\" : String,\n      \"MetricSetList\" : [ MetricSet, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutMetrics::AnomalyDetector\nProperties:\n  AnomalyDetectorConfig: \n    AnomalyDetectorConfig\n  AnomalyDetectorDescription: String\n  AnomalyDetectorName: String\n  KmsKeyArn: String\n  MetricSetList: \n    - MetricSet\n","awsServiceName":"LookoutMetrics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::LookoutVision::Project","awsResourceTypeName":"lookoutvision-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutVision::Project\",\n  \"Properties\" : {\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutVision::Project\nProperties:\n  ProjectName: String\n","awsServiceName":"LookoutVision","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::M2::Application","awsResourceTypeName":"m2-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::M2::Application\",\n  \"Properties\" : {\n      \"Definition\" : Definition,\n      \"Description\" : String,\n      \"EngineType\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::M2::Application\nProperties:\n  Definition: \n    Definition\n  Description: String\n  EngineType: String\n  KmsKeyId: String\n  Name: String\n  RoleArn: String\n  Tags: \n    Key: Value\n","awsServiceName":"M2","awsServiceCategory":"other"},{"awsResourceType":"AWS::M2::Environment","awsResourceTypeName":"m2-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::M2::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EngineType\" : String,\n      \"EngineVersion\" : String,\n      \"HighAvailabilityConfig\" : HighAvailabilityConfig,\n      \"InstanceType\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"StorageConfigurations\" : [ StorageConfiguration, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::M2::Environment\nProperties:\n  Description: String\n  EngineType: String\n  EngineVersion: String\n  HighAvailabilityConfig: \n    HighAvailabilityConfig\n  InstanceType: String\n  KmsKeyId: String\n  Name: String\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  SecurityGroupIds: \n    - String\n  StorageConfigurations: \n    - StorageConfiguration\n  SubnetIds: \n    - String\n  Tags: \n    Key: Value\n","awsServiceName":"M2","awsServiceCategory":"other"},{"awsResourceType":"AWS::Macie::AllowList","awsResourceTypeName":"macie-allowlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::AllowList\",\n  \"Properties\" : {\n      \"Criteria\" : Criteria,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::AllowList\nProperties:\n  Criteria: \n    Criteria\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::Macie::CustomDataIdentifier","awsResourceTypeName":"macie-customdataidentifier","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::CustomDataIdentifier\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IgnoreWords\" : [ String, ... ],\n      \"Keywords\" : [ String, ... ],\n      \"MaximumMatchDistance\" : Integer,\n      \"Name\" : String,\n      \"Regex\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::CustomDataIdentifier\nProperties:\n  Description: String\n  IgnoreWords: \n    - String\n  Keywords: \n    - String\n  MaximumMatchDistance: Integer\n  Name: String\n  Regex: String\n  Tags: \n    - Tag\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::Macie::FindingsFilter","awsResourceTypeName":"macie-findingsfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::FindingsFilter\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Description\" : String,\n      \"FindingCriteria\" : FindingCriteria,\n      \"Name\" : String,\n      \"Position\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::FindingsFilter\nProperties:\n  Action: String\n  Description: String\n  FindingCriteria: \n    FindingCriteria\n  Name: String\n  Position: Integer\n  Tags: \n    - Tag\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::Macie::Session","awsResourceTypeName":"macie-session","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::Session\",\n  \"Properties\" : {\n      \"FindingPublishingFrequency\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::Session\nProperties:\n  FindingPublishingFrequency: String\n  Status: String\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::ManagedBlockchain::Accessor","awsResourceTypeName":"managedblockchain-accessor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ManagedBlockchain::Accessor\",\n  \"Properties\" : {\n      \"AccessorType\" : String,\n      \"NetworkType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ManagedBlockchain::Accessor\nProperties:\n  AccessorType: String\n  NetworkType: String\n  Tags: \n    - Tag\n","awsServiceName":"ManagedBlockchain","awsServiceCategory":"blockchain"},{"awsResourceType":"AWS::ManagedBlockchain::Member","awsResourceTypeName":"managedblockchain-member","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ManagedBlockchain::Member\",\n  \"Properties\" : {\n      \"InvitationId\" : String,\n      \"MemberConfiguration\" : MemberConfiguration,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"NetworkId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ManagedBlockchain::Member\nProperties:\n  InvitationId: String\n  MemberConfiguration: \n    MemberConfiguration\n  NetworkConfiguration: \n    NetworkConfiguration\n  NetworkId: String\n","awsServiceName":"ManagedBlockchain","awsServiceCategory":"blockchain"},{"awsResourceType":"AWS::ManagedBlockchain::Node","awsResourceTypeName":"managedblockchain-node","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ManagedBlockchain::Node\",\n  \"Properties\" : {\n      \"MemberId\" : String,\n      \"NetworkId\" : String,\n      \"NodeConfiguration\" : NodeConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ManagedBlockchain::Node\nProperties:\n  MemberId: String\n  NetworkId: String\n  NodeConfiguration: \n    NodeConfiguration\n","awsServiceName":"ManagedBlockchain","awsServiceCategory":"blockchain"},{"awsResourceType":"AWS::MediaConnect::Bridge","awsResourceTypeName":"mediaconnect-bridge","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::Bridge\",\n  \"Properties\" : {\n      \"EgressGatewayBridge\" : EgressGatewayBridge,\n      \"IngressGatewayBridge\" : IngressGatewayBridge,\n      \"Name\" : String,\n      \"Outputs\" : [ BridgeOutput, ... ],\n      \"PlacementArn\" : String,\n      \"SourceFailoverConfig\" : FailoverConfig,\n      \"Sources\" : [ BridgeSource, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::Bridge\nProperties:\n  EgressGatewayBridge: \n    EgressGatewayBridge\n  IngressGatewayBridge: \n    IngressGatewayBridge\n  Name: String\n  Outputs: \n    - BridgeOutput\n  PlacementArn: String\n  SourceFailoverConfig: \n    FailoverConfig\n  Sources: \n    - BridgeSource\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::BridgeOutput","awsResourceTypeName":"mediaconnect-bridgeoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::BridgeOutput\",\n  \"Properties\" : {\n      \"BridgeArn\" : String,\n      \"Name\" : String,\n      \"NetworkOutput\" : BridgeNetworkOutput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::BridgeOutput\nProperties:\n  BridgeArn: String\n  Name: String\n  NetworkOutput: \n    BridgeNetworkOutput\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::BridgeSource","awsResourceTypeName":"mediaconnect-bridgesource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::BridgeSource\",\n  \"Properties\" : {\n      \"BridgeArn\" : String,\n      \"FlowSource\" : BridgeFlowSource,\n      \"Name\" : String,\n      \"NetworkSource\" : BridgeNetworkSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::BridgeSource\nProperties:\n  BridgeArn: String\n  FlowSource: \n    BridgeFlowSource\n  Name: String\n  NetworkSource: \n    BridgeNetworkSource\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::Flow","awsResourceTypeName":"mediaconnect-flow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::Flow\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"Name\" : String,\n      \"Source\" : Source,\n      \"SourceFailoverConfig\" : FailoverConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::Flow\nProperties:\n  AvailabilityZone: String\n  Name: String\n  Source: \n    Source\n  SourceFailoverConfig: \n    FailoverConfig\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowEntitlement","awsResourceTypeName":"mediaconnect-flowentitlement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowEntitlement\",\n  \"Properties\" : {\n      \"DataTransferSubscriberFeePercent\" : Integer,\n      \"Description\" : String,\n      \"Encryption\" : Encryption,\n      \"EntitlementStatus\" : String,\n      \"FlowArn\" : String,\n      \"Name\" : String,\n      \"Subscribers\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowEntitlement\nProperties:\n  DataTransferSubscriberFeePercent: Integer\n  Description: String\n  Encryption: \n    Encryption\n  EntitlementStatus: String\n  FlowArn: String\n  Name: String\n  Subscribers: \n    - String\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowOutput","awsResourceTypeName":"mediaconnect-flowoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowOutput\",\n  \"Properties\" : {\n      \"CidrAllowList\" : [ String, ... ],\n      \"Description\" : String,\n      \"Destination\" : String,\n      \"Encryption\" : Encryption,\n      \"FlowArn\" : String,\n      \"MaxLatency\" : Integer,\n      \"MinLatency\" : Integer,\n      \"Name\" : String,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"RemoteId\" : String,\n      \"SmoothingLatency\" : Integer,\n      \"StreamId\" : String,\n      \"VpcInterfaceAttachment\" : VpcInterfaceAttachment\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowOutput\nProperties:\n  CidrAllowList: \n    - String\n  Description: String\n  Destination: String\n  Encryption: \n    Encryption\n  FlowArn: String\n  MaxLatency: Integer\n  MinLatency: Integer\n  Name: String\n  Port: Integer\n  Protocol: String\n  RemoteId: String\n  SmoothingLatency: Integer\n  StreamId: String\n  VpcInterfaceAttachment: \n    VpcInterfaceAttachment\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowSource","awsResourceTypeName":"mediaconnect-flowsource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowSource\",\n  \"Properties\" : {\n      \"Decryption\" : Encryption,\n      \"Description\" : String,\n      \"EntitlementArn\" : String,\n      \"FlowArn\" : String,\n      \"GatewayBridgeSource\" : GatewayBridgeSource,\n      \"IngestPort\" : Integer,\n      \"MaxBitrate\" : Integer,\n      \"MaxLatency\" : Integer,\n      \"MinLatency\" : Integer,\n      \"Name\" : String,\n      \"Protocol\" : String,\n      \"SenderControlPort\" : Integer,\n      \"SenderIpAddress\" : String,\n      \"SourceListenerAddress\" : String,\n      \"SourceListenerPort\" : Integer,\n      \"StreamId\" : String,\n      \"VpcInterfaceName\" : String,\n      \"WhitelistCidr\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowSource\nProperties:\n  Decryption: \n    Encryption\n  Description: String\n  EntitlementArn: String\n  FlowArn: String\n  GatewayBridgeSource: \n    GatewayBridgeSource\n  IngestPort: Integer\n  MaxBitrate: Integer\n  MaxLatency: Integer\n  MinLatency: Integer\n  Name: String\n  Protocol: String\n  SenderControlPort: Integer\n  SenderIpAddress: String\n  SourceListenerAddress: String\n  SourceListenerPort: Integer\n  StreamId: String\n  VpcInterfaceName: String\n  WhitelistCidr: String\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowVpcInterface","awsResourceTypeName":"mediaconnect-flowvpcinterface","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowVpcInterface\",\n  \"Properties\" : {\n      \"FlowArn\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowVpcInterface\nProperties:\n  FlowArn: String\n  Name: String\n  RoleArn: String\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::Gateway","awsResourceTypeName":"mediaconnect-gateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::Gateway\",\n  \"Properties\" : {\n      \"EgressCidrBlocks\" : [ String, ... ],\n      \"Name\" : String,\n      \"Networks\" : [ GatewayNetwork, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::Gateway\nProperties:\n  EgressCidrBlocks: \n    - String\n  Name: String\n  Networks: \n    - GatewayNetwork\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConvert::JobTemplate","awsResourceTypeName":"mediaconvert-jobtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConvert::JobTemplate\",\n  \"Properties\" : {\n      \"AccelerationSettings\" : AccelerationSettings,\n      \"Category\" : String,\n      \"Description\" : String,\n      \"HopDestinations\" : [ HopDestination, ... ],\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"Queue\" : String,\n      \"SettingsJson\" : Json,\n      \"StatusUpdateInterval\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConvert::JobTemplate\nProperties:\n  AccelerationSettings: \n    AccelerationSettings\n  Category: String\n  Description: String\n  HopDestinations: \n    - HopDestination\n  Name: String\n  Priority: Integer\n  Queue: String\n  SettingsJson: \n    Json\n  StatusUpdateInterval: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaConvert","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConvert::Preset","awsResourceTypeName":"mediaconvert-preset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConvert::Preset\",\n  \"Properties\" : {\n      \"Category\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"SettingsJson\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConvert::Preset\nProperties:\n  Category: String\n  Description: String\n  Name: String\n  SettingsJson: \n    Json\n  Tags: \n    - Tag\n","awsServiceName":"MediaConvert","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConvert::Queue","awsResourceTypeName":"mediaconvert-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConvert::Queue\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"PricingPlan\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConvert::Queue\nProperties:\n  Description: String\n  Name: String\n  PricingPlan: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaConvert","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Channel","awsResourceTypeName":"medialive-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Channel\",\n  \"Properties\" : {\n      \"CdiInputSpecification\" : CdiInputSpecification,\n      \"ChannelClass\" : String,\n      \"Destinations\" : [ OutputDestination, ... ],\n      \"EncoderSettings\" : EncoderSettings,\n      \"InputAttachments\" : [ InputAttachment, ... ],\n      \"InputSpecification\" : InputSpecification,\n      \"LogLevel\" : String,\n      \"Maintenance\" : MaintenanceCreateSettings,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Vpc\" : VpcOutputSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Channel\nProperties:\n  CdiInputSpecification: \n    CdiInputSpecification\n  ChannelClass: String\n  Destinations: \n    - OutputDestination\n  EncoderSettings: \n    EncoderSettings\n  InputAttachments: \n    - InputAttachment\n  InputSpecification: \n    InputSpecification\n  LogLevel: String\n  Maintenance: \n    MaintenanceCreateSettings\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n  Vpc: \n    VpcOutputSettings\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Input","awsResourceTypeName":"medialive-input","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Input\",\n  \"Properties\" : {\n      \"Destinations\" : [ InputDestinationRequest, ... ],\n      \"InputDevices\" : [ InputDeviceSettings, ... ],\n      \"InputSecurityGroups\" : [ String, ... ],\n      \"MediaConnectFlows\" : [ MediaConnectFlowRequest, ... ],\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Sources\" : [ InputSourceRequest, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"Vpc\" : InputVpcRequest\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Input\nProperties:\n  Destinations: \n    - InputDestinationRequest\n  InputDevices: \n    - InputDeviceSettings\n  InputSecurityGroups: \n    - String\n  MediaConnectFlows: \n    - MediaConnectFlowRequest\n  Name: String\n  RoleArn: String\n  Sources: \n    - InputSourceRequest\n  Tags: \n    - Tag\n  Type: String\n  Vpc: \n    InputVpcRequest\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::InputSecurityGroup","awsResourceTypeName":"medialive-inputsecuritygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::InputSecurityGroup\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"WhitelistRules\" : [ InputWhitelistRuleCidr, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::InputSecurityGroup\nProperties:\n  Tags: \n    - Tag\n  WhitelistRules: \n    - InputWhitelistRuleCidr\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Multiplex","awsResourceTypeName":"medialive-multiplex","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Multiplex\",\n  \"Properties\" : {\n      \"AvailabilityZones\" : [ String, ... ],\n      \"Destinations\" : [ MultiplexOutputDestination, ... ],\n      \"MultiplexSettings\" : MultiplexSettings,\n      \"Name\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Multiplex\nProperties:\n  AvailabilityZones: \n    - String\n  Destinations: \n    - MultiplexOutputDestination\n  MultiplexSettings: \n    MultiplexSettings\n  Name: String\n  Tags: \n    - Tags\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Multiplexprogram","awsResourceTypeName":"medialive-multiplexprogram","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Multiplexprogram\",\n  \"Properties\" : {\n      \"ChannelId\" : String,\n      \"MultiplexId\" : String,\n      \"MultiplexProgramSettings\" : MultiplexProgramSettings,\n      \"PacketIdentifiersMap\" : MultiplexProgramPacketIdentifiersMap,\n      \"PipelineDetails\" : [ MultiplexProgramPipelineDetail, ... ],\n      \"PreferredChannelPipeline\" : String,\n      \"ProgramName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Multiplexprogram\nProperties:\n  ChannelId: String\n  MultiplexId: String\n  MultiplexProgramSettings: \n    MultiplexProgramSettings\n  PacketIdentifiersMap: \n    MultiplexProgramPacketIdentifiersMap\n  PipelineDetails: \n    - MultiplexProgramPipelineDetail\n  PreferredChannelPipeline: String\n  ProgramName: String\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::Asset","awsResourceTypeName":"mediapackage-asset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::Asset\",\n  \"Properties\" : {\n      \"EgressEndpoints\" : [ EgressEndpoint, ... ],\n      \"Id\" : String,\n      \"PackagingGroupId\" : String,\n      \"ResourceId\" : String,\n      \"SourceArn\" : String,\n      \"SourceRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::Asset\nProperties:\n  EgressEndpoints: \n    - EgressEndpoint\n  Id: String\n  PackagingGroupId: String\n  ResourceId: String\n  SourceArn: String\n  SourceRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::Channel","awsResourceTypeName":"mediapackage-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::Channel\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EgressAccessLogs\" : LogConfiguration,\n      \"HlsIngest\" : HlsIngest,\n      \"Id\" : String,\n      \"IngressAccessLogs\" : LogConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::Channel\nProperties:\n  Description: String\n  EgressAccessLogs: \n    LogConfiguration\n  HlsIngest: \n    HlsIngest\n  Id: String\n  IngressAccessLogs: \n    LogConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::OriginEndpoint","awsResourceTypeName":"mediapackage-originendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::OriginEndpoint\",\n  \"Properties\" : {\n      \"Authorization\" : Authorization,\n      \"ChannelId\" : String,\n      \"CmafPackage\" : CmafPackage,\n      \"DashPackage\" : DashPackage,\n      \"Description\" : String,\n      \"HlsPackage\" : HlsPackage,\n      \"Id\" : String,\n      \"ManifestName\" : String,\n      \"MssPackage\" : MssPackage,\n      \"Origination\" : String,\n      \"StartoverWindowSeconds\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeDelaySeconds\" : Integer,\n      \"Whitelist\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::OriginEndpoint\nProperties:\n  Authorization: \n    Authorization\n  ChannelId: String\n  CmafPackage: \n    CmafPackage\n  DashPackage: \n    DashPackage\n  Description: String\n  HlsPackage: \n    HlsPackage\n  Id: String\n  ManifestName: String\n  MssPackage: \n    MssPackage\n  Origination: String\n  StartoverWindowSeconds: Integer\n  Tags: \n    - Tag\n  TimeDelaySeconds: Integer\n  Whitelist: \n    - String\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::PackagingConfiguration","awsResourceTypeName":"mediapackage-packagingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::PackagingConfiguration\",\n  \"Properties\" : {\n      \"CmafPackage\" : CmafPackage,\n      \"DashPackage\" : DashPackage,\n      \"HlsPackage\" : HlsPackage,\n      \"Id\" : String,\n      \"MssPackage\" : MssPackage,\n      \"PackagingGroupId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::PackagingConfiguration\nProperties:\n  CmafPackage: \n    CmafPackage\n  DashPackage: \n    DashPackage\n  HlsPackage: \n    HlsPackage\n  Id: String\n  MssPackage: \n    MssPackage\n  PackagingGroupId: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::PackagingGroup","awsResourceTypeName":"mediapackage-packaginggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::PackagingGroup\",\n  \"Properties\" : {\n      \"Authorization\" : Authorization,\n      \"EgressAccessLogs\" : LogConfiguration,\n      \"Id\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::PackagingGroup\nProperties:\n  Authorization: \n    Authorization\n  EgressAccessLogs: \n    LogConfiguration\n  Id: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::Channel","awsResourceTypeName":"mediapackagev2-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::Channel\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::Channel\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::ChannelGroup","awsResourceTypeName":"mediapackagev2-channelgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::ChannelGroup\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::ChannelGroup\nProperties:\n  ChannelGroupName: String\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::ChannelPolicy","awsResourceTypeName":"mediapackagev2-channelpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::ChannelPolicy\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::ChannelPolicy\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  Policy: Json\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::OriginEndpoint","awsResourceTypeName":"mediapackagev2-originendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::OriginEndpoint\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"ContainerType\" : String,\n      \"Description\" : String,\n      \"HlsManifests\" : [ HlsManifestConfiguration, ... ],\n      \"LowLatencyHlsManifests\" : [ LowLatencyHlsManifestConfiguration, ... ],\n      \"OriginEndpointName\" : String,\n      \"Segment\" : Segment,\n      \"StartoverWindowSeconds\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::OriginEndpoint\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  ContainerType: String\n  Description: String\n  HlsManifests: \n    - HlsManifestConfiguration\n  LowLatencyHlsManifests: \n    - LowLatencyHlsManifestConfiguration\n  OriginEndpointName: String\n  Segment: \n    Segment\n  StartoverWindowSeconds: Integer\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::OriginEndpointPolicy","awsResourceTypeName":"mediapackagev2-originendpointpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::OriginEndpointPolicy\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"OriginEndpointName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::OriginEndpointPolicy\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  OriginEndpointName: String\n  Policy: Json\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::Channel","awsResourceTypeName":"mediatailor-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::Channel\",\n  \"Properties\" : {\n      \"Audiences\" : [ String, ... ],\n      \"ChannelName\" : String,\n      \"FillerSlate\" : SlateSource,\n      \"LogConfiguration\" : LogConfigurationForChannel,\n      \"Outputs\" : [ RequestOutputItem, ... ],\n      \"PlaybackMode\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Tier\" : String,\n      \"TimeShiftConfiguration\" : TimeShiftConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::Channel\nProperties:\n  Audiences: \n    - String\n  ChannelName: String\n  FillerSlate: \n    SlateSource\n  LogConfiguration: \n    LogConfigurationForChannel\n  Outputs: \n    - RequestOutputItem\n  PlaybackMode: String\n  Tags: \n    - Tag\n  Tier: String\n  TimeShiftConfiguration: \n    TimeShiftConfiguration\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::ChannelPolicy","awsResourceTypeName":"mediatailor-channelpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::ChannelPolicy\",\n  \"Properties\" : {\n      \"ChannelName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::ChannelPolicy\nProperties:\n  ChannelName: String\n  Policy: Json\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::LiveSource","awsResourceTypeName":"mediatailor-livesource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::LiveSource\",\n  \"Properties\" : {\n      \"HttpPackageConfigurations\" : [ HttpPackageConfiguration, ... ],\n      \"LiveSourceName\" : String,\n      \"SourceLocationName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::LiveSource\nProperties:\n  HttpPackageConfigurations: \n    - HttpPackageConfiguration\n  LiveSourceName: String\n  SourceLocationName: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::PlaybackConfiguration","awsResourceTypeName":"mediatailor-playbackconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::PlaybackConfiguration\",\n  \"Properties\" : {\n      \"AdDecisionServerUrl\" : String,\n      \"AvailSuppression\" : AvailSuppression,\n      \"Bumper\" : Bumper,\n      \"CdnConfiguration\" : CdnConfiguration,\n      \"ConfigurationAliases\" : {Key: Value, ...},\n      \"DashConfiguration\" : DashConfiguration,\n      \"HlsConfiguration\" : HlsConfiguration,\n      \"LivePreRollConfiguration\" : LivePreRollConfiguration,\n      \"ManifestProcessingRules\" : ManifestProcessingRules,\n      \"Name\" : String,\n      \"PersonalizationThresholdSeconds\" : Integer,\n      \"SlateAdUrl\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TranscodeProfileName\" : String,\n      \"VideoContentSourceUrl\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::PlaybackConfiguration\nProperties:\n  AdDecisionServerUrl: String\n  AvailSuppression: \n    AvailSuppression\n  Bumper: \n    Bumper\n  CdnConfiguration: \n    CdnConfiguration\n  ConfigurationAliases: \n    Key: Value\n  DashConfiguration: \n    DashConfiguration\n  HlsConfiguration: \n    HlsConfiguration\n  LivePreRollConfiguration: \n    LivePreRollConfiguration\n  ManifestProcessingRules: \n    ManifestProcessingRules\n  Name: String\n  PersonalizationThresholdSeconds: Integer\n  SlateAdUrl: String\n  Tags: \n    - Tag\n  TranscodeProfileName: String\n  VideoContentSourceUrl: String\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::SourceLocation","awsResourceTypeName":"mediatailor-sourcelocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::SourceLocation\",\n  \"Properties\" : {\n      \"AccessConfiguration\" : AccessConfiguration,\n      \"DefaultSegmentDeliveryConfiguration\" : DefaultSegmentDeliveryConfiguration,\n      \"HttpConfiguration\" : HttpConfiguration,\n      \"SegmentDeliveryConfigurations\" : [ SegmentDeliveryConfiguration, ... ],\n      \"SourceLocationName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::SourceLocation\nProperties:\n  AccessConfiguration: \n    AccessConfiguration\n  DefaultSegmentDeliveryConfiguration: \n    DefaultSegmentDeliveryConfiguration\n  HttpConfiguration: \n    HttpConfiguration\n  SegmentDeliveryConfigurations: \n    - SegmentDeliveryConfiguration\n  SourceLocationName: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::VodSource","awsResourceTypeName":"mediatailor-vodsource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::VodSource\",\n  \"Properties\" : {\n      \"HttpPackageConfigurations\" : [ HttpPackageConfiguration, ... ],\n      \"SourceLocationName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VodSourceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::VodSource\nProperties:\n  HttpPackageConfigurations: \n    - HttpPackageConfiguration\n  SourceLocationName: String\n  Tags: \n    - Tag\n  VodSourceName: String\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaStore::Container","awsResourceTypeName":"mediastore-container","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaStore::Container\",\n  \"Properties\" : {\n      \"AccessLoggingEnabled\" : Boolean,\n      \"ContainerName\" : String,\n      \"CorsPolicy\" : [ CorsRule, ... ],\n      \"LifecyclePolicy\" : String,\n      \"MetricPolicy\" : MetricPolicy,\n      \"Policy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaStore::Container\nProperties:\n  AccessLoggingEnabled: Boolean\n  ContainerName: String\n  CorsPolicy: \n    - CorsRule\n  LifecyclePolicy: String\n  MetricPolicy: \n    MetricPolicy\n  Policy: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaStore","awsServiceCategory":"storage"},{"awsResourceType":"AWS::AmazonMQ::Broker","awsResourceTypeName":"amazonmq-broker","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmazonMQ::Broker\",\n  \"Properties\" : {\n      \"AuthenticationStrategy\" : String,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"BrokerName\" : String,\n      \"Configuration\" : ConfigurationId,\n      \"DataReplicationMode\" : String,\n      \"DataReplicationPrimaryBrokerArn\" : String,\n      \"DeploymentMode\" : String,\n      \"EncryptionOptions\" : EncryptionOptions,\n      \"EngineType\" : String,\n      \"EngineVersion\" : String,\n      \"HostInstanceType\" : String,\n      \"LdapServerMetadata\" : LdapServerMetadata,\n      \"Logs\" : LogList,\n      \"MaintenanceWindowStartTime\" : MaintenanceWindow,\n      \"PubliclyAccessible\" : Boolean,\n      \"SecurityGroups\" : [ String, ... ],\n      \"StorageType\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ TagsEntry, ... ],\n      \"Users\" : [ User, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmazonMQ::Broker\nProperties:\n  AuthenticationStrategy: String\n  AutoMinorVersionUpgrade: Boolean\n  BrokerName: String\n  Configuration: \n    ConfigurationId\n  DataReplicationMode: String\n  DataReplicationPrimaryBrokerArn: String\n  DeploymentMode: String\n  EncryptionOptions: \n    EncryptionOptions\n  EngineType: String\n  EngineVersion: String\n  HostInstanceType: String\n  LdapServerMetadata: \n    LdapServerMetadata\n  Logs: \n    LogList\n  MaintenanceWindowStartTime: \n    MaintenanceWindow\n  PubliclyAccessible: Boolean\n  SecurityGroups: \n    - String\n  StorageType: String\n  SubnetIds: \n    - String\n  Tags: \n    - TagsEntry\n  Users: \n    - User\n","awsServiceName":"AmazonMQ","awsServiceCategory":"storage"},{"awsResourceType":"AWS::AmazonMQ::Configuration","awsResourceTypeName":"amazonmq-configuration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmazonMQ::Configuration\",\n  \"Properties\" : {\n      \"AuthenticationStrategy\" : String,\n      \"Data\" : String,\n      \"Description\" : String,\n      \"EngineType\" : String,\n      \"EngineVersion\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmazonMQ::Configuration\nProperties:\n  AuthenticationStrategy: String\n  Data: String\n  Description: String\n  EngineType: String\n  EngineVersion: String\n  Name: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"AmazonMQ","awsServiceCategory":"storage"},{"awsResourceType":"AWS::AmazonMQ::ConfigurationAssociation","awsResourceTypeName":"amazonmq-configurationassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmazonMQ::ConfigurationAssociation\",\n  \"Properties\" : {\n      \"Broker\" : String,\n      \"Configuration\" : ConfigurationId\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmazonMQ::ConfigurationAssociation\nProperties:\n  Broker: String\n  Configuration: \n    ConfigurationId\n","awsServiceName":"AmazonMQ","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::ACL","awsResourceTypeName":"memorydb-acl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::ACL\",\n  \"Properties\" : {\n      \"ACLName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UserNames\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::ACL\nProperties:\n  ACLName: String\n  Tags: \n    - Tag\n  UserNames: \n    - String\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::Cluster","awsResourceTypeName":"memorydb-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::Cluster\",\n  \"Properties\" : {\n      \"ACLName\" : String,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"ClusterEndpoint\" : Endpoint,\n      \"ClusterName\" : String,\n      \"DataTiering\" : String,\n      \"Description\" : String,\n      \"EngineVersion\" : String,\n      \"FinalSnapshotName\" : String,\n      \"KmsKeyId\" : String,\n      \"MaintenanceWindow\" : String,\n      \"NodeType\" : String,\n      \"NumReplicasPerShard\" : Integer,\n      \"NumShards\" : Integer,\n      \"ParameterGroupName\" : String,\n      \"Port\" : Integer,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SnapshotArns\" : [ String, ... ],\n      \"SnapshotName\" : String,\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SnapshotWindow\" : String,\n      \"SnsTopicArn\" : String,\n      \"SnsTopicStatus\" : String,\n      \"SubnetGroupName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TLSEnabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::Cluster\nProperties:\n  ACLName: String\n  AutoMinorVersionUpgrade: Boolean\n  ClusterEndpoint: \n    Endpoint\n  ClusterName: String\n  DataTiering: String\n  Description: String\n  EngineVersion: String\n  FinalSnapshotName: String\n  KmsKeyId: String\n  MaintenanceWindow: String\n  NodeType: String\n  NumReplicasPerShard: Integer\n  NumShards: Integer\n  ParameterGroupName: String\n  Port: Integer\n  SecurityGroupIds: \n    - String\n  SnapshotArns: \n    - String\n  SnapshotName: String\n  SnapshotRetentionLimit: Integer\n  SnapshotWindow: String\n  SnsTopicArn: String\n  SnsTopicStatus: String\n  SubnetGroupName: String\n  Tags: \n    - Tag\n  TLSEnabled: Boolean\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::ParameterGroup","awsResourceTypeName":"memorydb-parametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::ParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"ParameterGroupName\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::ParameterGroup\nProperties:\n  Description: String\n  Family: String\n  ParameterGroupName: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::SubnetGroup","awsResourceTypeName":"memorydb-subnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::SubnetGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"SubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::SubnetGroup\nProperties:\n  Description: String\n  SubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::User","awsResourceTypeName":"memorydb-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::User\",\n  \"Properties\" : {\n      \"AccessString\" : String,\n      \"AuthenticationMode\" : AuthenticationMode,\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::User\nProperties:\n  AccessString: \n    String\n  AuthenticationMode: \n    AuthenticationMode\n  Tags: \n    - Tag\n  UserName: String\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::BatchScramSecret","awsResourceTypeName":"msk-batchscramsecret","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::BatchScramSecret\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"SecretArnList\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::BatchScramSecret\nProperties:\n  ClusterArn: String\n  SecretArnList: \n    - String\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::Cluster","awsResourceTypeName":"msk-cluster","awsResourceTypeCloudformationJson":"import boto3\n\nclient = boto3.client('kafka')\n\nresponse = client.create_cluster(\n    BrokerNodeGroupInfo={\n        'BrokerAZDistribution': 'DEFAULT',\n        'ClientSubnets': [\n            'subnet-012345678901fedcba',\n            'subnet-9876543210abcdef01'\n        ],\n        'InstanceType': 'kafka.m5.large',\n        'SecurityGroups': [\n            'sg-012345abcdef789789'\n        ]\n    },\n    ClusterName='SalesCluster',\n    EncryptionInfo={\n        'EncryptionInTransit': {\n            'ClientBroker': 'TLS_PLAINTEXT',\n            'InCluster': True\n        }\n    },\n    EnhancedMonitoring='PER_TOPIC_PER_BROKER',\n    KafkaVersion='2.2.1',\n    NumberOfBrokerNodes=2\n)\n\nprint(response)\n","awsResourceTypeCloudformationYaml":"{\n  \"Type\" : \"AWS::MSK::Cluster\",\n  \"Properties\" : {\n      \"BrokerNodeGroupInfo\" : BrokerNodeGroupInfo,\n      \"ClientAuthentication\" : ClientAuthentication,\n      \"ClusterName\" : String,\n      \"ConfigurationInfo\" : ConfigurationInfo,\n      \"CurrentVersion\" : String,\n      \"EncryptionInfo\" : EncryptionInfo,\n      \"EnhancedMonitoring\" : String,\n      \"KafkaVersion\" : String,\n      \"LoggingInfo\" : LoggingInfo,\n      \"NumberOfBrokerNodes\" : Integer,\n      \"OpenMonitoring\" : OpenMonitoring,\n      \"StorageMode\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::ClusterPolicy","awsResourceTypeName":"msk-clusterpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::ClusterPolicy\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::ClusterPolicy\nProperties:\n  ClusterArn: String\n  Policy: Json\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::Configuration","awsResourceTypeName":"msk-configuration","awsResourceTypeCloudformationJson":"auto.create.topics.enable = true\n\nzookeeper.connection.timeout.ms = 1000\n\nlog.roll.ms = 604800000","awsResourceTypeCloudformationYaml":"import boto3\n\nclient = boto3.client('kafka')\n\nconfig_file = open('config-file.txt', 'r')\n\nserver_properties = config_file.read()\n\nresponse = client.create_configuration(\n    Name='SalesClusterConfiguration',\n    Description='The configuration to use on all sales clusters.',\n    KafkaVersions=['1.1.1', '2.1.0'],\n    ServerProperties=server_properties\n)\n\nprint(response)","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::Replicator","awsResourceTypeName":"msk-replicator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::Replicator\",\n  \"Properties\" : {\n      \"CurrentVersion\" : String,\n      \"Description\" : String,\n      \"KafkaClusters\" : [ KafkaCluster, ... ],\n      \"ReplicationInfoList\" : [ ReplicationInfo, ... ],\n      \"ReplicatorName\" : String,\n      \"ServiceExecutionRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::Replicator\nProperties:\n  CurrentVersion: String\n  Description: String\n  KafkaClusters: \n    - KafkaCluster\n  ReplicationInfoList: \n    - ReplicationInfo\n  ReplicatorName: String\n  ServiceExecutionRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::ServerlessCluster","awsResourceTypeName":"msk-serverlesscluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::ServerlessCluster\",\n  \"Properties\" : {\n      \"ClientAuthentication\" : ClientAuthentication,\n      \"ClusterName\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"VpcConfigs\" : [ VpcConfig, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::ServerlessCluster\nProperties:\n  ClientAuthentication: \n    ClientAuthentication\n  ClusterName: String\n  Tags: \n    Key: Value\n  VpcConfigs: \n    - VpcConfig\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::VpcConnection","awsResourceTypeName":"msk-vpcconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::VpcConnection\",\n  \"Properties\" : {\n      \"Authentication\" : String,\n      \"ClientSubnets\" : [ String, ... ],\n      \"SecurityGroups\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"TargetClusterArn\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::VpcConnection\nProperties:\n  Authentication: String\n  ClientSubnets: \n    - String\n  SecurityGroups: \n    - String\n  Tags: \n    Key: Value\n  TargetClusterArn: String\n  VpcId: String\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::KafkaConnect::Connector","awsResourceTypeName":"kafkaconnect-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KafkaConnect::Connector\",\n  \"Properties\" : {\n      \"Capacity\" : Capacity,\n      \"ConnectorConfiguration\" : {Key: Value, ...},\n      \"ConnectorDescription\" : String,\n      \"ConnectorName\" : String,\n      \"KafkaCluster\" : KafkaCluster,\n      \"KafkaClusterClientAuthentication\" : KafkaClusterClientAuthentication,\n      \"KafkaClusterEncryptionInTransit\" : KafkaClusterEncryptionInTransit,\n      \"KafkaConnectVersion\" : String,\n      \"LogDelivery\" : LogDelivery,\n      \"Plugins\" : [ Plugin, ... ],\n      \"ServiceExecutionRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkerConfiguration\" : WorkerConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KafkaConnect::Connector\nProperties:\n  Capacity: \n    Capacity\n  ConnectorConfiguration: \n    Key: Value\n  ConnectorDescription: String\n  ConnectorName: String\n  KafkaCluster: \n    KafkaCluster\n  KafkaClusterClientAuthentication: \n    KafkaClusterClientAuthentication\n  KafkaClusterEncryptionInTransit: \n    KafkaClusterEncryptionInTransit\n  KafkaConnectVersion: String\n  LogDelivery: \n    LogDelivery\n  Plugins: \n    - Plugin\n  ServiceExecutionRoleArn: String\n  Tags: \n    - Tag\n  WorkerConfiguration: \n    WorkerConfiguration\n","awsServiceName":"KafkaConnect","awsServiceCategory":"storage"},{"awsResourceType":"AWS::KafkaConnect::CustomPlugin","awsResourceTypeName":"kafkaconnect-customplugin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KafkaConnect::CustomPlugin\",\n  \"Properties\" : {\n      \"ContentType\" : String,\n      \"Description\" : String,\n      \"Location\" : CustomPluginLocation,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KafkaConnect::CustomPlugin\nProperties:\n  ContentType: String\n  Description: String\n  Location: \n    CustomPluginLocation\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"KafkaConnect","awsServiceCategory":"storage"},{"awsResourceType":"AWS::KafkaConnect::WorkerConfiguration","awsResourceTypeName":"kafkaconnect-workerconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KafkaConnect::WorkerConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"PropertiesFileContent\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KafkaConnect::WorkerConfiguration\nProperties:\n  Description: String\n  Name: String\n  PropertiesFileContent: String\n  Tags: \n    - Tag\n","awsServiceName":"KafkaConnect","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MWAA::Environment","awsResourceTypeName":"mwaa-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MWAA::Environment\",\n  \"Properties\" : {\n      \"AirflowConfigurationOptions\" : Json,\n      \"AirflowVersion\" : String,\n      \"DagS3Path\" : String,\n      \"EndpointManagement\" : String,\n      \"EnvironmentClass\" : String,\n      \"ExecutionRoleArn\" : String,\n      \"KmsKey\" : String,\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"MaxWorkers\" : Integer,\n      \"MinWorkers\" : Integer,\n      \"Name\" : String,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"PluginsS3ObjectVersion\" : String,\n      \"PluginsS3Path\" : String,\n      \"RequirementsS3ObjectVersion\" : String,\n      \"RequirementsS3Path\" : String,\n      \"Schedulers\" : Integer,\n      \"SourceBucketArn\" : String,\n      \"StartupScriptS3ObjectVersion\" : String,\n      \"StartupScriptS3Path\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WebserverAccessMode\" : String,\n      \"WeeklyMaintenanceWindowStart\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MWAA::Environment\nProperties:\n  AirflowConfigurationOptions: Json\n  AirflowVersion: String\n  DagS3Path: String\n  EndpointManagement: String\n  EnvironmentClass: String\n  ExecutionRoleArn: String\n  KmsKey: String\n  LoggingConfiguration: \n    LoggingConfiguration\n  MaxWorkers: Integer\n  MinWorkers: Integer\n  Name: String\n  NetworkConfiguration: \n    NetworkConfiguration\n  PluginsS3ObjectVersion: String\n  PluginsS3Path: String\n  RequirementsS3ObjectVersion: String\n  RequirementsS3Path: String\n  Schedulers: Integer\n  SourceBucketArn: String\n  StartupScriptS3ObjectVersion: String\n  StartupScriptS3Path: String\n  Tags: \n    - Tag\n  WebserverAccessMode: String\n  WeeklyMaintenanceWindowStart: String\n","awsServiceName":"MWAA","awsServiceCategory":"containers"},{"awsResourceType":"AWS::Neptune::DBCluster","awsResourceTypeName":"neptune-dbcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBCluster\",\n  \"Properties\" : {\n      \"AssociatedRoles\" : [ DBClusterRole, ... ],\n      \"AvailabilityZones\" : [ String, ... ],\n      \"BackupRetentionPeriod\" : Integer,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterParameterGroupName\" : String,\n      \"DBInstanceParameterGroupName\" : String,\n      \"DBPort\" : Integer,\n      \"DBSubnetGroupName\" : String,\n      \"DeletionProtection\" : Boolean,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EngineVersion\" : String,\n      \"IamAuthEnabled\" : Boolean,\n      \"KmsKeyId\" : String,\n      \"Port\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"RestoreToTime\" : String,\n      \"RestoreType\" : String,\n      \"ServerlessScalingConfiguration\" : ServerlessScalingConfiguration,\n      \"SnapshotIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBCluster\nProperties:\n  AssociatedRoles: \n    - DBClusterRole\n  AvailabilityZones: \n    - String\n  BackupRetentionPeriod: Integer\n  CopyTagsToSnapshot: Boolean\n  DBClusterIdentifier: String\n  DBClusterParameterGroupName: String\n  DBInstanceParameterGroupName: String\n  DBPort: Integer\n  DBSubnetGroupName: String\n  DeletionProtection: Boolean\n  EnableCloudwatchLogsExports: \n    - String\n  EngineVersion: String\n  IamAuthEnabled: Boolean\n  KmsKeyId: String\n  Port: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  RestoreToTime: String\n  RestoreType: String\n  ServerlessScalingConfiguration: \n    ServerlessScalingConfiguration\n  SnapshotIdentifier: String\n  SourceDBClusterIdentifier: String\n  StorageEncrypted: Boolean\n  Tags: \n    - Tag\n  UseLatestRestorableTime: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBClusterParameterGroup","awsResourceTypeName":"neptune-dbclusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBClusterParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Name\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBClusterParameterGroup\nProperties:\n  Description: String\n  Family: String\n  Name: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBInstance","awsResourceTypeName":"neptune-dbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBInstance\",\n  \"Properties\" : {\n      \"AllowMajorVersionUpgrade\" : Boolean,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"DBClusterIdentifier\" : String,\n      \"DBInstanceClass\" : String,\n      \"DBInstanceIdentifier\" : String,\n      \"DBParameterGroupName\" : String,\n      \"DBSnapshotIdentifier\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBInstance\nProperties:\n  AllowMajorVersionUpgrade: Boolean\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  DBClusterIdentifier: String\n  DBInstanceClass: String\n  DBInstanceIdentifier: String\n  DBParameterGroupName: String\n  DBSnapshotIdentifier: String\n  DBSubnetGroupName: String\n  PreferredMaintenanceWindow: String\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBParameterGroup","awsResourceTypeName":"neptune-dbparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Name\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBParameterGroup\nProperties:\n  Description: String\n  Family: String\n  Name: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBSubnetGroup","awsResourceTypeName":"neptune-dbsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBSubnetGroup\",\n  \"Properties\" : {\n      \"DBSubnetGroupDescription\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBSubnetGroup\nProperties:\n  DBSubnetGroupDescription: String\n  DBSubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::NeptuneGraph::Graph","awsResourceTypeName":"neptunegraph-graph","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NeptuneGraph::Graph\",\n  \"Properties\" : {\n      \"DeletionProtection\" : Boolean,\n      \"GraphName\" : String,\n      \"ProvisionedMemory\" : Integer,\n      \"PublicConnectivity\" : Boolean,\n      \"ReplicaCount\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"VectorSearchConfiguration\" : VectorSearchConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NeptuneGraph::Graph\nProperties:\n  DeletionProtection: Boolean\n  GraphName: String\n  ProvisionedMemory: Integer\n  PublicConnectivity: Boolean\n  ReplicaCount: Integer\n  Tags: \n    - Tag\n  VectorSearchConfiguration: \n    VectorSearchConfiguration\n","awsServiceName":"NeptuneGraph","awsServiceCategory":"database"},{"awsResourceType":"AWS::NeptuneGraph::PrivateGraphEndpoint","awsResourceTypeName":"neptunegraph-privategraphendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NeptuneGraph::PrivateGraphEndpoint\",\n  \"Properties\" : {\n      \"GraphIdentifier\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NeptuneGraph::PrivateGraphEndpoint\nProperties:\n  GraphIdentifier: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  VpcId: String\n","awsServiceName":"NeptuneGraph","awsServiceCategory":"database"},{"awsResourceType":"AWS::NetworkFirewall::Firewall","awsResourceTypeName":"networkfirewall-firewall","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::Firewall\",\n  \"Properties\" : {\n      \"DeleteProtection\" : Boolean,\n      \"Description\" : String,\n      \"FirewallName\" : String,\n      \"FirewallPolicyArn\" : String,\n      \"FirewallPolicyChangeProtection\" : Boolean,\n      \"SubnetChangeProtection\" : Boolean,\n      \"SubnetMappings\" : [ SubnetMapping, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::Firewall\nProperties:\n  DeleteProtection: Boolean\n  Description: String\n  FirewallName: String\n  FirewallPolicyArn: String\n  FirewallPolicyChangeProtection: Boolean\n  SubnetChangeProtection: Boolean\n  SubnetMappings: \n    - SubnetMapping\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::FirewallPolicy","awsResourceTypeName":"networkfirewall-firewallpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::FirewallPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FirewallPolicy\" : FirewallPolicy,\n      \"FirewallPolicyName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::FirewallPolicy\nProperties:\n  Description: String\n  FirewallPolicy: \n    FirewallPolicy\n  FirewallPolicyName: String\n  Tags: \n    - Tag\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::LoggingConfiguration","awsResourceTypeName":"networkfirewall-loggingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::LoggingConfiguration\",\n  \"Properties\" : {\n      \"FirewallArn\" : String,\n      \"FirewallName\" : String,\n      \"LoggingConfiguration\" : LoggingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::LoggingConfiguration\nProperties:\n  FirewallArn: String\n  FirewallName: String\n  LoggingConfiguration: \n    LoggingConfiguration\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::RuleGroup","awsResourceTypeName":"networkfirewall-rulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::RuleGroup\",\n  \"Properties\" : {\n      \"Capacity\" : Integer,\n      \"Description\" : String,\n      \"RuleGroup\" : RuleGroup,\n      \"RuleGroupName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::RuleGroup\nProperties:\n  Capacity: Integer\n  Description: String\n  RuleGroup: \n    RuleGroup\n  RuleGroupName: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::TLSInspectionConfiguration","awsResourceTypeName":"networkfirewall-tlsinspectionconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::TLSInspectionConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TLSInspectionConfiguration\" : TLSInspectionConfiguration,\n      \"TLSInspectionConfigurationName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::TLSInspectionConfiguration\nProperties:\n  Description: String\n  Tags: \n    - Tag\n  TLSInspectionConfiguration: \n    TLSInspectionConfiguration\n  TLSInspectionConfigurationName: String\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::ConnectAttachment","awsResourceTypeName":"networkmanager-connectattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::ConnectAttachment\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"EdgeLocation\" : String,\n      \"Options\" : ConnectAttachmentOptions,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"Tags\" : [ Tag, ... ],\n      \"TransportAttachmentId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::ConnectAttachment\nProperties:\n  CoreNetworkId: String\n  EdgeLocation: String\n  Options: \n    ConnectAttachmentOptions\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  Tags: \n    - Tag\n  TransportAttachmentId: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::ConnectPeer","awsResourceTypeName":"networkmanager-connectpeer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::ConnectPeer\",\n  \"Properties\" : {\n      \"BgpOptions\" : BgpOptions,\n      \"ConnectAttachmentId\" : String,\n      \"CoreNetworkAddress\" : String,\n      \"InsideCidrBlocks\" : [ String, ... ],\n      \"PeerAddress\" : String,\n      \"SubnetArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::ConnectPeer\nProperties:\n  BgpOptions: \n    BgpOptions\n  ConnectAttachmentId: String\n  CoreNetworkAddress: String\n  InsideCidrBlocks: \n    - String\n  PeerAddress: String\n  SubnetArn: String\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::CoreNetwork","awsResourceTypeName":"networkmanager-corenetwork","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::CoreNetwork\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"PolicyDocument\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::CoreNetwork\nProperties:\n  Description: String\n  GlobalNetworkId: String\n  PolicyDocument: Json\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::CustomerGatewayAssociation","awsResourceTypeName":"networkmanager-customergatewayassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::CustomerGatewayAssociation\",\n  \"Properties\" : {\n      \"CustomerGatewayArn\" : String,\n      \"DeviceId\" : String,\n      \"GlobalNetworkId\" : String,\n      \"LinkId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::CustomerGatewayAssociation\nProperties:\n  CustomerGatewayArn: String\n  DeviceId: String\n  GlobalNetworkId: String\n  LinkId: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::Device","awsResourceTypeName":"networkmanager-device","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::Device\",\n  \"Properties\" : {\n      \"AWSLocation\" : AWSLocation,\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"Location\" : Location,\n      \"Model\" : String,\n      \"SerialNumber\" : String,\n      \"SiteId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"Vendor\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::Device\nProperties:\n  AWSLocation: \n    AWSLocation\n  Description: String\n  GlobalNetworkId: String\n  Location: \n    Location\n  Model: String\n  SerialNumber: String\n  SiteId: String\n  Tags: \n    - Tag\n  Type: String\n  Vendor: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::GlobalNetwork","awsResourceTypeName":"networkmanager-globalnetwork","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::GlobalNetwork\",\n  \"Properties\" : {\n      \"CreatedAt\" : String,\n      \"Description\" : String,\n      \"State\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::GlobalNetwork\nProperties:\n  CreatedAt: String\n  Description: String\n  State: String\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::Link","awsResourceTypeName":"networkmanager-link","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::Link\",\n  \"Properties\" : {\n      \"Bandwidth\" : Bandwidth,\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"Provider\" : String,\n      \"SiteId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::Link\nProperties:\n  Bandwidth: \n    Bandwidth\n  Description: String\n  GlobalNetworkId: String\n  Provider: String\n  SiteId: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::LinkAssociation","awsResourceTypeName":"networkmanager-linkassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::LinkAssociation\",\n  \"Properties\" : {\n      \"DeviceId\" : String,\n      \"GlobalNetworkId\" : String,\n      \"LinkId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::LinkAssociation\nProperties:\n  DeviceId: String\n  GlobalNetworkId: String\n  LinkId: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::Site","awsResourceTypeName":"networkmanager-site","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::Site\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"Location\" : Location,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::Site\nProperties:\n  Description: String\n  GlobalNetworkId: String\n  Location: \n    Location\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::SiteToSiteVpnAttachment","awsResourceTypeName":"networkmanager-sitetositevpnattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::SiteToSiteVpnAttachment\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"Tags\" : [ Tag, ... ],\n      \"VpnConnectionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::SiteToSiteVpnAttachment\nProperties:\n  CoreNetworkId: String\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  Tags: \n    - Tag\n  VpnConnectionArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::TransitGatewayPeering","awsResourceTypeName":"networkmanager-transitgatewaypeering","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::TransitGatewayPeering\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::TransitGatewayPeering\nProperties:\n  CoreNetworkId: String\n  Tags: \n    - Tag\n  TransitGatewayArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::TransitGatewayRegistration","awsResourceTypeName":"networkmanager-transitgatewayregistration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::TransitGatewayRegistration\",\n  \"Properties\" : {\n      \"GlobalNetworkId\" : String,\n      \"TransitGatewayArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::TransitGatewayRegistration\nProperties:\n  GlobalNetworkId: String\n  TransitGatewayArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::TransitGatewayRouteTableAttachment","awsResourceTypeName":"networkmanager-transitgatewayroutetableattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::TransitGatewayRouteTableAttachment\",\n  \"Properties\" : {\n      \"PeeringId\" : String,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayRouteTableArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::TransitGatewayRouteTableAttachment\nProperties:\n  PeeringId: String\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  Tags: \n    - Tag\n  TransitGatewayRouteTableArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::VpcAttachment","awsResourceTypeName":"networkmanager-vpcattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::VpcAttachment\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"Options\" : VpcOptions,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"SubnetArns\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::VpcAttachment\nProperties:\n  CoreNetworkId: String\n  Options: \n    VpcOptions\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  SubnetArns: \n    - String\n  Tags: \n    - Tag\n  VpcArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NimbleStudio::LaunchProfile","awsResourceTypeName":"nimblestudio-launchprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::LaunchProfile\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Ec2SubnetIds\" : [ String, ... ],\n      \"LaunchProfileProtocolVersions\" : [ String, ... ],\n      \"Name\" : String,\n      \"StreamConfiguration\" : StreamConfiguration,\n      \"StudioComponentIds\" : [ String, ... ],\n      \"StudioId\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::LaunchProfile\nProperties:\n  Description: String\n  Ec2SubnetIds: \n    - String\n  LaunchProfileProtocolVersions: \n    - String\n  Name: String\n  StreamConfiguration: \n    StreamConfiguration\n  StudioComponentIds: \n    - String\n  StudioId: String\n  Tags: \n    Key: Value\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::NimbleStudio::StreamingImage","awsResourceTypeName":"nimblestudio-streamingimage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::StreamingImage\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Ec2ImageId\" : String,\n      \"Name\" : String,\n      \"StudioId\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::StreamingImage\nProperties:\n  Description: String\n  Ec2ImageId: String\n  Name: String\n  StudioId: String\n  Tags: \n    Key: Value\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::NimbleStudio::Studio","awsResourceTypeName":"nimblestudio-studio","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::Studio\",\n  \"Properties\" : {\n      \"AdminRoleArn\" : String,\n      \"DisplayName\" : String,\n      \"StudioEncryptionConfiguration\" : StudioEncryptionConfiguration,\n      \"StudioName\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"UserRoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::Studio\nProperties:\n  AdminRoleArn: String\n  DisplayName: String\n  StudioEncryptionConfiguration: \n    StudioEncryptionConfiguration\n  StudioName: String\n  Tags: \n    Key: Value\n  UserRoleArn: String\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::NimbleStudio::StudioComponent","awsResourceTypeName":"nimblestudio-studiocomponent","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::StudioComponent\",\n  \"Properties\" : {\n      \"Configuration\" : StudioComponentConfiguration,\n      \"Description\" : String,\n      \"Ec2SecurityGroupIds\" : [ String, ... ],\n      \"InitializationScripts\" : [ StudioComponentInitializationScript, ... ],\n      \"Name\" : String,\n      \"RuntimeRoleArn\" : String,\n      \"ScriptParameters\" : [ ScriptParameterKeyValue, ... ],\n      \"SecureInitializationRoleArn\" : String,\n      \"StudioId\" : String,\n      \"Subtype\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::StudioComponent\nProperties:\n  Configuration: \n    StudioComponentConfiguration\n  Description: String\n  Ec2SecurityGroupIds: \n    - String\n  InitializationScripts: \n    - StudioComponentInitializationScript\n  Name: String\n  RuntimeRoleArn: String\n  ScriptParameters: \n    - ScriptParameterKeyValue\n  SecureInitializationRoleArn: String\n  StudioId: String\n  Subtype: String\n  Tags: \n    Key: Value\n  Type: String\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Oam::Link","awsResourceTypeName":"oam-link","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Oam::Link\",\n  \"Properties\" : {\n      \"LabelTemplate\" : String,\n      \"LinkConfiguration\" : LinkConfiguration,\n      \"ResourceTypes\" : [ String, ... ],\n      \"SinkIdentifier\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Oam::Link\nProperties:\n  LabelTemplate: String\n  LinkConfiguration: \n    LinkConfiguration\n  ResourceTypes: \n    - String\n  SinkIdentifier: String\n  Tags: \n    Key: Value\n","awsServiceName":"Oam","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Oam::Sink","awsResourceTypeName":"oam-sink","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Oam::Sink\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Oam::Sink\nProperties:\n  Name: String\n  Policy: Json\n  Tags: \n    Key: Value\n","awsServiceName":"Oam","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Omics::AnnotationStore","awsResourceTypeName":"omics-annotationstore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::AnnotationStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Reference\" : ReferenceItem,\n      \"SseConfig\" : SseConfig,\n      \"StoreFormat\" : String,\n      \"StoreOptions\" : StoreOptions,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::AnnotationStore\nProperties:\n  Description: String\n  Name: String\n  Reference: \n    ReferenceItem\n  SseConfig: \n    SseConfig\n  StoreFormat: String\n  StoreOptions: \n    StoreOptions\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::ReferenceStore","awsResourceTypeName":"omics-referencestore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::ReferenceStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"SseConfig\" : SseConfig,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::ReferenceStore\nProperties:\n  Description: String\n  Name: String\n  SseConfig: \n    SseConfig\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"}]