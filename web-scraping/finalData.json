[{"awsResourceType":"AWS::Amplify::App","awsResourceTypeName":"amplify-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Amplify::App\",\n  \"Properties\" : {\n      \"AccessToken\" : String,\n      \"AutoBranchCreationConfig\" : AutoBranchCreationConfig,\n      \"BasicAuthConfig\" : BasicAuthConfig,\n      \"BuildSpec\" : String,\n      \"CustomHeaders\" : String,\n      \"CustomRules\" : [ CustomRule, ... ],\n      \"Description\" : String,\n      \"EnableBranchAutoDeletion\" : Boolean,\n      \"EnvironmentVariables\" : [ EnvironmentVariable, ... ],\n      \"IAMServiceRole\" : String,\n      \"Name\" : String,\n      \"OauthToken\" : String,\n      \"Platform\" : String,\n      \"Repository\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Amplify::App\nProperties:\n  AccessToken: String\n  AutoBranchCreationConfig: \n    AutoBranchCreationConfig\n  BasicAuthConfig: \n    BasicAuthConfig\n  BuildSpec: String\n  CustomHeaders: String\n  CustomRules: \n    - CustomRule\n  Description: String\n  EnableBranchAutoDeletion: Boolean\n  EnvironmentVariables: \n    - EnvironmentVariable\n  IAMServiceRole: String\n  Name: String\n  OauthToken: String\n  Platform: String\n  Repository: String\n  Tags: \n    - Tag\n","awsServiceName":"Amplify","awsServiceCategory":"frontEnd"},{"awsResourceType":"AWS::Amplify::Branch","awsResourceTypeName":"amplify-branch","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Amplify::Branch\",\n  \"Properties\" : {\n      \"AppId\" : String,\n      \"Backend\" : Backend,\n      \"BasicAuthConfig\" : BasicAuthConfig,\n      \"BranchName\" : String,\n      \"BuildSpec\" : String,\n      \"Description\" : String,\n      \"EnableAutoBuild\" : Boolean,\n      \"EnablePerformanceMode\" : Boolean,\n      \"EnablePullRequestPreview\" : Boolean,\n      \"EnvironmentVariables\" : [ EnvironmentVariable, ... ],\n      \"Framework\" : String,\n      \"PullRequestEnvironmentName\" : String,\n      \"Stage\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Amplify::Branch\nProperties:\n  AppId: String\n  Backend: \n    Backend\n  BasicAuthConfig: \n    BasicAuthConfig\n  BranchName: String\n  BuildSpec: String\n  Description: String\n  EnableAutoBuild: Boolean\n  EnablePerformanceMode: Boolean\n  EnablePullRequestPreview: Boolean\n  EnvironmentVariables: \n    - EnvironmentVariable\n  Framework: String\n  PullRequestEnvironmentName: String\n  Stage: String\n  Tags: \n    - Tag\n","awsServiceName":"Amplify","awsServiceCategory":"frontEnd"},{"awsResourceType":"AWS::Amplify::Domain","awsResourceTypeName":"amplify-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Amplify::Domain\",\n  \"Properties\" : {\n      \"AppId\" : String,\n      \"AutoSubDomainCreationPatterns\" : [ String, ... ],\n      \"AutoSubDomainIAMRole\" : String,\n      \"CertificateSettings\" : CertificateSettings,\n      \"DomainName\" : String,\n      \"EnableAutoSubDomain\" : Boolean,\n      \"SubDomainSettings\" : [ SubDomainSetting, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Amplify::Domain\nProperties:\n  AppId: String\n  AutoSubDomainCreationPatterns: \n    - String\n  AutoSubDomainIAMRole: String\n  CertificateSettings: \n    CertificateSettings\n  DomainName: String\n  EnableAutoSubDomain: Boolean\n  SubDomainSettings: \n    - SubDomainSetting\n","awsServiceName":"Amplify","awsServiceCategory":"frontEnd"},{"awsResourceType":"AWS::AmplifyUIBuilder::Component","awsResourceTypeName":"amplifyuibuilder-component","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmplifyUIBuilder::Component\",\n  \"Properties\" : {\n      \"AppId\" : String,\n      \"BindingProperties\" : {Key: Value, ...},\n      \"Children\" : [ ComponentChild, ... ],\n      \"CollectionProperties\" : {Key: Value, ...},\n      \"ComponentType\" : String,\n      \"EnvironmentName\" : String,\n      \"Events\" : {Key: Value, ...},\n      \"Name\" : String,\n      \"Overrides\" : {Key: Value, ...},\n      \"Properties\" : {Key: Value, ...},\n      \"SchemaVersion\" : String,\n      \"SourceId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Variants\" : [ ComponentVariant, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmplifyUIBuilder::Component\nProperties:\n  AppId: String\n  BindingProperties: \n    Key: Value\n  Children: \n    - ComponentChild\n  CollectionProperties: \n    Key: Value\n  ComponentType: String\n  EnvironmentName: String\n  Events: \n    Key: Value\n  Name: String\n  Overrides: \n    Key: Value\n  Properties: \n    Key: Value\n  SchemaVersion: String\n  SourceId: String\n  Tags: \n    Key: Value\n  Variants: \n    - ComponentVariant\n","awsServiceName":"AmplifyUIBuilder","awsServiceCategory":"frontEnd"},{"awsResourceType":"AWS::AmplifyUIBuilder::Form","awsResourceTypeName":"amplifyuibuilder-form","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmplifyUIBuilder::Form\",\n  \"Properties\" : {\n      \"AppId\" : String,\n      \"Cta\" : FormCTA,\n      \"DataType\" : FormDataTypeConfig,\n      \"EnvironmentName\" : String,\n      \"Fields\" : {Key: Value, ...},\n      \"FormActionType\" : String,\n      \"LabelDecorator\" : String,\n      \"Name\" : String,\n      \"SchemaVersion\" : String,\n      \"SectionalElements\" : {Key: Value, ...},\n      \"Style\" : FormStyle,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmplifyUIBuilder::Form\nProperties:\n  AppId: String\n  Cta: \n    FormCTA\n  DataType: \n    FormDataTypeConfig\n  EnvironmentName: String\n  Fields: \n    Key: Value\n  FormActionType: String\n  LabelDecorator: String\n  Name: String\n  SchemaVersion: String\n  SectionalElements: \n    Key: Value\n  Style: \n    FormStyle\n  Tags: \n    Key: Value\n","awsServiceName":"AmplifyUIBuilder","awsServiceCategory":"frontEnd"},{"awsResourceType":"AWS::AmplifyUIBuilder::Theme","awsResourceTypeName":"amplifyuibuilder-theme","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmplifyUIBuilder::Theme\",\n  \"Properties\" : {\n      \"AppId\" : String,\n      \"EnvironmentName\" : String,\n      \"Name\" : String,\n      \"Overrides\" : [ ThemeValues, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Values\" : [ ThemeValues, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmplifyUIBuilder::Theme\nProperties:\n  AppId: String\n  EnvironmentName: String\n  Name: String\n  Overrides: \n    - ThemeValues\n  Tags: \n    Key: Value\n  Values: \n    - ThemeValues\n","awsServiceName":"AmplifyUIBuilder","awsServiceCategory":"frontEnd"},{"awsResourceType":"AWS::ApiGateway::Account","awsResourceTypeName":"apigateway-account","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Account\",\n  \"Properties\" : {\n      \"CloudWatchRoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Account\nProperties:\n  CloudWatchRoleArn: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::ApiKey","awsResourceTypeName":"apigateway-apikey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::ApiKey\",\n  \"Properties\" : {\n      \"CustomerId\" : String,\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"GenerateDistinctId\" : Boolean,\n      \"Name\" : String,\n      \"StageKeys\" : [ StageKey, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::ApiKey\nProperties:\n  CustomerId: String\n  Description: String\n  Enabled: Boolean\n  GenerateDistinctId: Boolean\n  Name: String\n  StageKeys: \n    - StageKey\n  Tags: \n    - Tag\n  Value: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::Authorizer","awsResourceTypeName":"apigateway-authorizer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Authorizer\",\n  \"Properties\" : {\n      \"AuthorizerCredentials\" : String,\n      \"AuthorizerResultTtlInSeconds\" : Integer,\n      \"AuthorizerUri\" : String,\n      \"AuthType\" : String,\n      \"IdentitySource\" : String,\n      \"IdentityValidationExpression\" : String,\n      \"Name\" : String,\n      \"ProviderARNs\" : [ String, ... ],\n      \"RestApiId\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Authorizer\nProperties:\n  AuthorizerCredentials: String\n  AuthorizerResultTtlInSeconds: Integer\n  AuthorizerUri: String\n  AuthType: String\n  IdentitySource: String\n  IdentityValidationExpression: String\n  Name: String\n  ProviderARNs: \n    - String\n  RestApiId: String\n  Type: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::BasePathMapping","awsResourceTypeName":"apigateway-basepathmapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::BasePathMapping\",\n  \"Properties\" : {\n      \"BasePath\" : String,\n      \"DomainName\" : String,\n      \"RestApiId\" : String,\n      \"Stage\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::BasePathMapping\nProperties:\n  BasePath: String\n  DomainName: String\n  RestApiId: String\n  Stage: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::ClientCertificate","awsResourceTypeName":"apigateway-clientcertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::ClientCertificate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::ClientCertificate\nProperties:\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::Deployment","awsResourceTypeName":"apigateway-deployment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Deployment\",\n  \"Properties\" : {\n      \"DeploymentCanarySettings\" : DeploymentCanarySettings,\n      \"Description\" : String,\n      \"RestApiId\" : String,\n      \"StageDescription\" : StageDescription,\n      \"StageName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Deployment\nProperties:\n  DeploymentCanarySettings: \n    DeploymentCanarySettings\n  Description: String\n  RestApiId: String\n  StageDescription: \n    StageDescription\n  StageName: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::DocumentationPart","awsResourceTypeName":"apigateway-documentationpart","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::DocumentationPart\",\n  \"Properties\" : {\n      \"Location\" : Location,\n      \"Properties\" : String,\n      \"RestApiId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::DocumentationPart\nProperties:\n  Location: \n    Location\n  Properties: String\n  RestApiId: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::DocumentationVersion","awsResourceTypeName":"apigateway-documentationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::DocumentationVersion\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DocumentationVersion\" : String,\n      \"RestApiId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::DocumentationVersion\nProperties:\n  Description: String\n  DocumentationVersion: String\n  RestApiId: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::DomainName","awsResourceTypeName":"apigateway-domainname","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::DomainName\",\n  \"Properties\" : {\n      \"CertificateArn\" : String,\n      \"DomainName\" : String,\n      \"EndpointConfiguration\" : EndpointConfiguration,\n      \"MutualTlsAuthentication\" : MutualTlsAuthentication,\n      \"OwnershipVerificationCertificateArn\" : String,\n      \"RegionalCertificateArn\" : String,\n      \"SecurityPolicy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::DomainName\nProperties:\n  CertificateArn: String\n  DomainName: String\n  EndpointConfiguration: \n    EndpointConfiguration\n  MutualTlsAuthentication: \n    MutualTlsAuthentication\n  OwnershipVerificationCertificateArn: String\n  RegionalCertificateArn: String\n  SecurityPolicy: String\n  Tags: \n    - Tag\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::GatewayResponse","awsResourceTypeName":"apigateway-gatewayresponse","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::GatewayResponse\",\n  \"Properties\" : {\n      \"ResponseParameters\" : {Key: Value, ...},\n      \"ResponseTemplates\" : {Key: Value, ...},\n      \"ResponseType\" : String,\n      \"RestApiId\" : String,\n      \"StatusCode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::GatewayResponse\nProperties:\n  ResponseParameters: \n    Key: Value\n  ResponseTemplates: \n    Key: Value\n  ResponseType: String\n  RestApiId: String\n  StatusCode: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::Method","awsResourceTypeName":"apigateway-method","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Method\",\n  \"Properties\" : {\n      \"ApiKeyRequired\" : Boolean,\n      \"AuthorizationScopes\" : [ String, ... ],\n      \"AuthorizationType\" : String,\n      \"AuthorizerId\" : String,\n      \"HttpMethod\" : String,\n      \"Integration\" : Integration,\n      \"MethodResponses\" : [ MethodResponse, ... ],\n      \"OperationName\" : String,\n      \"RequestModels\" : {Key: Value, ...},\n      \"RequestParameters\" : {Key: Value, ...},\n      \"RequestValidatorId\" : String,\n      \"ResourceId\" : String,\n      \"RestApiId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Method\nProperties:\n  ApiKeyRequired: Boolean\n  AuthorizationScopes: \n    - String\n  AuthorizationType: String\n  AuthorizerId: String\n  HttpMethod: String\n  Integration: \n    Integration\n  MethodResponses: \n    - MethodResponse\n  OperationName: String\n  RequestModels: \n    Key: Value\n  RequestParameters: \n    Key: Value\n  RequestValidatorId: String\n  ResourceId: String\n  RestApiId: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::Model","awsResourceTypeName":"apigateway-model","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Model\",\n  \"Properties\" : {\n      \"ContentType\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RestApiId\" : String,\n      \"Schema\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Model\nProperties:\n  ContentType: String\n  Description: String\n  Name: String\n  RestApiId: String\n  Schema: Json\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::RequestValidator","awsResourceTypeName":"apigateway-requestvalidator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::RequestValidator\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RestApiId\" : String,\n      \"ValidateRequestBody\" : Boolean,\n      \"ValidateRequestParameters\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::RequestValidator\nProperties:\n  Name: String\n  RestApiId: String\n  ValidateRequestBody: Boolean\n  ValidateRequestParameters: Boolean\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::Resource","awsResourceTypeName":"apigateway-resource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Resource\",\n  \"Properties\" : {\n      \"ParentId\" : String,\n      \"PathPart\" : String,\n      \"RestApiId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Resource\nProperties:\n  ParentId: String\n  PathPart: String\n  RestApiId: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::RestApi","awsResourceTypeName":"apigateway-restapi","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::RestApi\",\n  \"Properties\" : {\n      \"ApiKeySourceType\" : String,\n      \"BinaryMediaTypes\" : [ String, ... ],\n      \"Body\" : Json,\n      \"BodyS3Location\" : S3Location,\n      \"CloneFrom\" : String,\n      \"Description\" : String,\n      \"DisableExecuteApiEndpoint\" : Boolean,\n      \"EndpointConfiguration\" : EndpointConfiguration,\n      \"FailOnWarnings\" : Boolean,\n      \"MinimumCompressionSize\" : Integer,\n      \"Mode\" : String,\n      \"Name\" : String,\n      \"Parameters\" : {Key: Value, ...},\n      \"Policy\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::RestApi\nProperties:\n  ApiKeySourceType: String\n  BinaryMediaTypes: \n    - String\n  Body: Json\n  BodyS3Location: \n    S3Location\n  CloneFrom: String\n  Description: String\n  DisableExecuteApiEndpoint: Boolean\n  EndpointConfiguration: \n    EndpointConfiguration\n  FailOnWarnings: Boolean\n  MinimumCompressionSize: Integer\n  Mode: String\n  Name: String\n  Parameters: \n    Key: Value\n  Policy: Json\n  Tags: \n    - Tag\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::Stage","awsResourceTypeName":"apigateway-stage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::Stage\",\n  \"Properties\" : {\n      \"AccessLogSetting\" : AccessLogSetting,\n      \"CacheClusterEnabled\" : Boolean,\n      \"CacheClusterSize\" : String,\n      \"CanarySetting\" : CanarySetting,\n      \"ClientCertificateId\" : String,\n      \"DeploymentId\" : String,\n      \"Description\" : String,\n      \"DocumentationVersion\" : String,\n      \"MethodSettings\" : [ MethodSetting, ... ],\n      \"RestApiId\" : String,\n      \"StageName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TracingEnabled\" : Boolean,\n      \"Variables\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::Stage\nProperties:\n  AccessLogSetting: \n    AccessLogSetting\n  CacheClusterEnabled: Boolean\n  CacheClusterSize: String\n  CanarySetting: \n    CanarySetting\n  ClientCertificateId: String\n  DeploymentId: String\n  Description: String\n  DocumentationVersion: String\n  MethodSettings: \n    - MethodSetting\n  RestApiId: String\n  StageName: String\n  Tags: \n    - Tag\n  TracingEnabled: Boolean\n  Variables: \n    Key: Value\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::UsagePlan","awsResourceTypeName":"apigateway-usageplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::UsagePlan\",\n  \"Properties\" : {\n      \"ApiStages\" : [ ApiStage, ... ],\n      \"Description\" : String,\n      \"Quota\" : QuotaSettings,\n      \"Tags\" : [ Tag, ... ],\n      \"Throttle\" : ThrottleSettings,\n      \"UsagePlanName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::UsagePlan\nProperties:\n  ApiStages: \n    - ApiStage\n  Description: String\n  Quota: \n    QuotaSettings\n  Tags: \n    - Tag\n  Throttle: \n    ThrottleSettings\n  UsagePlanName: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::UsagePlanKey","awsResourceTypeName":"apigateway-usageplankey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::UsagePlanKey\",\n  \"Properties\" : {\n      \"KeyId\" : String,\n      \"KeyType\" : String,\n      \"UsagePlanId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::UsagePlanKey\nProperties:\n  KeyId: String\n  KeyType: String\n  UsagePlanId: String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGateway::VpcLink","awsResourceTypeName":"apigateway-vpclink","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGateway::VpcLink\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArns\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGateway::VpcLink\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  TargetArns: \n    - String\n","awsServiceName":"ApiGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Api","awsResourceTypeName":"apigatewayv2-api","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Api\",\n  \"Properties\" : {\n      \"ApiKeySelectionExpression\" : String,\n      \"BasePath\" : String,\n      \"Body\" : Json,\n      \"BodyS3Location\" : BodyS3Location,\n      \"CorsConfiguration\" : Cors,\n      \"CredentialsArn\" : String,\n      \"Description\" : String,\n      \"DisableExecuteApiEndpoint\" : Boolean,\n      \"DisableSchemaValidation\" : Boolean,\n      \"FailOnWarnings\" : Boolean,\n      \"Name\" : String,\n      \"ProtocolType\" : String,\n      \"RouteKey\" : String,\n      \"RouteSelectionExpression\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Target\" : String,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Api\nProperties:\n  ApiKeySelectionExpression: String\n  BasePath: String\n  Body: Json\n  BodyS3Location: \n    BodyS3Location\n  CorsConfiguration: \n    Cors\n  CredentialsArn: String\n  Description: String\n  DisableExecuteApiEndpoint: Boolean\n  DisableSchemaValidation: Boolean\n  FailOnWarnings: Boolean\n  Name: String\n  ProtocolType: String\n  RouteKey: String\n  RouteSelectionExpression: String\n  Tags: \n    Key: Value\n  Target: String\n  Version: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::ApiGatewayManagedOverrides","awsResourceTypeName":"apigatewayv2-apigatewaymanagedoverrides","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::ApiGatewayManagedOverrides\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"Integration\" : IntegrationOverrides,\n      \"Route\" : RouteOverrides,\n      \"Stage\" : StageOverrides\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::ApiGatewayManagedOverrides\nProperties:\n  ApiId: String\n  Integration: \n    IntegrationOverrides\n  Route: \n    RouteOverrides\n  Stage: \n    StageOverrides\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::ApiMapping","awsResourceTypeName":"apigatewayv2-apimapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::ApiMapping\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"ApiMappingKey\" : String,\n      \"DomainName\" : String,\n      \"Stage\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::ApiMapping\nProperties:\n  ApiId: String\n  ApiMappingKey: String\n  DomainName: String\n  Stage: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Authorizer","awsResourceTypeName":"apigatewayv2-authorizer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Authorizer\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"AuthorizerCredentialsArn\" : String,\n      \"AuthorizerPayloadFormatVersion\" : String,\n      \"AuthorizerResultTtlInSeconds\" : Integer,\n      \"AuthorizerType\" : String,\n      \"AuthorizerUri\" : String,\n      \"EnableSimpleResponses\" : Boolean,\n      \"IdentitySource\" : [ String, ... ],\n      \"IdentityValidationExpression\" : String,\n      \"JwtConfiguration\" : JWTConfiguration,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Authorizer\nProperties:\n  ApiId: String\n  AuthorizerCredentialsArn: String\n  AuthorizerPayloadFormatVersion: String\n  AuthorizerResultTtlInSeconds: Integer\n  AuthorizerType: String\n  AuthorizerUri: String\n  EnableSimpleResponses: Boolean\n  IdentitySource: \n    - String\n  IdentityValidationExpression: String\n  JwtConfiguration: \n    JWTConfiguration\n  Name: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Deployment","awsResourceTypeName":"apigatewayv2-deployment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Deployment\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"Description\" : String,\n      \"StageName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Deployment\nProperties:\n  ApiId: String\n  Description: String\n  StageName: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::DomainName","awsResourceTypeName":"apigatewayv2-domainname","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::DomainName\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"DomainNameConfigurations\" : [ DomainNameConfiguration, ... ],\n      \"MutualTlsAuthentication\" : MutualTlsAuthentication,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::DomainName\nProperties:\n  DomainName: String\n  DomainNameConfigurations: \n    - DomainNameConfiguration\n  MutualTlsAuthentication: \n    MutualTlsAuthentication\n  Tags: \n    Key: Value\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Integration","awsResourceTypeName":"apigatewayv2-integration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Integration\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"ConnectionId\" : String,\n      \"ConnectionType\" : String,\n      \"ContentHandlingStrategy\" : String,\n      \"CredentialsArn\" : String,\n      \"Description\" : String,\n      \"IntegrationMethod\" : String,\n      \"IntegrationSubtype\" : String,\n      \"IntegrationType\" : String,\n      \"IntegrationUri\" : String,\n      \"PassthroughBehavior\" : String,\n      \"PayloadFormatVersion\" : String,\n      \"RequestParameters\" : Json,\n      \"RequestTemplates\" : Json,\n      \"ResponseParameters\" : Json,\n      \"TemplateSelectionExpression\" : String,\n      \"TimeoutInMillis\" : Integer,\n      \"TlsConfig\" : TlsConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Integration\nProperties:\n  ApiId: String\n  ConnectionId: String\n  ConnectionType: String\n  ContentHandlingStrategy: String\n  CredentialsArn: String\n  Description: String\n  IntegrationMethod: String\n  IntegrationSubtype: String\n  IntegrationType: String\n  IntegrationUri: String\n  PassthroughBehavior: String\n  PayloadFormatVersion: String\n  RequestParameters: Json\n  RequestTemplates: Json\n  ResponseParameters: Json\n  TemplateSelectionExpression: String\n  TimeoutInMillis: Integer\n  TlsConfig: \n    TlsConfig\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::IntegrationResponse","awsResourceTypeName":"apigatewayv2-integrationresponse","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::IntegrationResponse\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"ContentHandlingStrategy\" : String,\n      \"IntegrationId\" : String,\n      \"IntegrationResponseKey\" : String,\n      \"ResponseParameters\" : Json,\n      \"ResponseTemplates\" : Json,\n      \"TemplateSelectionExpression\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::IntegrationResponse\nProperties:\n  ApiId: String\n  ContentHandlingStrategy: String\n  IntegrationId: String\n  IntegrationResponseKey: String\n  ResponseParameters: Json\n  ResponseTemplates: Json\n  TemplateSelectionExpression: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Model","awsResourceTypeName":"apigatewayv2-model","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Model\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"ContentType\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Schema\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Model\nProperties:\n  ApiId: String\n  ContentType: String\n  Description: String\n  Name: String\n  Schema: Json\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Route","awsResourceTypeName":"apigatewayv2-route","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Route\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"ApiKeyRequired\" : Boolean,\n      \"AuthorizationScopes\" : [ String, ... ],\n      \"AuthorizationType\" : String,\n      \"AuthorizerId\" : String,\n      \"ModelSelectionExpression\" : String,\n      \"OperationName\" : String,\n      \"RequestModels\" : Json,\n      \"RequestParameters\" : Json,\n      \"RouteKey\" : String,\n      \"RouteResponseSelectionExpression\" : String,\n      \"Target\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Route\nProperties:\n  ApiId: String\n  ApiKeyRequired: Boolean\n  AuthorizationScopes: \n    - String\n  AuthorizationType: String\n  AuthorizerId: String\n  ModelSelectionExpression: String\n  OperationName: String\n  RequestModels: Json\n  RequestParameters: Json\n  RouteKey: String\n  RouteResponseSelectionExpression: String\n  Target: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::RouteResponse","awsResourceTypeName":"apigatewayv2-routeresponse","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::RouteResponse\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"ModelSelectionExpression\" : String,\n      \"ResponseModels\" : Json,\n      \"ResponseParameters\" : ParameterConstraints,\n      \"RouteId\" : String,\n      \"RouteResponseKey\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::RouteResponse\nProperties:\n  ApiId: String\n  ModelSelectionExpression: String\n  ResponseModels: Json\n  ResponseParameters: \n    ParameterConstraints\n  RouteId: String\n  RouteResponseKey: String\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::Stage","awsResourceTypeName":"apigatewayv2-stage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::Stage\",\n  \"Properties\" : {\n      \"AccessLogSettings\" : AccessLogSettings,\n      \"AccessPolicyId\" : String,\n      \"ApiId\" : String,\n      \"AutoDeploy\" : Boolean,\n      \"ClientCertificateId\" : String,\n      \"DefaultRouteSettings\" : RouteSettings,\n      \"DeploymentId\" : String,\n      \"Description\" : String,\n      \"RouteSettings\" : Json,\n      \"StageName\" : String,\n      \"StageVariables\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::Stage\nProperties:\n  AccessLogSettings: \n    AccessLogSettings\n  AccessPolicyId: String\n  ApiId: String\n  AutoDeploy: Boolean\n  ClientCertificateId: String\n  DefaultRouteSettings: \n    RouteSettings\n  DeploymentId: String\n  Description: String\n  RouteSettings: Json\n  StageName: String\n  StageVariables: Json\n  Tags: \n    - Tag\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApiGatewayV2::VpcLink","awsResourceTypeName":"apigatewayv2-vpclink","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApiGatewayV2::VpcLink\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApiGatewayV2::VpcLink\nProperties:\n  Name: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    Key: Value\n","awsServiceName":"ApiGatewayV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppConfig::Application","awsResourceTypeName":"appconfig-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::Application\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::Application\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tags\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::ConfigurationProfile","awsResourceTypeName":"appconfig-configurationprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::ConfigurationProfile\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Description\" : String,\n      \"KmsKeyIdentifier\" : String,\n      \"LocationUri\" : String,\n      \"Name\" : String,\n      \"RetrievalRoleArn\" : String,\n      \"Tags\" : [ Tags, ... ],\n      \"Type\" : String,\n      \"Validators\" : [ Validators, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::ConfigurationProfile\nProperties:\n  ApplicationId: String\n  Description: String\n  KmsKeyIdentifier: String\n  LocationUri: String\n  Name: String\n  RetrievalRoleArn: String\n  Tags: \n    - Tags\n  Type: String\n  Validators: \n    - Validators\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::Deployment","awsResourceTypeName":"appconfig-deployment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::Deployment\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ConfigurationProfileId\" : String,\n      \"ConfigurationVersion\" : String,\n      \"DeploymentStrategyId\" : String,\n      \"Description\" : String,\n      \"DynamicExtensionParameters\" : [ DynamicExtensionParameters, ... ],\n      \"EnvironmentId\" : String,\n      \"KmsKeyIdentifier\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::Deployment\nProperties:\n  ApplicationId: String\n  ConfigurationProfileId: String\n  ConfigurationVersion: String\n  DeploymentStrategyId: String\n  Description: String\n  DynamicExtensionParameters: \n    - DynamicExtensionParameters\n  EnvironmentId: String\n  KmsKeyIdentifier: String\n  Tags: \n    - Tags\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::DeploymentStrategy","awsResourceTypeName":"appconfig-deploymentstrategy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::DeploymentStrategy\",\n  \"Properties\" : {\n      \"DeploymentDurationInMinutes\" : Number,\n      \"Description\" : String,\n      \"FinalBakeTimeInMinutes\" : Number,\n      \"GrowthFactor\" : Number,\n      \"GrowthType\" : String,\n      \"Name\" : String,\n      \"ReplicateTo\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::DeploymentStrategy\nProperties:\n  DeploymentDurationInMinutes: Number\n  Description: String\n  FinalBakeTimeInMinutes: Number\n  GrowthFactor: Number\n  GrowthType: String\n  Name: String\n  ReplicateTo: String\n  Tags: \n    - Tags\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::Environment","awsResourceTypeName":"appconfig-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::Environment\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Description\" : String,\n      \"Monitors\" : [ Monitor, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::Environment\nProperties:\n  ApplicationId: String\n  Description: String\n  Monitors: \n    - Monitor\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::Extension","awsResourceTypeName":"appconfig-extension","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::Extension\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"Description\" : String,\n      \"LatestVersionNumber\" : Integer,\n      \"Name\" : String,\n      \"Parameters\" : {Key: Value, ...},\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::Extension\nProperties:\n  Actions: \n    - Action\n  Description: String\n  LatestVersionNumber: Integer\n  Name: String\n  Parameters: \n    Key: Value\n  Tags: \n    - Tag\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::ExtensionAssociation","awsResourceTypeName":"appconfig-extensionassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::ExtensionAssociation\",\n  \"Properties\" : {\n      \"ExtensionIdentifier\" : String,\n      \"ExtensionVersionNumber\" : Integer,\n      \"Parameters\" : {Key: Value, ...},\n      \"ResourceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::ExtensionAssociation\nProperties:\n  ExtensionIdentifier: String\n  ExtensionVersionNumber: Integer\n  Parameters: \n    Key: Value\n  ResourceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppConfig::HostedConfigurationVersion","awsResourceTypeName":"appconfig-hostedconfigurationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppConfig::HostedConfigurationVersion\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ConfigurationProfileId\" : String,\n      \"Content\" : String,\n      \"ContentType\" : String,\n      \"Description\" : String,\n      \"LatestVersionNumber\" : Integer,\n      \"VersionLabel\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppConfig::HostedConfigurationVersion\nProperties:\n  ApplicationId: String\n  ConfigurationProfileId: String\n  Content: String\n  ContentType: String\n  Description: String\n  LatestVersionNumber: Integer\n  VersionLabel: String\n","awsServiceName":"AppConfig","awsServiceCategory":"management"},{"awsResourceType":"AWS::AppFlow::Connector","awsResourceTypeName":"appflow-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppFlow::Connector\",\n  \"Properties\" : {\n      \"ConnectorLabel\" : String,\n      \"ConnectorProvisioningConfig\" : ConnectorProvisioningConfig,\n      \"ConnectorProvisioningType\" : String,\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppFlow::Connector\nProperties:\n  ConnectorLabel: String\n  ConnectorProvisioningConfig: \n    ConnectorProvisioningConfig\n  ConnectorProvisioningType: String\n  Description: String\n","awsServiceName":"AppFlow","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::AppFlow::ConnectorProfile","awsResourceTypeName":"appflow-connectorprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppFlow::ConnectorProfile\",\n  \"Properties\" : {\n      \"ConnectionMode\" : String,\n      \"ConnectorLabel\" : String,\n      \"ConnectorProfileConfig\" : ConnectorProfileConfig,\n      \"ConnectorProfileName\" : String,\n      \"ConnectorType\" : String,\n      \"KMSArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppFlow::ConnectorProfile\nProperties:\n  ConnectionMode: String\n  ConnectorLabel: String\n  ConnectorProfileConfig: \n    ConnectorProfileConfig\n  ConnectorProfileName: String\n  ConnectorType: String\n  KMSArn: String\n","awsServiceName":"AppFlow","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::AppFlow::Flow","awsResourceTypeName":"appflow-flow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppFlow::Flow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DestinationFlowConfigList\" : [ DestinationFlowConfig, ... ],\n      \"FlowName\" : String,\n      \"FlowStatus\" : String,\n      \"KMSArn\" : String,\n      \"MetadataCatalogConfig\" : MetadataCatalogConfig,\n      \"SourceFlowConfig\" : SourceFlowConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"Tasks\" : [ Task, ... ],\n      \"TriggerConfig\" : TriggerConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppFlow::Flow\nProperties:\n  Description: String\n  DestinationFlowConfigList: \n    - DestinationFlowConfig\n  FlowName: String\n  FlowStatus: String\n  KMSArn: String\n  MetadataCatalogConfig: \n    MetadataCatalogConfig\n  SourceFlowConfig: \n    SourceFlowConfig\n  Tags: \n    - Tag\n  Tasks: \n    - Task\n  TriggerConfig: \n    TriggerConfig\n","awsServiceName":"AppFlow","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::AppIntegrations::Application","awsResourceTypeName":"appintegrations-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppIntegrations::Application\",\n  \"Properties\" : {\n      \"ApplicationSourceConfig\" : ApplicationSourceConfig,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Namespace\" : String,\n      \"Permissions\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppIntegrations::Application\nProperties:\n  ApplicationSourceConfig: \n    ApplicationSourceConfig\n  Description: String\n  Name: String\n  Namespace: String\n  Permissions: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"AppIntegrations","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::AppIntegrations::DataIntegration","awsResourceTypeName":"appintegrations-dataintegration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppIntegrations::DataIntegration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FileConfiguration\" : FileConfiguration,\n      \"KmsKey\" : String,\n      \"Name\" : String,\n      \"ObjectConfiguration\" : {Key: Value, ...},\n      \"ScheduleConfig\" : ScheduleConfig,\n      \"SourceURI\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppIntegrations::DataIntegration\nProperties:\n  Description: String\n  FileConfiguration: \n    FileConfiguration\n  KmsKey: String\n  Name: String\n  ObjectConfiguration: \n    Key: Value\n  ScheduleConfig: \n    ScheduleConfig\n  SourceURI: String\n  Tags: \n    - Tag\n","awsServiceName":"AppIntegrations","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::AppIntegrations::EventIntegration","awsResourceTypeName":"appintegrations-eventintegration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppIntegrations::EventIntegration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBridgeBus\" : String,\n      \"EventFilter\" : EventFilter,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppIntegrations::EventIntegration\nProperties:\n  Description: String\n  EventBridgeBus: String\n  EventFilter: \n    EventFilter\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"AppIntegrations","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::ApplicationAutoScaling::ScalableTarget","awsResourceTypeName":"applicationautoscaling-scalabletarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApplicationAutoScaling::ScalableTarget\",\n  \"Properties\" : {\n      \"MaxCapacity\" : Integer,\n      \"MinCapacity\" : Integer,\n      \"ResourceId\" : String,\n      \"RoleARN\" : String,\n      \"ScalableDimension\" : String,\n      \"ScheduledActions\" : [ ScheduledAction, ... ],\n      \"ServiceNamespace\" : String,\n      \"SuspendedState\" : SuspendedState\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApplicationAutoScaling::ScalableTarget\nProperties:\n  MaxCapacity: Integer\n  MinCapacity: Integer\n  ResourceId: String\n  RoleARN: String\n  ScalableDimension: String\n  ScheduledActions: \n    - ScheduledAction\n  ServiceNamespace: String\n  SuspendedState: \n    SuspendedState\n","awsServiceName":"ApplicationAutoScaling","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApplicationAutoScaling::ScalingPolicy","awsResourceTypeName":"applicationautoscaling-scalingpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApplicationAutoScaling::ScalingPolicy\",\n  \"Properties\" : {\n      \"PolicyName\" : String,\n      \"PolicyType\" : String,\n      \"ResourceId\" : String,\n      \"ScalableDimension\" : String,\n      \"ScalingTargetId\" : String,\n      \"ServiceNamespace\" : String,\n      \"StepScalingPolicyConfiguration\" : StepScalingPolicyConfiguration,\n      \"TargetTrackingScalingPolicyConfiguration\" : TargetTrackingScalingPolicyConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApplicationAutoScaling::ScalingPolicy\nProperties:\n  PolicyName: String\n  PolicyType: String\n  ResourceId: String\n  ScalableDimension: String\n  ScalingTargetId: String\n  ServiceNamespace: String\n  StepScalingPolicyConfiguration: \n    StepScalingPolicyConfiguration\n  TargetTrackingScalingPolicyConfiguration: \n    TargetTrackingScalingPolicyConfiguration\n","awsServiceName":"ApplicationAutoScaling","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::GatewayRoute","awsResourceTypeName":"appmesh-gatewayroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::GatewayRoute\",\n  \"Properties\" : {\n      \"GatewayRouteName\" : String,\n      \"MeshName\" : String,\n      \"MeshOwner\" : String,\n      \"Spec\" : GatewayRouteSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"VirtualGatewayName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::GatewayRoute\nProperties:\n  GatewayRouteName: String\n  MeshName: String\n  MeshOwner: String\n  Spec: \n    GatewayRouteSpec\n  Tags: \n    - Tag\n  VirtualGatewayName: String\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::Mesh","awsResourceTypeName":"appmesh-mesh","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::Mesh\",\n  \"Properties\" : {\n      \"MeshName\" : String,\n      \"Spec\" : MeshSpec,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::Mesh\nProperties:\n  MeshName: String\n  Spec: \n    MeshSpec\n  Tags: \n    - Tag\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::Route","awsResourceTypeName":"appmesh-route","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::Route\",\n  \"Properties\" : {\n      \"MeshName\" : String,\n      \"MeshOwner\" : String,\n      \"RouteName\" : String,\n      \"Spec\" : RouteSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"VirtualRouterName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::Route\nProperties:\n  MeshName: String\n  MeshOwner: String\n  RouteName: String\n  Spec: \n    RouteSpec\n  Tags: \n    - Tag\n  VirtualRouterName: String\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::VirtualGateway","awsResourceTypeName":"appmesh-virtualgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::VirtualGateway\",\n  \"Properties\" : {\n      \"MeshName\" : String,\n      \"MeshOwner\" : String,\n      \"Spec\" : VirtualGatewaySpec,\n      \"Tags\" : [ Tag, ... ],\n      \"VirtualGatewayName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::VirtualGateway\nProperties:\n  MeshName: String\n  MeshOwner: String\n  Spec: \n    VirtualGatewaySpec\n  Tags: \n    - Tag\n  VirtualGatewayName: String\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::VirtualNode","awsResourceTypeName":"appmesh-virtualnode","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::VirtualNode\",\n  \"Properties\" : {\n      \"MeshName\" : String,\n      \"MeshOwner\" : String,\n      \"Spec\" : VirtualNodeSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"VirtualNodeName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::VirtualNode\nProperties:\n  MeshName: String\n  MeshOwner: String\n  Spec: \n    VirtualNodeSpec\n  Tags: \n    - Tag\n  VirtualNodeName: String\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::VirtualRouter","awsResourceTypeName":"appmesh-virtualrouter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::VirtualRouter\",\n  \"Properties\" : {\n      \"MeshName\" : String,\n      \"MeshOwner\" : String,\n      \"Spec\" : VirtualRouterSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"VirtualRouterName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::VirtualRouter\nProperties:\n  MeshName: String\n  MeshOwner: String\n  Spec: \n    VirtualRouterSpec\n  Tags: \n    - Tag\n  VirtualRouterName: String\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppMesh::VirtualService","awsResourceTypeName":"appmesh-virtualservice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppMesh::VirtualService\",\n  \"Properties\" : {\n      \"MeshName\" : String,\n      \"MeshOwner\" : String,\n      \"Spec\" : VirtualServiceSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"VirtualServiceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppMesh::VirtualService\nProperties:\n  MeshName: String\n  MeshOwner: String\n  Spec: \n    VirtualServiceSpec\n  Tags: \n    - Tag\n  VirtualServiceName: String\n","awsServiceName":"AppMesh","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppRunner::AutoScalingConfiguration","awsResourceTypeName":"apprunner-autoscalingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppRunner::AutoScalingConfiguration\",\n  \"Properties\" : {\n      \"AutoScalingConfigurationName\" : String,\n      \"MaxConcurrency\" : Integer,\n      \"MaxSize\" : Integer,\n      \"MinSize\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppRunner::AutoScalingConfiguration\nProperties:\n  AutoScalingConfigurationName: String\n  MaxConcurrency: Integer\n  MaxSize: Integer\n  MinSize: Integer\n  Tags: \n    - Tag\n","awsServiceName":"AppRunner","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppRunner::ObservabilityConfiguration","awsResourceTypeName":"apprunner-observabilityconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppRunner::ObservabilityConfiguration\",\n  \"Properties\" : {\n      \"ObservabilityConfigurationName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TraceConfiguration\" : TraceConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppRunner::ObservabilityConfiguration\nProperties:\n  ObservabilityConfigurationName: String\n  Tags: \n    - Tag\n  TraceConfiguration: \n    TraceConfiguration\n","awsServiceName":"AppRunner","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppRunner::Service","awsResourceTypeName":"apprunner-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppRunner::Service\",\n  \"Properties\" : {\n      \"AutoScalingConfigurationArn\" : String,\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"HealthCheckConfiguration\" : HealthCheckConfiguration,\n      \"InstanceConfiguration\" : InstanceConfiguration,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"ObservabilityConfiguration\" : ServiceObservabilityConfiguration,\n      \"ServiceName\" : String,\n      \"SourceConfiguration\" : SourceConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppRunner::Service\nProperties:\n  AutoScalingConfigurationArn: String\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  HealthCheckConfiguration: \n    HealthCheckConfiguration\n  InstanceConfiguration: \n    InstanceConfiguration\n  NetworkConfiguration: \n    NetworkConfiguration\n  ObservabilityConfiguration: \n    ServiceObservabilityConfiguration\n  ServiceName: String\n  SourceConfiguration: \n    SourceConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"AppRunner","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppRunner::VpcConnector","awsResourceTypeName":"apprunner-vpcconnector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppRunner::VpcConnector\",\n  \"Properties\" : {\n      \"SecurityGroups\" : [ String, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConnectorName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppRunner::VpcConnector\nProperties:\n  SecurityGroups: \n    - String\n  Subnets: \n    - String\n  Tags: \n    - Tag\n  VpcConnectorName: String\n","awsServiceName":"AppRunner","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppRunner::VpcIngressConnection","awsResourceTypeName":"apprunner-vpcingressconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppRunner::VpcIngressConnection\",\n  \"Properties\" : {\n      \"IngressVpcConfiguration\" : IngressVpcConfiguration,\n      \"ServiceArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcIngressConnectionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppRunner::VpcIngressConnection\nProperties:\n  IngressVpcConfiguration: \n    IngressVpcConfiguration\n  ServiceArn: String\n  Tags: \n    - Tag\n  VpcIngressConnectionName: String\n","awsServiceName":"AppRunner","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::AppBlock","awsResourceTypeName":"appstream-appblock","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::AppBlock\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"Name\" : String,\n      \"PackagingType\" : String,\n      \"PostSetupScriptDetails\" : ScriptDetails,\n      \"SetupScriptDetails\" : ScriptDetails,\n      \"SourceS3Location\" : S3Location,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::AppBlock\nProperties:\n  Description: String\n  DisplayName: String\n  Name: String\n  PackagingType: String\n  PostSetupScriptDetails: \n    ScriptDetails\n  SetupScriptDetails: \n    ScriptDetails\n  SourceS3Location: \n    S3Location\n  Tags: \n    - Tag\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::AppBlockBuilder","awsResourceTypeName":"appstream-appblockbuilder","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::AppBlockBuilder\",\n  \"Properties\" : {\n      \"AccessEndpoints\" : [ AccessEndpoint, ... ],\n      \"AppBlockArns\" : [ String, ... ],\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"EnableDefaultInternetAccess\" : Boolean,\n      \"IamRoleArn\" : String,\n      \"InstanceType\" : String,\n      \"Name\" : String,\n      \"Platform\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::AppBlockBuilder\nProperties:\n  AccessEndpoints: \n    - AccessEndpoint\n  AppBlockArns: \n    - String\n  Description: String\n  DisplayName: String\n  EnableDefaultInternetAccess: Boolean\n  IamRoleArn: String\n  InstanceType: String\n  Name: String\n  Platform: String\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::Application","awsResourceTypeName":"appstream-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::Application\",\n  \"Properties\" : {\n      \"AppBlockArn\" : String,\n      \"AttributesToDelete\" : [ String, ... ],\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"IconS3Location\" : S3Location,\n      \"InstanceFamilies\" : [ String, ... ],\n      \"LaunchParameters\" : String,\n      \"LaunchPath\" : String,\n      \"Name\" : String,\n      \"Platforms\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WorkingDirectory\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::Application\nProperties:\n  AppBlockArn: String\n  AttributesToDelete: \n    - String\n  Description: String\n  DisplayName: String\n  IconS3Location: \n    S3Location\n  InstanceFamilies: \n    - String\n  LaunchParameters: String\n  LaunchPath: String\n  Name: String\n  Platforms: \n    - String\n  Tags: \n    - Tag\n  WorkingDirectory: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::ApplicationEntitlementAssociation","awsResourceTypeName":"appstream-applicationentitlementassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::ApplicationEntitlementAssociation\",\n  \"Properties\" : {\n      \"ApplicationIdentifier\" : String,\n      \"EntitlementName\" : String,\n      \"StackName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::ApplicationEntitlementAssociation\nProperties:\n  ApplicationIdentifier: String\n  EntitlementName: String\n  StackName: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::ApplicationFleetAssociation","awsResourceTypeName":"appstream-applicationfleetassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::ApplicationFleetAssociation\",\n  \"Properties\" : {\n      \"ApplicationArn\" : String,\n      \"FleetName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::ApplicationFleetAssociation\nProperties:\n  ApplicationArn: String\n  FleetName: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::DirectoryConfig","awsResourceTypeName":"appstream-directoryconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::DirectoryConfig\",\n  \"Properties\" : {\n      \"CertificateBasedAuthProperties\" : CertificateBasedAuthProperties,\n      \"DirectoryName\" : String,\n      \"OrganizationalUnitDistinguishedNames\" : [ String, ... ],\n      \"ServiceAccountCredentials\" : ServiceAccountCredentials\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::DirectoryConfig\nProperties:\n  CertificateBasedAuthProperties: \n    CertificateBasedAuthProperties\n  DirectoryName: String\n  OrganizationalUnitDistinguishedNames: \n    - String\n  ServiceAccountCredentials: \n    ServiceAccountCredentials\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::Entitlement","awsResourceTypeName":"appstream-entitlement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::Entitlement\",\n  \"Properties\" : {\n      \"AppVisibility\" : String,\n      \"Attributes\" : [ Attribute, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"StackName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::Entitlement\nProperties:\n  AppVisibility: String\n  Attributes: \n    - Attribute\n  Description: String\n  Name: String\n  StackName: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::Fleet","awsResourceTypeName":"appstream-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::Fleet\",\n  \"Properties\" : {\n      \"ComputeCapacity\" : ComputeCapacity,\n      \"Description\" : String,\n      \"DisconnectTimeoutInSeconds\" : Integer,\n      \"DisplayName\" : String,\n      \"DomainJoinInfo\" : DomainJoinInfo,\n      \"EnableDefaultInternetAccess\" : Boolean,\n      \"FleetType\" : String,\n      \"IamRoleArn\" : String,\n      \"IdleDisconnectTimeoutInSeconds\" : Integer,\n      \"ImageArn\" : String,\n      \"ImageName\" : String,\n      \"InstanceType\" : String,\n      \"MaxConcurrentSessions\" : Integer,\n      \"MaxSessionsPerInstance\" : Integer,\n      \"MaxUserDurationInSeconds\" : Integer,\n      \"Name\" : String,\n      \"Platform\" : String,\n      \"SessionScriptS3Location\" : S3Location,\n      \"StreamView\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UsbDeviceFilterStrings\" : [ String, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::Fleet\nProperties:\n  ComputeCapacity: \n    ComputeCapacity\n  Description: String\n  DisconnectTimeoutInSeconds: Integer\n  DisplayName: String\n  DomainJoinInfo: \n    DomainJoinInfo\n  EnableDefaultInternetAccess: Boolean\n  FleetType: String\n  IamRoleArn: String\n  IdleDisconnectTimeoutInSeconds: Integer\n  ImageArn: String\n  ImageName: String\n  InstanceType: String\n  MaxConcurrentSessions: Integer\n  MaxSessionsPerInstance: Integer\n  MaxUserDurationInSeconds: Integer\n  Name: String\n  Platform: String\n  SessionScriptS3Location: \n    S3Location\n  StreamView: String\n  Tags: \n    - Tag\n  UsbDeviceFilterStrings: \n    - String\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::ImageBuilder","awsResourceTypeName":"appstream-imagebuilder","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::ImageBuilder\",\n  \"Properties\" : {\n      \"AccessEndpoints\" : [ AccessEndpoint, ... ],\n      \"AppstreamAgentVersion\" : String,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"DomainJoinInfo\" : DomainJoinInfo,\n      \"EnableDefaultInternetAccess\" : Boolean,\n      \"IamRoleArn\" : String,\n      \"ImageArn\" : String,\n      \"ImageName\" : String,\n      \"InstanceType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::ImageBuilder\nProperties:\n  AccessEndpoints: \n    - AccessEndpoint\n  AppstreamAgentVersion: String\n  Description: String\n  DisplayName: String\n  DomainJoinInfo: \n    DomainJoinInfo\n  EnableDefaultInternetAccess: Boolean\n  IamRoleArn: String\n  ImageArn: String\n  ImageName: String\n  InstanceType: String\n  Name: String\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::Stack","awsResourceTypeName":"appstream-stack","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::Stack\",\n  \"Properties\" : {\n      \"AccessEndpoints\" : [ AccessEndpoint, ... ],\n      \"ApplicationSettings\" : ApplicationSettings,\n      \"AttributesToDelete\" : [ String, ... ],\n      \"DeleteStorageConnectors\" : Boolean,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"EmbedHostDomains\" : [ String, ... ],\n      \"FeedbackURL\" : String,\n      \"Name\" : String,\n      \"RedirectURL\" : String,\n      \"StorageConnectors\" : [ StorageConnector, ... ],\n      \"StreamingExperienceSettings\" : StreamingExperienceSettings,\n      \"Tags\" : [ Tag, ... ],\n      \"UserSettings\" : [ UserSetting, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::Stack\nProperties:\n  AccessEndpoints: \n    - AccessEndpoint\n  ApplicationSettings: \n    ApplicationSettings\n  AttributesToDelete: \n    - String\n  DeleteStorageConnectors: Boolean\n  Description: String\n  DisplayName: String\n  EmbedHostDomains: \n    - String\n  FeedbackURL: String\n  Name: String\n  RedirectURL: String\n  StorageConnectors: \n    - StorageConnector\n  StreamingExperienceSettings: \n    StreamingExperienceSettings\n  Tags: \n    - Tag\n  UserSettings: \n    - UserSetting\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::StackFleetAssociation","awsResourceTypeName":"appstream-stackfleetassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::StackFleetAssociation\",\n  \"Properties\" : {\n      \"FleetName\" : String,\n      \"StackName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::StackFleetAssociation\nProperties:\n  FleetName: String\n  StackName: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::StackUserAssociation","awsResourceTypeName":"appstream-stackuserassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::StackUserAssociation\",\n  \"Properties\" : {\n      \"AuthenticationType\" : String,\n      \"SendEmailNotification\" : Boolean,\n      \"StackName\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::StackUserAssociation\nProperties:\n  AuthenticationType: String\n  SendEmailNotification: Boolean\n  StackName: String\n  UserName: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppStream::User","awsResourceTypeName":"appstream-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppStream::User\",\n  \"Properties\" : {\n      \"AuthenticationType\" : String,\n      \"FirstName\" : String,\n      \"LastName\" : String,\n      \"MessageAction\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppStream::User\nProperties:\n  AuthenticationType: String\n  FirstName: String\n  LastName: String\n  MessageAction: String\n  UserName: String\n","awsServiceName":"AppStream","awsServiceCategory":"endUserComputing"},{"awsResourceType":"AWS::AppSync::ApiCache","awsResourceTypeName":"appsync-apicache","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::ApiCache\",\n  \"Properties\" : {\n      \"ApiCachingBehavior\" : String,\n      \"ApiId\" : String,\n      \"AtRestEncryptionEnabled\" : Boolean,\n      \"HealthMetricsConfig\" : String,\n      \"TransitEncryptionEnabled\" : Boolean,\n      \"Ttl\" : Number,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::ApiCache\nProperties:\n  ApiCachingBehavior: String\n  ApiId: String\n  AtRestEncryptionEnabled: Boolean\n  HealthMetricsConfig: String\n  TransitEncryptionEnabled: Boolean\n  Ttl: Number\n  Type: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::ApiKey","awsResourceTypeName":"appsync-apikey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::ApiKey\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"Description\" : String,\n      \"Expires\" : Number\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::ApiKey\nProperties:\n  ApiId: String\n  Description: String\n  Expires: Number\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::DataSource","awsResourceTypeName":"appsync-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::DataSource\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"Description\" : String,\n      \"DynamoDBConfig\" : DynamoDBConfig,\n      \"ElasticsearchConfig\" : ElasticsearchConfig,\n      \"EventBridgeConfig\" : EventBridgeConfig,\n      \"HttpConfig\" : HttpConfig,\n      \"LambdaConfig\" : LambdaConfig,\n      \"MetricsConfig\" : String,\n      \"Name\" : String,\n      \"OpenSearchServiceConfig\" : OpenSearchServiceConfig,\n      \"RelationalDatabaseConfig\" : RelationalDatabaseConfig,\n      \"ServiceRoleArn\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::DataSource\nProperties:\n  ApiId: String\n  Description: String\n  DynamoDBConfig: \n    DynamoDBConfig\n  ElasticsearchConfig: \n    ElasticsearchConfig\n  EventBridgeConfig: \n    EventBridgeConfig\n  HttpConfig: \n    HttpConfig\n  LambdaConfig: \n    LambdaConfig\n  MetricsConfig: String\n  Name: String\n  OpenSearchServiceConfig: \n    OpenSearchServiceConfig\n  RelationalDatabaseConfig: \n    RelationalDatabaseConfig\n  ServiceRoleArn: String\n  Type: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::DomainName","awsResourceTypeName":"appsync-domainname","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::DomainName\",\n  \"Properties\" : {\n      \"CertificateArn\" : String,\n      \"Description\" : String,\n      \"DomainName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::DomainName\nProperties:\n  CertificateArn: String\n  Description: String\n  DomainName: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::DomainNameApiAssociation","awsResourceTypeName":"appsync-domainnameapiassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::DomainNameApiAssociation\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"DomainName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::DomainNameApiAssociation\nProperties:\n  ApiId: String\n  DomainName: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::FunctionConfiguration","awsResourceTypeName":"appsync-functionconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::FunctionConfiguration\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"Code\" : String,\n      \"CodeS3Location\" : String,\n      \"DataSourceName\" : String,\n      \"Description\" : String,\n      \"FunctionVersion\" : String,\n      \"MaxBatchSize\" : Integer,\n      \"Name\" : String,\n      \"RequestMappingTemplate\" : String,\n      \"RequestMappingTemplateS3Location\" : String,\n      \"ResponseMappingTemplate\" : String,\n      \"ResponseMappingTemplateS3Location\" : String,\n      \"Runtime\" : AppSyncRuntime,\n      \"SyncConfig\" : SyncConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::FunctionConfiguration\nProperties:\n  ApiId: String\n  Code: String\n  CodeS3Location: String\n  DataSourceName: String\n  Description: String\n  FunctionVersion: String\n  MaxBatchSize: Integer\n  Name: String\n  RequestMappingTemplate: String\n  RequestMappingTemplateS3Location: String\n  ResponseMappingTemplate: String\n  ResponseMappingTemplateS3Location: String\n  Runtime: \n    AppSyncRuntime\n  SyncConfig: \n    SyncConfig\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::GraphQLApi","awsResourceTypeName":"appsync-graphqlapi","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::GraphQLApi\",\n  \"Properties\" : {\n      \"AdditionalAuthenticationProviders\" : [ AdditionalAuthenticationProvider, ... ],\n      \"ApiType\" : String,\n      \"AuthenticationType\" : String,\n      \"EnhancedMetricsConfig\" : EnhancedMetricsConfig,\n      \"EnvironmentVariables\" : Json,\n      \"IntrospectionConfig\" : String,\n      \"LambdaAuthorizerConfig\" : LambdaAuthorizerConfig,\n      \"LogConfig\" : LogConfig,\n      \"MergedApiExecutionRoleArn\" : String,\n      \"Name\" : String,\n      \"OpenIDConnectConfig\" : OpenIDConnectConfig,\n      \"OwnerContact\" : String,\n      \"QueryDepthLimit\" : Integer,\n      \"ResolverCountLimit\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"UserPoolConfig\" : UserPoolConfig,\n      \"Visibility\" : String,\n      \"XrayEnabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::GraphQLApi\nProperties:\n  AdditionalAuthenticationProviders: \n    - AdditionalAuthenticationProvider\n  ApiType: String\n  AuthenticationType: String\n  EnhancedMetricsConfig: \n    EnhancedMetricsConfig\n  EnvironmentVariables: Json\n  IntrospectionConfig: String\n  LambdaAuthorizerConfig: \n    LambdaAuthorizerConfig\n  LogConfig: \n    LogConfig\n  MergedApiExecutionRoleArn: String\n  Name: String\n  OpenIDConnectConfig: \n    OpenIDConnectConfig\n  OwnerContact: String\n  QueryDepthLimit: Integer\n  ResolverCountLimit: Integer\n  Tags: \n    - Tag\n  UserPoolConfig: \n    UserPoolConfig\n  Visibility: String\n  XrayEnabled: Boolean\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::GraphQLSchema","awsResourceTypeName":"appsync-graphqlschema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::GraphQLSchema\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"Definition\" : String,\n      \"DefinitionS3Location\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::GraphQLSchema\nProperties:\n  ApiId: String\n  Definition: String\n  DefinitionS3Location: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::Resolver","awsResourceTypeName":"appsync-resolver","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::Resolver\",\n  \"Properties\" : {\n      \"ApiId\" : String,\n      \"CachingConfig\" : CachingConfig,\n      \"Code\" : String,\n      \"CodeS3Location\" : String,\n      \"DataSourceName\" : String,\n      \"FieldName\" : String,\n      \"Kind\" : String,\n      \"MaxBatchSize\" : Integer,\n      \"MetricsConfig\" : String,\n      \"PipelineConfig\" : PipelineConfig,\n      \"RequestMappingTemplate\" : String,\n      \"RequestMappingTemplateS3Location\" : String,\n      \"ResponseMappingTemplate\" : String,\n      \"ResponseMappingTemplateS3Location\" : String,\n      \"Runtime\" : AppSyncRuntime,\n      \"SyncConfig\" : SyncConfig,\n      \"TypeName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::Resolver\nProperties:\n  ApiId: String\n  CachingConfig: \n    CachingConfig\n  Code: String\n  CodeS3Location: String\n  DataSourceName: String\n  FieldName: String\n  Kind: String\n  MaxBatchSize: Integer\n  MetricsConfig: String\n  PipelineConfig: \n    PipelineConfig\n  RequestMappingTemplate: String\n  RequestMappingTemplateS3Location: String\n  ResponseMappingTemplate: String\n  ResponseMappingTemplateS3Location: String\n  Runtime: \n    AppSyncRuntime\n  SyncConfig: \n    SyncConfig\n  TypeName: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::AppSync::SourceApiAssociation","awsResourceTypeName":"appsync-sourceapiassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AppSync::SourceApiAssociation\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MergedApiIdentifier\" : String,\n      \"SourceApiAssociationConfig\" : SourceApiAssociationConfig,\n      \"SourceApiIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AppSync::SourceApiAssociation\nProperties:\n  Description: String\n  MergedApiIdentifier: String\n  SourceApiAssociationConfig: \n    SourceApiAssociationConfig\n  SourceApiIdentifier: String\n","awsServiceName":"AppSync","awsServiceCategory":"other"},{"awsResourceType":"AWS::ARCZonalShift::ZonalAutoshiftConfiguration","awsResourceTypeName":"arczonalshift-zonalautoshiftconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ARCZonalShift::ZonalAutoshiftConfiguration\",\n  \"Properties\" : {\n      \"PracticeRunConfiguration\" : PracticeRunConfiguration,\n      \"ResourceIdentifier\" : String,\n      \"ZonalAutoshiftStatus\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ARCZonalShift::ZonalAutoshiftConfiguration\nProperties:\n  PracticeRunConfiguration: \n    PracticeRunConfiguration\n  ResourceIdentifier: String\n  ZonalAutoshiftStatus: String\n","awsServiceName":"ARCZonalShift","awsServiceCategory":"other"},{"awsResourceType":"Alexa::ASK::Skill","awsResourceTypeName":"alexa-resource-ask-skill","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"Alexa::ASK::Skill\",\n  \"Properties\" : {\n      \"AuthenticationConfiguration\" : AuthenticationConfiguration,\n      \"SkillPackage\" : SkillPackage,\n      \"VendorId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: Alexa::ASK::Skill\nProperties:\n  AuthenticationConfiguration: \n    AuthenticationConfiguration\n  SkillPackage: \n    SkillPackage\n  VendorId: String\n","awsServiceName":"ASK","awsServiceCategory":"other"},{"awsResourceType":"AWS::Athena::CapacityReservation","awsResourceTypeName":"athena-capacityreservation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Athena::CapacityReservation\",\n  \"Properties\" : {\n      \"CapacityAssignmentConfiguration\" : CapacityAssignmentConfiguration,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetDpus\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Athena::CapacityReservation\nProperties:\n  CapacityAssignmentConfiguration: \n    CapacityAssignmentConfiguration\n  Name: String\n  Tags: \n    - Tag\n  TargetDpus: Integer\n","awsServiceName":"Athena","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Athena::DataCatalog","awsResourceTypeName":"athena-datacatalog","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Athena::DataCatalog\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Parameters\" : {Key: Value, ...},\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Athena::DataCatalog\nProperties:\n  Description: String\n  Name: String\n  Parameters: \n    Key: Value\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"Athena","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Athena::NamedQuery","awsResourceTypeName":"athena-namedquery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Athena::NamedQuery\",\n  \"Properties\" : {\n      \"Database\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"QueryString\" : String,\n      \"WorkGroup\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Athena::NamedQuery\nProperties:\n  Database: String\n  Description: String\n  Name: String\n  QueryString: \n    String\n  WorkGroup: String\n","awsServiceName":"Athena","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Athena::PreparedStatement","awsResourceTypeName":"athena-preparedstatement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Athena::PreparedStatement\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"QueryStatement\" : String,\n      \"StatementName\" : String,\n      \"WorkGroup\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Athena::PreparedStatement\nProperties:\n  Description: String\n  QueryStatement: String\n  StatementName: String\n  WorkGroup: String\n","awsServiceName":"Athena","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Athena::WorkGroup","awsResourceTypeName":"athena-workgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Athena::WorkGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RecursiveDeleteOption\" : Boolean,\n      \"State\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkGroupConfiguration\" : WorkGroupConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Athena::WorkGroup\nProperties:\n  Description: String\n  Name: String\n  RecursiveDeleteOption: Boolean\n  State: String\n  Tags: \n    - Tag\n  WorkGroupConfiguration: \n    WorkGroupConfiguration\n","awsServiceName":"Athena","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::AuditManager::Assessment","awsResourceTypeName":"auditmanager-assessment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AuditManager::Assessment\",\n  \"Properties\" : {\n      \"AssessmentReportsDestination\" : AssessmentReportsDestination,\n      \"AwsAccount\" : AWSAccount,\n      \"Delegations\" : [ Delegation, ... ],\n      \"Description\" : String,\n      \"FrameworkId\" : String,\n      \"Name\" : String,\n      \"Roles\" : [ Role, ... ],\n      \"Scope\" : Scope,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AuditManager::Assessment\nProperties:\n  AssessmentReportsDestination: \n    AssessmentReportsDestination\n  AwsAccount: \n    AWSAccount\n  Delegations: \n    - Delegation\n  Description: String\n  FrameworkId: String\n  Name: String\n  Roles: \n    - Role\n  Scope: \n    Scope\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"AuditManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::AutoScalingPlans::ScalingPlan","awsResourceTypeName":"autoscalingplans-scalingplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScalingPlans::ScalingPlan\",\n  \"Properties\" : {\n      \"ApplicationSource\" : ApplicationSource,\n      \"ScalingInstructions\" : [ ScalingInstruction, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScalingPlans::ScalingPlan\nProperties:\n  ApplicationSource: \n    ApplicationSource\n  ScalingInstructions: \n    - ScalingInstruction\n","awsServiceName":"AutoScalingPlans","awsServiceCategory":"other"},{"awsResourceType":"AWS::B2BI::Capability","awsResourceTypeName":"b2bi-capability","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::B2BI::Capability\",\n  \"Properties\" : {\n      \"Configuration\" : CapabilityConfiguration,\n      \"InstructionsDocuments\" : [ S3Location, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::B2BI::Capability\nProperties:\n  Configuration: \n    CapabilityConfiguration\n  InstructionsDocuments: \n    - S3Location\n  Name: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"B2BI","awsServiceCategory":"other"},{"awsResourceType":"AWS::B2BI::Partnership","awsResourceTypeName":"b2bi-partnership","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::B2BI::Partnership\",\n  \"Properties\" : {\n      \"Capabilities\" : [ String, ... ],\n      \"Email\" : String,\n      \"Name\" : String,\n      \"Phone\" : String,\n      \"ProfileId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::B2BI::Partnership\nProperties:\n  Capabilities: \n    - String\n  Email: String\n  Name: String\n  Phone: String\n  ProfileId: String\n  Tags: \n    - Tag\n","awsServiceName":"B2BI","awsServiceCategory":"other"},{"awsResourceType":"AWS::B2BI::Profile","awsResourceTypeName":"b2bi-profile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::B2BI::Profile\",\n  \"Properties\" : {\n      \"BusinessName\" : String,\n      \"Email\" : String,\n      \"Logging\" : String,\n      \"Name\" : String,\n      \"Phone\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::B2BI::Profile\nProperties:\n  BusinessName: String\n  Email: String\n  Logging: String\n  Name: String\n  Phone: String\n  Tags: \n    - Tag\n","awsServiceName":"B2BI","awsServiceCategory":"other"},{"awsResourceType":"AWS::B2BI::Transformer","awsResourceTypeName":"b2bi-transformer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::B2BI::Transformer\",\n  \"Properties\" : {\n      \"EdiType\" : EdiType,\n      \"FileFormat\" : String,\n      \"MappingTemplate\" : String,\n      \"Name\" : String,\n      \"SampleDocument\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::B2BI::Transformer\nProperties:\n  EdiType: \n    EdiType\n  FileFormat: String\n  MappingTemplate: String\n  Name: String\n  SampleDocument: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"B2BI","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::BackupPlan","awsResourceTypeName":"backup-backupplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::BackupPlan\",\n  \"Properties\" : {\n      \"BackupPlan\" : BackupPlanResourceType,\n      \"BackupPlanTags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::BackupPlan\nProperties:\n  BackupPlan: \n    BackupPlanResourceType\n  BackupPlanTags: \n    Key: Value\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::BackupSelection","awsResourceTypeName":"backup-backupselection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::BackupSelection\",\n  \"Properties\" : {\n      \"BackupPlanId\" : String,\n      \"BackupSelection\" : BackupSelectionResourceType\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::BackupSelection\nProperties:\n  BackupPlanId: String\n  BackupSelection: \n    BackupSelectionResourceType\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::BackupVault","awsResourceTypeName":"backup-backupvault","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::BackupVault\",\n  \"Properties\" : {\n      \"AccessPolicy\" : Json,\n      \"BackupVaultName\" : String,\n      \"BackupVaultTags\" : {Key: Value, ...},\n      \"EncryptionKeyArn\" : String,\n      \"LockConfiguration\" : LockConfigurationType,\n      \"Notifications\" : NotificationObjectType\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::BackupVault\nProperties:\n  AccessPolicy: Json\n  BackupVaultName: String\n  BackupVaultTags: \n    Key: Value\n  EncryptionKeyArn: String\n  LockConfiguration: \n    LockConfigurationType\n  Notifications: \n    NotificationObjectType\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::Framework","awsResourceTypeName":"backup-framework","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::Framework\",\n  \"Properties\" : {\n      \"FrameworkControls\" : [ FrameworkControl, ... ],\n      \"FrameworkDescription\" : String,\n      \"FrameworkName\" : String,\n      \"FrameworkTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::Framework\nProperties:\n  FrameworkControls: \n    - FrameworkControl\n  FrameworkDescription: String\n  FrameworkName: String\n  FrameworkTags: \n    - Tag\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::ReportPlan","awsResourceTypeName":"backup-reportplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::ReportPlan\",\n  \"Properties\" : {\n      \"ReportDeliveryChannel\" : ReportDeliveryChannel,\n      \"ReportPlanDescription\" : String,\n      \"ReportPlanName\" : String,\n      \"ReportPlanTags\" : [ Tag, ... ],\n      \"ReportSetting\" : ReportSetting\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::ReportPlan\nProperties:\n  ReportDeliveryChannel: \n    ReportDeliveryChannel\n  ReportPlanDescription: String\n  ReportPlanName: String\n  ReportPlanTags: \n    - Tag\n  ReportSetting: \n    ReportSetting\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::RestoreTestingPlan","awsResourceTypeName":"backup-restoretestingplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::RestoreTestingPlan\",\n  \"Properties\" : {\n      \"RecoveryPointSelection\" : RestoreTestingRecoveryPointSelection,\n      \"RestoreTestingPlanName\" : String,\n      \"ScheduleExpression\" : String,\n      \"ScheduleExpressionTimezone\" : String,\n      \"StartWindowHours\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::RestoreTestingPlan\nProperties:\n  RecoveryPointSelection: \n    RestoreTestingRecoveryPointSelection\n  RestoreTestingPlanName: String\n  ScheduleExpression: String\n  ScheduleExpressionTimezone: String\n  StartWindowHours: Integer\n  Tags: \n    - Tag\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::Backup::RestoreTestingSelection","awsResourceTypeName":"backup-restoretestingselection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Backup::RestoreTestingSelection\",\n  \"Properties\" : {\n      \"IamRoleArn\" : String,\n      \"ProtectedResourceArns\" : [ String, ... ],\n      \"ProtectedResourceConditions\" : ProtectedResourceConditions,\n      \"ProtectedResourceType\" : String,\n      \"RestoreMetadataOverrides\" : {Key: Value, ...},\n      \"RestoreTestingPlanName\" : String,\n      \"RestoreTestingSelectionName\" : String,\n      \"ValidationWindowHours\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Backup::RestoreTestingSelection\nProperties:\n  IamRoleArn: String\n  ProtectedResourceArns: \n    - String\n  ProtectedResourceConditions: \n    ProtectedResourceConditions\n  ProtectedResourceType: String\n  RestoreMetadataOverrides: \n    Key: Value\n  RestoreTestingPlanName: String\n  RestoreTestingSelectionName: String\n  ValidationWindowHours: Integer\n","awsServiceName":"Backup","awsServiceCategory":"other"},{"awsResourceType":"AWS::BackupGateway::Hypervisor","awsResourceTypeName":"backupgateway-hypervisor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::BackupGateway::Hypervisor\",\n  \"Properties\" : {\n      \"Host\" : String,\n      \"KmsKeyArn\" : String,\n      \"LogGroupArn\" : String,\n      \"Name\" : String,\n      \"Password\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Username\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::BackupGateway::Hypervisor\nProperties:\n  Host: String\n  KmsKeyArn: String\n  LogGroupArn: String\n  Name: String\n  Password: String\n  Tags: \n    - Tag\n  Username: String\n","awsServiceName":"BackupGateway","awsServiceCategory":"other"},{"awsResourceType":"AWS::Batch::ComputeEnvironment","awsResourceTypeName":"batch-computeenvironment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Batch::ComputeEnvironment\",\n  \"Properties\" : {\n      \"ComputeEnvironmentName\" : String,\n      \"ComputeResources\" : ComputeResources,\n      \"EksConfiguration\" : EksConfiguration,\n      \"ReplaceComputeEnvironment\" : Boolean,\n      \"ServiceRole\" : String,\n      \"State\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String,\n      \"UnmanagedvCpus\" : Integer,\n      \"UpdatePolicy\" : UpdatePolicy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Batch::ComputeEnvironment\nProperties:\n  ComputeEnvironmentName: String\n  ComputeResources: \n    ComputeResources\n  EksConfiguration: \n    EksConfiguration\n  ReplaceComputeEnvironment: Boolean\n  ServiceRole: String\n  State: String\n  Tags: \n    Key: Value\n  Type: String\n  UnmanagedvCpus: Integer\n  UpdatePolicy: \n    UpdatePolicy\n","awsServiceName":"Batch","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Batch::JobDefinition","awsResourceTypeName":"batch-jobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Batch::JobDefinition\",\n  \"Properties\" : {\n      \"ContainerProperties\" : ContainerProperties,\n      \"EcsProperties\" : EcsProperties,\n      \"EksProperties\" : EksProperties,\n      \"JobDefinitionName\" : String,\n      \"NodeProperties\" : NodeProperties,\n      \"Parameters\" : Json,\n      \"PlatformCapabilities\" : [ String, ... ],\n      \"PropagateTags\" : Boolean,\n      \"RetryStrategy\" : RetryStrategy,\n      \"SchedulingPriority\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Timeout,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Batch::JobDefinition\nProperties:\n  ContainerProperties: \n    ContainerProperties\n  EcsProperties: \n    EcsProperties\n  EksProperties: \n    EksProperties\n  JobDefinitionName: String\n  NodeProperties: \n    NodeProperties\n  Parameters: Json\n  PlatformCapabilities: \n    - String\n  PropagateTags: Boolean\n  RetryStrategy: \n    RetryStrategy\n  SchedulingPriority: Integer\n  Tags: \n    - Tag\n  Timeout: \n    Timeout\n  Type: String\n","awsServiceName":"Batch","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Batch::JobQueue","awsResourceTypeName":"batch-jobqueue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Batch::JobQueue\",\n  \"Properties\" : {\n      \"ComputeEnvironmentOrder\" : [ ComputeEnvironmentOrder, ... ],\n      \"JobQueueName\" : String,\n      \"JobStateTimeLimitActions\" : [ JobStateTimeLimitAction, ... ],\n      \"Priority\" : Integer,\n      \"SchedulingPolicyArn\" : String,\n      \"State\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Batch::JobQueue\nProperties:\n  ComputeEnvironmentOrder: \n    - ComputeEnvironmentOrder\n  JobQueueName: String\n  JobStateTimeLimitActions: \n    - JobStateTimeLimitAction\n  Priority: Integer\n  SchedulingPolicyArn: String\n  State: String\n  Tags: \n    Key: Value\n","awsServiceName":"Batch","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Batch::SchedulingPolicy","awsResourceTypeName":"batch-schedulingpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Batch::SchedulingPolicy\",\n  \"Properties\" : {\n      \"FairsharePolicy\" : FairsharePolicy,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Batch::SchedulingPolicy\nProperties:\n  FairsharePolicy: \n    FairsharePolicy\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"Batch","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Bedrock::Agent","awsResourceTypeName":"bedrock-agent","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Bedrock::Agent\",\n  \"Properties\" : {\n      \"ActionGroups\" : [ AgentActionGroup, ... ],\n      \"AgentName\" : String,\n      \"AgentResourceRoleArn\" : String,\n      \"AutoPrepare\" : Boolean,\n      \"CustomerEncryptionKeyArn\" : String,\n      \"Description\" : String,\n      \"FoundationModel\" : String,\n      \"IdleSessionTTLInSeconds\" : Number,\n      \"Instruction\" : String,\n      \"KnowledgeBases\" : [ AgentKnowledgeBase, ... ],\n      \"PromptOverrideConfiguration\" : PromptOverrideConfiguration,\n      \"SkipResourceInUseCheckOnDelete\" : Boolean,\n      \"Tags\" : {Key: Value, ...},\n      \"TestAliasTags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Bedrock::Agent\nProperties:\n  ActionGroups: \n    - AgentActionGroup\n  AgentName: String\n  AgentResourceRoleArn: String\n  AutoPrepare: Boolean\n  CustomerEncryptionKeyArn: String\n  Description: String\n  FoundationModel: String\n  IdleSessionTTLInSeconds: Number\n  Instruction: String\n  KnowledgeBases: \n    - AgentKnowledgeBase\n  PromptOverrideConfiguration: \n    PromptOverrideConfiguration\n  SkipResourceInUseCheckOnDelete: Boolean\n  Tags: \n    Key: Value\n  TestAliasTags: \n    Key: Value\n","awsServiceName":"Bedrock","awsServiceCategory":"other"},{"awsResourceType":"AWS::Bedrock::AgentAlias","awsResourceTypeName":"bedrock-agentalias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Bedrock::AgentAlias\",\n  \"Properties\" : {\n      \"AgentAliasName\" : String,\n      \"AgentId\" : String,\n      \"Description\" : String,\n      \"RoutingConfiguration\" : [ AgentAliasRoutingConfigurationListItem, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Bedrock::AgentAlias\nProperties:\n  AgentAliasName: String\n  AgentId: String\n  Description: String\n  RoutingConfiguration: \n    - AgentAliasRoutingConfigurationListItem\n  Tags: \n    Key: Value\n","awsServiceName":"Bedrock","awsServiceCategory":"other"},{"awsResourceType":"AWS::Bedrock::DataSource","awsResourceTypeName":"bedrock-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Bedrock::DataSource\",\n  \"Properties\" : {\n      \"DataSourceConfiguration\" : DataSourceConfiguration,\n      \"Description\" : String,\n      \"KnowledgeBaseId\" : String,\n      \"Name\" : String,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"VectorIngestionConfiguration\" : VectorIngestionConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Bedrock::DataSource\nProperties:\n  DataSourceConfiguration: \n    DataSourceConfiguration\n  Description: String\n  KnowledgeBaseId: String\n  Name: String\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  VectorIngestionConfiguration: \n    VectorIngestionConfiguration\n","awsServiceName":"Bedrock","awsServiceCategory":"other"},{"awsResourceType":"AWS::Bedrock::Guardrail","awsResourceTypeName":"bedrock-guardrail","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Bedrock::Guardrail\",\n  \"Properties\" : {\n      \"BlockedInputMessaging\" : String,\n      \"BlockedOutputsMessaging\" : String,\n      \"ContentPolicyConfig\" : ContentPolicyConfig,\n      \"Description\" : String,\n      \"KmsKeyArn\" : String,\n      \"Name\" : String,\n      \"SensitiveInformationPolicyConfig\" : SensitiveInformationPolicyConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"TopicPolicyConfig\" : TopicPolicyConfig,\n      \"WordPolicyConfig\" : WordPolicyConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Bedrock::Guardrail\nProperties:\n  BlockedInputMessaging: String\n  BlockedOutputsMessaging: String\n  ContentPolicyConfig: \n    ContentPolicyConfig\n  Description: String\n  KmsKeyArn: String\n  Name: String\n  SensitiveInformationPolicyConfig: \n    SensitiveInformationPolicyConfig\n  Tags: \n    - Tag\n  TopicPolicyConfig: \n    TopicPolicyConfig\n  WordPolicyConfig: \n    WordPolicyConfig\n","awsServiceName":"Bedrock","awsServiceCategory":"other"},{"awsResourceType":"AWS::Bedrock::KnowledgeBase","awsResourceTypeName":"bedrock-knowledgebase","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Bedrock::KnowledgeBase\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"KnowledgeBaseConfiguration\" : KnowledgeBaseConfiguration,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"StorageConfiguration\" : StorageConfiguration,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Bedrock::KnowledgeBase\nProperties:\n  Description: String\n  KnowledgeBaseConfiguration: \n    KnowledgeBaseConfiguration\n  Name: String\n  RoleArn: String\n  StorageConfiguration: \n    StorageConfiguration\n  Tags: \n    Key: Value\n","awsServiceName":"Bedrock","awsServiceCategory":"other"},{"awsResourceType":"AWS::BillingConductor::BillingGroup","awsResourceTypeName":"billingconductor-billinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::BillingConductor::BillingGroup\",\n  \"Properties\" : {\n      \"AccountGrouping\" : AccountGrouping,\n      \"ComputationPreference\" : ComputationPreference,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"PrimaryAccountId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::BillingConductor::BillingGroup\nProperties:\n  AccountGrouping: \n    AccountGrouping\n  ComputationPreference: \n    ComputationPreference\n  Description: String\n  Name: String\n  PrimaryAccountId: String\n  Tags: \n    - Tag\n","awsServiceName":"BillingConductor","awsServiceCategory":"financial"},{"awsResourceType":"AWS::BillingConductor::CustomLineItem","awsResourceTypeName":"billingconductor-customlineitem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::BillingConductor::CustomLineItem\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"BillingGroupArn\" : String,\n      \"BillingPeriodRange\" : BillingPeriodRange,\n      \"CustomLineItemChargeDetails\" : CustomLineItemChargeDetails,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::BillingConductor::CustomLineItem\nProperties:\n  AccountId: String\n  BillingGroupArn: String\n  BillingPeriodRange: \n    BillingPeriodRange\n  CustomLineItemChargeDetails: \n    CustomLineItemChargeDetails\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"BillingConductor","awsServiceCategory":"financial"},{"awsResourceType":"AWS::BillingConductor::PricingPlan","awsResourceTypeName":"billingconductor-pricingplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::BillingConductor::PricingPlan\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"PricingRuleArns\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::BillingConductor::PricingPlan\nProperties:\n  Description: String\n  Name: String\n  PricingRuleArns: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"BillingConductor","awsServiceCategory":"financial"},{"awsResourceType":"AWS::BillingConductor::PricingRule","awsResourceTypeName":"billingconductor-pricingrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::BillingConductor::PricingRule\",\n  \"Properties\" : {\n      \"BillingEntity\" : String,\n      \"Description\" : String,\n      \"ModifierPercentage\" : Number,\n      \"Name\" : String,\n      \"Operation\" : String,\n      \"Scope\" : String,\n      \"Service\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Tiering\" : Tiering,\n      \"Type\" : String,\n      \"UsageType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::BillingConductor::PricingRule\nProperties:\n  BillingEntity: String\n  Description: String\n  ModifierPercentage: Number\n  Name: String\n  Operation: String\n  Scope: String\n  Service: String\n  Tags: \n    - Tag\n  Tiering: \n    Tiering\n  Type: String\n  UsageType: String\n","awsServiceName":"BillingConductor","awsServiceCategory":"financial"},{"awsResourceType":"AWS::Budgets::Budget","awsResourceTypeName":"budgets-budget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Budgets::Budget\",\n  \"Properties\" : {\n      \"Budget\" : BudgetData,\n      \"NotificationsWithSubscribers\" : [ NotificationWithSubscribers, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Budgets::Budget\nProperties:\n  Budget: \n    BudgetData\n  NotificationsWithSubscribers: \n    - NotificationWithSubscribers\n","awsServiceName":"Budgets","awsServiceCategory":"financial"},{"awsResourceType":"AWS::Budgets::BudgetsAction","awsResourceTypeName":"budgets-budgetsaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Budgets::BudgetsAction\",\n  \"Properties\" : {\n      \"ActionThreshold\" : ActionThreshold,\n      \"ActionType\" : String,\n      \"ApprovalModel\" : String,\n      \"BudgetName\" : String,\n      \"Definition\" : Definition,\n      \"ExecutionRoleArn\" : String,\n      \"NotificationType\" : String,\n      \"Subscribers\" : [ Subscriber, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Budgets::BudgetsAction\nProperties:\n  ActionThreshold: \n    ActionThreshold\n  ActionType: String\n  ApprovalModel: String\n  BudgetName: String\n  Definition: \n    Definition\n  ExecutionRoleArn: String\n  NotificationType: String\n  Subscribers: \n    - Subscriber\n","awsServiceName":"Budgets","awsServiceCategory":"financial"},{"awsResourceType":"AWS::CertificateManager::Account","awsResourceTypeName":"certificatemanager-account","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CertificateManager::Account\",\n  \"Properties\" : {\n      \"ExpiryEventsConfiguration\" : ExpiryEventsConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CertificateManager::Account\nProperties:\n  ExpiryEventsConfiguration: \n    ExpiryEventsConfiguration\n","awsServiceName":"CertificateManager","awsServiceCategory":"security"},{"awsResourceType":"AWS::CertificateManager::Certificate","awsResourceTypeName":"certificatemanager-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CertificateManager::Certificate\",\n  \"Properties\" : {\n      \"CertificateAuthorityArn\" : String,\n      \"CertificateTransparencyLoggingPreference\" : String,\n      \"DomainName\" : String,\n      \"DomainValidationOptions\" : [ DomainValidationOption, ... ],\n      \"KeyAlgorithm\" : String,\n      \"SubjectAlternativeNames\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"ValidationMethod\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CertificateManager::Certificate\nProperties:\n  CertificateAuthorityArn: String\n  CertificateTransparencyLoggingPreference: String\n  DomainName: String\n  DomainValidationOptions: \n    - DomainValidationOption\n  KeyAlgorithm: String\n  SubjectAlternativeNames: \n    - String\n  Tags: \n    - Tag\n  ValidationMethod: String\n","awsServiceName":"CertificateManager","awsServiceCategory":"security"},{"awsResourceType":"AWS::Chatbot::MicrosoftTeamsChannelConfiguration","awsResourceTypeName":"chatbot-microsoftteamschannelconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Chatbot::MicrosoftTeamsChannelConfiguration\",\n  \"Properties\" : {\n      \"ConfigurationName\" : String,\n      \"GuardrailPolicies\" : [ String, ... ],\n      \"IamRoleArn\" : String,\n      \"LoggingLevel\" : String,\n      \"SnsTopicArns\" : [ String, ... ],\n      \"TeamId\" : String,\n      \"TeamsChannelId\" : String,\n      \"TeamsTenantId\" : String,\n      \"UserRoleRequired\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Chatbot::MicrosoftTeamsChannelConfiguration\nProperties:\n  ConfigurationName: String\n  GuardrailPolicies: \n    - String\n  IamRoleArn: String\n  LoggingLevel: String\n  SnsTopicArns: \n    - String\n  TeamId: String\n  TeamsChannelId: String\n  TeamsTenantId: String\n  UserRoleRequired: Boolean\n","awsServiceName":"Chatbot","awsServiceCategory":"other"},{"awsResourceType":"AWS::Chatbot::SlackChannelConfiguration","awsResourceTypeName":"chatbot-slackchannelconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Chatbot::SlackChannelConfiguration\",\n  \"Properties\" : {\n      \"ConfigurationName\" : String,\n      \"GuardrailPolicies\" : [ String, ... ],\n      \"IamRoleArn\" : String,\n      \"LoggingLevel\" : String,\n      \"SlackChannelId\" : String,\n      \"SlackWorkspaceId\" : String,\n      \"SnsTopicArns\" : [ String, ... ],\n      \"UserRoleRequired\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Chatbot::SlackChannelConfiguration\nProperties:\n  ConfigurationName: String\n  GuardrailPolicies: \n    - String\n  IamRoleArn: String\n  LoggingLevel: String\n  SlackChannelId: String\n  SlackWorkspaceId: String\n  SnsTopicArns: \n    - String\n  UserRoleRequired: Boolean\n","awsServiceName":"Chatbot","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRooms::AnalysisTemplate","awsResourceTypeName":"cleanrooms-analysistemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRooms::AnalysisTemplate\",\n  \"Properties\" : {\n      \"AnalysisParameters\" : [ AnalysisParameter, ... ],\n      \"Description\" : String,\n      \"Format\" : String,\n      \"MembershipIdentifier\" : String,\n      \"Name\" : String,\n      \"Source\" : AnalysisSource,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRooms::AnalysisTemplate\nProperties:\n  AnalysisParameters: \n    - AnalysisParameter\n  Description: String\n  Format: String\n  MembershipIdentifier: String\n  Name: String\n  Source: \n    AnalysisSource\n  Tags: \n    - Tag\n","awsServiceName":"CleanRooms","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRooms::Collaboration","awsResourceTypeName":"cleanrooms-collaboration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRooms::Collaboration\",\n  \"Properties\" : {\n      \"CreatorDisplayName\" : String,\n      \"CreatorMemberAbilities\" : [ String, ... ],\n      \"CreatorPaymentConfiguration\" : PaymentConfiguration,\n      \"DataEncryptionMetadata\" : DataEncryptionMetadata,\n      \"Description\" : String,\n      \"Members\" : [ MemberSpecification, ... ],\n      \"Name\" : String,\n      \"QueryLogStatus\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRooms::Collaboration\nProperties:\n  CreatorDisplayName: String\n  CreatorMemberAbilities: \n    - String\n  CreatorPaymentConfiguration: \n    PaymentConfiguration\n  DataEncryptionMetadata: \n    DataEncryptionMetadata\n  Description: String\n  Members: \n    - MemberSpecification\n  Name: String\n  QueryLogStatus: String\n  Tags: \n    - Tag\n","awsServiceName":"CleanRooms","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRooms::ConfiguredTable","awsResourceTypeName":"cleanrooms-configuredtable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRooms::ConfiguredTable\",\n  \"Properties\" : {\n      \"AllowedColumns\" : [ String, ... ],\n      \"AnalysisMethod\" : String,\n      \"AnalysisRules\" : [ AnalysisRule, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"TableReference\" : TableReference,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRooms::ConfiguredTable\nProperties:\n  AllowedColumns: \n    - String\n  AnalysisMethod: String\n  AnalysisRules: \n    - AnalysisRule\n  Description: String\n  Name: String\n  TableReference: \n    TableReference\n  Tags: \n    - Tag\n","awsServiceName":"CleanRooms","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRooms::ConfiguredTableAssociation","awsResourceTypeName":"cleanrooms-configuredtableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRooms::ConfiguredTableAssociation\",\n  \"Properties\" : {\n      \"ConfiguredTableIdentifier\" : String,\n      \"Description\" : String,\n      \"MembershipIdentifier\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRooms::ConfiguredTableAssociation\nProperties:\n  ConfiguredTableIdentifier: String\n  Description: String\n  MembershipIdentifier: String\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"CleanRooms","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRooms::Membership","awsResourceTypeName":"cleanrooms-membership","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRooms::Membership\",\n  \"Properties\" : {\n      \"CollaborationIdentifier\" : String,\n      \"DefaultResultConfiguration\" : MembershipProtectedQueryResultConfiguration,\n      \"PaymentConfiguration\" : MembershipPaymentConfiguration,\n      \"QueryLogStatus\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRooms::Membership\nProperties:\n  CollaborationIdentifier: String\n  DefaultResultConfiguration: \n    MembershipProtectedQueryResultConfiguration\n  PaymentConfiguration: \n    MembershipPaymentConfiguration\n  QueryLogStatus: String\n  Tags: \n    - Tag\n","awsServiceName":"CleanRooms","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRooms::PrivacyBudgetTemplate","awsResourceTypeName":"cleanrooms-privacybudgettemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRooms::PrivacyBudgetTemplate\",\n  \"Properties\" : {\n      \"AutoRefresh\" : String,\n      \"MembershipIdentifier\" : String,\n      \"Parameters\" : Parameters,\n      \"PrivacyBudgetType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRooms::PrivacyBudgetTemplate\nProperties:\n  AutoRefresh: String\n  MembershipIdentifier: String\n  Parameters: \n    Parameters\n  PrivacyBudgetType: String\n  Tags: \n    - Tag\n","awsServiceName":"CleanRooms","awsServiceCategory":"other"},{"awsResourceType":"AWS::CleanRoomsML::TrainingDataset","awsResourceTypeName":"cleanroomsml-trainingdataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CleanRoomsML::TrainingDataset\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrainingData\" : [ Dataset, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CleanRoomsML::TrainingDataset\nProperties:\n  Description: String\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n  TrainingData: \n    - Dataset\n","awsServiceName":"CleanRoomsML","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cloud9::EnvironmentEC2","awsResourceTypeName":"cloud9-environmentec2","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cloud9::EnvironmentEC2\",\n  \"Properties\" : {\n      \"AutomaticStopTimeMinutes\" : Integer,\n      \"ConnectionType\" : String,\n      \"Description\" : String,\n      \"ImageId\" : String,\n      \"InstanceType\" : String,\n      \"Name\" : String,\n      \"OwnerArn\" : String,\n      \"Repositories\" : [ Repository, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cloud9::EnvironmentEC2\nProperties:\n  AutomaticStopTimeMinutes: Integer\n  ConnectionType: String\n  Description: String\n  ImageId: String\n  InstanceType: String\n  Name: String\n  OwnerArn: String\n  Repositories: \n    - Repository\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"Cloud9","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::CustomResource","awsResourceTypeName":"cloudformation-customresource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::CustomResource\",\n  \"Properties\" : {\n      \"ServiceToken\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::CustomResource\nProperties:\n  ServiceToken: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::HookDefaultVersion","awsResourceTypeName":"cloudformation-hookdefaultversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::HookDefaultVersion\",\n  \"Properties\" : {\n      \"TypeName\" : String,\n      \"TypeVersionArn\" : String,\n      \"VersionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::HookDefaultVersion\nProperties:\n  TypeName: String\n  TypeVersionArn: String\n  VersionId: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::HookTypeConfig","awsResourceTypeName":"cloudformation-hooktypeconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::HookTypeConfig\",\n  \"Properties\" : {\n      \"Configuration\" : String,\n      \"ConfigurationAlias\" : String,\n      \"TypeArn\" : String,\n      \"TypeName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::HookTypeConfig\nProperties:\n  Configuration: String\n  ConfigurationAlias: String\n  TypeArn: String\n  TypeName: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::HookVersion","awsResourceTypeName":"cloudformation-hookversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::HookVersion\",\n  \"Properties\" : {\n      \"ExecutionRoleArn\" : String,\n      \"LoggingConfig\" : LoggingConfig,\n      \"SchemaHandlerPackage\" : String,\n      \"TypeName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::HookVersion\nProperties:\n  ExecutionRoleArn: String\n  LoggingConfig: \n    LoggingConfig\n  SchemaHandlerPackage: String\n  TypeName: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::Macro","awsResourceTypeName":"cloudformation-macro","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::Macro\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FunctionName\" : String,\n      \"LogGroupName\" : String,\n      \"LogRoleARN\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::Macro\nProperties:\n  Description: String\n  FunctionName: String\n  LogGroupName: String\n  LogRoleARN: String\n  Name: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::ModuleDefaultVersion","awsResourceTypeName":"cloudformation-moduledefaultversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::ModuleDefaultVersion\",\n  \"Properties\" : {\n      \"Arn\" : String,\n      \"ModuleName\" : String,\n      \"VersionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::ModuleDefaultVersion\nProperties:\n  Arn: String\n  ModuleName: String\n  VersionId: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::ModuleVersion","awsResourceTypeName":"cloudformation-moduleversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::ModuleVersion\",\n  \"Properties\" : {\n      \"ModuleName\" : String,\n      \"ModulePackage\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::ModuleVersion\nProperties:\n  ModuleName: String\n  ModulePackage: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::PublicTypeVersion","awsResourceTypeName":"cloudformation-publictypeversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::PublicTypeVersion\",\n  \"Properties\" : {\n      \"Arn\" : String,\n      \"LogDeliveryBucket\" : String,\n      \"PublicVersionNumber\" : String,\n      \"Type\" : String,\n      \"TypeName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::PublicTypeVersion\nProperties:\n  Arn: String\n  LogDeliveryBucket: String\n  PublicVersionNumber: String\n  Type: String\n  TypeName: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::Publisher","awsResourceTypeName":"cloudformation-publisher","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::Publisher\",\n  \"Properties\" : {\n      \"AcceptTermsAndConditions\" : Boolean,\n      \"ConnectionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::Publisher\nProperties:\n  AcceptTermsAndConditions: Boolean\n  ConnectionArn: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::ResourceDefaultVersion","awsResourceTypeName":"cloudformation-resourcedefaultversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::ResourceDefaultVersion\",\n  \"Properties\" : {\n      \"TypeName\" : String,\n      \"TypeVersionArn\" : String,\n      \"VersionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::ResourceDefaultVersion\nProperties:\n  TypeName: String\n  TypeVersionArn: String\n  VersionId: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::ResourceVersion","awsResourceTypeName":"cloudformation-resourceversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::ResourceVersion\",\n  \"Properties\" : {\n      \"ExecutionRoleArn\" : String,\n      \"LoggingConfig\" : LoggingConfig,\n      \"SchemaHandlerPackage\" : String,\n      \"TypeName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::ResourceVersion\nProperties:\n  ExecutionRoleArn: String\n  LoggingConfig: \n    LoggingConfig\n  SchemaHandlerPackage: String\n  TypeName: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::Stack","awsResourceTypeName":"cloudformation-stack","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::Stack\",\n  \"Properties\" : {\n      \"Capabilities\" : [ String, ... ],\n      \"ChangeSetId\" : String,\n      \"CreationTime\" : String,\n      \"Description\" : String,\n      \"DisableRollback\" : Boolean,\n      \"EnableTerminationProtection\" : Boolean,\n      \"LastUpdateTime\" : String,\n      \"NotificationARNs\" : [ String, ... ],\n      \"Outputs\" : [ Output, ... ],\n      \"Parameters\" : {Key: Value, ...},\n      \"ParentId\" : String,\n      \"RoleARN\" : String,\n      \"RootId\" : String,\n      \"StackId\" : String,\n      \"StackName\" : String,\n      \"StackPolicyBody\" : Json,\n      \"StackPolicyURL\" : String,\n      \"StackStatus\" : String,\n      \"StackStatusReason\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateBody\" : Json,\n      \"TemplateURL\" : String,\n      \"TimeoutInMinutes\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::Stack\nProperties:\n  Capabilities: \n    - String\n  ChangeSetId: String\n  CreationTime: String\n  Description: String\n  DisableRollback: Boolean\n  EnableTerminationProtection: Boolean\n  LastUpdateTime: String\n  NotificationARNs: \n    - String\n  Outputs: \n    - Output\n  Parameters: \n    Key: Value\n  ParentId: String\n  RoleARN: String\n  RootId: String\n  StackId: String\n  StackName: String\n  StackPolicyBody: Json\n  StackPolicyURL: String\n  StackStatus: String\n  StackStatusReason: String\n  Tags: \n    - Tag\n  TemplateBody: Json\n  TemplateURL: String\n  TimeoutInMinutes: Integer\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::StackSet","awsResourceTypeName":"cloudformation-stackset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::StackSet\",\n  \"Properties\" : {\n      \"AdministrationRoleARN\" : String,\n      \"AutoDeployment\" : AutoDeployment,\n      \"CallAs\" : String,\n      \"Capabilities\" : [ String, ... ],\n      \"Description\" : String,\n      \"ExecutionRoleName\" : String,\n      \"ManagedExecution\" : ManagedExecution,\n      \"OperationPreferences\" : OperationPreferences,\n      \"Parameters\" : [ Parameter, ... ],\n      \"PermissionModel\" : String,\n      \"StackInstancesGroup\" : [ StackInstances, ... ],\n      \"StackSetName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateBody\" : String,\n      \"TemplateURL\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::StackSet\nProperties:\n  AdministrationRoleARN: String\n  AutoDeployment: \n    AutoDeployment\n  CallAs: String\n  Capabilities: \n    - String\n  Description: String\n  ExecutionRoleName: String\n  ManagedExecution: \n    ManagedExecution\n  OperationPreferences: \n    OperationPreferences\n  Parameters: \n    - Parameter\n  PermissionModel: String\n  StackInstancesGroup: \n    - StackInstances\n  StackSetName: String\n  Tags: \n    - Tag\n  TemplateBody: String\n  TemplateURL: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::TypeActivation","awsResourceTypeName":"cloudformation-typeactivation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::TypeActivation\",\n  \"Properties\" : {\n      \"AutoUpdate\" : Boolean,\n      \"ExecutionRoleArn\" : String,\n      \"LoggingConfig\" : LoggingConfig,\n      \"MajorVersion\" : String,\n      \"PublicTypeArn\" : String,\n      \"PublisherId\" : String,\n      \"Type\" : String,\n      \"TypeName\" : String,\n      \"TypeNameAlias\" : String,\n      \"VersionBump\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::TypeActivation\nProperties:\n  AutoUpdate: Boolean\n  ExecutionRoleArn: String\n  LoggingConfig: \n    LoggingConfig\n  MajorVersion: String\n  PublicTypeArn: String\n  PublisherId: String\n  Type: String\n  TypeName: String\n  TypeNameAlias: String\n  VersionBump: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::WaitCondition","awsResourceTypeName":"cloudformation-waitcondition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::WaitCondition\",\n  \"Properties\" : {\n      \"Count\" : Integer,\n      \"Handle\" : String,\n      \"Timeout\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::WaitCondition\nProperties:\n  Count: Integer\n  Handle: String\n  Timeout: String\n","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFormation::WaitConditionHandle","awsResourceTypeName":"cloudformation-waitconditionhandle","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFormation::WaitConditionHandle\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFormation::WaitConditionHandle","awsServiceName":"CloudFormation","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CloudFront::CachePolicy","awsResourceTypeName":"cloudfront-cachepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::CachePolicy\",\n  \"Properties\" : {\n      \"CachePolicyConfig\" : CachePolicyConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::CachePolicy\nProperties:\n  CachePolicyConfig: \n    CachePolicyConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::CloudFrontOriginAccessIdentity","awsResourceTypeName":"cloudfront-cloudfrontoriginaccessidentity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::CloudFrontOriginAccessIdentity\",\n  \"Properties\" : {\n      \"CloudFrontOriginAccessIdentityConfig\" : CloudFrontOriginAccessIdentityConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::CloudFrontOriginAccessIdentity\nProperties:\n  CloudFrontOriginAccessIdentityConfig: \n    CloudFrontOriginAccessIdentityConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::ContinuousDeploymentPolicy","awsResourceTypeName":"cloudfront-continuousdeploymentpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::ContinuousDeploymentPolicy\",\n  \"Properties\" : {\n      \"ContinuousDeploymentPolicyConfig\" : ContinuousDeploymentPolicyConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::ContinuousDeploymentPolicy\nProperties:\n  ContinuousDeploymentPolicyConfig: \n    ContinuousDeploymentPolicyConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::Distribution","awsResourceTypeName":"cloudfront-distribution","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::Distribution\",\n  \"Properties\" : {\n      \"DistributionConfig\" : DistributionConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::Distribution\nProperties:\n  DistributionConfig: \n    DistributionConfig\n  Tags: \n    - Tag\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::Function","awsResourceTypeName":"cloudfront-function","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::Function\",\n  \"Properties\" : {\n      \"AutoPublish\" : Boolean,\n      \"FunctionCode\" : String,\n      \"FunctionConfig\" : FunctionConfig,\n      \"FunctionMetadata\" : FunctionMetadata,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::Function\nProperties:\n  AutoPublish: Boolean\n  FunctionCode: String\n  FunctionConfig: \n    FunctionConfig\n  FunctionMetadata: \n    FunctionMetadata\n  Name: String\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::KeyGroup","awsResourceTypeName":"cloudfront-keygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::KeyGroup\",\n  \"Properties\" : {\n      \"KeyGroupConfig\" : KeyGroupConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::KeyGroup\nProperties:\n  KeyGroupConfig: \n    KeyGroupConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::KeyValueStore","awsResourceTypeName":"cloudfront-keyvaluestore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::KeyValueStore\",\n  \"Properties\" : {\n      \"Comment\" : String,\n      \"ImportSource\" : ImportSource,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::KeyValueStore\nProperties:\n  Comment: String\n  ImportSource: \n    ImportSource\n  Name: String\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::MonitoringSubscription","awsResourceTypeName":"cloudfront-monitoringsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::MonitoringSubscription\",\n  \"Properties\" : {\n      \"DistributionId\" : String,\n      \"MonitoringSubscription\" : MonitoringSubscription\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::MonitoringSubscription\nProperties:\n  DistributionId: String\n  MonitoringSubscription: \n    MonitoringSubscription\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::OriginAccessControl","awsResourceTypeName":"cloudfront-originaccesscontrol","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::OriginAccessControl\",\n  \"Properties\" : {\n      \"OriginAccessControlConfig\" : OriginAccessControlConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::OriginAccessControl\nProperties:\n  OriginAccessControlConfig: \n    OriginAccessControlConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::OriginRequestPolicy","awsResourceTypeName":"cloudfront-originrequestpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::OriginRequestPolicy\",\n  \"Properties\" : {\n      \"OriginRequestPolicyConfig\" : OriginRequestPolicyConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::OriginRequestPolicy\nProperties:\n  OriginRequestPolicyConfig: \n    OriginRequestPolicyConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::PublicKey","awsResourceTypeName":"cloudfront-publickey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::PublicKey\",\n  \"Properties\" : {\n      \"PublicKeyConfig\" : PublicKeyConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::PublicKey\nProperties:\n  PublicKeyConfig: \n    PublicKeyConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::RealtimeLogConfig","awsResourceTypeName":"cloudfront-realtimelogconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::RealtimeLogConfig\",\n  \"Properties\" : {\n      \"EndPoints\" : [ EndPoint, ... ],\n      \"Fields\" : [ String, ... ],\n      \"Name\" : String,\n      \"SamplingRate\" : Number\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::RealtimeLogConfig\nProperties:\n  EndPoints: \n    - EndPoint\n  Fields: \n    - String\n  Name: String\n  SamplingRate: Number\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::ResponseHeadersPolicy","awsResourceTypeName":"cloudfront-responseheaderspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::ResponseHeadersPolicy\",\n  \"Properties\" : {\n      \"ResponseHeadersPolicyConfig\" : ResponseHeadersPolicyConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::ResponseHeadersPolicy\nProperties:\n  ResponseHeadersPolicyConfig: \n    ResponseHeadersPolicyConfig\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::CloudFront::StreamingDistribution","awsResourceTypeName":"cloudfront-streamingdistribution","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudFront::StreamingDistribution\",\n  \"Properties\" : {\n      \"StreamingDistributionConfig\" : StreamingDistributionConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudFront::StreamingDistribution\nProperties:\n  StreamingDistributionConfig: \n    StreamingDistributionConfig\n  Tags: \n    - Tag\n","awsServiceName":"CloudFront","awsServiceCategory":"networking"},{"awsResourceType":"AWS::ServiceDiscovery::HttpNamespace","awsResourceTypeName":"servicediscovery-httpnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceDiscovery::HttpNamespace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceDiscovery::HttpNamespace\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"ServiceDiscovery","awsServiceCategory":"other"},{"awsResourceType":"AWS::ServiceDiscovery::Instance","awsResourceTypeName":"servicediscovery-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceDiscovery::Instance\",\n  \"Properties\" : {\n      \"InstanceAttributes\" : Json,\n      \"ServiceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceDiscovery::Instance\nProperties:\n  InstanceAttributes: Json\n  ServiceId: String\n","awsServiceName":"ServiceDiscovery","awsServiceCategory":"other"},{"awsResourceType":"AWS::ServiceDiscovery::PrivateDnsNamespace","awsResourceTypeName":"servicediscovery-privatednsnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceDiscovery::PrivateDnsNamespace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Properties\" : Properties,\n      \"Tags\" : [ Tag, ... ],\n      \"Vpc\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceDiscovery::PrivateDnsNamespace\nProperties:\n  Description: String\n  Name: String\n  Properties: \n    Properties\n  Tags: \n    - Tag\n  Vpc: String\n","awsServiceName":"ServiceDiscovery","awsServiceCategory":"other"},{"awsResourceType":"AWS::ServiceDiscovery::PublicDnsNamespace","awsResourceTypeName":"servicediscovery-publicdnsnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceDiscovery::PublicDnsNamespace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Properties\" : Properties,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceDiscovery::PublicDnsNamespace\nProperties:\n  Description: String\n  Name: String\n  Properties: \n    Properties\n  Tags: \n    - Tag\n","awsServiceName":"ServiceDiscovery","awsServiceCategory":"other"},{"awsResourceType":"AWS::ServiceDiscovery::Service","awsResourceTypeName":"servicediscovery-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceDiscovery::Service\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DnsConfig\" : DnsConfig,\n      \"HealthCheckConfig\" : HealthCheckConfig,\n      \"HealthCheckCustomConfig\" : HealthCheckCustomConfig,\n      \"Name\" : String,\n      \"NamespaceId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceDiscovery::Service\nProperties:\n  Description: String\n  DnsConfig: \n    DnsConfig\n  HealthCheckConfig: \n    HealthCheckConfig\n  HealthCheckCustomConfig: \n    HealthCheckCustomConfig\n  Name: String\n  NamespaceId: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"ServiceDiscovery","awsServiceCategory":"other"},{"awsResourceType":"AWS::CloudTrail::Channel","awsResourceTypeName":"cloudtrail-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudTrail::Channel\",\n  \"Properties\" : {\n      \"Destinations\" : [ Destination, ... ],\n      \"Name\" : String,\n      \"Source\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudTrail::Channel\nProperties:\n  Destinations: \n    - Destination\n  Name: String\n  Source: String\n  Tags: \n    - Tag\n","awsServiceName":"CloudTrail","awsServiceCategory":"management"},{"awsResourceType":"AWS::CloudTrail::EventDataStore","awsResourceTypeName":"cloudtrail-eventdatastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudTrail::EventDataStore\",\n  \"Properties\" : {\n      \"AdvancedEventSelectors\" : [ AdvancedEventSelector, ... ],\n      \"BillingMode\" : String,\n      \"FederationEnabled\" : Boolean,\n      \"FederationRoleArn\" : String,\n      \"IngestionEnabled\" : Boolean,\n      \"InsightsDestination\" : String,\n      \"InsightSelectors\" : [ InsightSelector, ... ],\n      \"KmsKeyId\" : String,\n      \"MultiRegionEnabled\" : Boolean,\n      \"Name\" : String,\n      \"OrganizationEnabled\" : Boolean,\n      \"RetentionPeriod\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TerminationProtectionEnabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudTrail::EventDataStore\nProperties:\n  AdvancedEventSelectors: \n    - AdvancedEventSelector\n  BillingMode: String\n  FederationEnabled: Boolean\n  FederationRoleArn: String\n  IngestionEnabled: Boolean\n  InsightsDestination: String\n  InsightSelectors: \n    - InsightSelector\n  KmsKeyId: String\n  MultiRegionEnabled: Boolean\n  Name: String\n  OrganizationEnabled: Boolean\n  RetentionPeriod: Integer\n  Tags: \n    - Tag\n  TerminationProtectionEnabled: Boolean\n","awsServiceName":"CloudTrail","awsServiceCategory":"management"},{"awsResourceType":"AWS::CloudTrail::ResourcePolicy","awsResourceTypeName":"cloudtrail-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudTrail::ResourcePolicy\",\n  \"Properties\" : {\n      \"ResourceArn\" : String,\n      \"ResourcePolicy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudTrail::ResourcePolicy\nProperties:\n  ResourceArn: String\n  ResourcePolicy: Json\n","awsServiceName":"CloudTrail","awsServiceCategory":"management"},{"awsResourceType":"AWS::CloudTrail::Trail","awsResourceTypeName":"cloudtrail-trail","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudTrail::Trail\",\n  \"Properties\" : {\n      \"AdvancedEventSelectors\" : [ AdvancedEventSelector, ... ],\n      \"CloudWatchLogsLogGroupArn\" : String,\n      \"CloudWatchLogsRoleArn\" : String,\n      \"EnableLogFileValidation\" : Boolean,\n      \"EventSelectors\" : [ EventSelector, ... ],\n      \"IncludeGlobalServiceEvents\" : Boolean,\n      \"InsightSelectors\" : [ InsightSelector, ... ],\n      \"IsLogging\" : Boolean,\n      \"IsMultiRegionTrail\" : Boolean,\n      \"IsOrganizationTrail\" : Boolean,\n      \"KMSKeyId\" : String,\n      \"S3BucketName\" : String,\n      \"S3KeyPrefix\" : String,\n      \"SnsTopicName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrailName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudTrail::Trail\nProperties:\n  AdvancedEventSelectors: \n    - AdvancedEventSelector\n  CloudWatchLogsLogGroupArn: String\n  CloudWatchLogsRoleArn: String\n  EnableLogFileValidation: Boolean\n  EventSelectors: \n    - EventSelector\n  IncludeGlobalServiceEvents: Boolean\n  InsightSelectors: \n    - InsightSelector\n  IsLogging: Boolean\n  IsMultiRegionTrail: Boolean\n  IsOrganizationTrail: Boolean\n  KMSKeyId: String\n  S3BucketName: String\n  S3KeyPrefix: String\n  SnsTopicName: String\n  Tags: \n    - Tag\n  TrailName: String\n","awsServiceName":"CloudTrail","awsServiceCategory":"management"},{"awsResourceType":"AWS::CloudWatch::Alarm","awsResourceTypeName":"cloudwatch-alarm","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudWatch::Alarm\",\n  \"Properties\" : {\n      \"ActionsEnabled\" : Boolean,\n      \"AlarmActions\" : [ String, ... ],\n      \"AlarmDescription\" : String,\n      \"AlarmName\" : String,\n      \"ComparisonOperator\" : String,\n      \"DatapointsToAlarm\" : Integer,\n      \"Dimensions\" : [ Dimension, ... ],\n      \"EvaluateLowSampleCountPercentile\" : String,\n      \"EvaluationPeriods\" : Integer,\n      \"ExtendedStatistic\" : String,\n      \"InsufficientDataActions\" : [ String, ... ],\n      \"MetricName\" : String,\n      \"Metrics\" : [ MetricDataQuery, ... ],\n      \"Namespace\" : String,\n      \"OKActions\" : [ String, ... ],\n      \"Period\" : Integer,\n      \"Statistic\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Threshold\" : Number,\n      \"ThresholdMetricId\" : String,\n      \"TreatMissingData\" : String,\n      \"Unit\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudWatch::Alarm\nProperties:\n  ActionsEnabled: Boolean\n  AlarmActions: \n    - String\n  AlarmDescription: String\n  AlarmName: String\n  ComparisonOperator: String\n  DatapointsToAlarm: Integer\n  Dimensions: \n    - Dimension\n  EvaluateLowSampleCountPercentile: String\n  EvaluationPeriods: Integer\n  ExtendedStatistic: String\n  InsufficientDataActions: \n    - String\n  MetricName: String\n  Metrics: \n    - MetricDataQuery\n  Namespace: String\n  OKActions: \n    - String\n  Period: Integer\n  Statistic: String\n  Tags: \n    - Tag\n  Threshold: Number\n  ThresholdMetricId: String\n  TreatMissingData: String\n  Unit: String\n","awsServiceName":"CloudWatch","awsServiceCategory":"other"},{"awsResourceType":"AWS::CloudWatch::AnomalyDetector","awsResourceTypeName":"cloudwatch-anomalydetector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudWatch::AnomalyDetector\",\n  \"Properties\" : {\n      \"Configuration\" : Configuration,\n      \"Dimensions\" : [ Dimension, ... ],\n      \"MetricCharacteristics\" : MetricCharacteristics,\n      \"MetricMathAnomalyDetector\" : MetricMathAnomalyDetector,\n      \"MetricName\" : String,\n      \"Namespace\" : String,\n      \"SingleMetricAnomalyDetector\" : SingleMetricAnomalyDetector,\n      \"Stat\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudWatch::AnomalyDetector\nProperties:\n  Configuration: \n    Configuration\n  Dimensions: \n    - Dimension\n  MetricCharacteristics: \n    MetricCharacteristics\n  MetricMathAnomalyDetector: \n    MetricMathAnomalyDetector\n  MetricName: String\n  Namespace: String\n  SingleMetricAnomalyDetector: \n    SingleMetricAnomalyDetector\n  Stat: String\n","awsServiceName":"CloudWatch","awsServiceCategory":"other"},{"awsResourceType":"AWS::CloudWatch::CompositeAlarm","awsResourceTypeName":"cloudwatch-compositealarm","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudWatch::CompositeAlarm\",\n  \"Properties\" : {\n      \"ActionsEnabled\" : Boolean,\n      \"ActionsSuppressor\" : String,\n      \"ActionsSuppressorExtensionPeriod\" : Integer,\n      \"ActionsSuppressorWaitPeriod\" : Integer,\n      \"AlarmActions\" : [ String, ... ],\n      \"AlarmDescription\" : String,\n      \"AlarmName\" : String,\n      \"AlarmRule\" : String,\n      \"InsufficientDataActions\" : [ String, ... ],\n      \"OKActions\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudWatch::CompositeAlarm\nProperties:\n  ActionsEnabled: Boolean\n  ActionsSuppressor: String\n  ActionsSuppressorExtensionPeriod: Integer\n  ActionsSuppressorWaitPeriod: Integer\n  AlarmActions: \n    - String\n  AlarmDescription: String\n  AlarmName: String\n  AlarmRule: String\n  InsufficientDataActions: \n    - String\n  OKActions: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"CloudWatch","awsServiceCategory":"other"},{"awsResourceType":"AWS::CloudWatch::Dashboard","awsResourceTypeName":"cloudwatch-dashboard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudWatch::Dashboard\",\n  \"Properties\" : {\n      \"DashboardBody\" : String,\n      \"DashboardName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudWatch::Dashboard\nProperties:\n  DashboardBody: String\n  DashboardName: String\n","awsServiceName":"CloudWatch","awsServiceCategory":"other"},{"awsResourceType":"AWS::CloudWatch::InsightRule","awsResourceTypeName":"cloudwatch-insightrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudWatch::InsightRule\",\n  \"Properties\" : {\n      \"RuleBody\" : String,\n      \"RuleName\" : String,\n      \"RuleState\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudWatch::InsightRule\nProperties:\n  RuleBody: String\n  RuleName: String\n  RuleState: String\n  Tags: \n    - Tag\n","awsServiceName":"CloudWatch","awsServiceCategory":"other"},{"awsResourceType":"AWS::CloudWatch::MetricStream","awsResourceTypeName":"cloudwatch-metricstream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CloudWatch::MetricStream\",\n  \"Properties\" : {\n      \"ExcludeFilters\" : [ MetricStreamFilter, ... ],\n      \"FirehoseArn\" : String,\n      \"IncludeFilters\" : [ MetricStreamFilter, ... ],\n      \"IncludeLinkedAccountsMetrics\" : Boolean,\n      \"Name\" : String,\n      \"OutputFormat\" : String,\n      \"RoleArn\" : String,\n      \"StatisticsConfigurations\" : [ MetricStreamStatisticsConfiguration, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CloudWatch::MetricStream\nProperties:\n  ExcludeFilters: \n    - MetricStreamFilter\n  FirehoseArn: String\n  IncludeFilters: \n    - MetricStreamFilter\n  IncludeLinkedAccountsMetrics: Boolean\n  Name: String\n  OutputFormat: String\n  RoleArn: String\n  StatisticsConfigurations: \n    - MetricStreamStatisticsConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"CloudWatch","awsServiceCategory":"other"},{"awsResourceType":"AWS::ApplicationInsights::Application","awsResourceTypeName":"applicationinsights-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ApplicationInsights::Application\",\n  \"Properties\" : {\n      \"AttachMissingPermission\" : Boolean,\n      \"AutoConfigurationEnabled\" : Boolean,\n      \"ComponentMonitoringSettings\" : [ ComponentMonitoringSetting, ... ],\n      \"CustomComponents\" : [ CustomComponent, ... ],\n      \"CWEMonitorEnabled\" : Boolean,\n      \"GroupingType\" : String,\n      \"LogPatternSets\" : [ LogPatternSet, ... ],\n      \"OpsCenterEnabled\" : Boolean,\n      \"OpsItemSNSTopicArn\" : String,\n      \"ResourceGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ApplicationInsights::Application\nProperties:\n  AttachMissingPermission: Boolean\n  AutoConfigurationEnabled: Boolean\n  ComponentMonitoringSettings: \n    - ComponentMonitoringSetting\n  CustomComponents: \n    - CustomComponent\n  CWEMonitorEnabled: Boolean\n  GroupingType: String\n  LogPatternSets: \n    - LogPatternSet\n  OpsCenterEnabled: Boolean\n  OpsItemSNSTopicArn: String\n  ResourceGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"ApplicationInsights","awsServiceCategory":"other"},{"awsResourceType":"AWS::Evidently::Experiment","awsResourceTypeName":"evidently-experiment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Evidently::Experiment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MetricGoals\" : [ MetricGoalObject, ... ],\n      \"Name\" : String,\n      \"OnlineAbConfig\" : OnlineAbConfigObject,\n      \"Project\" : String,\n      \"RandomizationSalt\" : String,\n      \"RemoveSegment\" : Boolean,\n      \"RunningStatus\" : RunningStatusObject,\n      \"SamplingRate\" : Integer,\n      \"Segment\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Treatments\" : [ TreatmentObject, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Evidently::Experiment\nProperties:\n  Description: String\n  MetricGoals: \n    - MetricGoalObject\n  Name: String\n  OnlineAbConfig: \n    OnlineAbConfigObject\n  Project: String\n  RandomizationSalt: String\n  RemoveSegment: Boolean\n  RunningStatus: \n    RunningStatusObject\n  SamplingRate: Integer\n  Segment: String\n  Tags: \n    - Tag\n  Treatments: \n    - TreatmentObject\n","awsServiceName":"Evidently","awsServiceCategory":"other"},{"awsResourceType":"AWS::Evidently::Feature","awsResourceTypeName":"evidently-feature","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Evidently::Feature\",\n  \"Properties\" : {\n      \"DefaultVariation\" : String,\n      \"Description\" : String,\n      \"EntityOverrides\" : [ EntityOverride, ... ],\n      \"EvaluationStrategy\" : String,\n      \"Name\" : String,\n      \"Project\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Variations\" : [ VariationObject, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Evidently::Feature\nProperties:\n  DefaultVariation: String\n  Description: String\n  EntityOverrides: \n    - EntityOverride\n  EvaluationStrategy: String\n  Name: String\n  Project: String\n  Tags: \n    - Tag\n  Variations: \n    - VariationObject\n","awsServiceName":"Evidently","awsServiceCategory":"other"},{"awsResourceType":"AWS::Evidently::Launch","awsResourceTypeName":"evidently-launch","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Evidently::Launch\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExecutionStatus\" : ExecutionStatusObject,\n      \"Groups\" : [ LaunchGroupObject, ... ],\n      \"MetricMonitors\" : [ MetricDefinitionObject, ... ],\n      \"Name\" : String,\n      \"Project\" : String,\n      \"RandomizationSalt\" : String,\n      \"ScheduledSplitsConfig\" : [ StepConfig, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Evidently::Launch\nProperties:\n  Description: String\n  ExecutionStatus: \n    ExecutionStatusObject\n  Groups: \n    - LaunchGroupObject\n  MetricMonitors: \n    - MetricDefinitionObject\n  Name: String\n  Project: String\n  RandomizationSalt: String\n  ScheduledSplitsConfig: \n    - StepConfig\n  Tags: \n    - Tag\n","awsServiceName":"Evidently","awsServiceCategory":"other"},{"awsResourceType":"AWS::Evidently::Project","awsResourceTypeName":"evidently-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Evidently::Project\",\n  \"Properties\" : {\n      \"AppConfigResource\" : AppConfigResourceObject,\n      \"DataDelivery\" : DataDeliveryObject,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Evidently::Project\nProperties:\n  AppConfigResource: \n    AppConfigResourceObject\n  DataDelivery: \n    DataDeliveryObject\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Evidently","awsServiceCategory":"other"},{"awsResourceType":"AWS::Evidently::Segment","awsResourceTypeName":"evidently-segment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Evidently::Segment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Pattern\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Evidently::Segment\nProperties:\n  Description: String\n  Name: String\n  Pattern: String\n  Tags: \n    - Tag\n","awsServiceName":"Evidently","awsServiceCategory":"other"},{"awsResourceType":"AWS::InternetMonitor::Monitor","awsResourceTypeName":"internetmonitor-monitor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::InternetMonitor::Monitor\",\n  \"Properties\" : {\n      \"HealthEventsConfig\" : HealthEventsConfig,\n      \"IncludeLinkedAccounts\" : Boolean,\n      \"InternetMeasurementsLogDelivery\" : InternetMeasurementsLogDelivery,\n      \"LinkedAccountId\" : String,\n      \"MaxCityNetworksToMonitor\" : Integer,\n      \"MonitorName\" : String,\n      \"Resources\" : [ String, ... ],\n      \"ResourcesToAdd\" : [ String, ... ],\n      \"ResourcesToRemove\" : [ String, ... ],\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrafficPercentageToMonitor\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::InternetMonitor::Monitor\nProperties:\n  HealthEventsConfig: \n    HealthEventsConfig\n  IncludeLinkedAccounts: Boolean\n  InternetMeasurementsLogDelivery: \n    InternetMeasurementsLogDelivery\n  LinkedAccountId: String\n  MaxCityNetworksToMonitor: Integer\n  MonitorName: String\n  Resources: \n    - String\n  ResourcesToAdd: \n    - String\n  ResourcesToRemove: \n    - String\n  Status: String\n  Tags: \n    - Tag\n  TrafficPercentageToMonitor: Integer\n","awsServiceName":"InternetMonitor","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Logs::AccountPolicy","awsResourceTypeName":"logs-accountpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::AccountPolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : String,\n      \"PolicyName\" : String,\n      \"PolicyType\" : String,\n      \"Scope\" : String,\n      \"SelectionCriteria\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::AccountPolicy\nProperties:\n  PolicyDocument: String\n  PolicyName: String\n  PolicyType: String\n  Scope: String\n  SelectionCriteria: String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::Delivery","awsResourceTypeName":"logs-delivery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::Delivery\",\n  \"Properties\" : {\n      \"DeliveryDestinationArn\" : String,\n      \"DeliverySourceName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::Delivery\nProperties:\n  DeliveryDestinationArn: String\n  DeliverySourceName: String\n  Tags: \n    - Tag\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::DeliveryDestination","awsResourceTypeName":"logs-deliverydestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::DeliveryDestination\",\n  \"Properties\" : {\n      \"DeliveryDestinationPolicy\" : Json,\n      \"DestinationResourceArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::DeliveryDestination\nProperties:\n  DeliveryDestinationPolicy: Json\n  DestinationResourceArn: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::DeliverySource","awsResourceTypeName":"logs-deliverysource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::DeliverySource\",\n  \"Properties\" : {\n      \"LogType\" : String,\n      \"Name\" : String,\n      \"ResourceArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::DeliverySource\nProperties:\n  LogType: String\n  Name: String\n  ResourceArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::Destination","awsResourceTypeName":"logs-destination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::Destination\",\n  \"Properties\" : {\n      \"DestinationName\" : String,\n      \"DestinationPolicy\" : String,\n      \"RoleArn\" : String,\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::Destination\nProperties:\n  DestinationName: String\n  DestinationPolicy: String\n  RoleArn: String\n  TargetArn: String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::LogAnomalyDetector","awsResourceTypeName":"logs-loganomalydetector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::LogAnomalyDetector\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"AnomalyVisibilityTime\" : Number,\n      \"DetectorName\" : String,\n      \"EvaluationFrequency\" : String,\n      \"FilterPattern\" : String,\n      \"KmsKeyId\" : String,\n      \"LogGroupArnList\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::LogAnomalyDetector\nProperties:\n  AccountId: String\n  AnomalyVisibilityTime: Number\n  DetectorName: String\n  EvaluationFrequency: String\n  FilterPattern: String\n  KmsKeyId: String\n  LogGroupArnList: \n    - String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::LogGroup","awsResourceTypeName":"logs-loggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::LogGroup\",\n  \"Properties\" : {\n      \"DataProtectionPolicy\" : Json,\n      \"KmsKeyId\" : String,\n      \"LogGroupClass\" : String,\n      \"LogGroupName\" : String,\n      \"RetentionInDays\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::LogGroup\nProperties:\n  DataProtectionPolicy: Json\n  KmsKeyId: String\n  LogGroupClass: String\n  LogGroupName: String\n  RetentionInDays: Integer\n  Tags: \n    - Tag\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::LogStream","awsResourceTypeName":"logs-logstream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::LogStream\",\n  \"Properties\" : {\n      \"LogGroupName\" : String,\n      \"LogStreamName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::LogStream\nProperties:\n  LogGroupName: String\n  LogStreamName: String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::MetricFilter","awsResourceTypeName":"logs-metricfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::MetricFilter\",\n  \"Properties\" : {\n      \"FilterName\" : String,\n      \"FilterPattern\" : String,\n      \"LogGroupName\" : String,\n      \"MetricTransformations\" : [ MetricTransformation, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::MetricFilter\nProperties:\n  FilterName: String\n  FilterPattern: String\n  LogGroupName: String\n  MetricTransformations: \n    - MetricTransformation\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::QueryDefinition","awsResourceTypeName":"logs-querydefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::QueryDefinition\",\n  \"Properties\" : {\n      \"LogGroupNames\" : [ String, ... ],\n      \"Name\" : String,\n      \"QueryString\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::QueryDefinition\nProperties:\n  LogGroupNames: \n    - String\n  Name: String\n  QueryString: \n    String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::ResourcePolicy","awsResourceTypeName":"logs-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::ResourcePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : String,\n      \"PolicyName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::ResourcePolicy\nProperties:\n  PolicyDocument: String\n  PolicyName: String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Logs::SubscriptionFilter","awsResourceTypeName":"logs-subscriptionfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Logs::SubscriptionFilter\",\n  \"Properties\" : {\n      \"DestinationArn\" : String,\n      \"Distribution\" : String,\n      \"FilterName\" : String,\n      \"FilterPattern\" : String,\n      \"LogGroupName\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Logs::SubscriptionFilter\nProperties:\n  DestinationArn: String\n  Distribution: String\n  FilterName: String\n  FilterPattern: String\n  LogGroupName: String\n  RoleArn: String\n","awsServiceName":"Logs","awsServiceCategory":"other"},{"awsResourceType":"AWS::Synthetics::Canary","awsResourceTypeName":"synthetics-canary","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Synthetics::Canary\",\n  \"Properties\" : {\n      \"ArtifactConfig\" : ArtifactConfig,\n      \"ArtifactS3Location\" : String,\n      \"Code\" : Code,\n      \"ExecutionRoleArn\" : String,\n      \"FailureRetentionPeriod\" : Integer,\n      \"Name\" : String,\n      \"RunConfig\" : RunConfig,\n      \"RuntimeVersion\" : String,\n      \"Schedule\" : Schedule,\n      \"StartCanaryAfterCreation\" : Boolean,\n      \"SuccessRetentionPeriod\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"VisualReference\" : VisualReference,\n      \"VPCConfig\" : VPCConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Synthetics::Canary\nProperties:\n  ArtifactConfig: \n    ArtifactConfig\n  ArtifactS3Location: String\n  Code: \n    Code\n  ExecutionRoleArn: String\n  FailureRetentionPeriod: Integer\n  Name: String\n  RunConfig: \n    RunConfig\n  RuntimeVersion: String\n  Schedule: \n    Schedule\n  StartCanaryAfterCreation: Boolean\n  SuccessRetentionPeriod: Integer\n  Tags: \n    - Tag\n  VisualReference: \n    VisualReference\n  VPCConfig: \n    VPCConfig\n","awsServiceName":"Synthetics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Synthetics::Group","awsResourceTypeName":"synthetics-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Synthetics::Group\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ResourceArns\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Synthetics::Group\nProperties:\n  Name: String\n  ResourceArns: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Synthetics","awsServiceCategory":"other"},{"awsResourceType":"AWS::CodeArtifact::Domain","awsResourceTypeName":"codeartifact-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeArtifact::Domain\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"PermissionsPolicyDocument\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeArtifact::Domain\nProperties:\n  DomainName: String\n  PermissionsPolicyDocument: Json\n  Tags: \n    - Tag\n","awsServiceName":"CodeArtifact","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeArtifact::PackageGroup","awsResourceTypeName":"codeartifact-packagegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeArtifact::PackageGroup\",\n  \"Properties\" : {\n      \"ContactInfo\" : String,\n      \"Description\" : String,\n      \"DomainName\" : String,\n      \"DomainOwner\" : String,\n      \"OriginConfiguration\" : OriginConfiguration,\n      \"Pattern\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeArtifact::PackageGroup\nProperties:\n  ContactInfo: String\n  Description: String\n  DomainName: String\n  DomainOwner: String\n  OriginConfiguration: \n    OriginConfiguration\n  Pattern: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeArtifact","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeArtifact::Repository","awsResourceTypeName":"codeartifact-repository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeArtifact::Repository\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainName\" : String,\n      \"ExternalConnections\" : [ String, ... ],\n      \"PermissionsPolicyDocument\" : Json,\n      \"RepositoryName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Upstreams\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeArtifact::Repository\nProperties:\n  Description: String\n  DomainName: String\n  ExternalConnections: \n    - String\n  PermissionsPolicyDocument: Json\n  RepositoryName: String\n  Tags: \n    - Tag\n  Upstreams: \n    - String\n","awsServiceName":"CodeArtifact","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeBuild::Fleet","awsResourceTypeName":"codebuild-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeBuild::Fleet\",\n  \"Properties\" : {\n      \"BaseCapacity\" : Integer,\n      \"ComputeType\" : String,\n      \"EnvironmentType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeBuild::Fleet\nProperties:\n  BaseCapacity: Integer\n  ComputeType: String\n  EnvironmentType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeBuild","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeBuild::Project","awsResourceTypeName":"codebuild-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeBuild::Project\",\n  \"Properties\" : {\n      \"Artifacts\" : Artifacts,\n      \"BadgeEnabled\" : Boolean,\n      \"BuildBatchConfig\" : ProjectBuildBatchConfig,\n      \"Cache\" : ProjectCache,\n      \"ConcurrentBuildLimit\" : Integer,\n      \"Description\" : String,\n      \"EncryptionKey\" : String,\n      \"Environment\" : Environment,\n      \"FileSystemLocations\" : [ ProjectFileSystemLocation, ... ],\n      \"LogsConfig\" : LogsConfig,\n      \"Name\" : String,\n      \"QueuedTimeoutInMinutes\" : Integer,\n      \"ResourceAccessRole\" : String,\n      \"SecondaryArtifacts\" : [ Artifacts, ... ],\n      \"SecondarySources\" : [ Source, ... ],\n      \"SecondarySourceVersions\" : [ ProjectSourceVersion, ... ],\n      \"ServiceRole\" : String,\n      \"Source\" : Source,\n      \"SourceVersion\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeoutInMinutes\" : Integer,\n      \"Triggers\" : ProjectTriggers,\n      \"Visibility\" : String,\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeBuild::Project\nProperties:\n  Artifacts: \n    Artifacts\n  BadgeEnabled: Boolean\n  BuildBatchConfig: \n    ProjectBuildBatchConfig\n  Cache: \n    ProjectCache\n  ConcurrentBuildLimit: Integer\n  Description: String\n  EncryptionKey: String\n  Environment: \n    Environment\n  FileSystemLocations: \n    - ProjectFileSystemLocation\n  LogsConfig: \n    LogsConfig\n  Name: String\n  QueuedTimeoutInMinutes: Integer\n  ResourceAccessRole: String\n  SecondaryArtifacts: \n    - Artifacts\n  SecondarySources: \n    - Source\n  SecondarySourceVersions: \n    - ProjectSourceVersion\n  ServiceRole: String\n  Source: \n    Source\n  SourceVersion: String\n  Tags: \n    - Tag\n  TimeoutInMinutes: Integer\n  Triggers: \n    ProjectTriggers\n  Visibility: String\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"CodeBuild","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeBuild::ReportGroup","awsResourceTypeName":"codebuild-reportgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeBuild::ReportGroup\",\n  \"Properties\" : {\n      \"DeleteReports\" : Boolean,\n      \"ExportConfig\" : ReportExportConfig,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeBuild::ReportGroup\nProperties:\n  DeleteReports: Boolean\n  ExportConfig: \n    ReportExportConfig\n  Name: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"CodeBuild","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeBuild::SourceCredential","awsResourceTypeName":"codebuild-sourcecredential","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeBuild::SourceCredential\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"ServerType\" : String,\n      \"Token\" : String,\n      \"Username\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeBuild::SourceCredential\nProperties:\n  AuthType: String\n  ServerType: String\n  Token: String\n  Username: String\n","awsServiceName":"CodeBuild","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeCommit::Repository","awsResourceTypeName":"codecommit-repository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeCommit::Repository\",\n  \"Properties\" : {\n      \"Code\" : Code,\n      \"KmsKeyId\" : String,\n      \"RepositoryDescription\" : String,\n      \"RepositoryName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Triggers\" : [ RepositoryTrigger, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeCommit::Repository\nProperties:\n  Code: \n    Code\n  KmsKeyId: String\n  RepositoryDescription: String\n  RepositoryName: String\n  Tags: \n    - Tag\n  Triggers: \n    - RepositoryTrigger\n","awsServiceName":"CodeCommit","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeConnections::Connection","awsResourceTypeName":"codeconnections-connection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeConnections::Connection\",\n  \"Properties\" : {\n      \"ConnectionName\" : String,\n      \"HostArn\" : String,\n      \"ProviderType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeConnections::Connection\nProperties:\n  ConnectionName: String\n  HostArn: String\n  ProviderType: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeConnections","awsServiceCategory":"other"},{"awsResourceType":"AWS::CodeDeploy::Application","awsResourceTypeName":"codedeploy-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeDeploy::Application\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"ComputePlatform\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeDeploy::Application\nProperties:\n  ApplicationName: String\n  ComputePlatform: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeDeploy","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeDeploy::DeploymentConfig","awsResourceTypeName":"codedeploy-deploymentconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeDeploy::DeploymentConfig\",\n  \"Properties\" : {\n      \"ComputePlatform\" : String,\n      \"DeploymentConfigName\" : String,\n      \"MinimumHealthyHosts\" : MinimumHealthyHosts,\n      \"TrafficRoutingConfig\" : TrafficRoutingConfig,\n      \"ZonalConfig\" : ZonalConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeDeploy::DeploymentConfig\nProperties:\n  ComputePlatform: String\n  DeploymentConfigName: String\n  MinimumHealthyHosts: \n    MinimumHealthyHosts\n  TrafficRoutingConfig: \n    TrafficRoutingConfig\n  ZonalConfig: \n    ZonalConfig\n","awsServiceName":"CodeDeploy","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeDeploy::DeploymentGroup","awsResourceTypeName":"codedeploy-deploymentgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeDeploy::DeploymentGroup\",\n  \"Properties\" : {\n      \"AlarmConfiguration\" : AlarmConfiguration,\n      \"ApplicationName\" : String,\n      \"AutoRollbackConfiguration\" : AutoRollbackConfiguration,\n      \"AutoScalingGroups\" : [ String, ... ],\n      \"BlueGreenDeploymentConfiguration\" : BlueGreenDeploymentConfiguration,\n      \"Deployment\" : Deployment,\n      \"DeploymentConfigName\" : String,\n      \"DeploymentGroupName\" : String,\n      \"DeploymentStyle\" : DeploymentStyle,\n      \"Ec2TagFilters\" : [ EC2TagFilter, ... ],\n      \"Ec2TagSet\" : EC2TagSet,\n      \"ECSServices\" : [ ECSService, ... ],\n      \"LoadBalancerInfo\" : LoadBalancerInfo,\n      \"OnPremisesInstanceTagFilters\" : [ TagFilter, ... ],\n      \"OnPremisesTagSet\" : OnPremisesTagSet,\n      \"OutdatedInstancesStrategy\" : String,\n      \"ServiceRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TerminationHookEnabled\" : Boolean,\n      \"TriggerConfigurations\" : [ TriggerConfig, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeDeploy::DeploymentGroup\nProperties:\n  AlarmConfiguration: \n    AlarmConfiguration\n  ApplicationName: String\n  AutoRollbackConfiguration: \n    AutoRollbackConfiguration\n  AutoScalingGroups: \n    - String\n  BlueGreenDeploymentConfiguration: \n    BlueGreenDeploymentConfiguration\n  Deployment: \n    Deployment\n  DeploymentConfigName: String\n  DeploymentGroupName: String\n  DeploymentStyle: \n    DeploymentStyle\n  Ec2TagFilters: \n    - EC2TagFilter\n  Ec2TagSet: \n    EC2TagSet\n  ECSServices: \n    - ECSService\n  LoadBalancerInfo: \n    LoadBalancerInfo\n  OnPremisesInstanceTagFilters: \n    - TagFilter\n  OnPremisesTagSet: \n    OnPremisesTagSet\n  OutdatedInstancesStrategy: String\n  ServiceRoleArn: String\n  Tags: \n    - Tag\n  TerminationHookEnabled: Boolean\n  TriggerConfigurations: \n    - TriggerConfig\n","awsServiceName":"CodeDeploy","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeGuruProfiler::ProfilingGroup","awsResourceTypeName":"codeguruprofiler-profilinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeGuruProfiler::ProfilingGroup\",\n  \"Properties\" : {\n      \"AgentPermissions\" : AgentPermissions,\n      \"AnomalyDetectionNotificationConfiguration\" : [ Channel, ... ],\n      \"ComputePlatform\" : String,\n      \"ProfilingGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeGuruProfiler::ProfilingGroup\nProperties:\n  AgentPermissions: \n    AgentPermissions\n  AnomalyDetectionNotificationConfiguration: \n    - Channel\n  ComputePlatform: String\n  ProfilingGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeGuruProfiler","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeGuruReviewer::RepositoryAssociation","awsResourceTypeName":"codegurureviewer-repositoryassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeGuruReviewer::RepositoryAssociation\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"ConnectionArn\" : String,\n      \"Name\" : String,\n      \"Owner\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeGuruReviewer::RepositoryAssociation\nProperties:\n  BucketName: String\n  ConnectionArn: String\n  Name: String\n  Owner: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"CodeGuruReviewer","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodePipeline::CustomActionType","awsResourceTypeName":"codepipeline-customactiontype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodePipeline::CustomActionType\",\n  \"Properties\" : {\n      \"Category\" : String,\n      \"ConfigurationProperties\" : [ ConfigurationProperties, ... ],\n      \"InputArtifactDetails\" : ArtifactDetails,\n      \"OutputArtifactDetails\" : ArtifactDetails,\n      \"Provider\" : String,\n      \"Settings\" : Settings,\n      \"Tags\" : [ Tag, ... ],\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodePipeline::CustomActionType\nProperties:\n  Category: String\n  ConfigurationProperties: \n    - ConfigurationProperties\n  InputArtifactDetails: \n    ArtifactDetails\n  OutputArtifactDetails: \n    ArtifactDetails\n  Provider: String\n  Settings: \n    Settings\n  Tags: \n    - Tag\n  Version: String\n","awsServiceName":"CodePipeline","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodePipeline::Pipeline","awsResourceTypeName":"codepipeline-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodePipeline::Pipeline\",\n  \"Properties\" : {\n      \"ArtifactStore\" : ArtifactStore,\n      \"ArtifactStores\" : [ ArtifactStoreMap, ... ],\n      \"DisableInboundStageTransitions\" : [ StageTransition, ... ],\n      \"ExecutionMode\" : String,\n      \"Name\" : String,\n      \"PipelineType\" : String,\n      \"RestartExecutionOnUpdate\" : Boolean,\n      \"RoleArn\" : String,\n      \"Stages\" : [ StageDeclaration, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Triggers\" : [ PipelineTriggerDeclaration, ... ],\n      \"Variables\" : [ VariableDeclaration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodePipeline::Pipeline\nProperties:\n  ArtifactStore: \n    ArtifactStore\n  ArtifactStores: \n    - ArtifactStoreMap\n  DisableInboundStageTransitions: \n    - StageTransition\n  ExecutionMode: String\n  Name: String\n  PipelineType: String\n  RestartExecutionOnUpdate: Boolean\n  RoleArn: String\n  Stages: \n    - StageDeclaration\n  Tags: \n    - Tag\n  Triggers: \n    - PipelineTriggerDeclaration\n  Variables: \n    - VariableDeclaration\n","awsServiceName":"CodePipeline","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodePipeline::Webhook","awsResourceTypeName":"codepipeline-webhook","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodePipeline::Webhook\",\n  \"Properties\" : {\n      \"Authentication\" : String,\n      \"AuthenticationConfiguration\" : WebhookAuthConfiguration,\n      \"Filters\" : [ WebhookFilterRule, ... ],\n      \"Name\" : String,\n      \"RegisterWithThirdParty\" : Boolean,\n      \"TargetAction\" : String,\n      \"TargetPipeline\" : String,\n      \"TargetPipelineVersion\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodePipeline::Webhook\nProperties:\n  Authentication: String\n  AuthenticationConfiguration: \n    WebhookAuthConfiguration\n  Filters: \n    - WebhookFilterRule\n  Name: String\n  RegisterWithThirdParty: Boolean\n  TargetAction: String\n  TargetPipeline: String\n  TargetPipelineVersion: Integer\n","awsServiceName":"CodePipeline","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeStar::GitHubRepository","awsResourceTypeName":"codestar-githubrepository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeStar::GitHubRepository\",\n  \"Properties\" : {\n      \"Code\" : Code,\n      \"ConnectionArn\" : String,\n      \"EnableIssues\" : Boolean,\n      \"IsPrivate\" : Boolean,\n      \"RepositoryAccessToken\" : String,\n      \"RepositoryDescription\" : String,\n      \"RepositoryName\" : String,\n      \"RepositoryOwner\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeStar::GitHubRepository\nProperties:\n  Code: \n    Code\n  ConnectionArn: String\n  EnableIssues: Boolean\n  IsPrivate: Boolean\n  RepositoryAccessToken: String\n  RepositoryDescription: String\n  RepositoryName: String\n  RepositoryOwner: String\n","awsServiceName":"CodeStar","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeStarConnections::Connection","awsResourceTypeName":"codestarconnections-connection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeStarConnections::Connection\",\n  \"Properties\" : {\n      \"ConnectionName\" : String,\n      \"HostArn\" : String,\n      \"ProviderType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeStarConnections::Connection\nProperties:\n  ConnectionName: String\n  HostArn: String\n  ProviderType: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeStarConnections","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeStarConnections::RepositoryLink","awsResourceTypeName":"codestarconnections-repositorylink","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeStarConnections::RepositoryLink\",\n  \"Properties\" : {\n      \"ConnectionArn\" : String,\n      \"EncryptionKeyArn\" : String,\n      \"OwnerId\" : String,\n      \"RepositoryName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeStarConnections::RepositoryLink\nProperties:\n  ConnectionArn: String\n  EncryptionKeyArn: String\n  OwnerId: String\n  RepositoryName: String\n  Tags: \n    - Tag\n","awsServiceName":"CodeStarConnections","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeStarConnections::SyncConfiguration","awsResourceTypeName":"codestarconnections-syncconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeStarConnections::SyncConfiguration\",\n  \"Properties\" : {\n      \"Branch\" : String,\n      \"ConfigFile\" : String,\n      \"PublishDeploymentStatus\" : String,\n      \"RepositoryLinkId\" : String,\n      \"ResourceName\" : String,\n      \"RoleArn\" : String,\n      \"SyncType\" : String,\n      \"TriggerResourceUpdateOn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeStarConnections::SyncConfiguration\nProperties:\n  Branch: String\n  ConfigFile: String\n  PublishDeploymentStatus: String\n  RepositoryLinkId: String\n  ResourceName: String\n  RoleArn: String\n  SyncType: String\n  TriggerResourceUpdateOn: String\n","awsServiceName":"CodeStarConnections","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::CodeStarNotifications::NotificationRule","awsResourceTypeName":"codestarnotifications-notificationrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CodeStarNotifications::NotificationRule\",\n  \"Properties\" : {\n      \"CreatedBy\" : String,\n      \"DetailType\" : String,\n      \"EventTypeId\" : String,\n      \"EventTypeIds\" : [ String, ... ],\n      \"Name\" : String,\n      \"Resource\" : String,\n      \"Status\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TargetAddress\" : String,\n      \"Targets\" : [ Target, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CodeStarNotifications::NotificationRule\nProperties:\n  CreatedBy: String\n  DetailType: String\n  EventTypeId: String\n  EventTypeIds: \n    - String\n  Name: String\n  Resource: String\n  Status: String\n  Tags: \n    Key: Value\n  TargetAddress: String\n  Targets: \n    - Target\n","awsServiceName":"CodeStarNotifications","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::Cognito::IdentityPool","awsResourceTypeName":"cognito-identitypool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::IdentityPool\",\n  \"Properties\" : {\n      \"AllowClassicFlow\" : Boolean,\n      \"AllowUnauthenticatedIdentities\" : Boolean,\n      \"CognitoEvents\" : Json,\n      \"CognitoIdentityProviders\" : [ CognitoIdentityProvider, ... ],\n      \"CognitoStreams\" : CognitoStreams,\n      \"DeveloperProviderName\" : String,\n      \"IdentityPoolName\" : String,\n      \"OpenIdConnectProviderARNs\" : [ String, ... ],\n      \"PushSync\" : PushSync,\n      \"SamlProviderARNs\" : [ String, ... ],\n      \"SupportedLoginProviders\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::IdentityPool\nProperties:\n  AllowClassicFlow: Boolean\n  AllowUnauthenticatedIdentities: Boolean\n  CognitoEvents: Json\n  CognitoIdentityProviders: \n    - CognitoIdentityProvider\n  CognitoStreams: \n    CognitoStreams\n  DeveloperProviderName: String\n  IdentityPoolName: String\n  OpenIdConnectProviderARNs: \n    - String\n  PushSync: \n    PushSync\n  SamlProviderARNs: \n    - String\n  SupportedLoginProviders: Json\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::IdentityPoolPrincipalTag","awsResourceTypeName":"cognito-identitypoolprincipaltag","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::IdentityPoolPrincipalTag\",\n  \"Properties\" : {\n      \"IdentityPoolId\" : String,\n      \"IdentityProviderName\" : String,\n      \"PrincipalTags\" : Json,\n      \"UseDefaults\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::IdentityPoolPrincipalTag\nProperties:\n  IdentityPoolId: String\n  IdentityProviderName: String\n  PrincipalTags: Json\n  UseDefaults: Boolean\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::IdentityPoolRoleAttachment","awsResourceTypeName":"cognito-identitypoolroleattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::IdentityPoolRoleAttachment\",\n  \"Properties\" : {\n      \"IdentityPoolId\" : String,\n      \"RoleMappings\" : RoleMapping,\n      \"Roles\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::IdentityPoolRoleAttachment\nProperties:\n  IdentityPoolId: String\n  RoleMappings: \n    RoleMapping\n  Roles: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::LogDeliveryConfiguration","awsResourceTypeName":"cognito-logdeliveryconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::LogDeliveryConfiguration\",\n  \"Properties\" : {\n      \"LogConfigurations\" : [ LogConfiguration, ... ],\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::LogDeliveryConfiguration\nProperties:\n  LogConfigurations: \n    - LogConfiguration\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPool","awsResourceTypeName":"cognito-userpool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPool\",\n  \"Properties\" : {\n      \"AccountRecoverySetting\" : AccountRecoverySetting,\n      \"AdminCreateUserConfig\" : AdminCreateUserConfig,\n      \"AliasAttributes\" : [ String, ... ],\n      \"AutoVerifiedAttributes\" : [ String, ... ],\n      \"DeletionProtection\" : String,\n      \"DeviceConfiguration\" : DeviceConfiguration,\n      \"EmailConfiguration\" : EmailConfiguration,\n      \"EmailVerificationMessage\" : String,\n      \"EmailVerificationSubject\" : String,\n      \"EnabledMfas\" : [ String, ... ],\n      \"LambdaConfig\" : LambdaConfig,\n      \"MfaConfiguration\" : String,\n      \"Policies\" : Policies,\n      \"Schema\" : [ SchemaAttribute, ... ],\n      \"SmsAuthenticationMessage\" : String,\n      \"SmsConfiguration\" : SmsConfiguration,\n      \"SmsVerificationMessage\" : String,\n      \"UserAttributeUpdateSettings\" : UserAttributeUpdateSettings,\n      \"UsernameAttributes\" : [ String, ... ],\n      \"UsernameConfiguration\" : UsernameConfiguration,\n      \"UserPoolAddOns\" : UserPoolAddOns,\n      \"UserPoolName\" : String,\n      \"UserPoolTags\" : {Key: Value, ...},\n      \"VerificationMessageTemplate\" : VerificationMessageTemplate\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPool\nProperties:\n  AccountRecoverySetting: \n    AccountRecoverySetting\n  AdminCreateUserConfig: \n    AdminCreateUserConfig\n  AliasAttributes: \n    - String\n  AutoVerifiedAttributes: \n    - String\n  DeletionProtection: String\n  DeviceConfiguration: \n    DeviceConfiguration\n  EmailConfiguration: \n    EmailConfiguration\n  EmailVerificationMessage: String\n  EmailVerificationSubject: String\n  EnabledMfas: \n    - String\n  LambdaConfig: \n    LambdaConfig\n  MfaConfiguration: String\n  Policies: \n    Policies\n  Schema: \n    - SchemaAttribute\n  SmsAuthenticationMessage: String\n  SmsConfiguration: \n    SmsConfiguration\n  SmsVerificationMessage: String\n  UserAttributeUpdateSettings: \n    UserAttributeUpdateSettings\n  UsernameAttributes: \n    - String\n  UsernameConfiguration: \n    UsernameConfiguration\n  UserPoolAddOns: \n    UserPoolAddOns\n  UserPoolName: String\n  UserPoolTags: \n    Key: Value\n  VerificationMessageTemplate: \n    VerificationMessageTemplate\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolClient","awsResourceTypeName":"cognito-userpoolclient","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolClient\",\n  \"Properties\" : {\n      \"AccessTokenValidity\" : Integer,\n      \"AllowedOAuthFlows\" : [ String, ... ],\n      \"AllowedOAuthFlowsUserPoolClient\" : Boolean,\n      \"AllowedOAuthScopes\" : [ String, ... ],\n      \"AnalyticsConfiguration\" : AnalyticsConfiguration,\n      \"AuthSessionValidity\" : Integer,\n      \"CallbackURLs\" : [ String, ... ],\n      \"ClientName\" : String,\n      \"DefaultRedirectURI\" : String,\n      \"EnablePropagateAdditionalUserContextData\" : Boolean,\n      \"EnableTokenRevocation\" : Boolean,\n      \"ExplicitAuthFlows\" : [ String, ... ],\n      \"GenerateSecret\" : Boolean,\n      \"IdTokenValidity\" : Integer,\n      \"LogoutURLs\" : [ String, ... ],\n      \"PreventUserExistenceErrors\" : String,\n      \"ReadAttributes\" : [ String, ... ],\n      \"RefreshTokenValidity\" : Integer,\n      \"SupportedIdentityProviders\" : [ String, ... ],\n      \"TokenValidityUnits\" : TokenValidityUnits,\n      \"UserPoolId\" : String,\n      \"WriteAttributes\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolClient\nProperties:\n  AccessTokenValidity: Integer\n  AllowedOAuthFlows: \n    - String\n  AllowedOAuthFlowsUserPoolClient: Boolean\n  AllowedOAuthScopes: \n    - String\n  AnalyticsConfiguration: \n    AnalyticsConfiguration\n  AuthSessionValidity: Integer\n  CallbackURLs: \n    - String\n  ClientName: String\n  DefaultRedirectURI: String\n  EnablePropagateAdditionalUserContextData: Boolean\n  EnableTokenRevocation: Boolean\n  ExplicitAuthFlows: \n    - String\n  GenerateSecret: Boolean\n  IdTokenValidity: Integer\n  LogoutURLs: \n    - String\n  PreventUserExistenceErrors: String\n  ReadAttributes: \n    - String\n  RefreshTokenValidity: Integer\n  SupportedIdentityProviders: \n    - String\n  TokenValidityUnits: \n    TokenValidityUnits\n  UserPoolId: String\n  WriteAttributes: \n    - String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolDomain","awsResourceTypeName":"cognito-userpooldomain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolDomain\",\n  \"Properties\" : {\n      \"CustomDomainConfig\" : CustomDomainConfigType,\n      \"Domain\" : String,\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolDomain\nProperties:\n  CustomDomainConfig: \n    CustomDomainConfigType\n  Domain: String\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolGroup","awsResourceTypeName":"cognito-userpoolgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GroupName\" : String,\n      \"Precedence\" : Integer,\n      \"RoleArn\" : String,\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolGroup\nProperties:\n  Description: String\n  GroupName: String\n  Precedence: Integer\n  RoleArn: String\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolIdentityProvider","awsResourceTypeName":"cognito-userpoolidentityprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolIdentityProvider\",\n  \"Properties\" : {\n      \"AttributeMapping\" : Json,\n      \"IdpIdentifiers\" : [ String, ... ],\n      \"ProviderDetails\" : Json,\n      \"ProviderName\" : String,\n      \"ProviderType\" : String,\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolIdentityProvider\nProperties:\n  AttributeMapping: Json\n  IdpIdentifiers: \n    - String\n  ProviderDetails: Json\n  ProviderName: String\n  ProviderType: String\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolResourceServer","awsResourceTypeName":"cognito-userpoolresourceserver","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolResourceServer\",\n  \"Properties\" : {\n      \"Identifier\" : String,\n      \"Name\" : String,\n      \"Scopes\" : [ ResourceServerScopeType, ... ],\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolResourceServer\nProperties:\n  Identifier: String\n  Name: String\n  Scopes: \n    - ResourceServerScopeType\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolRiskConfigurationAttachment","awsResourceTypeName":"cognito-userpoolriskconfigurationattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolRiskConfigurationAttachment\",\n  \"Properties\" : {\n      \"AccountTakeoverRiskConfiguration\" : AccountTakeoverRiskConfigurationType,\n      \"ClientId\" : String,\n      \"CompromisedCredentialsRiskConfiguration\" : CompromisedCredentialsRiskConfigurationType,\n      \"RiskExceptionConfiguration\" : RiskExceptionConfigurationType,\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolRiskConfigurationAttachment\nProperties:\n  AccountTakeoverRiskConfiguration: \n    AccountTakeoverRiskConfigurationType\n  ClientId: String\n  CompromisedCredentialsRiskConfiguration: \n    CompromisedCredentialsRiskConfigurationType\n  RiskExceptionConfiguration: \n    RiskExceptionConfigurationType\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolUICustomizationAttachment","awsResourceTypeName":"cognito-userpooluicustomizationattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolUICustomizationAttachment\",\n  \"Properties\" : {\n      \"ClientId\" : String,\n      \"CSS\" : String,\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolUICustomizationAttachment\nProperties:\n  ClientId: String\n  CSS: String\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolUser","awsResourceTypeName":"cognito-userpooluser","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolUser\",\n  \"Properties\" : {\n      \"ClientMetadata\" : {Key: Value, ...},\n      \"DesiredDeliveryMediums\" : [ String, ... ],\n      \"ForceAliasCreation\" : Boolean,\n      \"MessageAction\" : String,\n      \"UserAttributes\" : [ AttributeType, ... ],\n      \"Username\" : String,\n      \"UserPoolId\" : String,\n      \"ValidationData\" : [ AttributeType, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolUser\nProperties:\n  ClientMetadata: \n    Key: Value\n  DesiredDeliveryMediums: \n    - String\n  ForceAliasCreation: Boolean\n  MessageAction: String\n  UserAttributes: \n    - AttributeType\n  Username: String\n  UserPoolId: String\n  ValidationData: \n    - AttributeType\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cognito::UserPoolUserToGroupAttachment","awsResourceTypeName":"cognito-userpoolusertogroupattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cognito::UserPoolUserToGroupAttachment\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"Username\" : String,\n      \"UserPoolId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cognito::UserPoolUserToGroupAttachment\nProperties:\n  GroupName: String\n  Username: String\n  UserPoolId: String\n","awsServiceName":"Cognito","awsServiceCategory":"other"},{"awsResourceType":"AWS::Comprehend::DocumentClassifier","awsResourceTypeName":"comprehend-documentclassifier","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Comprehend::DocumentClassifier\",\n  \"Properties\" : {\n      \"DataAccessRoleArn\" : String,\n      \"DocumentClassifierName\" : String,\n      \"InputDataConfig\" : DocumentClassifierInputDataConfig,\n      \"LanguageCode\" : String,\n      \"Mode\" : String,\n      \"ModelKmsKeyId\" : String,\n      \"ModelPolicy\" : String,\n      \"OutputDataConfig\" : DocumentClassifierOutputDataConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"VersionName\" : String,\n      \"VolumeKmsKeyId\" : String,\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Comprehend::DocumentClassifier\nProperties:\n  DataAccessRoleArn: String\n  DocumentClassifierName: String\n  InputDataConfig: \n    DocumentClassifierInputDataConfig\n  LanguageCode: String\n  Mode: String\n  ModelKmsKeyId: String\n  ModelPolicy: String\n  OutputDataConfig: \n    DocumentClassifierOutputDataConfig\n  Tags: \n    - Tag\n  VersionName: String\n  VolumeKmsKeyId: String\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"Comprehend","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Comprehend::Flywheel","awsResourceTypeName":"comprehend-flywheel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Comprehend::Flywheel\",\n  \"Properties\" : {\n      \"ActiveModelArn\" : String,\n      \"DataAccessRoleArn\" : String,\n      \"DataLakeS3Uri\" : String,\n      \"DataSecurityConfig\" : DataSecurityConfig,\n      \"FlywheelName\" : String,\n      \"ModelType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskConfig\" : TaskConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Comprehend::Flywheel\nProperties:\n  ActiveModelArn: String\n  DataAccessRoleArn: String\n  DataLakeS3Uri: String\n  DataSecurityConfig: \n    DataSecurityConfig\n  FlywheelName: String\n  ModelType: String\n  Tags: \n    - Tag\n  TaskConfig: \n    TaskConfig\n","awsServiceName":"Comprehend","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Config::AggregationAuthorization","awsResourceTypeName":"config-aggregationauthorization","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::AggregationAuthorization\",\n  \"Properties\" : {\n      \"AuthorizedAccountId\" : String,\n      \"AuthorizedAwsRegion\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::AggregationAuthorization\nProperties:\n  AuthorizedAccountId: String\n  AuthorizedAwsRegion: String\n  Tags: \n    - Tag\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::ConfigRule","awsResourceTypeName":"config-configrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::ConfigRule\",\n  \"Properties\" : {\n      \"Compliance\" : Compliance,\n      \"ConfigRuleName\" : String,\n      \"Description\" : String,\n      \"EvaluationModes\" : [ EvaluationModeConfiguration, ... ],\n      \"InputParameters\" : Json,\n      \"MaximumExecutionFrequency\" : String,\n      \"Scope\" : Scope,\n      \"Source\" : Source\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::ConfigRule\nProperties:\n  Compliance: \n    Compliance\n  ConfigRuleName: String\n  Description: String\n  EvaluationModes: \n    - EvaluationModeConfiguration\n  InputParameters: Json\n  MaximumExecutionFrequency: String\n  Scope: \n    Scope\n  Source: \n    Source\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::ConfigurationAggregator","awsResourceTypeName":"config-configurationaggregator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::ConfigurationAggregator\",\n  \"Properties\" : {\n      \"AccountAggregationSources\" : [ AccountAggregationSource, ... ],\n      \"ConfigurationAggregatorName\" : String,\n      \"OrganizationAggregationSource\" : OrganizationAggregationSource,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::ConfigurationAggregator\nProperties:\n  AccountAggregationSources: \n    - AccountAggregationSource\n  ConfigurationAggregatorName: String\n  OrganizationAggregationSource: \n    OrganizationAggregationSource\n  Tags: \n    - Tag\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::ConfigurationRecorder","awsResourceTypeName":"config-configurationrecorder","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::ConfigurationRecorder\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RecordingGroup\" : RecordingGroup,\n      \"RecordingMode\" : RecordingMode,\n      \"RoleARN\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::ConfigurationRecorder\nProperties:\n  Name: String\n  RecordingGroup: \n    RecordingGroup\n  RecordingMode: \n    RecordingMode\n  RoleARN: String\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::ConformancePack","awsResourceTypeName":"config-conformancepack","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::ConformancePack\",\n  \"Properties\" : {\n      \"ConformancePackInputParameters\" : [ ConformancePackInputParameter, ... ],\n      \"ConformancePackName\" : String,\n      \"DeliveryS3Bucket\" : String,\n      \"DeliveryS3KeyPrefix\" : String,\n      \"TemplateBody\" : String,\n      \"TemplateS3Uri\" : String,\n      \"TemplateSSMDocumentDetails\" : TemplateSSMDocumentDetails\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::ConformancePack\nProperties:\n  ConformancePackInputParameters: \n    - ConformancePackInputParameter\n  ConformancePackName: String\n  DeliveryS3Bucket: String\n  DeliveryS3KeyPrefix: String\n  TemplateBody: String\n  TemplateS3Uri: String\n  TemplateSSMDocumentDetails: \n    TemplateSSMDocumentDetails\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::DeliveryChannel","awsResourceTypeName":"config-deliverychannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::DeliveryChannel\",\n  \"Properties\" : {\n      \"ConfigSnapshotDeliveryProperties\" : ConfigSnapshotDeliveryProperties,\n      \"Name\" : String,\n      \"S3BucketName\" : String,\n      \"S3KeyPrefix\" : String,\n      \"S3KmsKeyArn\" : String,\n      \"SnsTopicARN\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::DeliveryChannel\nProperties:\n  ConfigSnapshotDeliveryProperties: \n    ConfigSnapshotDeliveryProperties\n  Name: String\n  S3BucketName: String\n  S3KeyPrefix: String\n  S3KmsKeyArn: String\n  SnsTopicARN: String\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::OrganizationConfigRule","awsResourceTypeName":"config-organizationconfigrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::OrganizationConfigRule\",\n  \"Properties\" : {\n      \"ExcludedAccounts\" : [ String, ... ],\n      \"OrganizationConfigRuleName\" : String,\n      \"OrganizationCustomPolicyRuleMetadata\" : OrganizationCustomPolicyRuleMetadata,\n      \"OrganizationCustomRuleMetadata\" : OrganizationCustomRuleMetadata,\n      \"OrganizationManagedRuleMetadata\" : OrganizationManagedRuleMetadata\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::OrganizationConfigRule\nProperties:\n  ExcludedAccounts: \n    - String\n  OrganizationConfigRuleName: String\n  OrganizationCustomPolicyRuleMetadata: \n    OrganizationCustomPolicyRuleMetadata\n  OrganizationCustomRuleMetadata: \n    OrganizationCustomRuleMetadata\n  OrganizationManagedRuleMetadata: \n    OrganizationManagedRuleMetadata\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::OrganizationConformancePack","awsResourceTypeName":"config-organizationconformancepack","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::OrganizationConformancePack\",\n  \"Properties\" : {\n      \"ConformancePackInputParameters\" : [ ConformancePackInputParameter, ... ],\n      \"DeliveryS3Bucket\" : String,\n      \"DeliveryS3KeyPrefix\" : String,\n      \"ExcludedAccounts\" : [ String, ... ],\n      \"OrganizationConformancePackName\" : String,\n      \"TemplateBody\" : String,\n      \"TemplateS3Uri\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::OrganizationConformancePack\nProperties:\n  ConformancePackInputParameters: \n    - ConformancePackInputParameter\n  DeliveryS3Bucket: String\n  DeliveryS3KeyPrefix: String\n  ExcludedAccounts: \n    - String\n  OrganizationConformancePackName: String\n  TemplateBody: String\n  TemplateS3Uri: String\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::RemediationConfiguration","awsResourceTypeName":"config-remediationconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::RemediationConfiguration\",\n  \"Properties\" : {\n      \"Automatic\" : Boolean,\n      \"ConfigRuleName\" : String,\n      \"ExecutionControls\" : ExecutionControls,\n      \"MaximumAutomaticAttempts\" : Integer,\n      \"Parameters\" : {Key: Value, ...},\n      \"ResourceType\" : String,\n      \"RetryAttemptSeconds\" : Integer,\n      \"TargetId\" : String,\n      \"TargetType\" : String,\n      \"TargetVersion\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::RemediationConfiguration\nProperties:\n  Automatic: Boolean\n  ConfigRuleName: String\n  ExecutionControls: \n    ExecutionControls\n  MaximumAutomaticAttempts: Integer\n  Parameters: \n    Key: Value\n  ResourceType: String\n  RetryAttemptSeconds: Integer\n  TargetId: String\n  TargetType: String\n  TargetVersion: String\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Config::StoredQuery","awsResourceTypeName":"config-storedquery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Config::StoredQuery\",\n  \"Properties\" : {\n      \"QueryDescription\" : String,\n      \"QueryExpression\" : String,\n      \"QueryName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Config::StoredQuery\nProperties:\n  QueryDescription: String\n  QueryExpression: String\n  QueryName: String\n  Tags: \n    - Tag\n","awsServiceName":"Config","awsServiceCategory":"management"},{"awsResourceType":"AWS::Connect::ApprovedOrigin","awsResourceTypeName":"connect-approvedorigin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::ApprovedOrigin\",\n  \"Properties\" : {\n      \"InstanceId\" : String,\n      \"Origin\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::ApprovedOrigin\nProperties:\n  InstanceId: String\n  Origin: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::ContactFlow","awsResourceTypeName":"connect-contactflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::ContactFlow\",\n  \"Properties\" : {\n      \"Content\" : String,\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"State\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::ContactFlow\nProperties:\n  Content: String\n  Description: String\n  InstanceArn: String\n  Name: String\n  State: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::ContactFlowModule","awsResourceTypeName":"connect-contactflowmodule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::ContactFlowModule\",\n  \"Properties\" : {\n      \"Content\" : String,\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"State\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::ContactFlowModule\nProperties:\n  Content: String\n  Description: String\n  InstanceArn: String\n  Name: String\n  State: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::EvaluationForm","awsResourceTypeName":"connect-evaluationform","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::EvaluationForm\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Items\" : [ EvaluationFormBaseItem, ... ],\n      \"ScoringStrategy\" : ScoringStrategy,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Title\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::EvaluationForm\nProperties:\n  Description: String\n  InstanceArn: String\n  Items: \n    - EvaluationFormBaseItem\n  ScoringStrategy: \n    ScoringStrategy\n  Status: String\n  Tags: \n    - Tag\n  Title: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::HoursOfOperation","awsResourceTypeName":"connect-hoursofoperation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::HoursOfOperation\",\n  \"Properties\" : {\n      \"Config\" : [ HoursOfOperationConfig, ... ],\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeZone\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::HoursOfOperation\nProperties:\n  Config: \n    - HoursOfOperationConfig\n  Description: String\n  InstanceArn: String\n  Name: String\n  Tags: \n    - Tag\n  TimeZone: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::Instance","awsResourceTypeName":"connect-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::Instance\",\n  \"Properties\" : {\n      \"Attributes\" : Attributes,\n      \"DirectoryId\" : String,\n      \"IdentityManagementType\" : String,\n      \"InstanceAlias\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::Instance\nProperties:\n  Attributes: \n    Attributes\n  DirectoryId: String\n  IdentityManagementType: String\n  InstanceAlias: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::InstanceStorageConfig","awsResourceTypeName":"connect-instancestorageconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::InstanceStorageConfig\",\n  \"Properties\" : {\n      \"InstanceArn\" : String,\n      \"KinesisFirehoseConfig\" : KinesisFirehoseConfig,\n      \"KinesisStreamConfig\" : KinesisStreamConfig,\n      \"KinesisVideoStreamConfig\" : KinesisVideoStreamConfig,\n      \"ResourceType\" : String,\n      \"S3Config\" : S3Config,\n      \"StorageType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::InstanceStorageConfig\nProperties:\n  InstanceArn: String\n  KinesisFirehoseConfig: \n    KinesisFirehoseConfig\n  KinesisStreamConfig: \n    KinesisStreamConfig\n  KinesisVideoStreamConfig: \n    KinesisVideoStreamConfig\n  ResourceType: String\n  S3Config: \n    S3Config\n  StorageType: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::IntegrationAssociation","awsResourceTypeName":"connect-integrationassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::IntegrationAssociation\",\n  \"Properties\" : {\n      \"InstanceId\" : String,\n      \"IntegrationArn\" : String,\n      \"IntegrationType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::IntegrationAssociation\nProperties:\n  InstanceId: String\n  IntegrationArn: String\n  IntegrationType: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::PhoneNumber","awsResourceTypeName":"connect-phonenumber","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::PhoneNumber\",\n  \"Properties\" : {\n      \"CountryCode\" : String,\n      \"Description\" : String,\n      \"Prefix\" : String,\n      \"SourcePhoneNumberArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::PhoneNumber\nProperties:\n  CountryCode: String\n  Description: String\n  Prefix: String\n  SourcePhoneNumberArn: String\n  Tags: \n    - Tag\n  TargetArn: String\n  Type: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::PredefinedAttribute","awsResourceTypeName":"connect-predefinedattribute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::PredefinedAttribute\",\n  \"Properties\" : {\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"Values\" : Values\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::PredefinedAttribute\nProperties:\n  InstanceArn: String\n  Name: String\n  Values: \n    Values\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::Prompt","awsResourceTypeName":"connect-prompt","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::Prompt\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"S3Uri\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::Prompt\nProperties:\n  Description: String\n  InstanceArn: String\n  Name: String\n  S3Uri: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::Queue","awsResourceTypeName":"connect-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::Queue\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"HoursOfOperationArn\" : String,\n      \"InstanceArn\" : String,\n      \"MaxContacts\" : Integer,\n      \"Name\" : String,\n      \"OutboundCallerConfig\" : OutboundCallerConfig,\n      \"QuickConnectArns\" : [ String, ... ],\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::Queue\nProperties:\n  Description: String\n  HoursOfOperationArn: String\n  InstanceArn: String\n  MaxContacts: Integer\n  Name: String\n  OutboundCallerConfig: \n    OutboundCallerConfig\n  QuickConnectArns: \n    - String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::QuickConnect","awsResourceTypeName":"connect-quickconnect","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::QuickConnect\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"QuickConnectConfig\" : QuickConnectConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::QuickConnect\nProperties:\n  Description: String\n  InstanceArn: String\n  Name: String\n  QuickConnectConfig: \n    QuickConnectConfig\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::RoutingProfile","awsResourceTypeName":"connect-routingprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::RoutingProfile\",\n  \"Properties\" : {\n      \"AgentAvailabilityTimer\" : String,\n      \"DefaultOutboundQueueArn\" : String,\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"MediaConcurrencies\" : [ MediaConcurrency, ... ],\n      \"Name\" : String,\n      \"QueueConfigs\" : [ RoutingProfileQueueConfig, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::RoutingProfile\nProperties:\n  AgentAvailabilityTimer: String\n  DefaultOutboundQueueArn: String\n  Description: String\n  InstanceArn: String\n  MediaConcurrencies: \n    - MediaConcurrency\n  Name: String\n  QueueConfigs: \n    - RoutingProfileQueueConfig\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::Rule","awsResourceTypeName":"connect-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::Rule\",\n  \"Properties\" : {\n      \"Actions\" : Actions,\n      \"Function\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"PublishStatus\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TriggerEventSource\" : RuleTriggerEventSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::Rule\nProperties:\n  Actions: \n    Actions\n  Function: String\n  InstanceArn: String\n  Name: String\n  PublishStatus: String\n  Tags: \n    - Tag\n  TriggerEventSource: \n    RuleTriggerEventSource\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::SecurityKey","awsResourceTypeName":"connect-securitykey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::SecurityKey\",\n  \"Properties\" : {\n      \"InstanceId\" : String,\n      \"Key\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::SecurityKey\nProperties:\n  InstanceId: String\n  Key: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::SecurityProfile","awsResourceTypeName":"connect-securityprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::SecurityProfile\",\n  \"Properties\" : {\n      \"AllowedAccessControlHierarchyGroupId\" : String,\n      \"AllowedAccessControlTags\" : [ Tag, ... ],\n      \"Applications\" : [ Application, ... ],\n      \"Description\" : String,\n      \"HierarchyRestrictedResources\" : [ String, ... ],\n      \"InstanceArn\" : String,\n      \"Permissions\" : [ String, ... ],\n      \"SecurityProfileName\" : String,\n      \"TagRestrictedResources\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::SecurityProfile\nProperties:\n  AllowedAccessControlHierarchyGroupId: String\n  AllowedAccessControlTags: \n    - Tag\n  Applications: \n    - Application\n  Description: String\n  HierarchyRestrictedResources: \n    - String\n  InstanceArn: String\n  Permissions: \n    - String\n  SecurityProfileName: String\n  TagRestrictedResources: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::TaskTemplate","awsResourceTypeName":"connect-tasktemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::TaskTemplate\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"Constraints\" : Constraints,\n      \"ContactFlowArn\" : String,\n      \"Defaults\" : [ DefaultFieldValue, ... ],\n      \"Description\" : String,\n      \"Fields\" : [ Field, ... ],\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::TaskTemplate\nProperties:\n  ClientToken: String\n  Constraints: \n    Constraints\n  ContactFlowArn: String\n  Defaults: \n    - DefaultFieldValue\n  Description: String\n  Fields: \n    - Field\n  InstanceArn: String\n  Name: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::TrafficDistributionGroup","awsResourceTypeName":"connect-trafficdistributiongroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::TrafficDistributionGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::TrafficDistributionGroup\nProperties:\n  Description: String\n  InstanceArn: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::User","awsResourceTypeName":"connect-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::User\",\n  \"Properties\" : {\n      \"DirectoryUserId\" : String,\n      \"HierarchyGroupArn\" : String,\n      \"IdentityInfo\" : UserIdentityInfo,\n      \"InstanceArn\" : String,\n      \"Password\" : String,\n      \"PhoneConfig\" : UserPhoneConfig,\n      \"RoutingProfileArn\" : String,\n      \"SecurityProfileArns\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Username\" : String,\n      \"UserProficiencies\" : [ UserProficiency, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::User\nProperties:\n  DirectoryUserId: String\n  HierarchyGroupArn: String\n  IdentityInfo: \n    UserIdentityInfo\n  InstanceArn: String\n  Password: String\n  PhoneConfig: \n    UserPhoneConfig\n  RoutingProfileArn: String\n  SecurityProfileArns: \n    - String\n  Tags: \n    - Tag\n  Username: String\n  UserProficiencies: \n    - UserProficiency\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::UserHierarchyGroup","awsResourceTypeName":"connect-userhierarchygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::UserHierarchyGroup\",\n  \"Properties\" : {\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"ParentGroupArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::UserHierarchyGroup\nProperties:\n  InstanceArn: String\n  Name: String\n  ParentGroupArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::View","awsResourceTypeName":"connect-view","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::View\",\n  \"Properties\" : {\n      \"Actions\" : [ String, ... ],\n      \"Description\" : String,\n      \"InstanceArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Template\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::View\nProperties:\n  Actions: \n    - String\n  Description: String\n  InstanceArn: String\n  Name: String\n  Tags: \n    - Tag\n  Template: Json\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::Connect::ViewVersion","awsResourceTypeName":"connect-viewversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Connect::ViewVersion\",\n  \"Properties\" : {\n      \"VersionDescription\" : String,\n      \"ViewArn\" : String,\n      \"ViewContentSha256\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Connect::ViewVersion\nProperties:\n  VersionDescription: String\n  ViewArn: String\n  ViewContentSha256: String\n","awsServiceName":"Connect","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::ConnectCampaigns::Campaign","awsResourceTypeName":"connectcampaigns-campaign","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ConnectCampaigns::Campaign\",\n  \"Properties\" : {\n      \"ConnectInstanceArn\" : String,\n      \"DialerConfig\" : DialerConfig,\n      \"Name\" : String,\n      \"OutboundCallConfig\" : OutboundCallConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ConnectCampaigns::Campaign\nProperties:\n  ConnectInstanceArn: String\n  DialerConfig: \n    DialerConfig\n  Name: String\n  OutboundCallConfig: \n    OutboundCallConfig\n  Tags: \n    - Tag\n","awsServiceName":"ConnectCampaigns","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::ControlTower::EnabledBaseline","awsResourceTypeName":"controltower-enabledbaseline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ControlTower::EnabledBaseline\",\n  \"Properties\" : {\n      \"BaselineIdentifier\" : String,\n      \"BaselineVersion\" : String,\n      \"Parameters\" : [ Parameter, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ControlTower::EnabledBaseline\nProperties:\n  BaselineIdentifier: String\n  BaselineVersion: String\n  Parameters: \n    - Parameter\n  Tags: \n    - Tag\n  TargetIdentifier: String\n","awsServiceName":"ControlTower","awsServiceCategory":"management"},{"awsResourceType":"AWS::ControlTower::EnabledControl","awsResourceTypeName":"controltower-enabledcontrol","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ControlTower::EnabledControl\",\n  \"Properties\" : {\n      \"ControlIdentifier\" : String,\n      \"Parameters\" : [ EnabledControlParameter, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ControlTower::EnabledControl\nProperties:\n  ControlIdentifier: String\n  Parameters: \n    - EnabledControlParameter\n  Tags: \n    - Tag\n  TargetIdentifier: String\n","awsServiceName":"ControlTower","awsServiceCategory":"management"},{"awsResourceType":"AWS::ControlTower::LandingZone","awsResourceTypeName":"controltower-landingzone","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ControlTower::LandingZone\",\n  \"Properties\" : {\n      \"Manifest\" : ,\n      \"Tags\" : [ Tag, ... ],\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ControlTower::LandingZone\nProperties:\n  Manifest: \n    \n  Tags: \n    - Tag\n  Version: String\n","awsServiceName":"ControlTower","awsServiceCategory":"management"},{"awsResourceType":"AWS::CustomerProfiles::CalculatedAttributeDefinition","awsResourceTypeName":"customerprofiles-calculatedattributedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CustomerProfiles::CalculatedAttributeDefinition\",\n  \"Properties\" : {\n      \"AttributeDetails\" : AttributeDetails,\n      \"CalculatedAttributeName\" : String,\n      \"Conditions\" : Conditions,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"DomainName\" : String,\n      \"Statistic\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CustomerProfiles::CalculatedAttributeDefinition\nProperties:\n  AttributeDetails: \n    AttributeDetails\n  CalculatedAttributeName: String\n  Conditions: \n    Conditions\n  Description: String\n  DisplayName: String\n  DomainName: String\n  Statistic: String\n  Tags: \n    - Tag\n","awsServiceName":"CustomerProfiles","awsServiceCategory":"other"},{"awsResourceType":"AWS::CustomerProfiles::Domain","awsResourceTypeName":"customerprofiles-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CustomerProfiles::Domain\",\n  \"Properties\" : {\n      \"DeadLetterQueueUrl\" : String,\n      \"DefaultEncryptionKey\" : String,\n      \"DefaultExpirationDays\" : Integer,\n      \"DomainName\" : String,\n      \"Matching\" : Matching,\n      \"RuleBasedMatching\" : RuleBasedMatching,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CustomerProfiles::Domain\nProperties:\n  DeadLetterQueueUrl: String\n  DefaultEncryptionKey: String\n  DefaultExpirationDays: Integer\n  DomainName: String\n  Matching: \n    Matching\n  RuleBasedMatching: \n    RuleBasedMatching\n  Tags: \n    - Tag\n","awsServiceName":"CustomerProfiles","awsServiceCategory":"other"},{"awsResourceType":"AWS::CustomerProfiles::EventStream","awsResourceTypeName":"customerprofiles-eventstream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CustomerProfiles::EventStream\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"EventStreamName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Uri\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CustomerProfiles::EventStream\nProperties:\n  DomainName: String\n  EventStreamName: String\n  Tags: \n    - Tag\n  Uri: String\n","awsServiceName":"CustomerProfiles","awsServiceCategory":"other"},{"awsResourceType":"AWS::CustomerProfiles::Integration","awsResourceTypeName":"customerprofiles-integration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CustomerProfiles::Integration\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"FlowDefinition\" : FlowDefinition,\n      \"ObjectTypeName\" : String,\n      \"ObjectTypeNames\" : [ ObjectTypeMapping, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Uri\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CustomerProfiles::Integration\nProperties:\n  DomainName: String\n  FlowDefinition: \n    FlowDefinition\n  ObjectTypeName: String\n  ObjectTypeNames: \n    - ObjectTypeMapping\n  Tags: \n    - Tag\n  Uri: String\n","awsServiceName":"CustomerProfiles","awsServiceCategory":"other"},{"awsResourceType":"AWS::CustomerProfiles::ObjectType","awsResourceTypeName":"customerprofiles-objecttype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CustomerProfiles::ObjectType\",\n  \"Properties\" : {\n      \"AllowProfileCreation\" : Boolean,\n      \"Description\" : String,\n      \"DomainName\" : String,\n      \"EncryptionKey\" : String,\n      \"ExpirationDays\" : Integer,\n      \"Fields\" : [ FieldMap, ... ],\n      \"Keys\" : [ KeyMap, ... ],\n      \"ObjectTypeName\" : String,\n      \"SourceLastUpdatedTimestampFormat\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CustomerProfiles::ObjectType\nProperties:\n  AllowProfileCreation: Boolean\n  Description: String\n  DomainName: String\n  EncryptionKey: String\n  ExpirationDays: Integer\n  Fields: \n    - FieldMap\n  Keys: \n    - KeyMap\n  ObjectTypeName: String\n  SourceLastUpdatedTimestampFormat: String\n  Tags: \n    - Tag\n  TemplateId: String\n","awsServiceName":"CustomerProfiles","awsServiceCategory":"other"},{"awsResourceType":"AWS::CE::AnomalyMonitor","awsResourceTypeName":"ce-anomalymonitor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CE::AnomalyMonitor\",\n  \"Properties\" : {\n      \"MonitorDimension\" : String,\n      \"MonitorName\" : String,\n      \"MonitorSpecification\" : String,\n      \"MonitorType\" : String,\n      \"ResourceTags\" : [ ResourceTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CE::AnomalyMonitor\nProperties:\n  MonitorDimension: String\n  MonitorName: String\n  MonitorSpecification: String\n  MonitorType: String\n  ResourceTags: \n    - ResourceTag\n","awsServiceName":"CE","awsServiceCategory":"other"},{"awsResourceType":"AWS::CE::AnomalySubscription","awsResourceTypeName":"ce-anomalysubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CE::AnomalySubscription\",\n  \"Properties\" : {\n      \"Frequency\" : String,\n      \"MonitorArnList\" : [ String, ... ],\n      \"ResourceTags\" : [ ResourceTag, ... ],\n      \"Subscribers\" : [ Subscriber, ... ],\n      \"SubscriptionName\" : String,\n      \"Threshold\" : Number,\n      \"ThresholdExpression\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CE::AnomalySubscription\nProperties:\n  Frequency: String\n  MonitorArnList: \n    - String\n  ResourceTags: \n    - ResourceTag\n  Subscribers: \n    - Subscriber\n  SubscriptionName: String\n  Threshold: Number\n  ThresholdExpression: String\n","awsServiceName":"CE","awsServiceCategory":"other"},{"awsResourceType":"AWS::CE::CostCategory","awsResourceTypeName":"ce-costcategory","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CE::CostCategory\",\n  \"Properties\" : {\n      \"DefaultValue\" : String,\n      \"Name\" : String,\n      \"Rules\" : String,\n      \"RuleVersion\" : String,\n      \"SplitChargeRules\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CE::CostCategory\nProperties:\n  DefaultValue: String\n  Name: String\n  Rules: String\n  RuleVersion: String\n  SplitChargeRules: String\n","awsServiceName":"CE","awsServiceCategory":"other"},{"awsResourceType":"AWS::CUR::ReportDefinition","awsResourceTypeName":"cur-reportdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::CUR::ReportDefinition\",\n  \"Properties\" : {\n      \"AdditionalArtifacts\" : [ String, ... ],\n      \"AdditionalSchemaElements\" : [ String, ... ],\n      \"BillingViewArn\" : String,\n      \"Compression\" : String,\n      \"Format\" : String,\n      \"RefreshClosedReports\" : Boolean,\n      \"ReportName\" : String,\n      \"ReportVersioning\" : String,\n      \"S3Bucket\" : String,\n      \"S3Prefix\" : String,\n      \"S3Region\" : String,\n      \"TimeUnit\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::CUR::ReportDefinition\nProperties:\n  AdditionalArtifacts: \n    - String\n  AdditionalSchemaElements: \n    - String\n  BillingViewArn: String\n  Compression: String\n  Format: String\n  RefreshClosedReports: Boolean\n  ReportName: String\n  ReportVersioning: String\n  S3Bucket: String\n  S3Prefix: String\n  S3Region: String\n  TimeUnit: String\n","awsServiceName":"CUR","awsServiceCategory":"financial"},{"awsResourceType":"AWS::BCMDataExports::Export","awsResourceTypeName":"bcmdataexports-export","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::BCMDataExports::Export\",\n  \"Properties\" : {\n      \"Export\" : Export,\n      \"Tags\" : [ ResourceTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::BCMDataExports::Export\nProperties:\n  Export: \n    Export\n  Tags: \n    - ResourceTag\n","awsServiceName":"BCMDataExports","awsServiceCategory":"other"},{"awsResourceType":"AWS::DLM::LifecyclePolicy","awsResourceTypeName":"dlm-lifecyclepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DLM::LifecyclePolicy\",\n  \"Properties\" : {\n      \"CopyTags\" : Boolean,\n      \"CreateInterval\" : Integer,\n      \"CrossRegionCopyTargets\" : Json,\n      \"DefaultPolicy\" : String,\n      \"Description\" : String,\n      \"Exclusions\" : Exclusions,\n      \"ExecutionRoleArn\" : String,\n      \"ExtendDeletion\" : Boolean,\n      \"PolicyDetails\" : PolicyDetails,\n      \"RetainInterval\" : Integer,\n      \"State\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DLM::LifecyclePolicy\nProperties:\n  CopyTags: Boolean\n  CreateInterval: Integer\n  CrossRegionCopyTargets: Json\n  DefaultPolicy: String\n  Description: String\n  Exclusions: \n    Exclusions\n  ExecutionRoleArn: String\n  ExtendDeletion: Boolean\n  PolicyDetails: \n    PolicyDetails\n  RetainInterval: Integer\n  State: String\n  Tags: \n    - Tag\n","awsServiceName":"DLM","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataPipeline::Pipeline","awsResourceTypeName":"datapipeline-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataPipeline::Pipeline\",\n  \"Properties\" : {\n      \"Activate\" : Boolean,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ParameterObjects\" : [ ParameterObject, ... ],\n      \"ParameterValues\" : [ ParameterValue, ... ],\n      \"PipelineObjects\" : [ PipelineObject, ... ],\n      \"PipelineTags\" : [ PipelineTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataPipeline::Pipeline\nProperties:\n  Activate: Boolean\n  Description: String\n  Name: String\n  ParameterObjects: \n    - ParameterObject\n  ParameterValues: \n    - ParameterValue\n  PipelineObjects: \n    - PipelineObject\n  PipelineTags: \n    - PipelineTag\n","awsServiceName":"DataPipeline","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataSync::Agent","awsResourceTypeName":"datasync-agent","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::Agent\",\n  \"Properties\" : {\n      \"ActivationKey\" : String,\n      \"AgentName\" : String,\n      \"SecurityGroupArns\" : [ String, ... ],\n      \"SubnetArns\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcEndpointId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::Agent\nProperties:\n  ActivationKey: String\n  AgentName: String\n  SecurityGroupArns: \n    - String\n  SubnetArns: \n    - String\n  Tags: \n    - Tag\n  VpcEndpointId: String\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationAzureBlob","awsResourceTypeName":"datasync-locationazureblob","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationAzureBlob\",\n  \"Properties\" : {\n      \"AgentArns\" : [ String, ... ],\n      \"AzureAccessTier\" : String,\n      \"AzureBlobAuthenticationType\" : String,\n      \"AzureBlobContainerUrl\" : String,\n      \"AzureBlobSasConfiguration\" : AzureBlobSasConfiguration,\n      \"AzureBlobType\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationAzureBlob\nProperties:\n  AgentArns: \n    - String\n  AzureAccessTier: String\n  AzureBlobAuthenticationType: String\n  AzureBlobContainerUrl: String\n  AzureBlobSasConfiguration: \n    AzureBlobSasConfiguration\n  AzureBlobType: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationEFS","awsResourceTypeName":"datasync-locationefs","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationEFS\",\n  \"Properties\" : {\n      \"AccessPointArn\" : String,\n      \"Ec2Config\" : Ec2Config,\n      \"EfsFilesystemArn\" : String,\n      \"FileSystemAccessRoleArn\" : String,\n      \"InTransitEncryption\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationEFS\nProperties:\n  AccessPointArn: String\n  Ec2Config: \n    Ec2Config\n  EfsFilesystemArn: String\n  FileSystemAccessRoleArn: String\n  InTransitEncryption: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationFSxLustre","awsResourceTypeName":"datasync-locationfsxlustre","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationFSxLustre\",\n  \"Properties\" : {\n      \"FsxFilesystemArn\" : String,\n      \"SecurityGroupArns\" : [ String, ... ],\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationFSxLustre\nProperties:\n  FsxFilesystemArn: String\n  SecurityGroupArns: \n    - String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationFSxONTAP","awsResourceTypeName":"datasync-locationfsxontap","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationFSxONTAP\",\n  \"Properties\" : {\n      \"Protocol\" : Protocol,\n      \"SecurityGroupArns\" : [ String, ... ],\n      \"StorageVirtualMachineArn\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationFSxONTAP\nProperties:\n  Protocol: \n    Protocol\n  SecurityGroupArns: \n    - String\n  StorageVirtualMachineArn: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationFSxOpenZFS","awsResourceTypeName":"datasync-locationfsxopenzfs","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationFSxOpenZFS\",\n  \"Properties\" : {\n      \"FsxFilesystemArn\" : String,\n      \"Protocol\" : Protocol,\n      \"SecurityGroupArns\" : [ String, ... ],\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationFSxOpenZFS\nProperties:\n  FsxFilesystemArn: String\n  Protocol: \n    Protocol\n  SecurityGroupArns: \n    - String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationFSxWindows","awsResourceTypeName":"datasync-locationfsxwindows","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationFSxWindows\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"FsxFilesystemArn\" : String,\n      \"Password\" : String,\n      \"SecurityGroupArns\" : [ String, ... ],\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"User\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationFSxWindows\nProperties:\n  Domain: String\n  FsxFilesystemArn: String\n  Password: String\n  SecurityGroupArns: \n    - String\n  Subdirectory: String\n  Tags: \n    - Tag\n  User: String\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationHDFS","awsResourceTypeName":"datasync-locationhdfs","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationHDFS\",\n  \"Properties\" : {\n      \"AgentArns\" : [ String, ... ],\n      \"AuthenticationType\" : String,\n      \"BlockSize\" : Integer,\n      \"KerberosKeytab\" : String,\n      \"KerberosKrb5Conf\" : String,\n      \"KerberosPrincipal\" : String,\n      \"KmsKeyProviderUri\" : String,\n      \"NameNodes\" : [ NameNode, ... ],\n      \"QopConfiguration\" : QopConfiguration,\n      \"ReplicationFactor\" : Integer,\n      \"SimpleUser\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationHDFS\nProperties:\n  AgentArns: \n    - String\n  AuthenticationType: String\n  BlockSize: Integer\n  KerberosKeytab: String\n  KerberosKrb5Conf: String\n  KerberosPrincipal: String\n  KmsKeyProviderUri: String\n  NameNodes: \n    - NameNode\n  QopConfiguration: \n    QopConfiguration\n  ReplicationFactor: Integer\n  SimpleUser: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationNFS","awsResourceTypeName":"datasync-locationnfs","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationNFS\",\n  \"Properties\" : {\n      \"MountOptions\" : MountOptions,\n      \"OnPremConfig\" : OnPremConfig,\n      \"ServerHostname\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationNFS\nProperties:\n  MountOptions: \n    MountOptions\n  OnPremConfig: \n    OnPremConfig\n  ServerHostname: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationObjectStorage","awsResourceTypeName":"datasync-locationobjectstorage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationObjectStorage\",\n  \"Properties\" : {\n      \"AccessKey\" : String,\n      \"AgentArns\" : [ String, ... ],\n      \"BucketName\" : String,\n      \"SecretKey\" : String,\n      \"ServerCertificate\" : String,\n      \"ServerHostname\" : String,\n      \"ServerPort\" : Integer,\n      \"ServerProtocol\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationObjectStorage\nProperties:\n  AccessKey: String\n  AgentArns: \n    - String\n  BucketName: String\n  SecretKey: String\n  ServerCertificate: String\n  ServerHostname: String\n  ServerPort: Integer\n  ServerProtocol: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationS3","awsResourceTypeName":"datasync-locations3","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationS3\",\n  \"Properties\" : {\n      \"S3BucketArn\" : String,\n      \"S3Config\" : S3Config,\n      \"S3StorageClass\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationS3\nProperties:\n  S3BucketArn: String\n  S3Config: \n    S3Config\n  S3StorageClass: String\n  Subdirectory: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::LocationSMB","awsResourceTypeName":"datasync-locationsmb","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::LocationSMB\",\n  \"Properties\" : {\n      \"AgentArns\" : [ String, ... ],\n      \"Domain\" : String,\n      \"MountOptions\" : MountOptions,\n      \"Password\" : String,\n      \"ServerHostname\" : String,\n      \"Subdirectory\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"User\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::LocationSMB\nProperties:\n  AgentArns: \n    - String\n  Domain: String\n  MountOptions: \n    MountOptions\n  Password: String\n  ServerHostname: String\n  Subdirectory: String\n  Tags: \n    - Tag\n  User: String\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::StorageSystem","awsResourceTypeName":"datasync-storagesystem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::StorageSystem\",\n  \"Properties\" : {\n      \"AgentArns\" : [ String, ... ],\n      \"CloudWatchLogGroupArn\" : String,\n      \"Name\" : String,\n      \"ServerConfiguration\" : ServerConfiguration,\n      \"ServerCredentials\" : ServerCredentials,\n      \"SystemType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::StorageSystem\nProperties:\n  AgentArns: \n    - String\n  CloudWatchLogGroupArn: String\n  Name: String\n  ServerConfiguration: \n    ServerConfiguration\n  ServerCredentials: \n    ServerCredentials\n  SystemType: String\n  Tags: \n    - Tag\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataSync::Task","awsResourceTypeName":"datasync-task","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataSync::Task\",\n  \"Properties\" : {\n      \"CloudWatchLogGroupArn\" : String,\n      \"DestinationLocationArn\" : String,\n      \"Excludes\" : [ FilterRule, ... ],\n      \"Includes\" : [ FilterRule, ... ],\n      \"ManifestConfig\" : ManifestConfig,\n      \"Name\" : String,\n      \"Options\" : Options,\n      \"Schedule\" : TaskSchedule,\n      \"SourceLocationArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskReportConfig\" : TaskReportConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataSync::Task\nProperties:\n  CloudWatchLogGroupArn: String\n  DestinationLocationArn: String\n  Excludes: \n    - FilterRule\n  Includes: \n    - FilterRule\n  ManifestConfig: \n    ManifestConfig\n  Name: String\n  Options: \n    Options\n  Schedule: \n    TaskSchedule\n  SourceLocationArn: String\n  Tags: \n    - Tag\n  TaskReportConfig: \n    TaskReportConfig\n","awsServiceName":"DataSync","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DataZone::DataSource","awsResourceTypeName":"datazone-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::DataSource\",\n  \"Properties\" : {\n      \"AssetFormsInput\" : [ FormInput, ... ],\n      \"Configuration\" : DataSourceConfigurationInput,\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"EnableSetting\" : String,\n      \"EnvironmentIdentifier\" : String,\n      \"Name\" : String,\n      \"ProjectIdentifier\" : String,\n      \"PublishOnImport\" : Boolean,\n      \"Recommendation\" : RecommendationConfiguration,\n      \"Schedule\" : ScheduleConfiguration,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::DataSource\nProperties:\n  AssetFormsInput: \n    - FormInput\n  Configuration: \n    DataSourceConfigurationInput\n  Description: String\n  DomainIdentifier: String\n  EnableSetting: String\n  EnvironmentIdentifier: String\n  Name: String\n  ProjectIdentifier: String\n  PublishOnImport: Boolean\n  Recommendation: \n    RecommendationConfiguration\n  Schedule: \n    ScheduleConfiguration\n  Type: String\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::Domain","awsResourceTypeName":"datazone-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::Domain\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainExecutionRole\" : String,\n      \"KmsKeyIdentifier\" : String,\n      \"Name\" : String,\n      \"SingleSignOn\" : SingleSignOn,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::Domain\nProperties:\n  Description: String\n  DomainExecutionRole: String\n  KmsKeyIdentifier: String\n  Name: String\n  SingleSignOn: \n    SingleSignOn\n  Tags: \n    - Tag\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::Environment","awsResourceTypeName":"datazone-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"EnvironmentProfileIdentifier\" : String,\n      \"GlossaryTerms\" : [ String, ... ],\n      \"Name\" : String,\n      \"ProjectIdentifier\" : String,\n      \"UserParameters\" : [ EnvironmentParameter, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::Environment\nProperties:\n  Description: String\n  DomainIdentifier: String\n  EnvironmentProfileIdentifier: String\n  GlossaryTerms: \n    - String\n  Name: String\n  ProjectIdentifier: String\n  UserParameters: \n    - EnvironmentParameter\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::EnvironmentBlueprintConfiguration","awsResourceTypeName":"datazone-environmentblueprintconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::EnvironmentBlueprintConfiguration\",\n  \"Properties\" : {\n      \"DomainIdentifier\" : String,\n      \"EnabledRegions\" : [ String, ... ],\n      \"EnvironmentBlueprintIdentifier\" : String,\n      \"ManageAccessRoleArn\" : String,\n      \"ProvisioningRoleArn\" : String,\n      \"RegionalParameters\" : [ RegionalParameter, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::EnvironmentBlueprintConfiguration\nProperties:\n  DomainIdentifier: String\n  EnabledRegions: \n    - String\n  EnvironmentBlueprintIdentifier: String\n  ManageAccessRoleArn: String\n  ProvisioningRoleArn: String\n  RegionalParameters: \n    - RegionalParameter\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::EnvironmentProfile","awsResourceTypeName":"datazone-environmentprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::EnvironmentProfile\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"AwsAccountRegion\" : String,\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"EnvironmentBlueprintIdentifier\" : String,\n      \"Name\" : String,\n      \"ProjectIdentifier\" : String,\n      \"UserParameters\" : [ EnvironmentParameter, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::EnvironmentProfile\nProperties:\n  AwsAccountId: String\n  AwsAccountRegion: String\n  Description: String\n  DomainIdentifier: String\n  EnvironmentBlueprintIdentifier: String\n  Name: String\n  ProjectIdentifier: String\n  UserParameters: \n    - EnvironmentParameter\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::Project","awsResourceTypeName":"datazone-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::Project\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DomainIdentifier\" : String,\n      \"GlossaryTerms\" : [ String, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::Project\nProperties:\n  Description: String\n  DomainIdentifier: String\n  GlossaryTerms: \n    - String\n  Name: String\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::DataZone::SubscriptionTarget","awsResourceTypeName":"datazone-subscriptiontarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataZone::SubscriptionTarget\",\n  \"Properties\" : {\n      \"ApplicableAssetTypes\" : [ String, ... ],\n      \"AuthorizedPrincipals\" : [ String, ... ],\n      \"DomainIdentifier\" : String,\n      \"EnvironmentIdentifier\" : String,\n      \"ManageAccessRole\" : String,\n      \"Name\" : String,\n      \"Provider\" : String,\n      \"SubscriptionTargetConfig\" : [ SubscriptionTargetForm, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataZone::SubscriptionTarget\nProperties:\n  ApplicableAssetTypes: \n    - String\n  AuthorizedPrincipals: \n    - String\n  DomainIdentifier: String\n  EnvironmentIdentifier: String\n  ManageAccessRole: String\n  Name: String\n  Provider: String\n  SubscriptionTargetConfig: \n    - SubscriptionTargetForm\n  Type: String\n","awsServiceName":"DataZone","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::Farm","awsResourceTypeName":"deadline-farm","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::Farm\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"KmsKeyArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::Farm\nProperties:\n  Description: String\n  DisplayName: String\n  KmsKeyArn: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::Fleet","awsResourceTypeName":"deadline-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::Fleet\",\n  \"Properties\" : {\n      \"Configuration\" : FleetConfiguration,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"FarmId\" : String,\n      \"MaxWorkerCount\" : Integer,\n      \"MinWorkerCount\" : Integer,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::Fleet\nProperties:\n  Configuration: \n    FleetConfiguration\n  Description: String\n  DisplayName: String\n  FarmId: String\n  MaxWorkerCount: Integer\n  MinWorkerCount: Integer\n  RoleArn: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::LicenseEndpoint","awsResourceTypeName":"deadline-licenseendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::LicenseEndpoint\",\n  \"Properties\" : {\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::LicenseEndpoint\nProperties:\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  VpcId: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::MeteredProduct","awsResourceTypeName":"deadline-meteredproduct","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::MeteredProduct\",\n  \"Properties\" : {\n      \"Family\" : String,\n      \"LicenseEndpointId\" : String,\n      \"Port\" : Integer,\n      \"ProductId\" : String,\n      \"Vendor\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::MeteredProduct\nProperties:\n  Family: String\n  LicenseEndpointId: String\n  Port: Integer\n  ProductId: String\n  Vendor: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::Queue","awsResourceTypeName":"deadline-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::Queue\",\n  \"Properties\" : {\n      \"AllowedStorageProfileIds\" : [ String, ... ],\n      \"DefaultBudgetAction\" : String,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"FarmId\" : String,\n      \"JobAttachmentSettings\" : JobAttachmentSettings,\n      \"JobRunAsUser\" : JobRunAsUser,\n      \"RequiredFileSystemLocationNames\" : [ String, ... ],\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::Queue\nProperties:\n  AllowedStorageProfileIds: \n    - String\n  DefaultBudgetAction: String\n  Description: String\n  DisplayName: String\n  FarmId: String\n  JobAttachmentSettings: \n    JobAttachmentSettings\n  JobRunAsUser: \n    JobRunAsUser\n  RequiredFileSystemLocationNames: \n    - String\n  RoleArn: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::QueueEnvironment","awsResourceTypeName":"deadline-queueenvironment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::QueueEnvironment\",\n  \"Properties\" : {\n      \"FarmId\" : String,\n      \"Priority\" : Integer,\n      \"QueueId\" : String,\n      \"Template\" : String,\n      \"TemplateType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::QueueEnvironment\nProperties:\n  FarmId: String\n  Priority: Integer\n  QueueId: String\n  Template: String\n  TemplateType: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::QueueFleetAssociation","awsResourceTypeName":"deadline-queuefleetassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::QueueFleetAssociation\",\n  \"Properties\" : {\n      \"FarmId\" : String,\n      \"FleetId\" : String,\n      \"QueueId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::QueueFleetAssociation\nProperties:\n  FarmId: String\n  FleetId: String\n  QueueId: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::Deadline::StorageProfile","awsResourceTypeName":"deadline-storageprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Deadline::StorageProfile\",\n  \"Properties\" : {\n      \"DisplayName\" : String,\n      \"FarmId\" : String,\n      \"FileSystemLocations\" : [ FileSystemLocation, ... ],\n      \"OsFamily\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Deadline::StorageProfile\nProperties:\n  DisplayName: String\n  FarmId: String\n  FileSystemLocations: \n    - FileSystemLocation\n  OsFamily: String\n","awsServiceName":"Deadline","awsServiceCategory":"other"},{"awsResourceType":"AWS::DAX::Cluster","awsResourceTypeName":"dax-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DAX::Cluster\",\n  \"Properties\" : {\n      \"AvailabilityZones\" : [ String, ... ],\n      \"ClusterEndpointEncryptionType\" : String,\n      \"ClusterName\" : String,\n      \"Description\" : String,\n      \"IAMRoleARN\" : String,\n      \"NodeType\" : String,\n      \"NotificationTopicARN\" : String,\n      \"ParameterGroupName\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"ReplicationFactor\" : Integer,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SSESpecification\" : SSESpecification,\n      \"SubnetGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DAX::Cluster\nProperties:\n  AvailabilityZones: \n    - String\n  ClusterEndpointEncryptionType: String\n  ClusterName: String\n  Description: String\n  IAMRoleARN: String\n  NodeType: String\n  NotificationTopicARN: String\n  ParameterGroupName: String\n  PreferredMaintenanceWindow: String\n  ReplicationFactor: Integer\n  SecurityGroupIds: \n    - String\n  SSESpecification: \n    SSESpecification\n  SubnetGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"DAX","awsServiceCategory":"other"},{"awsResourceType":"AWS::DAX::ParameterGroup","awsResourceTypeName":"dax-parametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DAX::ParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ParameterGroupName\" : String,\n      \"ParameterNameValues\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DAX::ParameterGroup\nProperties:\n  Description: String\n  ParameterGroupName: String\n  ParameterNameValues: Json\n","awsServiceName":"DAX","awsServiceCategory":"other"},{"awsResourceType":"AWS::DAX::SubnetGroup","awsResourceTypeName":"dax-subnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DAX::SubnetGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"SubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DAX::SubnetGroup\nProperties:\n  Description: String\n  SubnetGroupName: String\n  SubnetIds: \n    - String\n","awsServiceName":"DAX","awsServiceCategory":"other"},{"awsResourceType":"AWS::Detective::Graph","awsResourceTypeName":"detective-graph","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Detective::Graph\",\n  \"Properties\" : {\n      \"AutoEnableMembers\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Detective::Graph\nProperties:\n  AutoEnableMembers: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"Detective","awsServiceCategory":"security"},{"awsResourceType":"AWS::Detective::MemberInvitation","awsResourceTypeName":"detective-memberinvitation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Detective::MemberInvitation\",\n  \"Properties\" : {\n      \"DisableEmailNotification\" : Boolean,\n      \"GraphArn\" : String,\n      \"MemberEmailAddress\" : String,\n      \"MemberId\" : String,\n      \"Message\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Detective::MemberInvitation\nProperties:\n  DisableEmailNotification: Boolean\n  GraphArn: String\n  MemberEmailAddress: String\n  MemberId: String\n  Message: String\n","awsServiceName":"Detective","awsServiceCategory":"security"},{"awsResourceType":"AWS::Detective::OrganizationAdmin","awsResourceTypeName":"detective-organizationadmin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Detective::OrganizationAdmin\",\n  \"Properties\" : {\n      \"AccountId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Detective::OrganizationAdmin\nProperties:\n  AccountId: String\n","awsServiceName":"Detective","awsServiceCategory":"security"},{"awsResourceType":"AWS::DeviceFarm::DevicePool","awsResourceTypeName":"devicefarm-devicepool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::DevicePool\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MaxDevices\" : Integer,\n      \"Name\" : String,\n      \"ProjectArn\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::DevicePool\nProperties:\n  Description: String\n  MaxDevices: Integer\n  Name: String\n  ProjectArn: String\n  Rules: \n    - Rule\n  Tags: \n    - Tag\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::InstanceProfile","awsResourceTypeName":"devicefarm-instanceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::InstanceProfile\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExcludeAppPackagesFromCleanup\" : [ String, ... ],\n      \"Name\" : String,\n      \"PackageCleanup\" : Boolean,\n      \"RebootAfterUse\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::InstanceProfile\nProperties:\n  Description: String\n  ExcludeAppPackagesFromCleanup: \n    - String\n  Name: String\n  PackageCleanup: Boolean\n  RebootAfterUse: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::NetworkProfile","awsResourceTypeName":"devicefarm-networkprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::NetworkProfile\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DownlinkBandwidthBits\" : Integer,\n      \"DownlinkDelayMs\" : Integer,\n      \"DownlinkJitterMs\" : Integer,\n      \"DownlinkLossPercent\" : Integer,\n      \"Name\" : String,\n      \"ProjectArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UplinkBandwidthBits\" : Integer,\n      \"UplinkDelayMs\" : Integer,\n      \"UplinkJitterMs\" : Integer,\n      \"UplinkLossPercent\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::NetworkProfile\nProperties:\n  Description: String\n  DownlinkBandwidthBits: Integer\n  DownlinkDelayMs: Integer\n  DownlinkJitterMs: Integer\n  DownlinkLossPercent: Integer\n  Name: String\n  ProjectArn: String\n  Tags: \n    - Tag\n  UplinkBandwidthBits: Integer\n  UplinkDelayMs: Integer\n  UplinkJitterMs: Integer\n  UplinkLossPercent: Integer\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::Project","awsResourceTypeName":"devicefarm-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::Project\",\n  \"Properties\" : {\n      \"DefaultJobTimeoutMinutes\" : Integer,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::Project\nProperties:\n  DefaultJobTimeoutMinutes: Integer\n  Name: String\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::TestGridProject","awsResourceTypeName":"devicefarm-testgridproject","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::TestGridProject\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::TestGridProject\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DeviceFarm::VPCEConfiguration","awsResourceTypeName":"devicefarm-vpceconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DeviceFarm::VPCEConfiguration\",\n  \"Properties\" : {\n      \"ServiceDnsName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpceConfigurationDescription\" : String,\n      \"VpceConfigurationName\" : String,\n      \"VpceServiceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DeviceFarm::VPCEConfiguration\nProperties:\n  ServiceDnsName: String\n  Tags: \n    - Tag\n  VpceConfigurationDescription: String\n  VpceConfigurationName: String\n  VpceServiceName: String\n","awsServiceName":"DeviceFarm","awsServiceCategory":"other"},{"awsResourceType":"AWS::DevOpsGuru::LogAnomalyDetectionIntegration","awsResourceTypeName":"devopsguru-loganomalydetectionintegration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DevOpsGuru::LogAnomalyDetectionIntegration\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DevOpsGuru::LogAnomalyDetectionIntegration","awsServiceName":"DevOpsGuru","awsServiceCategory":"other"},{"awsResourceType":"AWS::DevOpsGuru::NotificationChannel","awsResourceTypeName":"devopsguru-notificationchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DevOpsGuru::NotificationChannel\",\n  \"Properties\" : {\n      \"Config\" : NotificationChannelConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DevOpsGuru::NotificationChannel\nProperties:\n  Config: \n    NotificationChannelConfig\n","awsServiceName":"DevOpsGuru","awsServiceCategory":"other"},{"awsResourceType":"AWS::DevOpsGuru::ResourceCollection","awsResourceTypeName":"devopsguru-resourcecollection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DevOpsGuru::ResourceCollection\",\n  \"Properties\" : {\n      \"ResourceCollectionFilter\" : ResourceCollectionFilter\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DevOpsGuru::ResourceCollection\nProperties:\n  ResourceCollectionFilter: \n    ResourceCollectionFilter\n","awsServiceName":"DevOpsGuru","awsServiceCategory":"other"},{"awsResourceType":"AWS::DirectoryService::MicrosoftAD","awsResourceTypeName":"directoryservice-microsoftad","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DirectoryService::MicrosoftAD\",\n  \"Properties\" : {\n      \"CreateAlias\" : Boolean,\n      \"Edition\" : String,\n      \"EnableSso\" : Boolean,\n      \"Name\" : String,\n      \"Password\" : String,\n      \"ShortName\" : String,\n      \"VpcSettings\" : VpcSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DirectoryService::MicrosoftAD\nProperties:\n  CreateAlias: Boolean\n  Edition: String\n  EnableSso: Boolean\n  Name: String\n  Password: String\n  ShortName: String\n  VpcSettings: \n    VpcSettings\n","awsServiceName":"DirectoryService","awsServiceCategory":"other"},{"awsResourceType":"AWS::DirectoryService::SimpleAD","awsResourceTypeName":"directoryservice-simplead","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DirectoryService::SimpleAD\",\n  \"Properties\" : {\n      \"CreateAlias\" : Boolean,\n      \"Description\" : String,\n      \"EnableSso\" : Boolean,\n      \"Name\" : String,\n      \"Password\" : String,\n      \"ShortName\" : String,\n      \"Size\" : String,\n      \"VpcSettings\" : VpcSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DirectoryService::SimpleAD\nProperties:\n  CreateAlias: Boolean\n  Description: String\n  EnableSso: Boolean\n  Name: String\n  Password: String\n  ShortName: String\n  Size: String\n  VpcSettings: \n    VpcSettings\n","awsServiceName":"DirectoryService","awsServiceCategory":"other"},{"awsResourceType":"AWS::DMS::Certificate","awsResourceTypeName":"dms-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::Certificate\",\n  \"Properties\" : {\n      \"CertificateIdentifier\" : String,\n      \"CertificatePem\" : String,\n      \"CertificateWallet\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::Certificate\nProperties:\n  CertificateIdentifier: String\n  CertificatePem: String\n  CertificateWallet: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::DataProvider","awsResourceTypeName":"dms-dataprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::DataProvider\",\n  \"Properties\" : {\n      \"DataProviderIdentifier\" : String,\n      \"DataProviderName\" : String,\n      \"Description\" : String,\n      \"Engine\" : String,\n      \"ExactSettings\" : Boolean,\n      \"Settings\" : Settings,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::DataProvider\nProperties:\n  DataProviderIdentifier: String\n  DataProviderName: String\n  Description: String\n  Engine: String\n  ExactSettings: Boolean\n  Settings: \n    Settings\n  Tags: \n    - Tag\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::Endpoint","awsResourceTypeName":"dms-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::Endpoint\",\n  \"Properties\" : {\n      \"CertificateArn\" : String,\n      \"DatabaseName\" : String,\n      \"DocDbSettings\" : DocDbSettings,\n      \"DynamoDbSettings\" : DynamoDbSettings,\n      \"ElasticsearchSettings\" : ElasticsearchSettings,\n      \"EndpointIdentifier\" : String,\n      \"EndpointType\" : String,\n      \"EngineName\" : String,\n      \"ExtraConnectionAttributes\" : String,\n      \"GcpMySQLSettings\" : GcpMySQLSettings,\n      \"IbmDb2Settings\" : IbmDb2Settings,\n      \"KafkaSettings\" : KafkaSettings,\n      \"KinesisSettings\" : KinesisSettings,\n      \"KmsKeyId\" : String,\n      \"MicrosoftSqlServerSettings\" : MicrosoftSqlServerSettings,\n      \"MongoDbSettings\" : MongoDbSettings,\n      \"MySqlSettings\" : MySqlSettings,\n      \"NeptuneSettings\" : NeptuneSettings,\n      \"OracleSettings\" : OracleSettings,\n      \"Password\" : String,\n      \"Port\" : Integer,\n      \"PostgreSqlSettings\" : PostgreSqlSettings,\n      \"RedisSettings\" : RedisSettings,\n      \"RedshiftSettings\" : RedshiftSettings,\n      \"ResourceIdentifier\" : String,\n      \"S3Settings\" : S3Settings,\n      \"ServerName\" : String,\n      \"SslMode\" : String,\n      \"SybaseSettings\" : SybaseSettings,\n      \"Tags\" : [ Tag, ... ],\n      \"Username\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::Endpoint\nProperties:\n  CertificateArn: String\n  DatabaseName: String\n  DocDbSettings: \n    DocDbSettings\n  DynamoDbSettings: \n    DynamoDbSettings\n  ElasticsearchSettings: \n    ElasticsearchSettings\n  EndpointIdentifier: String\n  EndpointType: String\n  EngineName: String\n  ExtraConnectionAttributes: String\n  GcpMySQLSettings: \n    GcpMySQLSettings\n  IbmDb2Settings: \n    IbmDb2Settings\n  KafkaSettings: \n    KafkaSettings\n  KinesisSettings: \n    KinesisSettings\n  KmsKeyId: String\n  MicrosoftSqlServerSettings: \n    MicrosoftSqlServerSettings\n  MongoDbSettings: \n    MongoDbSettings\n  MySqlSettings: \n    MySqlSettings\n  NeptuneSettings: \n    NeptuneSettings\n  OracleSettings: \n    OracleSettings\n  Password: String\n  Port: Integer\n  PostgreSqlSettings: \n    PostgreSqlSettings\n  RedisSettings: \n    RedisSettings\n  RedshiftSettings: \n    RedshiftSettings\n  ResourceIdentifier: String\n  S3Settings: \n    S3Settings\n  ServerName: String\n  SslMode: String\n  SybaseSettings: \n    SybaseSettings\n  Tags: \n    - Tag\n  Username: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::EventSubscription","awsResourceTypeName":"dms-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n  Tags: \n    - Tag\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::InstanceProfile","awsResourceTypeName":"dms-instanceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::InstanceProfile\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"Description\" : String,\n      \"InstanceProfileIdentifier\" : String,\n      \"InstanceProfileName\" : String,\n      \"KmsKeyArn\" : String,\n      \"NetworkType\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"SubnetGroupIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroups\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::InstanceProfile\nProperties:\n  AvailabilityZone: String\n  Description: String\n  InstanceProfileIdentifier: String\n  InstanceProfileName: String\n  KmsKeyArn: String\n  NetworkType: String\n  PubliclyAccessible: Boolean\n  SubnetGroupIdentifier: String\n  Tags: \n    - Tag\n  VpcSecurityGroups: \n    - String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::MigrationProject","awsResourceTypeName":"dms-migrationproject","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::MigrationProject\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceProfileArn\" : String,\n      \"InstanceProfileIdentifier\" : String,\n      \"InstanceProfileName\" : String,\n      \"MigrationProjectIdentifier\" : String,\n      \"MigrationProjectName\" : String,\n      \"SchemaConversionApplicationAttributes\" : SchemaConversionApplicationAttributes,\n      \"SourceDataProviderDescriptors\" : [ DataProviderDescriptor, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetDataProviderDescriptors\" : [ DataProviderDescriptor, ... ],\n      \"TransformationRules\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::MigrationProject\nProperties:\n  Description: String\n  InstanceProfileArn: String\n  InstanceProfileIdentifier: String\n  InstanceProfileName: String\n  MigrationProjectIdentifier: String\n  MigrationProjectName: String\n  SchemaConversionApplicationAttributes: \n    SchemaConversionApplicationAttributes\n  SourceDataProviderDescriptors: \n    - DataProviderDescriptor\n  Tags: \n    - Tag\n  TargetDataProviderDescriptors: \n    - DataProviderDescriptor\n  TransformationRules: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationConfig","awsResourceTypeName":"dms-replicationconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationConfig\",\n  \"Properties\" : {\n      \"ComputeConfig\" : ComputeConfig,\n      \"ReplicationConfigArn\" : String,\n      \"ReplicationConfigIdentifier\" : String,\n      \"ReplicationSettings\" : Json,\n      \"ReplicationType\" : String,\n      \"ResourceIdentifier\" : String,\n      \"SourceEndpointArn\" : String,\n      \"SupplementalSettings\" : Json,\n      \"TableMappings\" : Json,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetEndpointArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationConfig\nProperties:\n  ComputeConfig: \n    ComputeConfig\n  ReplicationConfigArn: String\n  ReplicationConfigIdentifier: String\n  ReplicationSettings: Json\n  ReplicationType: String\n  ResourceIdentifier: String\n  SourceEndpointArn: String\n  SupplementalSettings: Json\n  TableMappings: Json\n  Tags: \n    - Tag\n  TargetEndpointArn: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationInstance","awsResourceTypeName":"dms-replicationinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationInstance\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : Integer,\n      \"AllowMajorVersionUpgrade\" : Boolean,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"EngineVersion\" : String,\n      \"KmsKeyId\" : String,\n      \"MultiAZ\" : Boolean,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"ReplicationInstanceClass\" : String,\n      \"ReplicationInstanceIdentifier\" : String,\n      \"ReplicationSubnetGroupIdentifier\" : String,\n      \"ResourceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationInstance\nProperties:\n  AllocatedStorage: Integer\n  AllowMajorVersionUpgrade: Boolean\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  EngineVersion: String\n  KmsKeyId: String\n  MultiAZ: Boolean\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  ReplicationInstanceClass: String\n  ReplicationInstanceIdentifier: String\n  ReplicationSubnetGroupIdentifier: String\n  ResourceIdentifier: String\n  Tags: \n    - Tag\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationSubnetGroup","awsResourceTypeName":"dms-replicationsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationSubnetGroup\",\n  \"Properties\" : {\n      \"ReplicationSubnetGroupDescription\" : String,\n      \"ReplicationSubnetGroupIdentifier\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationSubnetGroup\nProperties:\n  ReplicationSubnetGroupDescription: String\n  ReplicationSubnetGroupIdentifier: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DMS::ReplicationTask","awsResourceTypeName":"dms-replicationtask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DMS::ReplicationTask\",\n  \"Properties\" : {\n      \"CdcStartPosition\" : String,\n      \"CdcStartTime\" : Number,\n      \"CdcStopPosition\" : String,\n      \"MigrationType\" : String,\n      \"ReplicationInstanceArn\" : String,\n      \"ReplicationTaskIdentifier\" : String,\n      \"ReplicationTaskSettings\" : String,\n      \"ResourceIdentifier\" : String,\n      \"SourceEndpointArn\" : String,\n      \"TableMappings\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetEndpointArn\" : String,\n      \"TaskData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DMS::ReplicationTask\nProperties:\n  CdcStartPosition: String\n  CdcStartTime: Number\n  CdcStopPosition: String\n  MigrationType: String\n  ReplicationInstanceArn: String\n  ReplicationTaskIdentifier: String\n  ReplicationTaskSettings: String\n  ResourceIdentifier: String\n  SourceEndpointArn: String\n  TableMappings: String\n  Tags: \n    - Tag\n  TargetEndpointArn: String\n  TaskData: String\n","awsServiceName":"DMS","awsServiceCategory":"migration"},{"awsResourceType":"AWS::DocDB::DBCluster","awsResourceTypeName":"docdb-dbcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBCluster\",\n  \"Properties\" : {\n      \"AvailabilityZones\" : [ String, ... ],\n      \"BackupRetentionPeriod\" : Integer,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterParameterGroupName\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"DeletionProtection\" : Boolean,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EngineVersion\" : String,\n      \"KmsKeyId\" : String,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"Port\" : Integer,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"RestoreToTime\" : String,\n      \"RestoreType\" : String,\n      \"SnapshotIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"StorageType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBCluster\nProperties:\n  AvailabilityZones: \n    - String\n  BackupRetentionPeriod: Integer\n  CopyTagsToSnapshot: Boolean\n  DBClusterIdentifier: String\n  DBClusterParameterGroupName: String\n  DBSubnetGroupName: String\n  DeletionProtection: Boolean\n  EnableCloudwatchLogsExports: \n    - String\n  EngineVersion: String\n  KmsKeyId: String\n  MasterUsername: String\n  MasterUserPassword: String\n  Port: Integer\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  RestoreToTime: String\n  RestoreType: String\n  SnapshotIdentifier: String\n  SourceDBClusterIdentifier: String\n  StorageEncrypted: Boolean\n  StorageType: String\n  Tags: \n    - Tag\n  UseLatestRestorableTime: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::DBClusterParameterGroup","awsResourceTypeName":"docdb-dbclusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBClusterParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Name\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBClusterParameterGroup\nProperties:\n  Description: String\n  Family: String\n  Name: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::DBInstance","awsResourceTypeName":"docdb-dbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBInstance\",\n  \"Properties\" : {\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"CACertificateIdentifier\" : String,\n      \"CertificateRotationRestart\" : Boolean,\n      \"DBClusterIdentifier\" : String,\n      \"DBInstanceClass\" : String,\n      \"DBInstanceIdentifier\" : String,\n      \"EnablePerformanceInsights\" : Boolean,\n      \"PreferredMaintenanceWindow\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBInstance\nProperties:\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  CACertificateIdentifier: String\n  CertificateRotationRestart: Boolean\n  DBClusterIdentifier: String\n  DBInstanceClass: String\n  DBInstanceIdentifier: String\n  EnablePerformanceInsights: Boolean\n  PreferredMaintenanceWindow: String\n  Tags: \n    - Tag\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::DBSubnetGroup","awsResourceTypeName":"docdb-dbsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::DBSubnetGroup\",\n  \"Properties\" : {\n      \"DBSubnetGroupDescription\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::DBSubnetGroup\nProperties:\n  DBSubnetGroupDescription: String\n  DBSubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDB::EventSubscription","awsResourceTypeName":"docdb-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDB::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDB::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n","awsServiceName":"DocDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DocDBElastic::Cluster","awsResourceTypeName":"docdbelastic-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DocDBElastic::Cluster\",\n  \"Properties\" : {\n      \"AdminUserName\" : String,\n      \"AdminUserPassword\" : String,\n      \"AuthType\" : String,\n      \"BackupRetentionPeriod\" : Integer,\n      \"ClusterName\" : String,\n      \"KmsKeyId\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"ShardCapacity\" : Integer,\n      \"ShardCount\" : Integer,\n      \"ShardInstanceCount\" : Integer,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DocDBElastic::Cluster\nProperties:\n  AdminUserName: String\n  AdminUserPassword: String\n  AuthType: String\n  BackupRetentionPeriod: Integer\n  ClusterName: String\n  KmsKeyId: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  ShardCapacity: Integer\n  ShardCount: Integer\n  ShardInstanceCount: Integer\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"DocDBElastic","awsServiceCategory":"database"},{"awsResourceType":"AWS::DynamoDB::GlobalTable","awsResourceTypeName":"dynamodb-globaltable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DynamoDB::GlobalTable\",\n  \"Properties\" : {\n      \"AttributeDefinitions\" : [ AttributeDefinition, ... ],\n      \"BillingMode\" : String,\n      \"GlobalSecondaryIndexes\" : [ GlobalSecondaryIndex, ... ],\n      \"KeySchema\" : [ KeySchema, ... ],\n      \"LocalSecondaryIndexes\" : [ LocalSecondaryIndex, ... ],\n      \"Replicas\" : [ ReplicaSpecification, ... ],\n      \"SSESpecification\" : SSESpecification,\n      \"StreamSpecification\" : StreamSpecification,\n      \"TableName\" : String,\n      \"TimeToLiveSpecification\" : TimeToLiveSpecification,\n      \"WriteProvisionedThroughputSettings\" : WriteProvisionedThroughputSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DynamoDB::GlobalTable\nProperties:\n  AttributeDefinitions: \n    - AttributeDefinition\n  BillingMode: String\n  GlobalSecondaryIndexes: \n    - GlobalSecondaryIndex\n  KeySchema: \n    - KeySchema\n  LocalSecondaryIndexes: \n    - LocalSecondaryIndex\n  Replicas: \n    - ReplicaSpecification\n  SSESpecification: \n    SSESpecification\n  StreamSpecification: \n    StreamSpecification\n  TableName: String\n  TimeToLiveSpecification: \n    TimeToLiveSpecification\n  WriteProvisionedThroughputSettings: \n    WriteProvisionedThroughputSettings\n","awsServiceName":"DynamoDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::DynamoDB::Table","awsResourceTypeName":"dynamodb-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DynamoDB::Table\",\n  \"Properties\" : {\n      \"AttributeDefinitions\" : [ AttributeDefinition, ... ],\n      \"BillingMode\" : String,\n      \"ContributorInsightsSpecification\" : ContributorInsightsSpecification,\n      \"DeletionProtectionEnabled\" : Boolean,\n      \"GlobalSecondaryIndexes\" : [ GlobalSecondaryIndex, ... ],\n      \"ImportSourceSpecification\" : ImportSourceSpecification,\n      \"KeySchema\" : [ KeySchema, ... ],\n      \"KinesisStreamSpecification\" : KinesisStreamSpecification,\n      \"LocalSecondaryIndexes\" : [ LocalSecondaryIndex, ... ],\n      \"PointInTimeRecoverySpecification\" : PointInTimeRecoverySpecification,\n      \"ProvisionedThroughput\" : ProvisionedThroughput,\n      \"ResourcePolicy\" : ResourcePolicy,\n      \"SSESpecification\" : SSESpecification,\n      \"StreamSpecification\" : StreamSpecification,\n      \"TableClass\" : String,\n      \"TableName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeToLiveSpecification\" : TimeToLiveSpecification\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DynamoDB::Table\nProperties:\n  AttributeDefinitions: \n    - AttributeDefinition\n  BillingMode: String\n  ContributorInsightsSpecification: \n    ContributorInsightsSpecification\n  DeletionProtectionEnabled: Boolean\n  GlobalSecondaryIndexes: \n    - GlobalSecondaryIndex\n  ImportSourceSpecification: \n    ImportSourceSpecification\n  KeySchema: \n    - KeySchema\n  KinesisStreamSpecification: \n    KinesisStreamSpecification\n  LocalSecondaryIndexes: \n    - LocalSecondaryIndex\n  PointInTimeRecoverySpecification: \n    PointInTimeRecoverySpecification\n  ProvisionedThroughput: \n    ProvisionedThroughput\n  ResourcePolicy: \n    ResourcePolicy\n  SSESpecification: \n    SSESpecification\n  StreamSpecification: \n    StreamSpecification\n  TableClass: String\n  TableName: String\n  Tags: \n    - Tag\n  TimeToLiveSpecification: \n    TimeToLiveSpecification\n","awsServiceName":"DynamoDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::EC2::CapacityReservation","awsResourceTypeName":"ec2-capacityreservation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CapacityReservation\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"EbsOptimized\" : Boolean,\n      \"EndDate\" : String,\n      \"EndDateType\" : String,\n      \"EphemeralStorage\" : Boolean,\n      \"InstanceCount\" : Integer,\n      \"InstanceMatchCriteria\" : String,\n      \"InstancePlatform\" : String,\n      \"InstanceType\" : String,\n      \"OutPostArn\" : String,\n      \"PlacementGroupArn\" : String,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"Tenancy\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CapacityReservation\nProperties:\n  AvailabilityZone: String\n  EbsOptimized: Boolean\n  EndDate: String\n  EndDateType: String\n  EphemeralStorage: Boolean\n  InstanceCount: Integer\n  InstanceMatchCriteria: String\n  InstancePlatform: String\n  InstanceType: String\n  OutPostArn: String\n  PlacementGroupArn: String\n  TagSpecifications: \n    - TagSpecification\n  Tenancy: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::CapacityReservationFleet","awsResourceTypeName":"ec2-capacityreservationfleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CapacityReservationFleet\",\n  \"Properties\" : {\n      \"AllocationStrategy\" : String,\n      \"EndDate\" : String,\n      \"InstanceMatchCriteria\" : String,\n      \"InstanceTypeSpecifications\" : [ InstanceTypeSpecification, ... ],\n      \"NoRemoveEndDate\" : Boolean,\n      \"RemoveEndDate\" : Boolean,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"Tenancy\" : String,\n      \"TotalTargetCapacity\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CapacityReservationFleet\nProperties:\n  AllocationStrategy: String\n  EndDate: String\n  InstanceMatchCriteria: String\n  InstanceTypeSpecifications: \n    - InstanceTypeSpecification\n  NoRemoveEndDate: Boolean\n  RemoveEndDate: Boolean\n  TagSpecifications: \n    - TagSpecification\n  Tenancy: String\n  TotalTargetCapacity: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::CarrierGateway","awsResourceTypeName":"ec2-carriergateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CarrierGateway\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CarrierGateway\nProperties:\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnAuthorizationRule","awsResourceTypeName":"ec2-clientvpnauthorizationrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnAuthorizationRule\",\n  \"Properties\" : {\n      \"AccessGroupId\" : String,\n      \"AuthorizeAllGroups\" : Boolean,\n      \"ClientVpnEndpointId\" : String,\n      \"Description\" : String,\n      \"TargetNetworkCidr\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnAuthorizationRule\nProperties:\n  AccessGroupId: String\n  AuthorizeAllGroups: Boolean\n  ClientVpnEndpointId: String\n  Description: String\n  TargetNetworkCidr: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnEndpoint","awsResourceTypeName":"ec2-clientvpnendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnEndpoint\",\n  \"Properties\" : {\n      \"AuthenticationOptions\" : [ ClientAuthenticationRequest, ... ],\n      \"ClientCidrBlock\" : String,\n      \"ClientConnectOptions\" : ClientConnectOptions,\n      \"ClientLoginBannerOptions\" : ClientLoginBannerOptions,\n      \"ConnectionLogOptions\" : ConnectionLogOptions,\n      \"Description\" : String,\n      \"DnsServers\" : [ String, ... ],\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SelfServicePortal\" : String,\n      \"ServerCertificateArn\" : String,\n      \"SessionTimeoutHours\" : Integer,\n      \"SplitTunnel\" : Boolean,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"TransportProtocol\" : String,\n      \"VpcId\" : String,\n      \"VpnPort\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnEndpoint\nProperties:\n  AuthenticationOptions: \n    - ClientAuthenticationRequest\n  ClientCidrBlock: String\n  ClientConnectOptions: \n    ClientConnectOptions\n  ClientLoginBannerOptions: \n    ClientLoginBannerOptions\n  ConnectionLogOptions: \n    ConnectionLogOptions\n  Description: String\n  DnsServers: \n    - String\n  SecurityGroupIds: \n    - String\n  SelfServicePortal: String\n  ServerCertificateArn: String\n  SessionTimeoutHours: Integer\n  SplitTunnel: Boolean\n  TagSpecifications: \n    - TagSpecification\n  TransportProtocol: String\n  VpcId: String\n  VpnPort: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnRoute","awsResourceTypeName":"ec2-clientvpnroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnRoute\",\n  \"Properties\" : {\n      \"ClientVpnEndpointId\" : String,\n      \"Description\" : String,\n      \"DestinationCidrBlock\" : String,\n      \"TargetVpcSubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnRoute\nProperties:\n  ClientVpnEndpointId: String\n  Description: String\n  DestinationCidrBlock: String\n  TargetVpcSubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::ClientVpnTargetNetworkAssociation","awsResourceTypeName":"ec2-clientvpntargetnetworkassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::ClientVpnTargetNetworkAssociation\",\n  \"Properties\" : {\n      \"ClientVpnEndpointId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::ClientVpnTargetNetworkAssociation\nProperties:\n  ClientVpnEndpointId: String\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::CustomerGateway","awsResourceTypeName":"ec2-customergateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::CustomerGateway\",\n  \"Properties\" : {\n      \"BgpAsn\" : Integer,\n      \"BgpAsnExtended\" : Number,\n      \"CertificateArn\" : String,\n      \"DeviceName\" : String,\n      \"IpAddress\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::CustomerGateway\nProperties:\n  BgpAsn: Integer\n  BgpAsnExtended: Number\n  CertificateArn: String\n  DeviceName: String\n  IpAddress: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::DHCPOptions","awsResourceTypeName":"ec2-dhcpoptions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::DHCPOptions\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"DomainNameServers\" : [ String, ... ],\n      \"Ipv6AddressPreferredLeaseTime\" : Integer,\n      \"NetbiosNameServers\" : [ String, ... ],\n      \"NetbiosNodeType\" : Integer,\n      \"NtpServers\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::DHCPOptions\nProperties:\n  DomainName: String\n  DomainNameServers: \n    - String\n  Ipv6AddressPreferredLeaseTime: Integer\n  NetbiosNameServers: \n    - String\n  NetbiosNodeType: Integer\n  NtpServers: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EC2Fleet","awsResourceTypeName":"ec2-ec2fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EC2Fleet\",\n  \"Properties\" : {\n      \"Context\" : String,\n      \"ExcessCapacityTerminationPolicy\" : String,\n      \"LaunchTemplateConfigs\" : [ FleetLaunchTemplateConfigRequest, ... ],\n      \"OnDemandOptions\" : OnDemandOptionsRequest,\n      \"ReplaceUnhealthyInstances\" : Boolean,\n      \"SpotOptions\" : SpotOptionsRequest,\n      \"TagSpecifications\" : [ TagSpecification, ... ],\n      \"TargetCapacitySpecification\" : TargetCapacitySpecificationRequest,\n      \"TerminateInstancesWithExpiration\" : Boolean,\n      \"Type\" : String,\n      \"ValidFrom\" : String,\n      \"ValidUntil\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EC2Fleet\nProperties:\n  Context: String\n  ExcessCapacityTerminationPolicy: String\n  LaunchTemplateConfigs: \n    - FleetLaunchTemplateConfigRequest\n  OnDemandOptions: \n    OnDemandOptionsRequest\n  ReplaceUnhealthyInstances: Boolean\n  SpotOptions: \n    SpotOptionsRequest\n  TagSpecifications: \n    - TagSpecification\n  TargetCapacitySpecification: \n    TargetCapacitySpecificationRequest\n  TerminateInstancesWithExpiration: Boolean\n  Type: String\n  ValidFrom: String\n  ValidUntil: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EgressOnlyInternetGateway","awsResourceTypeName":"ec2-egressonlyinternetgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EgressOnlyInternetGateway\",\n  \"Properties\" : {\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EgressOnlyInternetGateway\nProperties:\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EIP","awsResourceTypeName":"ec2-eip","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EIP\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"InstanceId\" : String,\n      \"NetworkBorderGroup\" : String,\n      \"PublicIpv4Pool\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransferAddress\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EIP\nProperties:\n  Domain: String\n  InstanceId: String\n  NetworkBorderGroup: String\n  PublicIpv4Pool: String\n  Tags: \n    - Tag\n  TransferAddress: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EIPAssociation","awsResourceTypeName":"ec2-eipassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EIPAssociation\",\n  \"Properties\" : {\n      \"AllocationId\" : String,\n      \"InstanceId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"PrivateIpAddress\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EIPAssociation\nProperties:\n  AllocationId: String\n  InstanceId: String\n  NetworkInterfaceId: String\n  PrivateIpAddress: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::EnclaveCertificateIamRoleAssociation","awsResourceTypeName":"ec2-enclavecertificateiamroleassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::EnclaveCertificateIamRoleAssociation\",\n  \"Properties\" : {\n      \"CertificateArn\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::EnclaveCertificateIamRoleAssociation\nProperties:\n  CertificateArn: String\n  RoleArn: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::FlowLog","awsResourceTypeName":"ec2-flowlog","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::FlowLog\",\n  \"Properties\" : {\n      \"DeliverCrossAccountRole\" : String,\n      \"DeliverLogsPermissionArn\" : String,\n      \"DestinationOptions\" : DestinationOptions,\n      \"LogDestination\" : String,\n      \"LogDestinationType\" : String,\n      \"LogFormat\" : String,\n      \"LogGroupName\" : String,\n      \"MaxAggregationInterval\" : Integer,\n      \"ResourceId\" : String,\n      \"ResourceType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrafficType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::FlowLog\nProperties:\n  DeliverCrossAccountRole: String\n  DeliverLogsPermissionArn: String\n  DestinationOptions: \n    DestinationOptions\n  LogDestination: String\n  LogDestinationType: String\n  LogFormat: String\n  LogGroupName: String\n  MaxAggregationInterval: Integer\n  ResourceId: String\n  ResourceType: String\n  Tags: \n    - Tag\n  TrafficType: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::GatewayRouteTableAssociation","awsResourceTypeName":"ec2-gatewayroutetableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::GatewayRouteTableAssociation\",\n  \"Properties\" : {\n      \"GatewayId\" : String,\n      \"RouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::GatewayRouteTableAssociation\nProperties:\n  GatewayId: String\n  RouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Host","awsResourceTypeName":"ec2-host","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Host\",\n  \"Properties\" : {\n      \"AssetId\" : String,\n      \"AutoPlacement\" : String,\n      \"AvailabilityZone\" : String,\n      \"HostMaintenance\" : String,\n      \"HostRecovery\" : String,\n      \"InstanceFamily\" : String,\n      \"InstanceType\" : String,\n      \"OutpostArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Host\nProperties:\n  AssetId: String\n  AutoPlacement: String\n  AvailabilityZone: String\n  HostMaintenance: String\n  HostRecovery: String\n  InstanceFamily: String\n  InstanceType: String\n  OutpostArn: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Instance","awsResourceTypeName":"ec2-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Instance\",\n  \"Properties\" : {\n      \"AdditionalInfo\" : String,\n      \"Affinity\" : String,\n      \"AvailabilityZone\" : String,\n      \"BlockDeviceMappings\" : [ BlockDeviceMapping, ... ],\n      \"CpuOptions\" : CpuOptions,\n      \"CreditSpecification\" : CreditSpecification,\n      \"DisableApiTermination\" : Boolean,\n      \"EbsOptimized\" : Boolean,\n      \"ElasticGpuSpecifications\" : [ ElasticGpuSpecification, ... ],\n      \"ElasticInferenceAccelerators\" : [ ElasticInferenceAccelerator, ... ],\n      \"EnclaveOptions\" : EnclaveOptions,\n      \"HibernationOptions\" : HibernationOptions,\n      \"HostId\" : String,\n      \"HostResourceGroupArn\" : String,\n      \"IamInstanceProfile\" : String,\n      \"ImageId\" : String,\n      \"InstanceInitiatedShutdownBehavior\" : String,\n      \"InstanceType\" : String,\n      \"Ipv6AddressCount\" : Integer,\n      \"Ipv6Addresses\" : [ InstanceIpv6Address, ... ],\n      \"KernelId\" : String,\n      \"KeyName\" : String,\n      \"LaunchTemplate\" : LaunchTemplateSpecification,\n      \"LicenseSpecifications\" : [ LicenseSpecification, ... ],\n      \"Monitoring\" : Boolean,\n      \"NetworkInterfaces\" : [ NetworkInterface, ... ],\n      \"PlacementGroupName\" : String,\n      \"PrivateDnsNameOptions\" : PrivateDnsNameOptions,\n      \"PrivateIpAddress\" : String,\n      \"PropagateTagsToVolumeOnCreation\" : Boolean,\n      \"RamdiskId\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SecurityGroups\" : [ String, ... ],\n      \"SourceDestCheck\" : Boolean,\n      \"SsmAssociations\" : [ SsmAssociation, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Tenancy\" : String,\n      \"UserData\" : String,\n      \"Volumes\" : [ Volume, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Instance\nProperties:\n  AdditionalInfo: String\n  Affinity: String\n  AvailabilityZone: String\n  BlockDeviceMappings: \n    - BlockDeviceMapping\n  CpuOptions: \n    CpuOptions\n  CreditSpecification: \n    CreditSpecification\n  DisableApiTermination: Boolean\n  EbsOptimized: Boolean\n  ElasticGpuSpecifications: \n    - ElasticGpuSpecification\n  ElasticInferenceAccelerators: \n    - ElasticInferenceAccelerator\n  EnclaveOptions: \n    EnclaveOptions\n  HibernationOptions: \n    HibernationOptions\n  HostId: String\n  HostResourceGroupArn: String\n  IamInstanceProfile: String\n  ImageId: String\n  InstanceInitiatedShutdownBehavior: String\n  InstanceType: String\n  Ipv6AddressCount: Integer\n  Ipv6Addresses: \n    - InstanceIpv6Address\n  KernelId: String\n  KeyName: String\n  LaunchTemplate: \n    LaunchTemplateSpecification\n  LicenseSpecifications: \n    - LicenseSpecification\n  Monitoring: Boolean\n  NetworkInterfaces: \n    - NetworkInterface\n  PlacementGroupName: String\n  PrivateDnsNameOptions: \n    PrivateDnsNameOptions\n  PrivateIpAddress: String\n  PropagateTagsToVolumeOnCreation: Boolean\n  RamdiskId: String\n  SecurityGroupIds: \n    - String\n  SecurityGroups: \n    - String\n  SourceDestCheck: Boolean\n  SsmAssociations: \n    - SsmAssociation\n  SubnetId: String\n  Tags: \n    - Tag\n  Tenancy: String\n  UserData: String\n  Volumes: \n    - Volume\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::InstanceConnectEndpoint","awsResourceTypeName":"ec2-instanceconnectendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::InstanceConnectEndpoint\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"PreserveClientIp\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::InstanceConnectEndpoint\nProperties:\n  ClientToken: String\n  PreserveClientIp: Boolean\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::InternetGateway","awsResourceTypeName":"ec2-internetgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::InternetGateway\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::InternetGateway\nProperties:\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAM","awsResourceTypeName":"ec2-ipam","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAM\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"OperatingRegions\" : [ IpamOperatingRegion, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Tier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAM\nProperties:\n  Description: String\n  OperatingRegions: \n    - IpamOperatingRegion\n  Tags: \n    - Tag\n  Tier: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMAllocation","awsResourceTypeName":"ec2-ipamallocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMAllocation\",\n  \"Properties\" : {\n      \"Cidr\" : String,\n      \"Description\" : String,\n      \"IpamPoolId\" : String,\n      \"NetmaskLength\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMAllocation\nProperties:\n  Cidr: String\n  Description: String\n  IpamPoolId: String\n  NetmaskLength: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMPool","awsResourceTypeName":"ec2-ipampool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMPool\",\n  \"Properties\" : {\n      \"AddressFamily\" : String,\n      \"AllocationDefaultNetmaskLength\" : Integer,\n      \"AllocationMaxNetmaskLength\" : Integer,\n      \"AllocationMinNetmaskLength\" : Integer,\n      \"AllocationResourceTags\" : [ Tag, ... ],\n      \"AutoImport\" : Boolean,\n      \"AwsService\" : String,\n      \"Description\" : String,\n      \"IpamScopeId\" : String,\n      \"Locale\" : String,\n      \"ProvisionedCidrs\" : [ ProvisionedCidr, ... ],\n      \"PublicIpSource\" : String,\n      \"PubliclyAdvertisable\" : Boolean,\n      \"SourceIpamPoolId\" : String,\n      \"SourceResource\" : SourceResource,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMPool\nProperties:\n  AddressFamily: String\n  AllocationDefaultNetmaskLength: Integer\n  AllocationMaxNetmaskLength: Integer\n  AllocationMinNetmaskLength: Integer\n  AllocationResourceTags: \n    - Tag\n  AutoImport: Boolean\n  AwsService: String\n  Description: String\n  IpamScopeId: String\n  Locale: String\n  ProvisionedCidrs: \n    - ProvisionedCidr\n  PublicIpSource: String\n  PubliclyAdvertisable: Boolean\n  SourceIpamPoolId: String\n  SourceResource: \n    SourceResource\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMPoolCidr","awsResourceTypeName":"ec2-ipampoolcidr","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMPoolCidr\",\n  \"Properties\" : {\n      \"Cidr\" : String,\n      \"IpamPoolId\" : String,\n      \"NetmaskLength\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMPoolCidr\nProperties:\n  Cidr: String\n  IpamPoolId: String\n  NetmaskLength: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMResourceDiscovery","awsResourceTypeName":"ec2-ipamresourcediscovery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMResourceDiscovery\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"OperatingRegions\" : [ IpamOperatingRegion, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMResourceDiscovery\nProperties:\n  Description: String\n  OperatingRegions: \n    - IpamOperatingRegion\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMResourceDiscoveryAssociation","awsResourceTypeName":"ec2-ipamresourcediscoveryassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMResourceDiscoveryAssociation\",\n  \"Properties\" : {\n      \"IpamId\" : String,\n      \"IpamResourceDiscoveryId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMResourceDiscoveryAssociation\nProperties:\n  IpamId: String\n  IpamResourceDiscoveryId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::IPAMScope","awsResourceTypeName":"ec2-ipamscope","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::IPAMScope\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IpamId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::IPAMScope\nProperties:\n  Description: String\n  IpamId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::KeyPair","awsResourceTypeName":"ec2-keypair","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::KeyPair\",\n  \"Properties\" : {\n      \"KeyFormat\" : String,\n      \"KeyName\" : String,\n      \"KeyType\" : String,\n      \"PublicKeyMaterial\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::KeyPair\nProperties:\n  KeyFormat: String\n  KeyName: String\n  KeyType: String\n  PublicKeyMaterial: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LaunchTemplate","awsResourceTypeName":"ec2-launchtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LaunchTemplate\",\n  \"Properties\" : {\n      \"LaunchTemplateData\" : LaunchTemplateData,\n      \"LaunchTemplateName\" : String,\n      \"TagSpecifications\" : [ LaunchTemplateTagSpecification, ... ],\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LaunchTemplate\nProperties:\n  LaunchTemplateData: \n    LaunchTemplateData\n  LaunchTemplateName: String\n  TagSpecifications: \n    - LaunchTemplateTagSpecification\n  VersionDescription: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRoute","awsResourceTypeName":"ec2-localgatewayroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRoute\",\n  \"Properties\" : {\n      \"DestinationCidrBlock\" : String,\n      \"LocalGatewayRouteTableId\" : String,\n      \"LocalGatewayVirtualInterfaceGroupId\" : String,\n      \"NetworkInterfaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRoute\nProperties:\n  DestinationCidrBlock: String\n  LocalGatewayRouteTableId: String\n  LocalGatewayVirtualInterfaceGroupId: String\n  NetworkInterfaceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRouteTable","awsResourceTypeName":"ec2-localgatewayroutetable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRouteTable\",\n  \"Properties\" : {\n      \"LocalGatewayId\" : String,\n      \"Mode\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRouteTable\nProperties:\n  LocalGatewayId: String\n  Mode: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation","awsResourceTypeName":"ec2-localgatewayroutetablevirtualinterfacegroupassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation\",\n  \"Properties\" : {\n      \"LocalGatewayRouteTableId\" : String,\n      \"LocalGatewayVirtualInterfaceGroupId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation\nProperties:\n  LocalGatewayRouteTableId: String\n  LocalGatewayVirtualInterfaceGroupId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LocalGatewayRouteTableVPCAssociation","awsResourceTypeName":"ec2-localgatewayroutetablevpcassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::LocalGatewayRouteTableVPCAssociation\",\n  \"Properties\" : {\n      \"LocalGatewayRouteTableId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::LocalGatewayRouteTableVPCAssociation\nProperties:\n  LocalGatewayRouteTableId: String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NatGateway","awsResourceTypeName":"ec2-natgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NatGateway\",\n  \"Properties\" : {\n      \"AllocationId\" : String,\n      \"ConnectivityType\" : String,\n      \"MaxDrainDurationSeconds\" : Integer,\n      \"PrivateIpAddress\" : String,\n      \"SecondaryAllocationIds\" : [ String, ... ],\n      \"SecondaryPrivateIpAddressCount\" : Integer,\n      \"SecondaryPrivateIpAddresses\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NatGateway\nProperties:\n  AllocationId: String\n  ConnectivityType: String\n  MaxDrainDurationSeconds: Integer\n  PrivateIpAddress: String\n  SecondaryAllocationIds: \n    - String\n  SecondaryPrivateIpAddressCount: Integer\n  SecondaryPrivateIpAddresses: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkAcl","awsResourceTypeName":"ec2-networkacl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkAcl\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkAcl\nProperties:\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkAclEntry","awsResourceTypeName":"ec2-networkaclentry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n  \"Properties\" : {\n      \"CidrBlock\" : String,\n      \"Egress\" : Boolean,\n      \"Icmp\" : Icmp,\n      \"Ipv6CidrBlock\" : String,\n      \"NetworkAclId\" : String,\n      \"PortRange\" : PortRange,\n      \"Protocol\" : Integer,\n      \"RuleAction\" : String,\n      \"RuleNumber\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkAclEntry\nProperties:\n  CidrBlock: String\n  Egress: Boolean\n  Icmp: \n    Icmp\n  Ipv6CidrBlock: String\n  NetworkAclId: String\n  PortRange: \n    PortRange\n  Protocol: Integer\n  RuleAction: String\n  RuleNumber: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsAccessScope","awsResourceTypeName":"ec2-networkinsightsaccessscope","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsAccessScope\",\n  \"Properties\" : {\n      \"ExcludePaths\" : [ AccessScopePathRequest, ... ],\n      \"MatchPaths\" : [ AccessScopePathRequest, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsAccessScope\nProperties:\n  ExcludePaths: \n    - AccessScopePathRequest\n  MatchPaths: \n    - AccessScopePathRequest\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsAccessScopeAnalysis","awsResourceTypeName":"ec2-networkinsightsaccessscopeanalysis","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsAccessScopeAnalysis\",\n  \"Properties\" : {\n      \"NetworkInsightsAccessScopeId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsAccessScopeAnalysis\nProperties:\n  NetworkInsightsAccessScopeId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsAnalysis","awsResourceTypeName":"ec2-networkinsightsanalysis","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsAnalysis\",\n  \"Properties\" : {\n      \"AdditionalAccounts\" : [ String, ... ],\n      \"FilterInArns\" : [ String, ... ],\n      \"NetworkInsightsPathId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsAnalysis\nProperties:\n  AdditionalAccounts: \n    - String\n  FilterInArns: \n    - String\n  NetworkInsightsPathId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInsightsPath","awsResourceTypeName":"ec2-networkinsightspath","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInsightsPath\",\n  \"Properties\" : {\n      \"Destination\" : String,\n      \"DestinationIp\" : String,\n      \"DestinationPort\" : Integer,\n      \"FilterAtDestination\" : PathFilter,\n      \"FilterAtSource\" : PathFilter,\n      \"Protocol\" : String,\n      \"Source\" : String,\n      \"SourceIp\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInsightsPath\nProperties:\n  Destination: String\n  DestinationIp: String\n  DestinationPort: Integer\n  FilterAtDestination: \n    PathFilter\n  FilterAtSource: \n    PathFilter\n  Protocol: String\n  Source: String\n  SourceIp: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInterface","awsResourceTypeName":"ec2-networkinterface","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInterface\",\n  \"Properties\" : {\n      \"ConnectionTrackingSpecification\" : ConnectionTrackingSpecification,\n      \"Description\" : String,\n      \"EnablePrimaryIpv6\" : Boolean,\n      \"GroupSet\" : [ String, ... ],\n      \"InterfaceType\" : String,\n      \"Ipv4PrefixCount\" : Integer,\n      \"Ipv4Prefixes\" : [ Ipv4PrefixSpecification, ... ],\n      \"Ipv6AddressCount\" : Integer,\n      \"Ipv6Addresses\" : [ InstanceIpv6Address, ... ],\n      \"Ipv6PrefixCount\" : Integer,\n      \"Ipv6Prefixes\" : [ Ipv6PrefixSpecification, ... ],\n      \"PrivateIpAddress\" : String,\n      \"PrivateIpAddresses\" : [ PrivateIpAddressSpecification, ... ],\n      \"SecondaryPrivateIpAddressCount\" : Integer,\n      \"SourceDestCheck\" : Boolean,\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInterface\nProperties:\n  ConnectionTrackingSpecification: \n    ConnectionTrackingSpecification\n  Description: String\n  EnablePrimaryIpv6: Boolean\n  GroupSet: \n    - String\n  InterfaceType: String\n  Ipv4PrefixCount: Integer\n  Ipv4Prefixes: \n    - Ipv4PrefixSpecification\n  Ipv6AddressCount: Integer\n  Ipv6Addresses: \n    - InstanceIpv6Address\n  Ipv6PrefixCount: Integer\n  Ipv6Prefixes: \n    - Ipv6PrefixSpecification\n  PrivateIpAddress: String\n  PrivateIpAddresses: \n    - PrivateIpAddressSpecification\n  SecondaryPrivateIpAddressCount: Integer\n  SourceDestCheck: Boolean\n  SubnetId: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInterfaceAttachment","awsResourceTypeName":"ec2-networkinterfaceattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInterfaceAttachment\",\n  \"Properties\" : {\n      \"DeleteOnTermination\" : Boolean,\n      \"DeviceIndex\" : String,\n      \"EnaSrdSpecification\" : EnaSrdSpecification,\n      \"InstanceId\" : String,\n      \"NetworkInterfaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInterfaceAttachment\nProperties:\n  DeleteOnTermination: Boolean\n  DeviceIndex: String\n  EnaSrdSpecification: \n    EnaSrdSpecification\n  InstanceId: String\n  NetworkInterfaceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkInterfacePermission","awsResourceTypeName":"ec2-networkinterfacepermission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkInterfacePermission\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"Permission\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkInterfacePermission\nProperties:\n  AwsAccountId: String\n  NetworkInterfaceId: String\n  Permission: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::NetworkPerformanceMetricSubscription","awsResourceTypeName":"ec2-networkperformancemetricsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::NetworkPerformanceMetricSubscription\",\n  \"Properties\" : {\n      \"Destination\" : String,\n      \"Metric\" : String,\n      \"Source\" : String,\n      \"Statistic\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::NetworkPerformanceMetricSubscription\nProperties:\n  Destination: String\n  Metric: String\n  Source: String\n  Statistic: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::PlacementGroup","awsResourceTypeName":"ec2-placementgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::PlacementGroup\",\n  \"Properties\" : {\n      \"PartitionCount\" : Integer,\n      \"SpreadLevel\" : String,\n      \"Strategy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::PlacementGroup\nProperties:\n  PartitionCount: Integer\n  SpreadLevel: String\n  Strategy: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::PrefixList","awsResourceTypeName":"ec2-prefixlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::PrefixList\",\n  \"Properties\" : {\n      \"AddressFamily\" : String,\n      \"Entries\" : [ Entry, ... ],\n      \"MaxEntries\" : Integer,\n      \"PrefixListName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::PrefixList\nProperties:\n  AddressFamily: String\n  Entries: \n    - Entry\n  MaxEntries: Integer\n  PrefixListName: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Route","awsResourceTypeName":"ec2-route","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Route\",\n  \"Properties\" : {\n      \"CarrierGatewayId\" : String,\n      \"CoreNetworkArn\" : String,\n      \"DestinationCidrBlock\" : String,\n      \"DestinationIpv6CidrBlock\" : String,\n      \"DestinationPrefixListId\" : String,\n      \"EgressOnlyInternetGatewayId\" : String,\n      \"GatewayId\" : String,\n      \"InstanceId\" : String,\n      \"LocalGatewayId\" : String,\n      \"NatGatewayId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"RouteTableId\" : String,\n      \"TransitGatewayId\" : String,\n      \"VpcEndpointId\" : String,\n      \"VpcPeeringConnectionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Route\nProperties:\n  CarrierGatewayId: String\n  CoreNetworkArn: String\n  DestinationCidrBlock: String\n  DestinationIpv6CidrBlock: String\n  DestinationPrefixListId: String\n  EgressOnlyInternetGatewayId: String\n  GatewayId: String\n  InstanceId: String\n  LocalGatewayId: String\n  NatGatewayId: String\n  NetworkInterfaceId: String\n  RouteTableId: String\n  TransitGatewayId: String\n  VpcEndpointId: String\n  VpcPeeringConnectionId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::RouteTable","awsResourceTypeName":"ec2-routetable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::RouteTable\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::RouteTable\nProperties:\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SecurityGroup","awsResourceTypeName":"ec2-securitygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SecurityGroup\",\n  \"Properties\" : {\n      \"GroupDescription\" : String,\n      \"GroupName\" : String,\n      \"SecurityGroupEgress\" : [ Egress, ... ],\n      \"SecurityGroupIngress\" : [ Ingress, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SecurityGroup\nProperties:\n  GroupDescription: String\n  GroupName: String\n  SecurityGroupEgress: \n    - Egress\n  SecurityGroupIngress: \n    - Ingress\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SecurityGroupEgress","awsResourceTypeName":"ec2-securitygroupegress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SecurityGroupEgress\",\n  \"Properties\" : {\n      \"CidrIp\" : String,\n      \"CidrIpv6\" : String,\n      \"Description\" : String,\n      \"DestinationPrefixListId\" : String,\n      \"DestinationSecurityGroupId\" : String,\n      \"FromPort\" : Integer,\n      \"GroupId\" : String,\n      \"IpProtocol\" : String,\n      \"ToPort\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SecurityGroupEgress\nProperties:\n  CidrIp: String\n  CidrIpv6: String\n  Description: String\n  DestinationPrefixListId: String\n  DestinationSecurityGroupId: String\n  FromPort: Integer\n  GroupId: String\n  IpProtocol: String\n  ToPort: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SecurityGroupIngress","awsResourceTypeName":"ec2-securitygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n  \"Properties\" : {\n      \"CidrIp\" : String,\n      \"CidrIpv6\" : String,\n      \"Description\" : String,\n      \"FromPort\" : Integer,\n      \"GroupId\" : String,\n      \"GroupName\" : String,\n      \"IpProtocol\" : String,\n      \"SourcePrefixListId\" : String,\n      \"SourceSecurityGroupId\" : String,\n      \"SourceSecurityGroupName\" : String,\n      \"SourceSecurityGroupOwnerId\" : String,\n      \"ToPort\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SecurityGroupIngress\nProperties:\n  CidrIp: String\n  CidrIpv6: String\n  Description: String\n  FromPort: Integer\n  GroupId: String\n  GroupName: String\n  IpProtocol: String\n  SourcePrefixListId: String\n  SourceSecurityGroupId: String\n  SourceSecurityGroupName: String\n  SourceSecurityGroupOwnerId: String\n  ToPort: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SnapshotBlockPublicAccess","awsResourceTypeName":"ec2-snapshotblockpublicaccess","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SnapshotBlockPublicAccess\",\n  \"Properties\" : {\n      \"State\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SnapshotBlockPublicAccess\nProperties:\n  State: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SpotFleet","awsResourceTypeName":"ec2-spotfleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SpotFleet\",\n  \"Properties\" : {\n      \"SpotFleetRequestConfigData\" : SpotFleetRequestConfigData\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SpotFleet\nProperties:\n  SpotFleetRequestConfigData: \n    SpotFleetRequestConfigData\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Subnet","awsResourceTypeName":"ec2-subnet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Subnet\",\n  \"Properties\" : {\n      \"AssignIpv6AddressOnCreation\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"AvailabilityZoneId\" : String,\n      \"CidrBlock\" : String,\n      \"EnableDns64\" : Boolean,\n      \"EnableLniAtDeviceIndex\" : Integer,\n      \"Ipv4IpamPoolId\" : String,\n      \"Ipv4NetmaskLength\" : Integer,\n      \"Ipv6CidrBlock\" : String,\n      \"Ipv6CidrBlocks\" : [ String, ... ],\n      \"Ipv6IpamPoolId\" : String,\n      \"Ipv6Native\" : Boolean,\n      \"Ipv6NetmaskLength\" : Integer,\n      \"MapPublicIpOnLaunch\" : Boolean,\n      \"OutpostArn\" : String,\n      \"PrivateDnsNameOptionsOnLaunch\" : PrivateDnsNameOptionsOnLaunch,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Subnet\nProperties:\n  AssignIpv6AddressOnCreation: Boolean\n  AvailabilityZone: String\n  AvailabilityZoneId: String\n  CidrBlock: String\n  EnableDns64: Boolean\n  EnableLniAtDeviceIndex: Integer\n  Ipv4IpamPoolId: String\n  Ipv4NetmaskLength: Integer\n  Ipv6CidrBlock: String\n  Ipv6CidrBlocks: \n    - String\n  Ipv6IpamPoolId: String\n  Ipv6Native: Boolean\n  Ipv6NetmaskLength: Integer\n  MapPublicIpOnLaunch: Boolean\n  OutpostArn: String\n  PrivateDnsNameOptionsOnLaunch: \n    PrivateDnsNameOptionsOnLaunch\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SubnetCidrBlock","awsResourceTypeName":"ec2-subnetcidrblock","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SubnetCidrBlock\",\n  \"Properties\" : {\n      \"Ipv6CidrBlock\" : String,\n      \"Ipv6IpamPoolId\" : String,\n      \"Ipv6NetmaskLength\" : Integer,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SubnetCidrBlock\nProperties:\n  Ipv6CidrBlock: String\n  Ipv6IpamPoolId: String\n  Ipv6NetmaskLength: Integer\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SubnetNetworkAclAssociation","awsResourceTypeName":"ec2-subnetnetworkaclassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\",\n  \"Properties\" : {\n      \"NetworkAclId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SubnetNetworkAclAssociation\nProperties:\n  NetworkAclId: String\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::SubnetRouteTableAssociation","awsResourceTypeName":"ec2-subnetroutetableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n  \"Properties\" : {\n      \"RouteTableId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::SubnetRouteTableAssociation\nProperties:\n  RouteTableId: String\n  SubnetId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorFilter","awsResourceTypeName":"ec2-trafficmirrorfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorFilter\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"NetworkServices\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorFilter\nProperties:\n  Description: String\n  NetworkServices: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorFilterRule","awsResourceTypeName":"ec2-trafficmirrorfilterrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorFilterRule\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DestinationCidrBlock\" : String,\n      \"DestinationPortRange\" : TrafficMirrorPortRange,\n      \"Protocol\" : Integer,\n      \"RuleAction\" : String,\n      \"RuleNumber\" : Integer,\n      \"SourceCidrBlock\" : String,\n      \"SourcePortRange\" : TrafficMirrorPortRange,\n      \"TrafficDirection\" : String,\n      \"TrafficMirrorFilterId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorFilterRule\nProperties:\n  Description: String\n  DestinationCidrBlock: String\n  DestinationPortRange: \n    TrafficMirrorPortRange\n  Protocol: Integer\n  RuleAction: String\n  RuleNumber: Integer\n  SourceCidrBlock: String\n  SourcePortRange: \n    TrafficMirrorPortRange\n  TrafficDirection: String\n  TrafficMirrorFilterId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorSession","awsResourceTypeName":"ec2-trafficmirrorsession","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorSession\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"PacketLength\" : Integer,\n      \"SessionNumber\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TrafficMirrorFilterId\" : String,\n      \"TrafficMirrorTargetId\" : String,\n      \"VirtualNetworkId\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorSession\nProperties:\n  Description: String\n  NetworkInterfaceId: String\n  PacketLength: Integer\n  SessionNumber: Integer\n  Tags: \n    - Tag\n  TrafficMirrorFilterId: String\n  TrafficMirrorTargetId: String\n  VirtualNetworkId: Integer\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TrafficMirrorTarget","awsResourceTypeName":"ec2-trafficmirrortarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TrafficMirrorTarget\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GatewayLoadBalancerEndpointId\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"NetworkLoadBalancerArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TrafficMirrorTarget\nProperties:\n  Description: String\n  GatewayLoadBalancerEndpointId: String\n  NetworkInterfaceId: String\n  NetworkLoadBalancerArn: String\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGateway","awsResourceTypeName":"ec2-transitgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGateway\",\n  \"Properties\" : {\n      \"AmazonSideAsn\" : Integer,\n      \"AssociationDefaultRouteTableId\" : String,\n      \"AutoAcceptSharedAttachments\" : String,\n      \"DefaultRouteTableAssociation\" : String,\n      \"DefaultRouteTablePropagation\" : String,\n      \"Description\" : String,\n      \"DnsSupport\" : String,\n      \"MulticastSupport\" : String,\n      \"PropagationDefaultRouteTableId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayCidrBlocks\" : [ String, ... ],\n      \"VpnEcmpSupport\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGateway\nProperties:\n  AmazonSideAsn: Integer\n  AssociationDefaultRouteTableId: String\n  AutoAcceptSharedAttachments: String\n  DefaultRouteTableAssociation: String\n  DefaultRouteTablePropagation: String\n  Description: String\n  DnsSupport: String\n  MulticastSupport: String\n  PropagationDefaultRouteTableId: String\n  Tags: \n    - Tag\n  TransitGatewayCidrBlocks: \n    - String\n  VpnEcmpSupport: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayAttachment","awsResourceTypeName":"ec2-transitgatewayattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayAttachment\",\n  \"Properties\" : {\n      \"Options\" : Options,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayAttachment\nProperties:\n  Options: \n    Options\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  TransitGatewayId: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayConnect","awsResourceTypeName":"ec2-transitgatewayconnect","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayConnect\",\n  \"Properties\" : {\n      \"Options\" : TransitGatewayConnectOptions,\n      \"Tags\" : [ Tag, ... ],\n      \"TransportTransitGatewayAttachmentId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayConnect\nProperties:\n  Options: \n    TransitGatewayConnectOptions\n  Tags: \n    - Tag\n  TransportTransitGatewayAttachmentId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastDomain","awsResourceTypeName":"ec2-transitgatewaymulticastdomain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastDomain\",\n  \"Properties\" : {\n      \"Options\" : Options,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastDomain\nProperties:\n  Options: \n    Options\n  Tags: \n    - Tag\n  TransitGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastDomainAssociation","awsResourceTypeName":"ec2-transitgatewaymulticastdomainassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastDomainAssociation\",\n  \"Properties\" : {\n      \"SubnetId\" : String,\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayMulticastDomainId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastDomainAssociation\nProperties:\n  SubnetId: String\n  TransitGatewayAttachmentId: String\n  TransitGatewayMulticastDomainId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastGroupMember","awsResourceTypeName":"ec2-transitgatewaymulticastgroupmember","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastGroupMember\",\n  \"Properties\" : {\n      \"GroupIpAddress\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"TransitGatewayMulticastDomainId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastGroupMember\nProperties:\n  GroupIpAddress: String\n  NetworkInterfaceId: String\n  TransitGatewayMulticastDomainId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayMulticastGroupSource","awsResourceTypeName":"ec2-transitgatewaymulticastgroupsource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayMulticastGroupSource\",\n  \"Properties\" : {\n      \"GroupIpAddress\" : String,\n      \"NetworkInterfaceId\" : String,\n      \"TransitGatewayMulticastDomainId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayMulticastGroupSource\nProperties:\n  GroupIpAddress: String\n  NetworkInterfaceId: String\n  TransitGatewayMulticastDomainId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayPeeringAttachment","awsResourceTypeName":"ec2-transitgatewaypeeringattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayPeeringAttachment\",\n  \"Properties\" : {\n      \"PeerAccountId\" : String,\n      \"PeerRegion\" : String,\n      \"PeerTransitGatewayId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayPeeringAttachment\nProperties:\n  PeerAccountId: String\n  PeerRegion: String\n  PeerTransitGatewayId: String\n  Tags: \n    - Tag\n  TransitGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRoute","awsResourceTypeName":"ec2-transitgatewayroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRoute\",\n  \"Properties\" : {\n      \"Blackhole\" : Boolean,\n      \"DestinationCidrBlock\" : String,\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayRouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRoute\nProperties:\n  Blackhole: Boolean\n  DestinationCidrBlock: String\n  TransitGatewayAttachmentId: String\n  TransitGatewayRouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRouteTable","awsResourceTypeName":"ec2-transitgatewayroutetable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRouteTable\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRouteTable\nProperties:\n  Tags: \n    - Tag\n  TransitGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRouteTableAssociation","awsResourceTypeName":"ec2-transitgatewayroutetableassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRouteTableAssociation\",\n  \"Properties\" : {\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayRouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRouteTableAssociation\nProperties:\n  TransitGatewayAttachmentId: String\n  TransitGatewayRouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayRouteTablePropagation","awsResourceTypeName":"ec2-transitgatewayroutetablepropagation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayRouteTablePropagation\",\n  \"Properties\" : {\n      \"TransitGatewayAttachmentId\" : String,\n      \"TransitGatewayRouteTableId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayRouteTablePropagation\nProperties:\n  TransitGatewayAttachmentId: String\n  TransitGatewayRouteTableId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::TransitGatewayVpcAttachment","awsResourceTypeName":"ec2-transitgatewayvpcattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::TransitGatewayVpcAttachment\",\n  \"Properties\" : {\n      \"AddSubnetIds\" : [ String, ... ],\n      \"Options\" : Options,\n      \"RemoveSubnetIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::TransitGatewayVpcAttachment\nProperties:\n  AddSubnetIds: \n    - String\n  Options: \n    Options\n  RemoveSubnetIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  TransitGatewayId: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessEndpoint","awsResourceTypeName":"ec2-verifiedaccessendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessEndpoint\",\n  \"Properties\" : {\n      \"ApplicationDomain\" : String,\n      \"AttachmentType\" : String,\n      \"Description\" : String,\n      \"DomainCertificateArn\" : String,\n      \"EndpointDomainPrefix\" : String,\n      \"EndpointType\" : String,\n      \"LoadBalancerOptions\" : LoadBalancerOptions,\n      \"NetworkInterfaceOptions\" : NetworkInterfaceOptions,\n      \"PolicyDocument\" : String,\n      \"PolicyEnabled\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SseSpecification\" : SseSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"VerifiedAccessGroupId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessEndpoint\nProperties:\n  ApplicationDomain: String\n  AttachmentType: String\n  Description: String\n  DomainCertificateArn: String\n  EndpointDomainPrefix: String\n  EndpointType: String\n  LoadBalancerOptions: \n    LoadBalancerOptions\n  NetworkInterfaceOptions: \n    NetworkInterfaceOptions\n  PolicyDocument: String\n  PolicyEnabled: Boolean\n  SecurityGroupIds: \n    - String\n  SseSpecification: \n    SseSpecification\n  Tags: \n    - Tag\n  VerifiedAccessGroupId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessGroup","awsResourceTypeName":"ec2-verifiedaccessgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"PolicyDocument\" : String,\n      \"PolicyEnabled\" : Boolean,\n      \"SseSpecification\" : SseSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"VerifiedAccessInstanceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessGroup\nProperties:\n  Description: String\n  PolicyDocument: String\n  PolicyEnabled: Boolean\n  SseSpecification: \n    SseSpecification\n  Tags: \n    - Tag\n  VerifiedAccessInstanceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessInstance","awsResourceTypeName":"ec2-verifiedaccessinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessInstance\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FipsEnabled\" : Boolean,\n      \"LoggingConfigurations\" : VerifiedAccessLogs,\n      \"Tags\" : [ Tag, ... ],\n      \"VerifiedAccessTrustProviderIds\" : [ String, ... ],\n      \"VerifiedAccessTrustProviders\" : [ VerifiedAccessTrustProvider, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessInstance\nProperties:\n  Description: String\n  FipsEnabled: Boolean\n  LoggingConfigurations: \n    VerifiedAccessLogs\n  Tags: \n    - Tag\n  VerifiedAccessTrustProviderIds: \n    - String\n  VerifiedAccessTrustProviders: \n    - VerifiedAccessTrustProvider\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VerifiedAccessTrustProvider","awsResourceTypeName":"ec2-verifiedaccesstrustprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VerifiedAccessTrustProvider\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DeviceOptions\" : DeviceOptions,\n      \"DeviceTrustProviderType\" : String,\n      \"OidcOptions\" : OidcOptions,\n      \"PolicyReferenceName\" : String,\n      \"SseSpecification\" : SseSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"TrustProviderType\" : String,\n      \"UserTrustProviderType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VerifiedAccessTrustProvider\nProperties:\n  Description: String\n  DeviceOptions: \n    DeviceOptions\n  DeviceTrustProviderType: String\n  OidcOptions: \n    OidcOptions\n  PolicyReferenceName: String\n  SseSpecification: \n    SseSpecification\n  Tags: \n    - Tag\n  TrustProviderType: String\n  UserTrustProviderType: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::Volume","awsResourceTypeName":"ec2-volume","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::Volume\",\n  \"Properties\" : {\n      \"AutoEnableIO\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"Encrypted\" : Boolean,\n      \"Iops\" : Integer,\n      \"KmsKeyId\" : String,\n      \"MultiAttachEnabled\" : Boolean,\n      \"OutpostArn\" : String,\n      \"Size\" : Integer,\n      \"SnapshotId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Throughput\" : Integer,\n      \"VolumeType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::Volume\nProperties:\n  AutoEnableIO: Boolean\n  AvailabilityZone: String\n  Encrypted: Boolean\n  Iops: Integer\n  KmsKeyId: String\n  MultiAttachEnabled: Boolean\n  OutpostArn: String\n  Size: Integer\n  SnapshotId: String\n  Tags: \n    - Tag\n  Throughput: Integer\n  VolumeType: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VolumeAttachment","awsResourceTypeName":"ec2-volumeattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VolumeAttachment\",\n  \"Properties\" : {\n      \"Device\" : String,\n      \"InstanceId\" : String,\n      \"VolumeId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VolumeAttachment\nProperties:\n  Device: String\n  InstanceId: String\n  VolumeId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPC","awsResourceTypeName":"ec2-vpc","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPC\",\n  \"Properties\" : {\n      \"CidrBlock\" : String,\n      \"EnableDnsHostnames\" : Boolean,\n      \"EnableDnsSupport\" : Boolean,\n      \"InstanceTenancy\" : String,\n      \"Ipv4IpamPoolId\" : String,\n      \"Ipv4NetmaskLength\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPC\nProperties:\n  CidrBlock: String\n  EnableDnsHostnames: Boolean\n  EnableDnsSupport: Boolean\n  InstanceTenancy: String\n  Ipv4IpamPoolId: String\n  Ipv4NetmaskLength: Integer\n  Tags: \n    - Tag\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCCidrBlock","awsResourceTypeName":"ec2-vpccidrblock","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCCidrBlock\",\n  \"Properties\" : {\n      \"AmazonProvidedIpv6CidrBlock\" : Boolean,\n      \"CidrBlock\" : String,\n      \"Ipv4IpamPoolId\" : String,\n      \"Ipv4NetmaskLength\" : Integer,\n      \"Ipv6CidrBlock\" : String,\n      \"Ipv6IpamPoolId\" : String,\n      \"Ipv6NetmaskLength\" : Integer,\n      \"Ipv6Pool\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCCidrBlock\nProperties:\n  AmazonProvidedIpv6CidrBlock: Boolean\n  CidrBlock: String\n  Ipv4IpamPoolId: String\n  Ipv4NetmaskLength: Integer\n  Ipv6CidrBlock: String\n  Ipv6IpamPoolId: String\n  Ipv6NetmaskLength: Integer\n  Ipv6Pool: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCDHCPOptionsAssociation","awsResourceTypeName":"ec2-vpcdhcpoptionsassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCDHCPOptionsAssociation\",\n  \"Properties\" : {\n      \"DhcpOptionsId\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCDHCPOptionsAssociation\nProperties:\n  DhcpOptionsId: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpoint","awsResourceTypeName":"ec2-vpcendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpoint\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PrivateDnsEnabled\" : Boolean,\n      \"RouteTableIds\" : [ String, ... ],\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServiceName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcEndpointType\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpoint\nProperties:\n  PolicyDocument: Json\n  PrivateDnsEnabled: Boolean\n  RouteTableIds: \n    - String\n  SecurityGroupIds: \n    - String\n  ServiceName: String\n  SubnetIds: \n    - String\n  VpcEndpointType: String\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpointConnectionNotification","awsResourceTypeName":"ec2-vpcendpointconnectionnotification","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpointConnectionNotification\",\n  \"Properties\" : {\n      \"ConnectionEvents\" : [ String, ... ],\n      \"ConnectionNotificationArn\" : String,\n      \"ServiceId\" : String,\n      \"VPCEndpointId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpointConnectionNotification\nProperties:\n  ConnectionEvents: \n    - String\n  ConnectionNotificationArn: String\n  ServiceId: String\n  VPCEndpointId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpointService","awsResourceTypeName":"ec2-vpcendpointservice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpointService\",\n  \"Properties\" : {\n      \"AcceptanceRequired\" : Boolean,\n      \"ContributorInsightsEnabled\" : Boolean,\n      \"GatewayLoadBalancerArns\" : [ String, ... ],\n      \"NetworkLoadBalancerArns\" : [ String, ... ],\n      \"PayerResponsibility\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpointService\nProperties:\n  AcceptanceRequired: Boolean\n  ContributorInsightsEnabled: Boolean\n  GatewayLoadBalancerArns: \n    - String\n  NetworkLoadBalancerArns: \n    - String\n  PayerResponsibility: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCEndpointServicePermissions","awsResourceTypeName":"ec2-vpcendpointservicepermissions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCEndpointServicePermissions\",\n  \"Properties\" : {\n      \"AllowedPrincipals\" : [ String, ... ],\n      \"ServiceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCEndpointServicePermissions\nProperties:\n  AllowedPrincipals: \n    - String\n  ServiceId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCGatewayAttachment","awsResourceTypeName":"ec2-vpcgatewayattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCGatewayAttachment\",\n  \"Properties\" : {\n      \"InternetGatewayId\" : String,\n      \"VpcId\" : String,\n      \"VpnGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCGatewayAttachment\nProperties:\n  InternetGatewayId: String\n  VpcId: String\n  VpnGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPCPeeringConnection","awsResourceTypeName":"ec2-vpcpeeringconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPCPeeringConnection\",\n  \"Properties\" : {\n      \"PeerOwnerId\" : String,\n      \"PeerRegion\" : String,\n      \"PeerRoleArn\" : String,\n      \"PeerVpcId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPCPeeringConnection\nProperties:\n  PeerOwnerId: String\n  PeerRegion: String\n  PeerRoleArn: String\n  PeerVpcId: String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNConnection","awsResourceTypeName":"ec2-vpnconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNConnection\",\n  \"Properties\" : {\n      \"CustomerGatewayId\" : String,\n      \"StaticRoutesOnly\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayId\" : String,\n      \"Type\" : String,\n      \"VpnGatewayId\" : String,\n      \"VpnTunnelOptionsSpecifications\" : [ VpnTunnelOptionsSpecification, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNConnection\nProperties:\n  CustomerGatewayId: String\n  StaticRoutesOnly: Boolean\n  Tags: \n    - Tag\n  TransitGatewayId: String\n  Type: String\n  VpnGatewayId: String\n  VpnTunnelOptionsSpecifications: \n    - VpnTunnelOptionsSpecification\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNConnectionRoute","awsResourceTypeName":"ec2-vpnconnectionroute","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNConnectionRoute\",\n  \"Properties\" : {\n      \"DestinationCidrBlock\" : String,\n      \"VpnConnectionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNConnectionRoute\nProperties:\n  DestinationCidrBlock: String\n  VpnConnectionId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNGateway","awsResourceTypeName":"ec2-vpngateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNGateway\",\n  \"Properties\" : {\n      \"AmazonSideAsn\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNGateway\nProperties:\n  AmazonSideAsn: Integer\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::VPNGatewayRoutePropagation","awsResourceTypeName":"ec2-vpngatewayroutepropagation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EC2::VPNGatewayRoutePropagation\",\n  \"Properties\" : {\n      \"RouteTableIds\" : [ String, ... ],\n      \"VpnGatewayId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EC2::VPNGatewayRoutePropagation\nProperties:\n  RouteTableIds: \n    - String\n  VpnGatewayId: String\n","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EC2::LaunchTemplate","awsResourceTypeName":"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate","awsServiceName":"EC2","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::AutoScalingGroup","awsResourceTypeName":"autoscaling-autoscalinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::AutoScalingGroup\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"AvailabilityZones\" : [ String, ... ],\n      \"CapacityRebalance\" : Boolean,\n      \"Context\" : String,\n      \"Cooldown\" : String,\n      \"DefaultInstanceWarmup\" : Integer,\n      \"DesiredCapacity\" : String,\n      \"DesiredCapacityType\" : String,\n      \"HealthCheckGracePeriod\" : Integer,\n      \"HealthCheckType\" : String,\n      \"InstanceId\" : String,\n      \"InstanceMaintenancePolicy\" : InstanceMaintenancePolicy,\n      \"LaunchConfigurationName\" : String,\n      \"LaunchTemplate\" : LaunchTemplateSpecification,\n      \"LifecycleHookSpecificationList\" : [ LifecycleHookSpecification, ... ],\n      \"LoadBalancerNames\" : [ String, ... ],\n      \"MaxInstanceLifetime\" : Integer,\n      \"MaxSize\" : String,\n      \"MetricsCollection\" : [ MetricsCollection, ... ],\n      \"MinSize\" : String,\n      \"MixedInstancesPolicy\" : MixedInstancesPolicy,\n      \"NewInstancesProtectedFromScaleIn\" : Boolean,\n      \"NotificationConfigurations\" : [ NotificationConfiguration, ... ],\n      \"PlacementGroup\" : String,\n      \"ServiceLinkedRoleARN\" : String,\n      \"Tags\" : [ TagProperty, ... ],\n      \"TargetGroupARNs\" : [ String, ... ],\n      \"TerminationPolicies\" : [ String, ... ],\n      \"VPCZoneIdentifier\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::AutoScalingGroup\nProperties:\n  AutoScalingGroupName: String\n  AvailabilityZones: \n    - String\n  CapacityRebalance: Boolean\n  Context: String\n  Cooldown: String\n  DefaultInstanceWarmup: Integer\n  DesiredCapacity: String\n  DesiredCapacityType: String\n  HealthCheckGracePeriod: Integer\n  HealthCheckType: String\n  InstanceId: String\n  InstanceMaintenancePolicy: \n    InstanceMaintenancePolicy\n  LaunchConfigurationName: String\n  LaunchTemplate: \n    LaunchTemplateSpecification\n  LifecycleHookSpecificationList: \n    - LifecycleHookSpecification\n  LoadBalancerNames: \n    - String\n  MaxInstanceLifetime: Integer\n  MaxSize: String\n  MetricsCollection: \n    - MetricsCollection\n  MinSize: String\n  MixedInstancesPolicy: \n    MixedInstancesPolicy\n  NewInstancesProtectedFromScaleIn: Boolean\n  NotificationConfigurations: \n    - NotificationConfiguration\n  PlacementGroup: String\n  ServiceLinkedRoleARN: String\n  Tags: \n    - TagProperty\n  TargetGroupARNs: \n    - String\n  TerminationPolicies: \n    - String\n  VPCZoneIdentifier: \n    - String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::LaunchConfiguration","awsResourceTypeName":"autoscaling-launchconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::LaunchConfiguration\",\n  \"Properties\" : {\n      \"AssociatePublicIpAddress\" : Boolean,\n      \"BlockDeviceMappings\" : [ BlockDeviceMapping, ... ],\n      \"ClassicLinkVPCId\" : String,\n      \"ClassicLinkVPCSecurityGroups\" : [ String, ... ],\n      \"EbsOptimized\" : Boolean,\n      \"IamInstanceProfile\" : String,\n      \"ImageId\" : String,\n      \"InstanceId\" : String,\n      \"InstanceMonitoring\" : Boolean,\n      \"InstanceType\" : String,\n      \"KernelId\" : String,\n      \"KeyName\" : String,\n      \"LaunchConfigurationName\" : String,\n      \"MetadataOptions\" : MetadataOptions,\n      \"PlacementTenancy\" : String,\n      \"RamDiskId\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"SpotPrice\" : String,\n      \"UserData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::LaunchConfiguration\nProperties:\n  AssociatePublicIpAddress: Boolean\n  BlockDeviceMappings: \n    - BlockDeviceMapping\n  ClassicLinkVPCId: String\n  ClassicLinkVPCSecurityGroups: \n    - String\n  EbsOptimized: Boolean\n  IamInstanceProfile: String\n  ImageId: String\n  InstanceId: String\n  InstanceMonitoring: Boolean\n  InstanceType: String\n  KernelId: String\n  KeyName: String\n  LaunchConfigurationName: String\n  MetadataOptions: \n    MetadataOptions\n  PlacementTenancy: String\n  RamDiskId: String\n  SecurityGroups: \n    - String\n  SpotPrice: String\n  UserData: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::LifecycleHook","awsResourceTypeName":"autoscaling-lifecyclehook","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::LifecycleHook\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"DefaultResult\" : String,\n      \"HeartbeatTimeout\" : Integer,\n      \"LifecycleHookName\" : String,\n      \"LifecycleTransition\" : String,\n      \"NotificationMetadata\" : String,\n      \"NotificationTargetARN\" : String,\n      \"RoleARN\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::LifecycleHook\nProperties:\n  AutoScalingGroupName: String\n  DefaultResult: String\n  HeartbeatTimeout: Integer\n  LifecycleHookName: String\n  LifecycleTransition: String\n  NotificationMetadata: String\n  NotificationTargetARN: String\n  RoleARN: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::ScalingPolicy","awsResourceTypeName":"autoscaling-scalingpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::ScalingPolicy\",\n  \"Properties\" : {\n      \"AdjustmentType\" : String,\n      \"AutoScalingGroupName\" : String,\n      \"Cooldown\" : String,\n      \"EstimatedInstanceWarmup\" : Integer,\n      \"MetricAggregationType\" : String,\n      \"MinAdjustmentMagnitude\" : Integer,\n      \"PolicyType\" : String,\n      \"PredictiveScalingConfiguration\" : PredictiveScalingConfiguration,\n      \"ScalingAdjustment\" : Integer,\n      \"StepAdjustments\" : [ StepAdjustment, ... ],\n      \"TargetTrackingConfiguration\" : TargetTrackingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::ScalingPolicy\nProperties:\n  AdjustmentType: String\n  AutoScalingGroupName: String\n  Cooldown: String\n  EstimatedInstanceWarmup: Integer\n  MetricAggregationType: String\n  MinAdjustmentMagnitude: Integer\n  PolicyType: String\n  PredictiveScalingConfiguration: \n    PredictiveScalingConfiguration\n  ScalingAdjustment: Integer\n  StepAdjustments: \n    - StepAdjustment\n  TargetTrackingConfiguration: \n    TargetTrackingConfiguration\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::ScheduledAction","awsResourceTypeName":"autoscaling-scheduledaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::ScheduledAction\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"DesiredCapacity\" : Integer,\n      \"EndTime\" : String,\n      \"MaxSize\" : Integer,\n      \"MinSize\" : Integer,\n      \"Recurrence\" : String,\n      \"StartTime\" : String,\n      \"TimeZone\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::ScheduledAction\nProperties:\n  AutoScalingGroupName: String\n  DesiredCapacity: Integer\n  EndTime: String\n  MaxSize: Integer\n  MinSize: Integer\n  Recurrence: String\n  StartTime: String\n  TimeZone: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::AutoScaling::WarmPool","awsResourceTypeName":"autoscaling-warmpool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AutoScaling::WarmPool\",\n  \"Properties\" : {\n      \"AutoScalingGroupName\" : String,\n      \"InstanceReusePolicy\" : InstanceReusePolicy,\n      \"MaxGroupPreparedCapacity\" : Integer,\n      \"MinSize\" : Integer,\n      \"PoolState\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AutoScaling::WarmPool\nProperties:\n  AutoScalingGroupName: String\n  InstanceReusePolicy: \n    InstanceReusePolicy\n  MaxGroupPreparedCapacity: Integer\n  MinSize: Integer\n  PoolState: String\n","awsServiceName":"AutoScaling","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ECR::PublicRepository","awsResourceTypeName":"ecr-publicrepository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::PublicRepository\",\n  \"Properties\" : {\n      \"RepositoryCatalogData\" : RepositoryCatalogData,\n      \"RepositoryName\" : String,\n      \"RepositoryPolicyText\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::PublicRepository\nProperties:\n  RepositoryCatalogData: \n    RepositoryCatalogData\n  RepositoryName: String\n  RepositoryPolicyText: Json\n  Tags: \n    - Tag\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::PullThroughCacheRule","awsResourceTypeName":"ecr-pullthroughcacherule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::PullThroughCacheRule\",\n  \"Properties\" : {\n      \"CredentialArn\" : String,\n      \"EcrRepositoryPrefix\" : String,\n      \"UpstreamRegistry\" : String,\n      \"UpstreamRegistryUrl\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::PullThroughCacheRule\nProperties:\n  CredentialArn: String\n  EcrRepositoryPrefix: String\n  UpstreamRegistry: String\n  UpstreamRegistryUrl: String\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::RegistryPolicy","awsResourceTypeName":"ecr-registrypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::RegistryPolicy\",\n  \"Properties\" : {\n      \"PolicyText\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::RegistryPolicy\nProperties:\n  PolicyText: Json\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::ReplicationConfiguration","awsResourceTypeName":"ecr-replicationconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::ReplicationConfiguration\",\n  \"Properties\" : {\n      \"ReplicationConfiguration\" : ReplicationConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::ReplicationConfiguration\nProperties:\n  ReplicationConfiguration: \n    ReplicationConfiguration\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::Repository","awsResourceTypeName":"ecr-repository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::Repository\",\n  \"Properties\" : {\n      \"EmptyOnDelete\" : Boolean,\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"ImageScanningConfiguration\" : ImageScanningConfiguration,\n      \"ImageTagMutability\" : String,\n      \"LifecyclePolicy\" : LifecyclePolicy,\n      \"RepositoryName\" : String,\n      \"RepositoryPolicyText\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::Repository\nProperties:\n  EmptyOnDelete: Boolean\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  ImageScanningConfiguration: \n    ImageScanningConfiguration\n  ImageTagMutability: String\n  LifecyclePolicy: \n    LifecyclePolicy\n  RepositoryName: String\n  RepositoryPolicyText: Json\n  Tags: \n    - Tag\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECR::RepositoryCreationTemplate","awsResourceTypeName":"ecr-repositorycreationtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECR::RepositoryCreationTemplate\",\n  \"Properties\" : {\n      \"AppliedFor\" : [ String, ... ],\n      \"Description\" : String,\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"ImageTagMutability\" : String,\n      \"LifecyclePolicy\" : String,\n      \"Prefix\" : String,\n      \"RepositoryPolicy\" : String,\n      \"ResourceTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECR::RepositoryCreationTemplate\nProperties:\n  AppliedFor: \n    - String\n  Description: String\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  ImageTagMutability: String\n  LifecyclePolicy: String\n  Prefix: String\n  RepositoryPolicy: String\n  ResourceTags: \n    - Tag\n","awsServiceName":"ECR","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::CapacityProvider","awsResourceTypeName":"ecs-capacityprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::CapacityProvider\",\n  \"Properties\" : {\n      \"AutoScalingGroupProvider\" : AutoScalingGroupProvider,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::CapacityProvider\nProperties:\n  AutoScalingGroupProvider: \n    AutoScalingGroupProvider\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::Cluster","awsResourceTypeName":"ecs-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::Cluster\",\n  \"Properties\" : {\n      \"CapacityProviders\" : [ String, ... ],\n      \"ClusterName\" : String,\n      \"ClusterSettings\" : [ ClusterSettings, ... ],\n      \"Configuration\" : ClusterConfiguration,\n      \"DefaultCapacityProviderStrategy\" : [ CapacityProviderStrategyItem, ... ],\n      \"ServiceConnectDefaults\" : ServiceConnectDefaults,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::Cluster\nProperties:\n  CapacityProviders: \n    - String\n  ClusterName: String\n  ClusterSettings: \n    - ClusterSettings\n  Configuration: \n    ClusterConfiguration\n  DefaultCapacityProviderStrategy: \n    - CapacityProviderStrategyItem\n  ServiceConnectDefaults: \n    ServiceConnectDefaults\n  Tags: \n    - Tag\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::ClusterCapacityProviderAssociations","awsResourceTypeName":"ecs-clustercapacityproviderassociations","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::ClusterCapacityProviderAssociations\",\n  \"Properties\" : {\n      \"CapacityProviders\" : [ String, ... ],\n      \"Cluster\" : String,\n      \"DefaultCapacityProviderStrategy\" : [ CapacityProviderStrategy, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::ClusterCapacityProviderAssociations\nProperties:\n  CapacityProviders: \n    - String\n  Cluster: String\n  DefaultCapacityProviderStrategy: \n    - CapacityProviderStrategy\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::PrimaryTaskSet","awsResourceTypeName":"ecs-primarytaskset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::PrimaryTaskSet\",\n  \"Properties\" : {\n      \"Cluster\" : String,\n      \"Service\" : String,\n      \"TaskSetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::PrimaryTaskSet\nProperties:\n  Cluster: String\n  Service: String\n  TaskSetId: String\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::Service","awsResourceTypeName":"ecs-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::Service\",\n  \"Properties\" : {\n      \"CapacityProviderStrategy\" : [ CapacityProviderStrategyItem, ... ],\n      \"Cluster\" : String,\n      \"DeploymentConfiguration\" : DeploymentConfiguration,\n      \"DeploymentController\" : DeploymentController,\n      \"DesiredCount\" : Integer,\n      \"EnableECSManagedTags\" : Boolean,\n      \"EnableExecuteCommand\" : Boolean,\n      \"HealthCheckGracePeriodSeconds\" : Integer,\n      \"LaunchType\" : String,\n      \"LoadBalancers\" : [ LoadBalancer, ... ],\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"PlacementConstraints\" : [ PlacementConstraint, ... ],\n      \"PlacementStrategies\" : [ PlacementStrategy, ... ],\n      \"PlatformVersion\" : String,\n      \"PropagateTags\" : String,\n      \"Role\" : String,\n      \"SchedulingStrategy\" : String,\n      \"ServiceConnectConfiguration\" : ServiceConnectConfiguration,\n      \"ServiceName\" : String,\n      \"ServiceRegistries\" : [ ServiceRegistry, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TaskDefinition\" : String,\n      \"VolumeConfigurations\" : [ ServiceVolumeConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::Service\nProperties:\n  CapacityProviderStrategy: \n    - CapacityProviderStrategyItem\n  Cluster: String\n  DeploymentConfiguration: \n    DeploymentConfiguration\n  DeploymentController: \n    DeploymentController\n  DesiredCount: Integer\n  EnableECSManagedTags: Boolean\n  EnableExecuteCommand: Boolean\n  HealthCheckGracePeriodSeconds: Integer\n  LaunchType: String\n  LoadBalancers: \n    - LoadBalancer\n  NetworkConfiguration: \n    NetworkConfiguration\n  PlacementConstraints: \n    - PlacementConstraint\n  PlacementStrategies: \n    - PlacementStrategy\n  PlatformVersion: String\n  PropagateTags: String\n  Role: String\n  SchedulingStrategy: String\n  ServiceConnectConfiguration: \n    ServiceConnectConfiguration\n  ServiceName: String\n  ServiceRegistries: \n    - ServiceRegistry\n  Tags: \n    - Tag\n  TaskDefinition: String\n  VolumeConfigurations: \n    - ServiceVolumeConfiguration\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::TaskDefinition","awsResourceTypeName":"ecs-taskdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::TaskDefinition\",\n  \"Properties\" : {\n      \"ContainerDefinitions\" : [ ContainerDefinition, ... ],\n      \"Cpu\" : String,\n      \"EphemeralStorage\" : EphemeralStorage,\n      \"ExecutionRoleArn\" : String,\n      \"Family\" : String,\n      \"InferenceAccelerators\" : [ InferenceAccelerator, ... ],\n      \"IpcMode\" : String,\n      \"Memory\" : String,\n      \"NetworkMode\" : String,\n      \"PidMode\" : String,\n      \"PlacementConstraints\" : [ TaskDefinitionPlacementConstraint, ... ],\n      \"ProxyConfiguration\" : ProxyConfiguration,\n      \"RequiresCompatibilities\" : [ String, ... ],\n      \"RuntimePlatform\" : RuntimePlatform,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskRoleArn\" : String,\n      \"Volumes\" : [ Volume, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::TaskDefinition\nProperties:\n  ContainerDefinitions: \n    - ContainerDefinition\n  Cpu: String\n  EphemeralStorage: \n    EphemeralStorage\n  ExecutionRoleArn: String\n  Family: String\n  InferenceAccelerators: \n    - InferenceAccelerator\n  IpcMode: String\n  Memory: String\n  NetworkMode: String\n  PidMode: String\n  PlacementConstraints: \n    - TaskDefinitionPlacementConstraint\n  ProxyConfiguration: \n    ProxyConfiguration\n  RequiresCompatibilities: \n    - String\n  RuntimePlatform: \n    RuntimePlatform\n  Tags: \n    - Tag\n  TaskRoleArn: String\n  Volumes: \n    - Volume\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ECS::TaskSet","awsResourceTypeName":"ecs-taskset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ECS::TaskSet\",\n  \"Properties\" : {\n      \"Cluster\" : String,\n      \"ExternalId\" : String,\n      \"LaunchType\" : String,\n      \"LoadBalancers\" : [ LoadBalancer, ... ],\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"PlatformVersion\" : String,\n      \"Scale\" : Scale,\n      \"Service\" : String,\n      \"ServiceRegistries\" : [ ServiceRegistry, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TaskDefinition\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ECS::TaskSet\nProperties:\n  Cluster: String\n  ExternalId: String\n  LaunchType: String\n  LoadBalancers: \n    - LoadBalancer\n  NetworkConfiguration: \n    NetworkConfiguration\n  PlatformVersion: String\n  Scale: \n    Scale\n  Service: String\n  ServiceRegistries: \n    - ServiceRegistry\n  Tags: \n    - Tag\n  TaskDefinition: String\n","awsServiceName":"ECS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EFS::AccessPoint","awsResourceTypeName":"efs-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EFS::AccessPoint\",\n  \"Properties\" : {\n      \"AccessPointTags\" : [ AccessPointTag, ... ],\n      \"ClientToken\" : String,\n      \"FileSystemId\" : String,\n      \"PosixUser\" : PosixUser,\n      \"RootDirectory\" : RootDirectory\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EFS::AccessPoint\nProperties:\n  AccessPointTags: \n    - AccessPointTag\n  ClientToken: String\n  FileSystemId: String\n  PosixUser: \n    PosixUser\n  RootDirectory: \n    RootDirectory\n","awsServiceName":"EFS","awsServiceCategory":"storage"},{"awsResourceType":"AWS::EFS::FileSystem","awsResourceTypeName":"efs-filesystem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EFS::FileSystem\",\n  \"Properties\" : {\n      \"AvailabilityZoneName\" : String,\n      \"BackupPolicy\" : BackupPolicy,\n      \"BypassPolicyLockoutSafetyCheck\" : Boolean,\n      \"Encrypted\" : Boolean,\n      \"FileSystemPolicy\" : Json,\n      \"FileSystemProtection\" : FileSystemProtection,\n      \"FileSystemTags\" : [ ElasticFileSystemTag, ... ],\n      \"KmsKeyId\" : String,\n      \"LifecyclePolicies\" : [ LifecyclePolicy, ... ],\n      \"PerformanceMode\" : String,\n      \"ProvisionedThroughputInMibps\" : Number,\n      \"ReplicationConfiguration\" : ReplicationConfiguration,\n      \"ThroughputMode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EFS::FileSystem\nProperties:\n  AvailabilityZoneName: String\n  BackupPolicy: \n    BackupPolicy\n  BypassPolicyLockoutSafetyCheck: Boolean\n  Encrypted: Boolean\n  FileSystemPolicy: Json\n  FileSystemProtection: \n    FileSystemProtection\n  FileSystemTags: \n    - ElasticFileSystemTag\n  KmsKeyId: String\n  LifecyclePolicies: \n    - LifecyclePolicy\n  PerformanceMode: String\n  ProvisionedThroughputInMibps: Number\n  ReplicationConfiguration: \n    ReplicationConfiguration\n  ThroughputMode: String\n","awsServiceName":"EFS","awsServiceCategory":"storage"},{"awsResourceType":"AWS::EFS::MountTarget","awsResourceTypeName":"efs-mounttarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EFS::MountTarget\",\n  \"Properties\" : {\n      \"FileSystemId\" : String,\n      \"IpAddress\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EFS::MountTarget\nProperties:\n  FileSystemId: String\n  IpAddress: String\n  SecurityGroups: \n    - String\n  SubnetId: String\n","awsServiceName":"EFS","awsServiceCategory":"storage"},{"awsResourceType":"AWS::EKS::AccessEntry","awsResourceTypeName":"eks-accessentry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::AccessEntry\",\n  \"Properties\" : {\n      \"AccessPolicies\" : [ AccessPolicy, ... ],\n      \"ClusterName\" : String,\n      \"KubernetesGroups\" : [ String, ... ],\n      \"PrincipalArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"Username\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::AccessEntry\nProperties:\n  AccessPolicies: \n    - AccessPolicy\n  ClusterName: String\n  KubernetesGroups: \n    - String\n  PrincipalArn: String\n  Tags: \n    - Tag\n  Type: String\n  Username: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::Addon","awsResourceTypeName":"eks-addon","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::Addon\",\n  \"Properties\" : {\n      \"AddonName\" : String,\n      \"AddonVersion\" : String,\n      \"ClusterName\" : String,\n      \"ConfigurationValues\" : String,\n      \"PreserveOnDelete\" : Boolean,\n      \"ResolveConflicts\" : String,\n      \"ServiceAccountRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::Addon\nProperties:\n  AddonName: String\n  AddonVersion: String\n  ClusterName: String\n  ConfigurationValues: String\n  PreserveOnDelete: Boolean\n  ResolveConflicts: String\n  ServiceAccountRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::Cluster","awsResourceTypeName":"eks-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::Cluster\",\n  \"Properties\" : {\n      \"AccessConfig\" : AccessConfig,\n      \"EncryptionConfig\" : [ EncryptionConfig, ... ],\n      \"KubernetesNetworkConfig\" : KubernetesNetworkConfig,\n      \"Logging\" : Logging,\n      \"Name\" : String,\n      \"OutpostConfig\" : OutpostConfig,\n      \"ResourcesVpcConfig\" : ResourcesVpcConfig,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::Cluster\nProperties:\n  AccessConfig: \n    AccessConfig\n  EncryptionConfig: \n    - EncryptionConfig\n  KubernetesNetworkConfig: \n    KubernetesNetworkConfig\n  Logging: \n    Logging\n  Name: String\n  OutpostConfig: \n    OutpostConfig\n  ResourcesVpcConfig: \n    ResourcesVpcConfig\n  RoleArn: String\n  Tags: \n    - Tag\n  Version: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::FargateProfile","awsResourceTypeName":"eks-fargateprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::FargateProfile\",\n  \"Properties\" : {\n      \"ClusterName\" : String,\n      \"FargateProfileName\" : String,\n      \"PodExecutionRoleArn\" : String,\n      \"Selectors\" : [ Selector, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::FargateProfile\nProperties:\n  ClusterName: String\n  FargateProfileName: String\n  PodExecutionRoleArn: String\n  Selectors: \n    - Selector\n  Subnets: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::IdentityProviderConfig","awsResourceTypeName":"eks-identityproviderconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::IdentityProviderConfig\",\n  \"Properties\" : {\n      \"ClusterName\" : String,\n      \"IdentityProviderConfigName\" : String,\n      \"Oidc\" : OidcIdentityProviderConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::IdentityProviderConfig\nProperties:\n  ClusterName: String\n  IdentityProviderConfigName: String\n  Oidc: \n    OidcIdentityProviderConfig\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::Nodegroup","awsResourceTypeName":"eks-nodegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::Nodegroup\",\n  \"Properties\" : {\n      \"AmiType\" : String,\n      \"CapacityType\" : String,\n      \"ClusterName\" : String,\n      \"DiskSize\" : Integer,\n      \"ForceUpdateEnabled\" : Boolean,\n      \"InstanceTypes\" : [ String, ... ],\n      \"Labels\" : {Key: Value, ...},\n      \"LaunchTemplate\" : LaunchTemplateSpecification,\n      \"NodegroupName\" : String,\n      \"NodeRole\" : String,\n      \"ReleaseVersion\" : String,\n      \"RemoteAccess\" : RemoteAccess,\n      \"ScalingConfig\" : ScalingConfig,\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Taints\" : [ Taint, ... ],\n      \"UpdateConfig\" : UpdateConfig,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::Nodegroup\nProperties:\n  AmiType: String\n  CapacityType: String\n  ClusterName: String\n  DiskSize: Integer\n  ForceUpdateEnabled: Boolean\n  InstanceTypes: \n    - String\n  Labels: \n    Key: Value\n  LaunchTemplate: \n    LaunchTemplateSpecification\n  NodegroupName: String\n  NodeRole: String\n  ReleaseVersion: String\n  RemoteAccess: \n    RemoteAccess\n  ScalingConfig: \n    ScalingConfig\n  Subnets: \n    - String\n  Tags: \n    Key: Value\n  Taints: \n    - Taint\n  UpdateConfig: \n    UpdateConfig\n  Version: String\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::EKS::PodIdentityAssociation","awsResourceTypeName":"eks-podidentityassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EKS::PodIdentityAssociation\",\n  \"Properties\" : {\n      \"ClusterName\" : String,\n      \"Namespace\" : String,\n      \"RoleArn\" : String,\n      \"ServiceAccount\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EKS::PodIdentityAssociation\nProperties:\n  ClusterName: String\n  Namespace: String\n  RoleArn: String\n  ServiceAccount: String\n  Tags: \n    - Tag\n","awsServiceName":"EKS","awsServiceCategory":"containers"},{"awsResourceType":"AWS::ElasticBeanstalk::Application","awsResourceTypeName":"elasticbeanstalk-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::Application\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Description\" : String,\n      \"ResourceLifecycleConfig\" : ApplicationResourceLifecycleConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::Application\nProperties:\n  ApplicationName: String\n  Description: String\n  ResourceLifecycleConfig: \n    ApplicationResourceLifecycleConfig\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticBeanstalk::ApplicationVersion","awsResourceTypeName":"elasticbeanstalk-applicationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Description\" : String,\n      \"SourceBundle\" : SourceBundle\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::ApplicationVersion\nProperties:\n  ApplicationName: String\n  Description: String\n  SourceBundle: \n    SourceBundle\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticBeanstalk::ConfigurationTemplate","awsResourceTypeName":"elasticbeanstalk-configurationtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::ConfigurationTemplate\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Description\" : String,\n      \"EnvironmentId\" : String,\n      \"OptionSettings\" : [ ConfigurationOptionSetting, ... ],\n      \"PlatformArn\" : String,\n      \"SolutionStackName\" : String,\n      \"SourceConfiguration\" : SourceConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::ConfigurationTemplate\nProperties:\n  ApplicationName: String\n  Description: String\n  EnvironmentId: String\n  OptionSettings: \n    - ConfigurationOptionSetting\n  PlatformArn: String\n  SolutionStackName: String\n  SourceConfiguration: \n    SourceConfiguration\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticBeanstalk::Environment","awsResourceTypeName":"elasticbeanstalk-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticBeanstalk::Environment\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"CNAMEPrefix\" : String,\n      \"Description\" : String,\n      \"EnvironmentName\" : String,\n      \"OperationsRole\" : String,\n      \"OptionSettings\" : [ OptionSetting, ... ],\n      \"PlatformArn\" : String,\n      \"SolutionStackName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateName\" : String,\n      \"Tier\" : Tier,\n      \"VersionLabel\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticBeanstalk::Environment\nProperties:\n  ApplicationName: String\n  CNAMEPrefix: String\n  Description: String\n  EnvironmentName: String\n  OperationsRole: String\n  OptionSettings: \n    - OptionSetting\n  PlatformArn: String\n  SolutionStackName: String\n  Tags: \n    - Tag\n  TemplateName: String\n  Tier: \n    Tier\n  VersionLabel: String\n","awsServiceName":"ElasticBeanstalk","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElasticLoadBalancing::LoadBalancer","awsResourceTypeName":"elasticloadbalancing-loadbalancer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancing::LoadBalancer\",\n  \"Properties\" : {\n      \"AccessLoggingPolicy\" : AccessLoggingPolicy,\n      \"AppCookieStickinessPolicy\" : [ AppCookieStickinessPolicy, ... ],\n      \"AvailabilityZones\" : [ String, ... ],\n      \"ConnectionDrainingPolicy\" : ConnectionDrainingPolicy,\n      \"ConnectionSettings\" : ConnectionSettings,\n      \"CrossZone\" : Boolean,\n      \"HealthCheck\" : HealthCheck,\n      \"Instances\" : [ String, ... ],\n      \"LBCookieStickinessPolicy\" : [ LBCookieStickinessPolicy, ... ],\n      \"Listeners\" : [ Listeners, ... ],\n      \"LoadBalancerName\" : String,\n      \"Policies\" : [ Policies, ... ],\n      \"Scheme\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancing::LoadBalancer\nProperties:\n  AccessLoggingPolicy: \n    AccessLoggingPolicy\n  AppCookieStickinessPolicy: \n    - AppCookieStickinessPolicy\n  AvailabilityZones: \n    - String\n  ConnectionDrainingPolicy: \n    ConnectionDrainingPolicy\n  ConnectionSettings: \n    ConnectionSettings\n  CrossZone: Boolean\n  HealthCheck: \n    HealthCheck\n  Instances: \n    - String\n  LBCookieStickinessPolicy: \n    - LBCookieStickinessPolicy\n  Listeners: \n    - Listeners\n  LoadBalancerName: String\n  Policies: \n    - Policies\n  Scheme: String\n  SecurityGroups: \n    - String\n  Subnets: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"ElasticLoadBalancing","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::Listener","awsResourceTypeName":"elasticloadbalancingv2-listener","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::Listener\",\n  \"Properties\" : {\n      \"AlpnPolicy\" : [ String, ... ],\n      \"Certificates\" : [ Certificate, ... ],\n      \"DefaultActions\" : [ Action, ... ],\n      \"LoadBalancerArn\" : String,\n      \"MutualAuthentication\" : MutualAuthentication,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"SslPolicy\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::Listener\nProperties:\n  AlpnPolicy: \n    - String\n  Certificates: \n    - Certificate\n  DefaultActions: \n    - Action\n  LoadBalancerArn: String\n  MutualAuthentication: \n    MutualAuthentication\n  Port: Integer\n  Protocol: String\n  SslPolicy: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::ListenerCertificate","awsResourceTypeName":"elasticloadbalancingv2-listenercertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::ListenerCertificate\",\n  \"Properties\" : {\n      \"Certificates\" : [ Certificate, ... ],\n      \"ListenerArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::ListenerCertificate\nProperties:\n  Certificates: \n    - Certificate\n  ListenerArn: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::ListenerRule","awsResourceTypeName":"elasticloadbalancingv2-listenerrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::ListenerRule\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"Conditions\" : [ RuleCondition, ... ],\n      \"ListenerArn\" : String,\n      \"Priority\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::ListenerRule\nProperties:\n  Actions: \n    - Action\n  Conditions: \n    - RuleCondition\n  ListenerArn: String\n  Priority: Integer\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::LoadBalancer","awsResourceTypeName":"elasticloadbalancingv2-loadbalancer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n  \"Properties\" : {\n      \"EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic\" : String,\n      \"IpAddressType\" : String,\n      \"LoadBalancerAttributes\" : [ LoadBalancerAttribute, ... ],\n      \"Name\" : String,\n      \"Scheme\" : String,\n      \"SecurityGroups\" : [ String, ... ],\n      \"SubnetMappings\" : [ SubnetMapping, ... ],\n      \"Subnets\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::LoadBalancer\nProperties:\n  EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: String\n  IpAddressType: String\n  LoadBalancerAttributes: \n    - LoadBalancerAttribute\n  Name: String\n  Scheme: String\n  SecurityGroups: \n    - String\n  SubnetMappings: \n    - SubnetMapping\n  Subnets: \n    - String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::TargetGroup","awsResourceTypeName":"elasticloadbalancingv2-targetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::TargetGroup\",\n  \"Properties\" : {\n      \"HealthCheckEnabled\" : Boolean,\n      \"HealthCheckIntervalSeconds\" : Integer,\n      \"HealthCheckPath\" : String,\n      \"HealthCheckPort\" : String,\n      \"HealthCheckProtocol\" : String,\n      \"HealthCheckTimeoutSeconds\" : Integer,\n      \"HealthyThresholdCount\" : Integer,\n      \"IpAddressType\" : String,\n      \"Matcher\" : Matcher,\n      \"Name\" : String,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"ProtocolVersion\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetGroupAttributes\" : [ TargetGroupAttribute, ... ],\n      \"Targets\" : [ TargetDescription, ... ],\n      \"TargetType\" : String,\n      \"UnhealthyThresholdCount\" : Integer,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::TargetGroup\nProperties:\n  HealthCheckEnabled: Boolean\n  HealthCheckIntervalSeconds: Integer\n  HealthCheckPath: String\n  HealthCheckPort: String\n  HealthCheckProtocol: String\n  HealthCheckTimeoutSeconds: Integer\n  HealthyThresholdCount: Integer\n  IpAddressType: String\n  Matcher: \n    Matcher\n  Name: String\n  Port: Integer\n  Protocol: String\n  ProtocolVersion: String\n  Tags: \n    - Tag\n  TargetGroupAttributes: \n    - TargetGroupAttribute\n  Targets: \n    - TargetDescription\n  TargetType: String\n  UnhealthyThresholdCount: Integer\n  VpcId: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::TrustStore","awsResourceTypeName":"elasticloadbalancingv2-truststore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::TrustStore\",\n  \"Properties\" : {\n      \"CaCertificatesBundleS3Bucket\" : String,\n      \"CaCertificatesBundleS3Key\" : String,\n      \"CaCertificatesBundleS3ObjectVersion\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::TrustStore\nProperties:\n  CaCertificatesBundleS3Bucket: String\n  CaCertificatesBundleS3Key: String\n  CaCertificatesBundleS3ObjectVersion: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElasticLoadBalancingV2::TrustStoreRevocation","awsResourceTypeName":"elasticloadbalancingv2-truststorerevocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElasticLoadBalancingV2::TrustStoreRevocation\",\n  \"Properties\" : {\n      \"RevocationContents\" : [ RevocationContent, ... ],\n      \"TrustStoreArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElasticLoadBalancingV2::TrustStoreRevocation\nProperties:\n  RevocationContents: \n    - RevocationContent\n  TrustStoreArn: String\n","awsServiceName":"ElasticLoadBalancingV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::EMR::Cluster","awsResourceTypeName":"emr-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::Cluster\",\n  \"Properties\" : {\n      \"AdditionalInfo\" : Json,\n      \"Applications\" : [ Application, ... ],\n      \"AutoScalingRole\" : String,\n      \"AutoTerminationPolicy\" : AutoTerminationPolicy,\n      \"BootstrapActions\" : [ BootstrapActionConfig, ... ],\n      \"Configurations\" : [ Configuration, ... ],\n      \"CustomAmiId\" : String,\n      \"EbsRootVolumeIops\" : Integer,\n      \"EbsRootVolumeSize\" : Integer,\n      \"EbsRootVolumeThroughput\" : Integer,\n      \"Instances\" : JobFlowInstancesConfig,\n      \"JobFlowRole\" : String,\n      \"KerberosAttributes\" : KerberosAttributes,\n      \"LogEncryptionKmsKeyId\" : String,\n      \"LogUri\" : String,\n      \"ManagedScalingPolicy\" : ManagedScalingPolicy,\n      \"Name\" : String,\n      \"OSReleaseLabel\" : String,\n      \"PlacementGroupConfigs\" : [ PlacementGroupConfig, ... ],\n      \"ReleaseLabel\" : String,\n      \"ScaleDownBehavior\" : String,\n      \"SecurityConfiguration\" : String,\n      \"ServiceRole\" : String,\n      \"StepConcurrencyLevel\" : Integer,\n      \"Steps\" : [ StepConfig, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VisibleToAllUsers\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::Cluster\nProperties:\n  AdditionalInfo: Json\n  Applications: \n    - Application\n  AutoScalingRole: String\n  AutoTerminationPolicy: \n    AutoTerminationPolicy\n  BootstrapActions: \n    - BootstrapActionConfig\n  Configurations: \n    - Configuration\n  CustomAmiId: String\n  EbsRootVolumeIops: Integer\n  EbsRootVolumeSize: Integer\n  EbsRootVolumeThroughput: Integer\n  Instances: \n    JobFlowInstancesConfig\n  JobFlowRole: String\n  KerberosAttributes: \n    KerberosAttributes\n  LogEncryptionKmsKeyId: String\n  LogUri: String\n  ManagedScalingPolicy: \n    ManagedScalingPolicy\n  Name: String\n  OSReleaseLabel: String\n  PlacementGroupConfigs: \n    - PlacementGroupConfig\n  ReleaseLabel: String\n  ScaleDownBehavior: String\n  SecurityConfiguration: String\n  ServiceRole: String\n  StepConcurrencyLevel: Integer\n  Steps: \n    - StepConfig\n  Tags: \n    - Tag\n  VisibleToAllUsers: Boolean\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::InstanceFleetConfig","awsResourceTypeName":"emr-instancefleetconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::InstanceFleetConfig\",\n  \"Properties\" : {\n      \"ClusterId\" : String,\n      \"InstanceFleetType\" : String,\n      \"InstanceTypeConfigs\" : [ InstanceTypeConfig, ... ],\n      \"LaunchSpecifications\" : InstanceFleetProvisioningSpecifications,\n      \"Name\" : String,\n      \"TargetOnDemandCapacity\" : Integer,\n      \"TargetSpotCapacity\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::InstanceFleetConfig\nProperties:\n  ClusterId: String\n  InstanceFleetType: String\n  InstanceTypeConfigs: \n    - InstanceTypeConfig\n  LaunchSpecifications: \n    InstanceFleetProvisioningSpecifications\n  Name: String\n  TargetOnDemandCapacity: Integer\n  TargetSpotCapacity: Integer\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::InstanceGroupConfig","awsResourceTypeName":"emr-instancegroupconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::InstanceGroupConfig\",\n  \"Properties\" : {\n      \"AutoScalingPolicy\" : AutoScalingPolicy,\n      \"BidPrice\" : String,\n      \"Configurations\" : [ Configuration, ... ],\n      \"CustomAmiId\" : String,\n      \"EbsConfiguration\" : EbsConfiguration,\n      \"InstanceCount\" : Integer,\n      \"InstanceRole\" : String,\n      \"InstanceType\" : String,\n      \"JobFlowId\" : String,\n      \"Market\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::InstanceGroupConfig\nProperties:\n  AutoScalingPolicy: \n    AutoScalingPolicy\n  BidPrice: String\n  Configurations: \n    - Configuration\n  CustomAmiId: String\n  EbsConfiguration: \n    EbsConfiguration\n  InstanceCount: Integer\n  InstanceRole: String\n  InstanceType: String\n  JobFlowId: String\n  Market: String\n  Name: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::SecurityConfiguration","awsResourceTypeName":"emr-securityconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::SecurityConfiguration\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SecurityConfiguration\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::SecurityConfiguration\nProperties:\n  Name: String\n  SecurityConfiguration: Json\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::Step","awsResourceTypeName":"emr-step","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::Step\",\n  \"Properties\" : {\n      \"ActionOnFailure\" : String,\n      \"HadoopJarStep\" : HadoopJarStepConfig,\n      \"JobFlowId\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::Step\nProperties:\n  ActionOnFailure: String\n  HadoopJarStep: \n    HadoopJarStepConfig\n  JobFlowId: String\n  Name: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::Studio","awsResourceTypeName":"emr-studio","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::Studio\",\n  \"Properties\" : {\n      \"AuthMode\" : String,\n      \"DefaultS3Location\" : String,\n      \"Description\" : String,\n      \"EncryptionKeyArn\" : String,\n      \"EngineSecurityGroupId\" : String,\n      \"IdcInstanceArn\" : String,\n      \"IdcUserAssignment\" : String,\n      \"IdpAuthUrl\" : String,\n      \"IdpRelayStateParameterName\" : String,\n      \"Name\" : String,\n      \"ServiceRole\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TrustedIdentityPropagationEnabled\" : Boolean,\n      \"UserRole\" : String,\n      \"VpcId\" : String,\n      \"WorkspaceSecurityGroupId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::Studio\nProperties:\n  AuthMode: String\n  DefaultS3Location: String\n  Description: String\n  EncryptionKeyArn: String\n  EngineSecurityGroupId: String\n  IdcInstanceArn: String\n  IdcUserAssignment: String\n  IdpAuthUrl: String\n  IdpRelayStateParameterName: String\n  Name: String\n  ServiceRole: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  TrustedIdentityPropagationEnabled: Boolean\n  UserRole: String\n  VpcId: String\n  WorkspaceSecurityGroupId: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::StudioSessionMapping","awsResourceTypeName":"emr-studiosessionmapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::StudioSessionMapping\",\n  \"Properties\" : {\n      \"IdentityName\" : String,\n      \"IdentityType\" : String,\n      \"SessionPolicyArn\" : String,\n      \"StudioId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::StudioSessionMapping\nProperties:\n  IdentityName: String\n  IdentityType: String\n  SessionPolicyArn: String\n  StudioId: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMR::WALWorkspace","awsResourceTypeName":"emr-walworkspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMR::WALWorkspace\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"WALWorkspaceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMR::WALWorkspace\nProperties:\n  Tags: \n    - Tag\n  WALWorkspaceName: String\n","awsServiceName":"EMR","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMRServerless::Application","awsResourceTypeName":"emrserverless-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMRServerless::Application\",\n  \"Properties\" : {\n      \"Architecture\" : String,\n      \"AutoStartConfiguration\" : AutoStartConfiguration,\n      \"AutoStopConfiguration\" : AutoStopConfiguration,\n      \"ImageConfiguration\" : ImageConfigurationInput,\n      \"InitialCapacity\" : [ InitialCapacityConfigKeyValuePair, ... ],\n      \"MaximumCapacity\" : MaximumAllowedResources,\n      \"MonitoringConfiguration\" : MonitoringConfiguration,\n      \"Name\" : String,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"ReleaseLabel\" : String,\n      \"RuntimeConfiguration\" : [ ConfigurationObject, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"WorkerTypeSpecifications\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMRServerless::Application\nProperties:\n  Architecture: String\n  AutoStartConfiguration: \n    AutoStartConfiguration\n  AutoStopConfiguration: \n    AutoStopConfiguration\n  ImageConfiguration: \n    ImageConfigurationInput\n  InitialCapacity: \n    - InitialCapacityConfigKeyValuePair\n  MaximumCapacity: \n    MaximumAllowedResources\n  MonitoringConfiguration: \n    MonitoringConfiguration\n  Name: String\n  NetworkConfiguration: \n    NetworkConfiguration\n  ReleaseLabel: String\n  RuntimeConfiguration: \n    - ConfigurationObject\n  Tags: \n    - Tag\n  Type: String\n  WorkerTypeSpecifications: \n    Key: Value\n","awsServiceName":"EMRServerless","awsServiceCategory":"compute"},{"awsResourceType":"AWS::EMRContainers::VirtualCluster","awsResourceTypeName":"emrcontainers-virtualcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EMRContainers::VirtualCluster\",\n  \"Properties\" : {\n      \"ContainerProvider\" : ContainerProvider,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EMRContainers::VirtualCluster\nProperties:\n  ContainerProvider: \n    ContainerProvider\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"EMRContainers","awsServiceCategory":"compute"},{"awsResourceType":"AWS::ElastiCache::CacheCluster","awsResourceTypeName":"elasticache-cachecluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::CacheCluster\",\n  \"Properties\" : {\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AZMode\" : String,\n      \"CacheNodeType\" : String,\n      \"CacheParameterGroupName\" : String,\n      \"CacheSecurityGroupNames\" : [ String, ... ],\n      \"CacheSubnetGroupName\" : String,\n      \"ClusterName\" : String,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"IpDiscovery\" : String,\n      \"LogDeliveryConfigurations\" : [ LogDeliveryConfigurationRequest, ... ],\n      \"NetworkType\" : String,\n      \"NotificationTopicArn\" : String,\n      \"NumCacheNodes\" : Integer,\n      \"Port\" : Integer,\n      \"PreferredAvailabilityZone\" : String,\n      \"PreferredAvailabilityZones\" : [ String, ... ],\n      \"PreferredMaintenanceWindow\" : String,\n      \"SnapshotArns\" : [ String, ... ],\n      \"SnapshotName\" : String,\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SnapshotWindow\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitEncryptionEnabled\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::CacheCluster\nProperties:\n  AutoMinorVersionUpgrade: Boolean\n  AZMode: String\n  CacheNodeType: String\n  CacheParameterGroupName: String\n  CacheSecurityGroupNames: \n    - String\n  CacheSubnetGroupName: String\n  ClusterName: String\n  Engine: String\n  EngineVersion: String\n  IpDiscovery: String\n  LogDeliveryConfigurations: \n    - LogDeliveryConfigurationRequest\n  NetworkType: String\n  NotificationTopicArn: String\n  NumCacheNodes: Integer\n  Port: Integer\n  PreferredAvailabilityZone: String\n  PreferredAvailabilityZones: \n    - String\n  PreferredMaintenanceWindow: String\n  SnapshotArns: \n    - String\n  SnapshotName: String\n  SnapshotRetentionLimit: Integer\n  SnapshotWindow: String\n  Tags: \n    - Tag\n  TransitEncryptionEnabled: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::GlobalReplicationGroup","awsResourceTypeName":"elasticache-globalreplicationgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::GlobalReplicationGroup\",\n  \"Properties\" : {\n      \"AutomaticFailoverEnabled\" : Boolean,\n      \"CacheNodeType\" : String,\n      \"CacheParameterGroupName\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalNodeGroupCount\" : Integer,\n      \"GlobalReplicationGroupDescription\" : String,\n      \"GlobalReplicationGroupIdSuffix\" : String,\n      \"Members\" : [ GlobalReplicationGroupMember, ... ],\n      \"RegionalConfigurations\" : [ RegionalConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::GlobalReplicationGroup\nProperties:\n  AutomaticFailoverEnabled: Boolean\n  CacheNodeType: String\n  CacheParameterGroupName: String\n  EngineVersion: String\n  GlobalNodeGroupCount: Integer\n  GlobalReplicationGroupDescription: String\n  GlobalReplicationGroupIdSuffix: String\n  Members: \n    - GlobalReplicationGroupMember\n  RegionalConfigurations: \n    - RegionalConfiguration\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::ParameterGroup","awsResourceTypeName":"elasticache-parametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::ParameterGroup\",\n  \"Properties\" : {\n      \"CacheParameterGroupFamily\" : String,\n      \"Description\" : String,\n      \"Properties\" : {Key: Value, ...},\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::ParameterGroup\nProperties:\n  CacheParameterGroupFamily: String\n  Description: String\n  Properties: \n    Key: Value\n  Tags: \n    - Tag\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::ReplicationGroup","awsResourceTypeName":"elasticache-replicationgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::ReplicationGroup\",\n  \"Properties\" : {\n      \"AtRestEncryptionEnabled\" : Boolean,\n      \"AuthToken\" : String,\n      \"AutomaticFailoverEnabled\" : Boolean,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"CacheNodeType\" : String,\n      \"CacheParameterGroupName\" : String,\n      \"CacheSecurityGroupNames\" : [ String, ... ],\n      \"CacheSubnetGroupName\" : String,\n      \"ClusterMode\" : String,\n      \"DataTieringEnabled\" : Boolean,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalReplicationGroupId\" : String,\n      \"IpDiscovery\" : String,\n      \"KmsKeyId\" : String,\n      \"LogDeliveryConfigurations\" : [ LogDeliveryConfigurationRequest, ... ],\n      \"MultiAZEnabled\" : Boolean,\n      \"NetworkType\" : String,\n      \"NodeGroupConfiguration\" : [ NodeGroupConfiguration, ... ],\n      \"NotificationTopicArn\" : String,\n      \"NumCacheClusters\" : Integer,\n      \"NumNodeGroups\" : Integer,\n      \"Port\" : Integer,\n      \"PreferredCacheClusterAZs\" : [ String, ... ],\n      \"PreferredMaintenanceWindow\" : String,\n      \"PrimaryClusterId\" : String,\n      \"ReplicasPerNodeGroup\" : Integer,\n      \"ReplicationGroupDescription\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SnapshotArns\" : [ String, ... ],\n      \"SnapshotName\" : String,\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SnapshottingClusterId\" : String,\n      \"SnapshotWindow\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitEncryptionEnabled\" : Boolean,\n      \"TransitEncryptionMode\" : String,\n      \"UserGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::ReplicationGroup\nProperties:\n  AtRestEncryptionEnabled: Boolean\n  AuthToken: String\n  AutomaticFailoverEnabled: Boolean\n  AutoMinorVersionUpgrade: Boolean\n  CacheNodeType: String\n  CacheParameterGroupName: String\n  CacheSecurityGroupNames: \n    - String\n  CacheSubnetGroupName: String\n  ClusterMode: String\n  DataTieringEnabled: Boolean\n  Engine: String\n  EngineVersion: String\n  GlobalReplicationGroupId: String\n  IpDiscovery: String\n  KmsKeyId: String\n  LogDeliveryConfigurations: \n    - LogDeliveryConfigurationRequest\n  MultiAZEnabled: Boolean\n  NetworkType: String\n  NodeGroupConfiguration: \n    - NodeGroupConfiguration\n  NotificationTopicArn: String\n  NumCacheClusters: Integer\n  NumNodeGroups: Integer\n  Port: Integer\n  PreferredCacheClusterAZs: \n    - String\n  PreferredMaintenanceWindow: String\n  PrimaryClusterId: String\n  ReplicasPerNodeGroup: Integer\n  ReplicationGroupDescription: String\n  SecurityGroupIds: \n    - String\n  SnapshotArns: \n    - String\n  SnapshotName: String\n  SnapshotRetentionLimit: Integer\n  SnapshottingClusterId: String\n  SnapshotWindow: String\n  Tags: \n    - Tag\n  TransitEncryptionEnabled: Boolean\n  TransitEncryptionMode: String\n  UserGroupIds: \n    - String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::SecurityGroup","awsResourceTypeName":"elasticache-securitygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::SecurityGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::SecurityGroup\nProperties:\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::SecurityGroupIngress","awsResourceTypeName":"elasticache-securitygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::SecurityGroupIngress\",\n  \"Properties\" : {\n      \"CacheSecurityGroupName\" : String,\n      \"EC2SecurityGroupName\" : String,\n      \"EC2SecurityGroupOwnerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::SecurityGroupIngress\nProperties:\n  CacheSecurityGroupName: String\n  EC2SecurityGroupName: String\n  EC2SecurityGroupOwnerId: String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::ServerlessCache","awsResourceTypeName":"elasticache-serverlesscache","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::ServerlessCache\",\n  \"Properties\" : {\n      \"CacheUsageLimits\" : CacheUsageLimits,\n      \"DailySnapshotTime\" : String,\n      \"Description\" : String,\n      \"Endpoint\" : Endpoint,\n      \"Engine\" : String,\n      \"FinalSnapshotName\" : String,\n      \"KmsKeyId\" : String,\n      \"MajorEngineVersion\" : String,\n      \"ReaderEndpoint\" : Endpoint,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServerlessCacheName\" : String,\n      \"SnapshotArnsToRestore\" : [ String, ... ],\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserGroupId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::ServerlessCache\nProperties:\n  CacheUsageLimits: \n    CacheUsageLimits\n  DailySnapshotTime: String\n  Description: String\n  Endpoint: \n    Endpoint\n  Engine: String\n  FinalSnapshotName: String\n  KmsKeyId: String\n  MajorEngineVersion: String\n  ReaderEndpoint: \n    Endpoint\n  SecurityGroupIds: \n    - String\n  ServerlessCacheName: String\n  SnapshotArnsToRestore: \n    - String\n  SnapshotRetentionLimit: Integer\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  UserGroupId: String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::SubnetGroup","awsResourceTypeName":"elasticache-subnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::SubnetGroup\",\n  \"Properties\" : {\n      \"CacheSubnetGroupName\" : String,\n      \"Description\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::SubnetGroup\nProperties:\n  CacheSubnetGroupName: String\n  Description: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::User","awsResourceTypeName":"elasticache-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::User\",\n  \"Properties\" : {\n      \"AccessString\" : String,\n      \"AuthenticationMode\" : AuthenticationMode,\n      \"Engine\" : String,\n      \"NoPasswordRequired\" : Boolean,\n      \"Passwords\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserId\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::User\nProperties:\n  AccessString: \n    String\n  AuthenticationMode: \n    AuthenticationMode\n  Engine: String\n  NoPasswordRequired: Boolean\n  Passwords: \n    - String\n  Tags: \n    - Tag\n  UserId: String\n  UserName: String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::ElastiCache::UserGroup","awsResourceTypeName":"elasticache-usergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ElastiCache::UserGroup\",\n  \"Properties\" : {\n      \"Engine\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UserGroupId\" : String,\n      \"UserIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ElastiCache::UserGroup\nProperties:\n  Engine: String\n  Tags: \n    - Tag\n  UserGroupId: String\n  UserIds: \n    - String\n","awsServiceName":"ElastiCache","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::IdMappingWorkflow","awsResourceTypeName":"entityresolution-idmappingworkflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::IdMappingWorkflow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IdMappingTechniques\" : IdMappingTechniques,\n      \"InputSourceConfig\" : [ IdMappingWorkflowInputSource, ... ],\n      \"OutputSourceConfig\" : [ IdMappingWorkflowOutputSource, ... ],\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkflowName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::IdMappingWorkflow\nProperties:\n  Description: String\n  IdMappingTechniques: \n    IdMappingTechniques\n  InputSourceConfig: \n    - IdMappingWorkflowInputSource\n  OutputSourceConfig: \n    - IdMappingWorkflowOutputSource\n  RoleArn: String\n  Tags: \n    - Tag\n  WorkflowName: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::IdNamespace","awsResourceTypeName":"entityresolution-idnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::IdNamespace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IdMappingWorkflowProperties\" : [ IdNamespaceIdMappingWorkflowProperties, ... ],\n      \"IdNamespaceName\" : String,\n      \"InputSourceConfig\" : [ IdNamespaceInputSource, ... ],\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::IdNamespace\nProperties:\n  Description: String\n  IdMappingWorkflowProperties: \n    - IdNamespaceIdMappingWorkflowProperties\n  IdNamespaceName: String\n  InputSourceConfig: \n    - IdNamespaceInputSource\n  RoleArn: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::MatchingWorkflow","awsResourceTypeName":"entityresolution-matchingworkflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::MatchingWorkflow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InputSourceConfig\" : [ InputSource, ... ],\n      \"OutputSourceConfig\" : [ OutputSource, ... ],\n      \"ResolutionTechniques\" : ResolutionTechniques,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkflowName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::MatchingWorkflow\nProperties:\n  Description: String\n  InputSourceConfig: \n    - InputSource\n  OutputSourceConfig: \n    - OutputSource\n  ResolutionTechniques: \n    ResolutionTechniques\n  RoleArn: String\n  Tags: \n    - Tag\n  WorkflowName: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::PolicyStatement","awsResourceTypeName":"entityresolution-policystatement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::PolicyStatement\",\n  \"Properties\" : {\n      \"Action\" : [ String, ... ],\n      \"Arn\" : String,\n      \"Condition\" : String,\n      \"Effect\" : String,\n      \"Principal\" : [ String, ... ],\n      \"StatementId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::PolicyStatement\nProperties:\n  Action: \n    - String\n  Arn: String\n  Condition: String\n  Effect: String\n  Principal: \n    - String\n  StatementId: String\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::EntityResolution::SchemaMapping","awsResourceTypeName":"entityresolution-schemamapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EntityResolution::SchemaMapping\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MappedInputFields\" : [ SchemaInputAttribute, ... ],\n      \"SchemaName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EntityResolution::SchemaMapping\nProperties:\n  Description: String\n  MappedInputFields: \n    - SchemaInputAttribute\n  SchemaName: String\n  Tags: \n    - Tag\n","awsServiceName":"EntityResolution","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::ApiDestination","awsResourceTypeName":"events-apidestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::ApiDestination\",\n  \"Properties\" : {\n      \"ConnectionArn\" : String,\n      \"Description\" : String,\n      \"HttpMethod\" : String,\n      \"InvocationEndpoint\" : String,\n      \"InvocationRateLimitPerSecond\" : Integer,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::ApiDestination\nProperties:\n  ConnectionArn: String\n  Description: String\n  HttpMethod: String\n  InvocationEndpoint: String\n  InvocationRateLimitPerSecond: Integer\n  Name: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Archive","awsResourceTypeName":"events-archive","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Archive\",\n  \"Properties\" : {\n      \"ArchiveName\" : String,\n      \"Description\" : String,\n      \"EventPattern\" : Json,\n      \"RetentionDays\" : Integer,\n      \"SourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Archive\nProperties:\n  ArchiveName: String\n  Description: String\n  EventPattern: Json\n  RetentionDays: Integer\n  SourceArn: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Connection","awsResourceTypeName":"events-connection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Connection\",\n  \"Properties\" : {\n      \"AuthorizationType\" : String,\n      \"AuthParameters\" : AuthParameters,\n      \"Description\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Connection\nProperties:\n  AuthorizationType: String\n  AuthParameters: \n    AuthParameters\n  Description: String\n  Name: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Endpoint","awsResourceTypeName":"events-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Endpoint\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBuses\" : [ EndpointEventBus, ... ],\n      \"Name\" : String,\n      \"ReplicationConfig\" : ReplicationConfig,\n      \"RoleArn\" : String,\n      \"RoutingConfig\" : RoutingConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Endpoint\nProperties:\n  Description: String\n  EventBuses: \n    - EndpointEventBus\n  Name: String\n  ReplicationConfig: \n    ReplicationConfig\n  RoleArn: String\n  RoutingConfig: \n    RoutingConfig\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::EventBus","awsResourceTypeName":"events-eventbus","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::EventBus\",\n  \"Properties\" : {\n      \"EventSourceName\" : String,\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::EventBus\nProperties:\n  EventSourceName: String\n  Name: String\n  Policy: Json\n  Tags: \n    - Tag\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::EventBusPolicy","awsResourceTypeName":"events-eventbuspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::EventBusPolicy\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Condition\" : Condition,\n      \"EventBusName\" : String,\n      \"Principal\" : String,\n      \"Statement\" : Json,\n      \"StatementId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::EventBusPolicy\nProperties:\n  Action: String\n  Condition: \n    Condition\n  EventBusName: String\n  Principal: String\n  Statement: Json\n  StatementId: String\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Events::Rule","awsResourceTypeName":"events-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Events::Rule\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBusName\" : String,\n      \"EventPattern\" : Json,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"ScheduleExpression\" : String,\n      \"State\" : String,\n      \"Targets\" : [ Target, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Events::Rule\nProperties:\n  Description: String\n  EventBusName: String\n  EventPattern: Json\n  Name: String\n  RoleArn: String\n  ScheduleExpression: String\n  State: String\n  Targets: \n    - Target\n","awsServiceName":"Events","awsServiceCategory":"other"},{"awsResourceType":"AWS::Pipes::Pipe","awsResourceTypeName":"pipes-pipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pipes::Pipe\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DesiredState\" : String,\n      \"Enrichment\" : String,\n      \"EnrichmentParameters\" : PipeEnrichmentParameters,\n      \"LogConfiguration\" : PipeLogConfiguration,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Source\" : String,\n      \"SourceParameters\" : PipeSourceParameters,\n      \"Tags\" : {Key: Value, ...},\n      \"Target\" : String,\n      \"TargetParameters\" : PipeTargetParameters\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pipes::Pipe\nProperties:\n  Description: String\n  DesiredState: String\n  Enrichment: String\n  EnrichmentParameters: \n    PipeEnrichmentParameters\n  LogConfiguration: \n    PipeLogConfiguration\n  Name: String\n  RoleArn: String\n  Source: String\n  SourceParameters: \n    PipeSourceParameters\n  Tags: \n    Key: Value\n  Target: String\n  TargetParameters: \n    PipeTargetParameters\n","awsServiceName":"Pipes","awsServiceCategory":"other"},{"awsResourceType":"AWS::Scheduler::Schedule","awsResourceTypeName":"scheduler-schedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Scheduler::Schedule\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EndDate\" : String,\n      \"FlexibleTimeWindow\" : FlexibleTimeWindow,\n      \"GroupName\" : String,\n      \"KmsKeyArn\" : String,\n      \"Name\" : String,\n      \"ScheduleExpression\" : String,\n      \"ScheduleExpressionTimezone\" : String,\n      \"StartDate\" : String,\n      \"State\" : String,\n      \"Target\" : Target\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Scheduler::Schedule\nProperties:\n  Description: String\n  EndDate: String\n  FlexibleTimeWindow: \n    FlexibleTimeWindow\n  GroupName: String\n  KmsKeyArn: String\n  Name: String\n  ScheduleExpression: String\n  ScheduleExpressionTimezone: String\n  StartDate: String\n  State: String\n  Target: \n    Target\n","awsServiceName":"Scheduler","awsServiceCategory":"other"},{"awsResourceType":"AWS::Scheduler::ScheduleGroup","awsResourceTypeName":"scheduler-schedulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Scheduler::ScheduleGroup\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Scheduler::ScheduleGroup\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Scheduler","awsServiceCategory":"other"},{"awsResourceType":"AWS::EventSchemas::Discoverer","awsResourceTypeName":"eventschemas-discoverer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::Discoverer\",\n  \"Properties\" : {\n      \"CrossAccount\" : Boolean,\n      \"Description\" : String,\n      \"SourceArn\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::Discoverer\nProperties:\n  CrossAccount: Boolean\n  Description: String\n  SourceArn: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::EventSchemas::Registry","awsResourceTypeName":"eventschemas-registry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::Registry\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"RegistryName\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::Registry\nProperties:\n  Description: String\n  RegistryName: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::EventSchemas::RegistryPolicy","awsResourceTypeName":"eventschemas-registrypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::RegistryPolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"RegistryName\" : String,\n      \"RevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::RegistryPolicy\nProperties:\n  Policy: Json\n  RegistryName: String\n  RevisionId: String\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::EventSchemas::Schema","awsResourceTypeName":"eventschemas-schema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::EventSchemas::Schema\",\n  \"Properties\" : {\n      \"Content\" : String,\n      \"Description\" : String,\n      \"RegistryName\" : String,\n      \"SchemaName\" : String,\n      \"Tags\" : [ TagsEntry, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::EventSchemas::Schema\nProperties:\n  Content: String\n  Description: String\n  RegistryName: String\n  SchemaName: String\n  Tags: \n    - TagsEntry\n  Type: String\n","awsServiceName":"EventSchemas","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::FinSpace::Environment","awsResourceTypeName":"finspace-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FinSpace::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FederationMode\" : String,\n      \"FederationParameters\" : FederationParameters,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"SuperuserParameters\" : SuperuserParameters,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FinSpace::Environment\nProperties:\n  Description: String\n  FederationMode: String\n  FederationParameters: \n    FederationParameters\n  KmsKeyId: String\n  Name: String\n  SuperuserParameters: \n    SuperuserParameters\n  Tags: \n    - Tag\n","awsServiceName":"FinSpace","awsServiceCategory":"other"},{"awsResourceType":"AWS::FIS::ExperimentTemplate","awsResourceTypeName":"fis-experimenttemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FIS::ExperimentTemplate\",\n  \"Properties\" : {\n      \"Actions\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"ExperimentOptions\" : ExperimentTemplateExperimentOptions,\n      \"LogConfiguration\" : ExperimentTemplateLogConfiguration,\n      \"RoleArn\" : String,\n      \"StopConditions\" : [ ExperimentTemplateStopCondition, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Targets\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FIS::ExperimentTemplate\nProperties:\n  Actions: \n    Key: Value\n  Description: String\n  ExperimentOptions: \n    ExperimentTemplateExperimentOptions\n  LogConfiguration: \n    ExperimentTemplateLogConfiguration\n  RoleArn: String\n  StopConditions: \n    - ExperimentTemplateStopCondition\n  Tags: \n    Key: Value\n  Targets: \n    Key: Value\n","awsServiceName":"FIS","awsServiceCategory":"other"},{"awsResourceType":"AWS::FIS::TargetAccountConfiguration","awsResourceTypeName":"fis-targetaccountconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FIS::TargetAccountConfiguration\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"Description\" : String,\n      \"ExperimentTemplateId\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FIS::TargetAccountConfiguration\nProperties:\n  AccountId: String\n  Description: String\n  ExperimentTemplateId: String\n  RoleArn: String\n","awsServiceName":"FIS","awsServiceCategory":"other"},{"awsResourceType":"AWS::FMS::NotificationChannel","awsResourceTypeName":"fms-notificationchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FMS::NotificationChannel\",\n  \"Properties\" : {\n      \"SnsRoleName\" : String,\n      \"SnsTopicArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FMS::NotificationChannel\nProperties:\n  SnsRoleName: String\n  SnsTopicArn: String\n","awsServiceName":"FMS","awsServiceCategory":"security"},{"awsResourceType":"AWS::FMS::Policy","awsResourceTypeName":"fms-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FMS::Policy\",\n  \"Properties\" : {\n      \"DeleteAllPolicyResources\" : Boolean,\n      \"ExcludeMap\" : IEMap,\n      \"ExcludeResourceTags\" : Boolean,\n      \"IncludeMap\" : IEMap,\n      \"PolicyDescription\" : String,\n      \"PolicyName\" : String,\n      \"RemediationEnabled\" : Boolean,\n      \"ResourcesCleanUp\" : Boolean,\n      \"ResourceSetIds\" : [ String, ... ],\n      \"ResourceTags\" : [ ResourceTag, ... ],\n      \"ResourceType\" : String,\n      \"ResourceTypeList\" : [ String, ... ],\n      \"SecurityServicePolicyData\" : SecurityServicePolicyData,\n      \"Tags\" : [ PolicyTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FMS::Policy\nProperties:\n  DeleteAllPolicyResources: Boolean\n  ExcludeMap: \n    IEMap\n  ExcludeResourceTags: Boolean\n  IncludeMap: \n    IEMap\n  PolicyDescription: String\n  PolicyName: String\n  RemediationEnabled: Boolean\n  ResourcesCleanUp: Boolean\n  ResourceSetIds: \n    - String\n  ResourceTags: \n    - ResourceTag\n  ResourceType: String\n  ResourceTypeList: \n    - String\n  SecurityServicePolicyData: \n    SecurityServicePolicyData\n  Tags: \n    - PolicyTag\n","awsServiceName":"FMS","awsServiceCategory":"security"},{"awsResourceType":"AWS::FMS::ResourceSet","awsResourceTypeName":"fms-resourceset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FMS::ResourceSet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Resources\" : [ String, ... ],\n      \"ResourceTypeList\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FMS::ResourceSet\nProperties:\n  Description: String\n  Name: String\n  Resources: \n    - String\n  ResourceTypeList: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"FMS","awsServiceCategory":"security"},{"awsResourceType":"AWS::Forecast::Dataset","awsResourceTypeName":"forecast-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Forecast::Dataset\",\n  \"Properties\" : {\n      \"DataFrequency\" : String,\n      \"DatasetName\" : String,\n      \"DatasetType\" : String,\n      \"Domain\" : String,\n      \"EncryptionConfig\" : EncryptionConfig,\n      \"Schema\" : Schema,\n      \"Tags\" : [ TagsItems, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Forecast::Dataset\nProperties:\n  DataFrequency: String\n  DatasetName: String\n  DatasetType: String\n  Domain: String\n  EncryptionConfig: \n    EncryptionConfig\n  Schema: \n    Schema\n  Tags: \n    - TagsItems\n","awsServiceName":"Forecast","awsServiceCategory":"financial"},{"awsResourceType":"AWS::Forecast::DatasetGroup","awsResourceTypeName":"forecast-datasetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Forecast::DatasetGroup\",\n  \"Properties\" : {\n      \"DatasetArns\" : [ String, ... ],\n      \"DatasetGroupName\" : String,\n      \"Domain\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Forecast::DatasetGroup\nProperties:\n  DatasetArns: \n    - String\n  DatasetGroupName: String\n  Domain: String\n  Tags: \n    - Tag\n","awsServiceName":"Forecast","awsServiceCategory":"financial"},{"awsResourceType":"AWS::FraudDetector::Detector","awsResourceTypeName":"frauddetector-detector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Detector\",\n  \"Properties\" : {\n      \"AssociatedModels\" : [ Model, ... ],\n      \"Description\" : String,\n      \"DetectorId\" : String,\n      \"DetectorVersionStatus\" : String,\n      \"EventType\" : EventType,\n      \"RuleExecutionMode\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Detector\nProperties:\n  AssociatedModels: \n    - Model\n  Description: String\n  DetectorId: String\n  DetectorVersionStatus: String\n  EventType: \n    EventType\n  RuleExecutionMode: String\n  Rules: \n    - Rule\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::EntityType","awsResourceTypeName":"frauddetector-entitytype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::EntityType\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::EntityType\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::EventType","awsResourceTypeName":"frauddetector-eventtype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::EventType\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EntityTypes\" : [ EntityType, ... ],\n      \"EventVariables\" : [ EventVariable, ... ],\n      \"Labels\" : [ Label, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::EventType\nProperties:\n  Description: String\n  EntityTypes: \n    - EntityType\n  EventVariables: \n    - EventVariable\n  Labels: \n    - Label\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::Label","awsResourceTypeName":"frauddetector-label","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Label\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Label\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::List","awsResourceTypeName":"frauddetector-list","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::List\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Elements\" : [ String, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VariableType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::List\nProperties:\n  Description: String\n  Elements: \n    - String\n  Name: String\n  Tags: \n    - Tag\n  VariableType: String\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::Outcome","awsResourceTypeName":"frauddetector-outcome","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Outcome\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Outcome\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FraudDetector::Variable","awsResourceTypeName":"frauddetector-variable","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FraudDetector::Variable\",\n  \"Properties\" : {\n      \"DataSource\" : String,\n      \"DataType\" : String,\n      \"DefaultValue\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VariableType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FraudDetector::Variable\nProperties:\n  DataSource: String\n  DataType: String\n  DefaultValue: String\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  VariableType: String\n","awsServiceName":"FraudDetector","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::FSx::DataRepositoryAssociation","awsResourceTypeName":"fsx-datarepositoryassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::DataRepositoryAssociation\",\n  \"Properties\" : {\n      \"BatchImportMetaDataOnCreate\" : Boolean,\n      \"DataRepositoryPath\" : String,\n      \"FileSystemId\" : String,\n      \"FileSystemPath\" : String,\n      \"ImportedFileChunkSize\" : Integer,\n      \"S3\" : S3,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::DataRepositoryAssociation\nProperties:\n  BatchImportMetaDataOnCreate: Boolean\n  DataRepositoryPath: String\n  FileSystemId: String\n  FileSystemPath: String\n  ImportedFileChunkSize: Integer\n  S3: \n    S3\n  Tags: \n    - Tag\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::FileSystem","awsResourceTypeName":"fsx-filesystem","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::FileSystem\",\n  \"Properties\" : {\n      \"BackupId\" : String,\n      \"FileSystemType\" : String,\n      \"FileSystemTypeVersion\" : String,\n      \"KmsKeyId\" : String,\n      \"LustreConfiguration\" : LustreConfiguration,\n      \"OntapConfiguration\" : OntapConfiguration,\n      \"OpenZFSConfiguration\" : OpenZFSConfiguration,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"StorageCapacity\" : Integer,\n      \"StorageType\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WindowsConfiguration\" : WindowsConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::FileSystem\nProperties:\n  BackupId: String\n  FileSystemType: String\n  FileSystemTypeVersion: String\n  KmsKeyId: String\n  LustreConfiguration: \n    LustreConfiguration\n  OntapConfiguration: \n    OntapConfiguration\n  OpenZFSConfiguration: \n    OpenZFSConfiguration\n  SecurityGroupIds: \n    - String\n  StorageCapacity: Integer\n  StorageType: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  WindowsConfiguration: \n    WindowsConfiguration\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::Snapshot","awsResourceTypeName":"fsx-snapshot","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::Snapshot\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VolumeId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::Snapshot\nProperties:\n  Name: String\n  Tags: \n    - Tag\n  VolumeId: String\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::StorageVirtualMachine","awsResourceTypeName":"fsx-storagevirtualmachine","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::StorageVirtualMachine\",\n  \"Properties\" : {\n      \"ActiveDirectoryConfiguration\" : ActiveDirectoryConfiguration,\n      \"FileSystemId\" : String,\n      \"Name\" : String,\n      \"RootVolumeSecurityStyle\" : String,\n      \"SvmAdminPassword\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::StorageVirtualMachine\nProperties:\n  ActiveDirectoryConfiguration: \n    ActiveDirectoryConfiguration\n  FileSystemId: String\n  Name: String\n  RootVolumeSecurityStyle: String\n  SvmAdminPassword: String\n  Tags: \n    - Tag\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::FSx::Volume","awsResourceTypeName":"fsx-volume","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::FSx::Volume\",\n  \"Properties\" : {\n      \"BackupId\" : String,\n      \"Name\" : String,\n      \"OntapConfiguration\" : OntapConfiguration,\n      \"OpenZFSConfiguration\" : OpenZFSConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"VolumeType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::FSx::Volume\nProperties:\n  BackupId: String\n  Name: String\n  OntapConfiguration: \n    OntapConfiguration\n  OpenZFSConfiguration: \n    OpenZFSConfiguration\n  Tags: \n    - Tag\n  VolumeType: String\n","awsServiceName":"FSx","awsServiceCategory":"storage"},{"awsResourceType":"AWS::GameLift::Alias","awsResourceTypeName":"gamelift-alias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Alias\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RoutingStrategy\" : RoutingStrategy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Alias\nProperties:\n  Description: String\n  Name: String\n  RoutingStrategy: \n    RoutingStrategy\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Build","awsResourceTypeName":"gamelift-build","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Build\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"OperatingSystem\" : String,\n      \"ServerSdkVersion\" : String,\n      \"StorageLocation\" : StorageLocation,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Build\nProperties:\n  Name: String\n  OperatingSystem: String\n  ServerSdkVersion: String\n  StorageLocation: \n    StorageLocation\n  Version: String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Fleet","awsResourceTypeName":"gamelift-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Fleet\",\n  \"Properties\" : {\n      \"AnywhereConfiguration\" : AnywhereConfiguration,\n      \"ApplyCapacity\" : String,\n      \"BuildId\" : String,\n      \"CertificateConfiguration\" : CertificateConfiguration,\n      \"ComputeType\" : String,\n      \"Description\" : String,\n      \"DesiredEC2Instances\" : Integer,\n      \"EC2InboundPermissions\" : [ IpPermission, ... ],\n      \"EC2InstanceType\" : String,\n      \"FleetType\" : String,\n      \"InstanceRoleARN\" : String,\n      \"InstanceRoleCredentialsProvider\" : String,\n      \"Locations\" : [ LocationConfiguration, ... ],\n      \"MaxSize\" : Integer,\n      \"MetricGroups\" : [ String, ... ],\n      \"MinSize\" : Integer,\n      \"Name\" : String,\n      \"NewGameSessionProtectionPolicy\" : String,\n      \"PeerVpcAwsAccountId\" : String,\n      \"PeerVpcId\" : String,\n      \"ResourceCreationLimitPolicy\" : ResourceCreationLimitPolicy,\n      \"RuntimeConfiguration\" : RuntimeConfiguration,\n      \"ScalingPolicies\" : [ ScalingPolicy, ... ],\n      \"ScriptId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Fleet\nProperties:\n  AnywhereConfiguration: \n    AnywhereConfiguration\n  ApplyCapacity: String\n  BuildId: String\n  CertificateConfiguration: \n    CertificateConfiguration\n  ComputeType: String\n  Description: String\n  DesiredEC2Instances: Integer\n  EC2InboundPermissions: \n    - IpPermission\n  EC2InstanceType: String\n  FleetType: String\n  InstanceRoleARN: String\n  InstanceRoleCredentialsProvider: String\n  Locations: \n    - LocationConfiguration\n  MaxSize: Integer\n  MetricGroups: \n    - String\n  MinSize: Integer\n  Name: String\n  NewGameSessionProtectionPolicy: String\n  PeerVpcAwsAccountId: String\n  PeerVpcId: String\n  ResourceCreationLimitPolicy: \n    ResourceCreationLimitPolicy\n  RuntimeConfiguration: \n    RuntimeConfiguration\n  ScalingPolicies: \n    - ScalingPolicy\n  ScriptId: String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::GameServerGroup","awsResourceTypeName":"gamelift-gameservergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::GameServerGroup\",\n  \"Properties\" : {\n      \"AutoScalingPolicy\" : AutoScalingPolicy,\n      \"BalancingStrategy\" : String,\n      \"DeleteOption\" : String,\n      \"GameServerGroupName\" : String,\n      \"GameServerProtectionPolicy\" : String,\n      \"InstanceDefinitions\" : [ InstanceDefinition, ... ],\n      \"LaunchTemplate\" : LaunchTemplate,\n      \"MaxSize\" : Number,\n      \"MinSize\" : Number,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSubnets\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::GameServerGroup\nProperties:\n  AutoScalingPolicy: \n    AutoScalingPolicy\n  BalancingStrategy: String\n  DeleteOption: String\n  GameServerGroupName: String\n  GameServerProtectionPolicy: String\n  InstanceDefinitions: \n    - InstanceDefinition\n  LaunchTemplate: \n    LaunchTemplate\n  MaxSize: Number\n  MinSize: Number\n  RoleArn: String\n  Tags: \n    - Tag\n  VpcSubnets: \n    - String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::GameSessionQueue","awsResourceTypeName":"gamelift-gamesessionqueue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::GameSessionQueue\",\n  \"Properties\" : {\n      \"CustomEventData\" : String,\n      \"Destinations\" : [ GameSessionQueueDestination, ... ],\n      \"FilterConfiguration\" : FilterConfiguration,\n      \"Name\" : String,\n      \"NotificationTarget\" : String,\n      \"PlayerLatencyPolicies\" : [ PlayerLatencyPolicy, ... ],\n      \"PriorityConfiguration\" : PriorityConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeoutInSeconds\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::GameSessionQueue\nProperties:\n  CustomEventData: String\n  Destinations: \n    - GameSessionQueueDestination\n  FilterConfiguration: \n    FilterConfiguration\n  Name: String\n  NotificationTarget: String\n  PlayerLatencyPolicies: \n    - PlayerLatencyPolicy\n  PriorityConfiguration: \n    PriorityConfiguration\n  Tags: \n    - Tag\n  TimeoutInSeconds: Integer\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Location","awsResourceTypeName":"gamelift-location","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Location\",\n  \"Properties\" : {\n      \"LocationName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Location\nProperties:\n  LocationName: String\n  Tags: \n    - Tag\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::MatchmakingConfiguration","awsResourceTypeName":"gamelift-matchmakingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::MatchmakingConfiguration\",\n  \"Properties\" : {\n      \"AcceptanceRequired\" : Boolean,\n      \"AcceptanceTimeoutSeconds\" : Integer,\n      \"AdditionalPlayerCount\" : Integer,\n      \"BackfillMode\" : String,\n      \"CreationTime\" : String,\n      \"CustomEventData\" : String,\n      \"Description\" : String,\n      \"FlexMatchMode\" : String,\n      \"GameProperties\" : [ GameProperty, ... ],\n      \"GameSessionData\" : String,\n      \"GameSessionQueueArns\" : [ String, ... ],\n      \"Name\" : String,\n      \"NotificationTarget\" : String,\n      \"RequestTimeoutSeconds\" : Integer,\n      \"RuleSetArn\" : String,\n      \"RuleSetName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::MatchmakingConfiguration\nProperties:\n  AcceptanceRequired: Boolean\n  AcceptanceTimeoutSeconds: Integer\n  AdditionalPlayerCount: Integer\n  BackfillMode: String\n  CreationTime: String\n  CustomEventData: String\n  Description: String\n  FlexMatchMode: String\n  GameProperties: \n    - GameProperty\n  GameSessionData: String\n  GameSessionQueueArns: \n    - String\n  Name: String\n  NotificationTarget: String\n  RequestTimeoutSeconds: Integer\n  RuleSetArn: String\n  RuleSetName: String\n  Tags: \n    - Tag\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::MatchmakingRuleSet","awsResourceTypeName":"gamelift-matchmakingruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::MatchmakingRuleSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RuleSetBody\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::MatchmakingRuleSet\nProperties:\n  Name: String\n  RuleSetBody: String\n  Tags: \n    - Tag\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GameLift::Script","awsResourceTypeName":"gamelift-script","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GameLift::Script\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"StorageLocation\" : S3Location,\n      \"Tags\" : [ Tag, ... ],\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GameLift::Script\nProperties:\n  Name: String\n  StorageLocation: \n    S3Location\n  Tags: \n    - Tag\n  Version: String\n","awsServiceName":"GameLift","awsServiceCategory":"gameDevelopment"},{"awsResourceType":"AWS::GlobalAccelerator::Accelerator","awsResourceTypeName":"globalaccelerator-accelerator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::Accelerator\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"IpAddresses\" : [ String, ... ],\n      \"IpAddressType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::Accelerator\nProperties:\n  Enabled: Boolean\n  IpAddresses: \n    - String\n  IpAddressType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::GlobalAccelerator::CrossAccountAttachment","awsResourceTypeName":"globalaccelerator-crossaccountattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::CrossAccountAttachment\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Principals\" : [ String, ... ],\n      \"Resources\" : [ Resource, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::CrossAccountAttachment\nProperties:\n  Name: String\n  Principals: \n    - String\n  Resources: \n    - Resource\n  Tags: \n    - Tag\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::GlobalAccelerator::EndpointGroup","awsResourceTypeName":"globalaccelerator-endpointgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::EndpointGroup\",\n  \"Properties\" : {\n      \"EndpointConfigurations\" : [ EndpointConfiguration, ... ],\n      \"EndpointGroupRegion\" : String,\n      \"HealthCheckIntervalSeconds\" : Integer,\n      \"HealthCheckPath\" : String,\n      \"HealthCheckPort\" : Integer,\n      \"HealthCheckProtocol\" : String,\n      \"ListenerArn\" : String,\n      \"PortOverrides\" : [ PortOverride, ... ],\n      \"ThresholdCount\" : Integer,\n      \"TrafficDialPercentage\" : Number\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::EndpointGroup\nProperties:\n  EndpointConfigurations: \n    - EndpointConfiguration\n  EndpointGroupRegion: String\n  HealthCheckIntervalSeconds: Integer\n  HealthCheckPath: String\n  HealthCheckPort: Integer\n  HealthCheckProtocol: String\n  ListenerArn: String\n  PortOverrides: \n    - PortOverride\n  ThresholdCount: Integer\n  TrafficDialPercentage: Number\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::GlobalAccelerator::Listener","awsResourceTypeName":"globalaccelerator-listener","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GlobalAccelerator::Listener\",\n  \"Properties\" : {\n      \"AcceleratorArn\" : String,\n      \"ClientAffinity\" : String,\n      \"PortRanges\" : [ PortRange, ... ],\n      \"Protocol\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GlobalAccelerator::Listener\nProperties:\n  AcceleratorArn: String\n  ClientAffinity: String\n  PortRanges: \n    - PortRange\n  Protocol: String\n","awsServiceName":"GlobalAccelerator","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Glue::Classifier","awsResourceTypeName":"glue-classifier","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Classifier\",\n  \"Properties\" : {\n      \"CsvClassifier\" : CsvClassifier,\n      \"GrokClassifier\" : GrokClassifier,\n      \"JsonClassifier\" : JsonClassifier,\n      \"XMLClassifier\" : XMLClassifier\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Classifier\nProperties:\n  CsvClassifier: \n    CsvClassifier\n  GrokClassifier: \n    GrokClassifier\n  JsonClassifier: \n    JsonClassifier\n  XMLClassifier: \n    XMLClassifier\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Connection","awsResourceTypeName":"glue-connection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Connection\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"ConnectionInput\" : ConnectionInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Connection\nProperties:\n  CatalogId: String\n  ConnectionInput: \n    ConnectionInput\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Crawler","awsResourceTypeName":"glue-crawler","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Crawler\",\n  \"Properties\" : {\n      \"Classifiers\" : [ String, ... ],\n      \"Configuration\" : String,\n      \"CrawlerSecurityConfiguration\" : String,\n      \"DatabaseName\" : String,\n      \"Description\" : String,\n      \"LakeFormationConfiguration\" : LakeFormationConfiguration,\n      \"Name\" : String,\n      \"RecrawlPolicy\" : RecrawlPolicy,\n      \"Role\" : String,\n      \"Schedule\" : Schedule,\n      \"SchemaChangePolicy\" : SchemaChangePolicy,\n      \"TablePrefix\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Targets\" : Targets\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Crawler\nProperties:\n  Classifiers: \n    - String\n  Configuration: String\n  CrawlerSecurityConfiguration: String\n  DatabaseName: String\n  Description: String\n  LakeFormationConfiguration: \n    LakeFormationConfiguration\n  Name: String\n  RecrawlPolicy: \n    RecrawlPolicy\n  Role: String\n  Schedule: \n    Schedule\n  SchemaChangePolicy: \n    SchemaChangePolicy\n  TablePrefix: String\n  Tags: \n    - Tag\n  Targets: \n    Targets\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::CustomEntityType","awsResourceTypeName":"glue-customentitytype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::CustomEntityType\",\n  \"Properties\" : {\n      \"ContextWords\" : [ String, ... ],\n      \"Name\" : String,\n      \"RegexString\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::CustomEntityType\nProperties:\n  ContextWords: \n    - String\n  Name: String\n  RegexString: \n    String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Database","awsResourceTypeName":"glue-database","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Database\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseInput\" : DatabaseInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Database\nProperties:\n  CatalogId: String\n  DatabaseInput: \n    DatabaseInput\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::DataCatalogEncryptionSettings","awsResourceTypeName":"glue-datacatalogencryptionsettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::DataCatalogEncryptionSettings\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DataCatalogEncryptionSettings\" : DataCatalogEncryptionSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::DataCatalogEncryptionSettings\nProperties:\n  CatalogId: String\n  DataCatalogEncryptionSettings: \n    DataCatalogEncryptionSettings\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::DataQualityRuleset","awsResourceTypeName":"glue-dataqualityruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::DataQualityRuleset\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Ruleset\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetTable\" : DataQualityTargetTable\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::DataQualityRuleset\nProperties:\n  ClientToken: String\n  Description: String\n  Name: String\n  Ruleset: String\n  Tags: \n    - Tag\n  TargetTable: \n    DataQualityTargetTable\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::DevEndpoint","awsResourceTypeName":"glue-devendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::DevEndpoint\",\n  \"Properties\" : {\n      \"Arguments\" : Json,\n      \"EndpointName\" : String,\n      \"ExtraJarsS3Path\" : String,\n      \"ExtraPythonLibsS3Path\" : String,\n      \"GlueVersion\" : String,\n      \"NumberOfNodes\" : Integer,\n      \"NumberOfWorkers\" : Integer,\n      \"PublicKey\" : String,\n      \"PublicKeys\" : [ String, ... ],\n      \"RoleArn\" : String,\n      \"SecurityConfiguration\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkerType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::DevEndpoint\nProperties:\n  Arguments: Json\n  EndpointName: String\n  ExtraJarsS3Path: String\n  ExtraPythonLibsS3Path: String\n  GlueVersion: String\n  NumberOfNodes: Integer\n  NumberOfWorkers: Integer\n  PublicKey: String\n  PublicKeys: \n    - String\n  RoleArn: String\n  SecurityConfiguration: String\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n  WorkerType: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Job","awsResourceTypeName":"glue-job","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Job\",\n  \"Properties\" : {\n      \"AllocatedCapacity\" : Number,\n      \"Command\" : JobCommand,\n      \"Connections\" : ConnectionsList,\n      \"DefaultArguments\" : Json,\n      \"Description\" : String,\n      \"ExecutionClass\" : String,\n      \"ExecutionProperty\" : ExecutionProperty,\n      \"GlueVersion\" : String,\n      \"LogUri\" : String,\n      \"MaxCapacity\" : Number,\n      \"MaxRetries\" : Number,\n      \"Name\" : String,\n      \"NonOverridableArguments\" : Json,\n      \"NotificationProperty\" : NotificationProperty,\n      \"NumberOfWorkers\" : Integer,\n      \"Role\" : String,\n      \"SecurityConfiguration\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"WorkerType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Job\nProperties:\n  AllocatedCapacity: Number\n  Command: \n    JobCommand\n  Connections: \n    ConnectionsList\n  DefaultArguments: Json\n  Description: String\n  ExecutionClass: String\n  ExecutionProperty: \n    ExecutionProperty\n  GlueVersion: String\n  LogUri: String\n  MaxCapacity: Number\n  MaxRetries: Number\n  Name: String\n  NonOverridableArguments: Json\n  NotificationProperty: \n    NotificationProperty\n  NumberOfWorkers: Integer\n  Role: String\n  SecurityConfiguration: String\n  Tags: \n    - Tag\n  Timeout: Integer\n  WorkerType: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::MLTransform","awsResourceTypeName":"glue-mltransform","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::MLTransform\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GlueVersion\" : String,\n      \"InputRecordTables\" : InputRecordTables,\n      \"MaxCapacity\" : Number,\n      \"MaxRetries\" : Integer,\n      \"Name\" : String,\n      \"NumberOfWorkers\" : Integer,\n      \"Role\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"TransformEncryption\" : TransformEncryption,\n      \"TransformParameters\" : TransformParameters,\n      \"WorkerType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::MLTransform\nProperties:\n  Description: String\n  GlueVersion: String\n  InputRecordTables: \n    InputRecordTables\n  MaxCapacity: Number\n  MaxRetries: Integer\n  Name: String\n  NumberOfWorkers: Integer\n  Role: String\n  Tags: \n    - Tag\n  Timeout: Integer\n  TransformEncryption: \n    TransformEncryption\n  TransformParameters: \n    TransformParameters\n  WorkerType: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Partition","awsResourceTypeName":"glue-partition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Partition\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseName\" : String,\n      \"PartitionInput\" : PartitionInput,\n      \"TableName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Partition\nProperties:\n  CatalogId: String\n  DatabaseName: String\n  PartitionInput: \n    PartitionInput\n  TableName: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Registry","awsResourceTypeName":"glue-registry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Registry\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Registry\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Schema","awsResourceTypeName":"glue-schema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Schema\",\n  \"Properties\" : {\n      \"CheckpointVersion\" : SchemaVersion,\n      \"Compatibility\" : String,\n      \"DataFormat\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Registry\" : Registry,\n      \"SchemaDefinition\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Schema\nProperties:\n  CheckpointVersion: \n    SchemaVersion\n  Compatibility: String\n  DataFormat: String\n  Description: String\n  Name: String\n  Registry: \n    Registry\n  SchemaDefinition: String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::SchemaVersion","awsResourceTypeName":"glue-schemaversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::SchemaVersion\",\n  \"Properties\" : {\n      \"Schema\" : Schema,\n      \"SchemaDefinition\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::SchemaVersion\nProperties:\n  Schema: \n    Schema\n  SchemaDefinition: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::SchemaVersionMetadata","awsResourceTypeName":"glue-schemaversionmetadata","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::SchemaVersionMetadata\",\n  \"Properties\" : {\n      \"Key\" : String,\n      \"SchemaVersionId\" : String,\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::SchemaVersionMetadata\nProperties:\n  Key: String\n  SchemaVersionId: String\n  Value: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::SecurityConfiguration","awsResourceTypeName":"glue-securityconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::SecurityConfiguration\",\n  \"Properties\" : {\n      \"EncryptionConfiguration\" : EncryptionConfiguration,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::SecurityConfiguration\nProperties:\n  EncryptionConfiguration: \n    EncryptionConfiguration\n  Name: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Table","awsResourceTypeName":"glue-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Table\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseName\" : String,\n      \"OpenTableFormatInput\" : OpenTableFormatInput,\n      \"TableInput\" : TableInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Table\nProperties:\n  CatalogId: String\n  DatabaseName: String\n  OpenTableFormatInput: \n    OpenTableFormatInput\n  TableInput: \n    TableInput\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::TableOptimizer","awsResourceTypeName":"glue-tableoptimizer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::TableOptimizer\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"DatabaseName\" : String,\n      \"TableName\" : String,\n      \"TableOptimizerConfiguration\" : TableOptimizerConfiguration,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::TableOptimizer\nProperties:\n  CatalogId: String\n  DatabaseName: String\n  TableName: String\n  TableOptimizerConfiguration: \n    TableOptimizerConfiguration\n  Type: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Trigger","awsResourceTypeName":"glue-trigger","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Trigger\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"Description\" : String,\n      \"EventBatchingCondition\" : EventBatchingCondition,\n      \"Name\" : String,\n      \"Predicate\" : Predicate,\n      \"Schedule\" : String,\n      \"StartOnCreation\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"WorkflowName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Trigger\nProperties:\n  Actions: \n    - Action\n  Description: String\n  EventBatchingCondition: \n    EventBatchingCondition\n  Name: String\n  Predicate: \n    Predicate\n  Schedule: String\n  StartOnCreation: Boolean\n  Tags: \n    - Tag\n  Type: String\n  WorkflowName: String\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Glue::Workflow","awsResourceTypeName":"glue-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Glue::Workflow\",\n  \"Properties\" : {\n      \"DefaultRunProperties\" : Json,\n      \"Description\" : String,\n      \"MaxConcurrentRuns\" : Integer,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Glue::Workflow\nProperties:\n  DefaultRunProperties: Json\n  Description: String\n  MaxConcurrentRuns: Integer\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Glue","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Dataset","awsResourceTypeName":"databrew-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Dataset\",\n  \"Properties\" : {\n      \"Format\" : String,\n      \"FormatOptions\" : FormatOptions,\n      \"Input\" : Input,\n      \"Name\" : String,\n      \"PathOptions\" : PathOptions,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Dataset\nProperties:\n  Format: String\n  FormatOptions: \n    FormatOptions\n  Input: \n    Input\n  Name: String\n  PathOptions: \n    PathOptions\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Job","awsResourceTypeName":"databrew-job","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Job\",\n  \"Properties\" : {\n      \"DatabaseOutputs\" : [ DatabaseOutput, ... ],\n      \"DataCatalogOutputs\" : [ DataCatalogOutput, ... ],\n      \"DatasetName\" : String,\n      \"EncryptionKeyArn\" : String,\n      \"EncryptionMode\" : String,\n      \"JobSample\" : JobSample,\n      \"LogSubscription\" : String,\n      \"MaxCapacity\" : Integer,\n      \"MaxRetries\" : Integer,\n      \"Name\" : String,\n      \"OutputLocation\" : OutputLocation,\n      \"Outputs\" : [ Output, ... ],\n      \"ProfileConfiguration\" : ProfileConfiguration,\n      \"ProjectName\" : String,\n      \"Recipe\" : Recipe,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"Type\" : String,\n      \"ValidationConfigurations\" : [ ValidationConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Job\nProperties:\n  DatabaseOutputs: \n    - DatabaseOutput\n  DataCatalogOutputs: \n    - DataCatalogOutput\n  DatasetName: String\n  EncryptionKeyArn: String\n  EncryptionMode: String\n  JobSample: \n    JobSample\n  LogSubscription: String\n  MaxCapacity: Integer\n  MaxRetries: Integer\n  Name: String\n  OutputLocation: \n    OutputLocation\n  Outputs: \n    - Output\n  ProfileConfiguration: \n    ProfileConfiguration\n  ProjectName: String\n  Recipe: \n    Recipe\n  RoleArn: String\n  Tags: \n    - Tag\n  Timeout: Integer\n  Type: String\n  ValidationConfigurations: \n    - ValidationConfiguration\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Project","awsResourceTypeName":"databrew-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Project\",\n  \"Properties\" : {\n      \"DatasetName\" : String,\n      \"Name\" : String,\n      \"RecipeName\" : String,\n      \"RoleArn\" : String,\n      \"Sample\" : Sample,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Project\nProperties:\n  DatasetName: String\n  Name: String\n  RecipeName: String\n  RoleArn: String\n  Sample: \n    Sample\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Recipe","awsResourceTypeName":"databrew-recipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Recipe\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Steps\" : [ RecipeStep, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Recipe\nProperties:\n  Description: String\n  Name: String\n  Steps: \n    - RecipeStep\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Ruleset","awsResourceTypeName":"databrew-ruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Ruleset\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Ruleset\nProperties:\n  Description: String\n  Name: String\n  Rules: \n    - Rule\n  Tags: \n    - Tag\n  TargetArn: String\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::DataBrew::Schedule","awsResourceTypeName":"databrew-schedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::DataBrew::Schedule\",\n  \"Properties\" : {\n      \"CronExpression\" : String,\n      \"JobNames\" : [ String, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::DataBrew::Schedule\nProperties:\n  CronExpression: String\n  JobNames: \n    - String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"DataBrew","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Grafana::Workspace","awsResourceTypeName":"grafana-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Grafana::Workspace\",\n  \"Properties\" : {\n      \"AccountAccessType\" : String,\n      \"AuthenticationProviders\" : [ String, ... ],\n      \"ClientToken\" : String,\n      \"DataSources\" : [ String, ... ],\n      \"Description\" : String,\n      \"GrafanaVersion\" : String,\n      \"Name\" : String,\n      \"NetworkAccessControl\" : NetworkAccessControl,\n      \"NotificationDestinations\" : [ String, ... ],\n      \"OrganizationalUnits\" : [ String, ... ],\n      \"OrganizationRoleName\" : String,\n      \"PermissionType\" : String,\n      \"PluginAdminEnabled\" : Boolean,\n      \"RoleArn\" : String,\n      \"SamlConfiguration\" : SamlConfiguration,\n      \"StackSetName\" : String,\n      \"VpcConfiguration\" : VpcConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Grafana::Workspace\nProperties:\n  AccountAccessType: String\n  AuthenticationProviders: \n    - String\n  ClientToken: String\n  DataSources: \n    - String\n  Description: String\n  GrafanaVersion: String\n  Name: String\n  NetworkAccessControl: \n    NetworkAccessControl\n  NotificationDestinations: \n    - String\n  OrganizationalUnits: \n    - String\n  OrganizationRoleName: String\n  PermissionType: String\n  PluginAdminEnabled: Boolean\n  RoleArn: String\n  SamlConfiguration: \n    SamlConfiguration\n  StackSetName: String\n  VpcConfiguration: \n    VpcConfiguration\n","awsServiceName":"Grafana","awsServiceCategory":"other"},{"awsResourceType":"AWS::GroundStation::Config","awsResourceTypeName":"groundstation-config","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GroundStation::Config\",\n  \"Properties\" : {\n      \"ConfigData\" : ConfigData,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GroundStation::Config\nProperties:\n  ConfigData: \n    ConfigData\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"GroundStation","awsServiceCategory":"compute"},{"awsResourceType":"AWS::GroundStation::DataflowEndpointGroup","awsResourceTypeName":"groundstation-dataflowendpointgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GroundStation::DataflowEndpointGroup\",\n  \"Properties\" : {\n      \"ContactPostPassDurationSeconds\" : Integer,\n      \"ContactPrePassDurationSeconds\" : Integer,\n      \"EndpointDetails\" : [ EndpointDetails, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GroundStation::DataflowEndpointGroup\nProperties:\n  ContactPostPassDurationSeconds: Integer\n  ContactPrePassDurationSeconds: Integer\n  EndpointDetails: \n    - EndpointDetails\n  Tags: \n    - Tag\n","awsServiceName":"GroundStation","awsServiceCategory":"compute"},{"awsResourceType":"AWS::GroundStation::MissionProfile","awsResourceTypeName":"groundstation-missionprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GroundStation::MissionProfile\",\n  \"Properties\" : {\n      \"ContactPostPassDurationSeconds\" : Integer,\n      \"ContactPrePassDurationSeconds\" : Integer,\n      \"DataflowEdges\" : [ DataflowEdge, ... ],\n      \"MinimumViableContactDurationSeconds\" : Integer,\n      \"Name\" : String,\n      \"StreamsKmsKey\" : StreamsKmsKey,\n      \"StreamsKmsRole\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrackingConfigArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GroundStation::MissionProfile\nProperties:\n  ContactPostPassDurationSeconds: Integer\n  ContactPrePassDurationSeconds: Integer\n  DataflowEdges: \n    - DataflowEdge\n  MinimumViableContactDurationSeconds: Integer\n  Name: String\n  StreamsKmsKey: \n    StreamsKmsKey\n  StreamsKmsRole: String\n  Tags: \n    - Tag\n  TrackingConfigArn: String\n","awsServiceName":"GroundStation","awsServiceCategory":"compute"},{"awsResourceType":"AWS::GuardDuty::Detector","awsResourceTypeName":"guardduty-detector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Detector\",\n  \"Properties\" : {\n      \"DataSources\" : CFNDataSourceConfigurations,\n      \"Enable\" : Boolean,\n      \"Features\" : [ CFNFeatureConfiguration, ... ],\n      \"FindingPublishingFrequency\" : String,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Detector\nProperties:\n  DataSources: \n    CFNDataSourceConfigurations\n  Enable: Boolean\n  Features: \n    - CFNFeatureConfiguration\n  FindingPublishingFrequency: String\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::Filter","awsResourceTypeName":"guardduty-filter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Filter\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Description\" : String,\n      \"DetectorId\" : String,\n      \"FindingCriteria\" : FindingCriteria,\n      \"Name\" : String,\n      \"Rank\" : Integer,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Filter\nProperties:\n  Action: String\n  Description: String\n  DetectorId: String\n  FindingCriteria: \n    FindingCriteria\n  Name: String\n  Rank: Integer\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::IPSet","awsResourceTypeName":"guardduty-ipset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::IPSet\",\n  \"Properties\" : {\n      \"Activate\" : Boolean,\n      \"DetectorId\" : String,\n      \"Format\" : String,\n      \"Location\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::IPSet\nProperties:\n  Activate: Boolean\n  DetectorId: String\n  Format: String\n  Location: String\n  Name: String\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::Master","awsResourceTypeName":"guardduty-master","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Master\",\n  \"Properties\" : {\n      \"DetectorId\" : String,\n      \"InvitationId\" : String,\n      \"MasterId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Master\nProperties:\n  DetectorId: String\n  InvitationId: String\n  MasterId: String\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::Member","awsResourceTypeName":"guardduty-member","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::Member\",\n  \"Properties\" : {\n      \"DetectorId\" : String,\n      \"DisableEmailNotification\" : Boolean,\n      \"Email\" : String,\n      \"MemberId\" : String,\n      \"Message\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::Member\nProperties:\n  DetectorId: String\n  DisableEmailNotification: Boolean\n  Email: String\n  MemberId: String\n  Message: String\n  Status: String\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::GuardDuty::ThreatIntelSet","awsResourceTypeName":"guardduty-threatintelset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GuardDuty::ThreatIntelSet\",\n  \"Properties\" : {\n      \"Activate\" : Boolean,\n      \"DetectorId\" : String,\n      \"Format\" : String,\n      \"Location\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ TagItem, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GuardDuty::ThreatIntelSet\nProperties:\n  Activate: Boolean\n  DetectorId: String\n  Format: String\n  Location: String\n  Name: String\n  Tags: \n    - TagItem\n","awsServiceName":"GuardDuty","awsServiceCategory":"security"},{"awsResourceType":"AWS::HealthImaging::Datastore","awsResourceTypeName":"healthimaging-datastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::HealthImaging::Datastore\",\n  \"Properties\" : {\n      \"DatastoreName\" : String,\n      \"KmsKeyArn\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::HealthImaging::Datastore\nProperties:\n  DatastoreName: String\n  KmsKeyArn: String\n  Tags: \n    Key: Value\n","awsServiceName":"HealthImaging","awsServiceCategory":"other"},{"awsResourceType":"AWS::HealthLake::FHIRDatastore","awsResourceTypeName":"healthlake-fhirdatastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::HealthLake::FHIRDatastore\",\n  \"Properties\" : {\n      \"DatastoreName\" : String,\n      \"DatastoreTypeVersion\" : String,\n      \"IdentityProviderConfiguration\" : IdentityProviderConfiguration,\n      \"PreloadDataConfig\" : PreloadDataConfig,\n      \"SseConfiguration\" : SseConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::HealthLake::FHIRDatastore\nProperties:\n  DatastoreName: String\n  DatastoreTypeVersion: String\n  IdentityProviderConfiguration: \n    IdentityProviderConfiguration\n  PreloadDataConfig: \n    PreloadDataConfig\n  SseConfiguration: \n    SseConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"HealthLake","awsServiceCategory":"other"},{"awsResourceType":"AWS::IAM::AccessKey","awsResourceTypeName":"iam-accesskey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::AccessKey\",\n  \"Properties\" : {\n      \"Serial\" : Integer,\n      \"Status\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::AccessKey\nProperties:\n  Serial: Integer\n  Status: String\n  UserName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::Group","awsResourceTypeName":"iam-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::Group\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"Path\" : String,\n      \"Policies\" : [ Policy, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::Group\nProperties:\n  GroupName: String\n  ManagedPolicyArns: \n    - String\n  Path: String\n  Policies: \n    - Policy\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::GroupPolicy","awsResourceTypeName":"iam-grouppolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::GroupPolicy\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::GroupPolicy\nProperties:\n  GroupName: String\n  PolicyDocument: Json\n  PolicyName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::InstanceProfile","awsResourceTypeName":"iam-instanceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::InstanceProfile\",\n  \"Properties\" : {\n      \"InstanceProfileName\" : String,\n      \"Path\" : String,\n      \"Roles\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::InstanceProfile\nProperties:\n  InstanceProfileName: String\n  Path: String\n  Roles: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::ManagedPolicy","awsResourceTypeName":"iam-managedpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::ManagedPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Groups\" : [ String, ... ],\n      \"ManagedPolicyName\" : String,\n      \"Path\" : String,\n      \"PolicyDocument\" : Json,\n      \"Roles\" : [ String, ... ],\n      \"Users\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::ManagedPolicy\nProperties:\n  Description: String\n  Groups: \n    - String\n  ManagedPolicyName: String\n  Path: String\n  PolicyDocument: Json\n  Roles: \n    - String\n  Users: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::OIDCProvider","awsResourceTypeName":"iam-oidcprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::OIDCProvider\",\n  \"Properties\" : {\n      \"ClientIdList\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"ThumbprintList\" : [ String, ... ],\n      \"Url\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::OIDCProvider\nProperties:\n  ClientIdList: \n    - String\n  Tags: \n    - Tag\n  ThumbprintList: \n    - String\n  Url: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::Policy","awsResourceTypeName":"iam-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::Policy\",\n  \"Properties\" : {\n      \"Groups\" : [ String, ... ],\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"Roles\" : [ String, ... ],\n      \"Users\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::Policy\nProperties:\n  Groups: \n    - String\n  PolicyDocument: Json\n  PolicyName: String\n  Roles: \n    - String\n  Users: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::Role","awsResourceTypeName":"iam-role","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::Role\",\n  \"Properties\" : {\n      \"AssumeRolePolicyDocument\" : Json,\n      \"Description\" : String,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"MaxSessionDuration\" : Integer,\n      \"Path\" : String,\n      \"PermissionsBoundary\" : String,\n      \"Policies\" : [ Policy, ... ],\n      \"RoleName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::Role\nProperties:\n  AssumeRolePolicyDocument: Json\n  Description: String\n  ManagedPolicyArns: \n    - String\n  MaxSessionDuration: Integer\n  Path: String\n  PermissionsBoundary: String\n  Policies: \n    - Policy\n  RoleName: String\n  Tags: \n    - Tag\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::RolePolicy","awsResourceTypeName":"iam-rolepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::RolePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"RoleName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::RolePolicy\nProperties:\n  PolicyDocument: Json\n  PolicyName: String\n  RoleName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::SAMLProvider","awsResourceTypeName":"iam-samlprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::SAMLProvider\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SamlMetadataDocument\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::SAMLProvider\nProperties:\n  Name: String\n  SamlMetadataDocument: String\n  Tags: \n    - Tag\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::ServerCertificate","awsResourceTypeName":"iam-servercertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::ServerCertificate\",\n  \"Properties\" : {\n      \"CertificateBody\" : String,\n      \"CertificateChain\" : String,\n      \"Path\" : String,\n      \"PrivateKey\" : String,\n      \"ServerCertificateName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::ServerCertificate\nProperties:\n  CertificateBody: String\n  CertificateChain: String\n  Path: String\n  PrivateKey: String\n  ServerCertificateName: String\n  Tags: \n    - Tag\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::ServiceLinkedRole","awsResourceTypeName":"iam-servicelinkedrole","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::ServiceLinkedRole\",\n  \"Properties\" : {\n      \"AWSServiceName\" : String,\n      \"CustomSuffix\" : String,\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::ServiceLinkedRole\nProperties:\n  AWSServiceName: String\n  CustomSuffix: String\n  Description: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::User","awsResourceTypeName":"iam-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::User\",\n  \"Properties\" : {\n      \"Groups\" : [ String, ... ],\n      \"LoginProfile\" : LoginProfile,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"Path\" : String,\n      \"PermissionsBoundary\" : String,\n      \"Policies\" : [ Policy, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::User\nProperties:\n  Groups: \n    - String\n  LoginProfile: \n    LoginProfile\n  ManagedPolicyArns: \n    - String\n  Path: String\n  PermissionsBoundary: String\n  Policies: \n    - Policy\n  Tags: \n    - Tag\n  UserName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::UserPolicy","awsResourceTypeName":"iam-userpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::UserPolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::UserPolicy\nProperties:\n  PolicyDocument: Json\n  PolicyName: String\n  UserName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::UserToGroupAddition","awsResourceTypeName":"iam-usertogroupaddition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::UserToGroupAddition\",\n  \"Properties\" : {\n      \"GroupName\" : String,\n      \"Users\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::UserToGroupAddition\nProperties:\n  GroupName: String\n  Users: \n    - String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::IAM::VirtualMFADevice","awsResourceTypeName":"iam-virtualmfadevice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IAM::VirtualMFADevice\",\n  \"Properties\" : {\n      \"Path\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Users\" : [ String, ... ],\n      \"VirtualMfaDeviceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IAM::VirtualMFADevice\nProperties:\n  Path: String\n  Tags: \n    - Tag\n  Users: \n    - String\n  VirtualMfaDeviceName: String\n","awsServiceName":"IAM","awsServiceCategory":"security"},{"awsResourceType":"AWS::SSO::Assignment","awsResourceTypeName":"sso-assignment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSO::Assignment\",\n  \"Properties\" : {\n      \"InstanceArn\" : String,\n      \"PermissionSetArn\" : String,\n      \"PrincipalId\" : String,\n      \"PrincipalType\" : String,\n      \"TargetId\" : String,\n      \"TargetType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSO::Assignment\nProperties:\n  InstanceArn: String\n  PermissionSetArn: String\n  PrincipalId: String\n  PrincipalType: String\n  TargetId: String\n  TargetType: String\n","awsServiceName":"SSO","awsServiceCategory":"security"},{"awsResourceType":"AWS::SSO::InstanceAccessControlAttributeConfiguration","awsResourceTypeName":"sso-instanceaccesscontrolattributeconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSO::InstanceAccessControlAttributeConfiguration\",\n  \"Properties\" : {\n      \"AccessControlAttributes\" : [ AccessControlAttribute, ... ],\n      \"InstanceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSO::InstanceAccessControlAttributeConfiguration\nProperties:\n  AccessControlAttributes: \n    - AccessControlAttribute\n  InstanceArn: String\n","awsServiceName":"SSO","awsServiceCategory":"security"},{"awsResourceType":"AWS::SSO::PermissionSet","awsResourceTypeName":"sso-permissionset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSO::PermissionSet\",\n  \"Properties\" : {\n      \"CustomerManagedPolicyReferences\" : [ CustomerManagedPolicyReference, ... ],\n      \"Description\" : String,\n      \"InlinePolicy\" : Json,\n      \"InstanceArn\" : String,\n      \"ManagedPolicies\" : [ String, ... ],\n      \"Name\" : String,\n      \"PermissionsBoundary\" : PermissionsBoundary,\n      \"RelayStateType\" : String,\n      \"SessionDuration\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSO::PermissionSet\nProperties:\n  CustomerManagedPolicyReferences: \n    - CustomerManagedPolicyReference\n  Description: String\n  InlinePolicy: Json\n  InstanceArn: String\n  ManagedPolicies: \n    - String\n  Name: String\n  PermissionsBoundary: \n    PermissionsBoundary\n  RelayStateType: String\n  SessionDuration: String\n  Tags: \n    - Tag\n","awsServiceName":"SSO","awsServiceCategory":"security"},{"awsResourceType":"AWS::IdentityStore::Group","awsResourceTypeName":"identitystore-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IdentityStore::Group\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"IdentityStoreId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IdentityStore::Group\nProperties:\n  Description: String\n  DisplayName: String\n  IdentityStoreId: String\n","awsServiceName":"IdentityStore","awsServiceCategory":"security"},{"awsResourceType":"AWS::IdentityStore::GroupMembership","awsResourceTypeName":"identitystore-groupmembership","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IdentityStore::GroupMembership\",\n  \"Properties\" : {\n      \"GroupId\" : String,\n      \"IdentityStoreId\" : String,\n      \"MemberId\" : MemberId\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IdentityStore::GroupMembership\nProperties:\n  GroupId: String\n  IdentityStoreId: String\n  MemberId: \n    MemberId\n","awsServiceName":"IdentityStore","awsServiceCategory":"security"},{"awsResourceType":"AWS::AccessAnalyzer::Analyzer","awsResourceTypeName":"accessanalyzer-analyzer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AccessAnalyzer::Analyzer\",\n  \"Properties\" : {\n      \"AnalyzerConfiguration\" : AnalyzerConfiguration,\n      \"AnalyzerName\" : String,\n      \"ArchiveRules\" : [ ArchiveRule, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AccessAnalyzer::Analyzer\nProperties:\n  AnalyzerConfiguration: \n    AnalyzerConfiguration\n  AnalyzerName: String\n  ArchiveRules: \n    - ArchiveRule\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"AccessAnalyzer","awsServiceCategory":"security"},{"awsResourceType":"AWS::ImageBuilder::Component","awsResourceTypeName":"imagebuilder-component","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::Component\",\n  \"Properties\" : {\n      \"ChangeDescription\" : String,\n      \"Data\" : String,\n      \"Description\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"Platform\" : String,\n      \"SupportedOsVersions\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"Uri\" : String,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::Component\nProperties:\n  ChangeDescription: String\n  Data: String\n  Description: String\n  KmsKeyId: String\n  Name: String\n  Platform: String\n  SupportedOsVersions: \n    - String\n  Tags: \n    Key: Value\n  Uri: String\n  Version: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::ContainerRecipe","awsResourceTypeName":"imagebuilder-containerrecipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::ContainerRecipe\",\n  \"Properties\" : {\n      \"Components\" : [ ComponentConfiguration, ... ],\n      \"ContainerType\" : String,\n      \"Description\" : String,\n      \"DockerfileTemplateData\" : String,\n      \"DockerfileTemplateUri\" : String,\n      \"ImageOsVersionOverride\" : String,\n      \"InstanceConfiguration\" : InstanceConfiguration,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"ParentImage\" : String,\n      \"PlatformOverride\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TargetRepository\" : TargetContainerRepository,\n      \"Version\" : String,\n      \"WorkingDirectory\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::ContainerRecipe\nProperties:\n  Components: \n    - ComponentConfiguration\n  ContainerType: String\n  Description: String\n  DockerfileTemplateData: String\n  DockerfileTemplateUri: String\n  ImageOsVersionOverride: String\n  InstanceConfiguration: \n    InstanceConfiguration\n  KmsKeyId: String\n  Name: String\n  ParentImage: String\n  PlatformOverride: String\n  Tags: \n    Key: Value\n  TargetRepository: \n    TargetContainerRepository\n  Version: String\n  WorkingDirectory: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::DistributionConfiguration","awsResourceTypeName":"imagebuilder-distributionconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::DistributionConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Distributions\" : [ Distribution, ... ],\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::DistributionConfiguration\nProperties:\n  Description: String\n  Distributions: \n    - Distribution\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::Image","awsResourceTypeName":"imagebuilder-image","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::Image\",\n  \"Properties\" : {\n      \"ContainerRecipeArn\" : String,\n      \"DistributionConfigurationArn\" : String,\n      \"EnhancedImageMetadataEnabled\" : Boolean,\n      \"ExecutionRole\" : String,\n      \"ImageRecipeArn\" : String,\n      \"ImageScanningConfiguration\" : ImageScanningConfiguration,\n      \"ImageTestsConfiguration\" : ImageTestsConfiguration,\n      \"InfrastructureConfigurationArn\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Workflows\" : [ WorkflowConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::Image\nProperties:\n  ContainerRecipeArn: String\n  DistributionConfigurationArn: String\n  EnhancedImageMetadataEnabled: Boolean\n  ExecutionRole: String\n  ImageRecipeArn: String\n  ImageScanningConfiguration: \n    ImageScanningConfiguration\n  ImageTestsConfiguration: \n    ImageTestsConfiguration\n  InfrastructureConfigurationArn: String\n  Tags: \n    Key: Value\n  Workflows: \n    - WorkflowConfiguration\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::ImagePipeline","awsResourceTypeName":"imagebuilder-imagepipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::ImagePipeline\",\n  \"Properties\" : {\n      \"ContainerRecipeArn\" : String,\n      \"Description\" : String,\n      \"DistributionConfigurationArn\" : String,\n      \"EnhancedImageMetadataEnabled\" : Boolean,\n      \"ExecutionRole\" : String,\n      \"ImageRecipeArn\" : String,\n      \"ImageScanningConfiguration\" : ImageScanningConfiguration,\n      \"ImageTestsConfiguration\" : ImageTestsConfiguration,\n      \"InfrastructureConfigurationArn\" : String,\n      \"Name\" : String,\n      \"Schedule\" : Schedule,\n      \"Status\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Workflows\" : [ WorkflowConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::ImagePipeline\nProperties:\n  ContainerRecipeArn: String\n  Description: String\n  DistributionConfigurationArn: String\n  EnhancedImageMetadataEnabled: Boolean\n  ExecutionRole: String\n  ImageRecipeArn: String\n  ImageScanningConfiguration: \n    ImageScanningConfiguration\n  ImageTestsConfiguration: \n    ImageTestsConfiguration\n  InfrastructureConfigurationArn: String\n  Name: String\n  Schedule: \n    Schedule\n  Status: String\n  Tags: \n    Key: Value\n  Workflows: \n    - WorkflowConfiguration\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::ImageRecipe","awsResourceTypeName":"imagebuilder-imagerecipe","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::ImageRecipe\",\n  \"Properties\" : {\n      \"AdditionalInstanceConfiguration\" : AdditionalInstanceConfiguration,\n      \"BlockDeviceMappings\" : [ InstanceBlockDeviceMapping, ... ],\n      \"Components\" : [ ComponentConfiguration, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ParentImage\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Version\" : String,\n      \"WorkingDirectory\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::ImageRecipe\nProperties:\n  AdditionalInstanceConfiguration: \n    AdditionalInstanceConfiguration\n  BlockDeviceMappings: \n    - InstanceBlockDeviceMapping\n  Components: \n    - ComponentConfiguration\n  Description: String\n  Name: String\n  ParentImage: String\n  Tags: \n    Key: Value\n  Version: String\n  WorkingDirectory: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::InfrastructureConfiguration","awsResourceTypeName":"imagebuilder-infrastructureconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::InfrastructureConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"InstanceMetadataOptions\" : InstanceMetadataOptions,\n      \"InstanceProfileName\" : String,\n      \"InstanceTypes\" : [ String, ... ],\n      \"KeyPair\" : String,\n      \"Logging\" : Logging,\n      \"Name\" : String,\n      \"ResourceTags\" : {Key: Value, ...},\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SubnetId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TerminateInstanceOnFailure\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::InfrastructureConfiguration\nProperties:\n  Description: String\n  InstanceMetadataOptions: \n    InstanceMetadataOptions\n  InstanceProfileName: String\n  InstanceTypes: \n    - String\n  KeyPair: String\n  Logging: \n    Logging\n  Name: String\n  ResourceTags: \n    Key: Value\n  SecurityGroupIds: \n    - String\n  SnsTopicArn: String\n  SubnetId: String\n  Tags: \n    Key: Value\n  TerminateInstanceOnFailure: Boolean\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::LifecyclePolicy","awsResourceTypeName":"imagebuilder-lifecyclepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::LifecyclePolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExecutionRole\" : String,\n      \"Name\" : String,\n      \"PolicyDetails\" : [ PolicyDetail, ... ],\n      \"ResourceSelection\" : ResourceSelection,\n      \"ResourceType\" : String,\n      \"Status\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::LifecyclePolicy\nProperties:\n  Description: String\n  ExecutionRole: String\n  Name: String\n  PolicyDetails: \n    - PolicyDetail\n  ResourceSelection: \n    ResourceSelection\n  ResourceType: String\n  Status: String\n  Tags: \n    Key: Value\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::ImageBuilder::Workflow","awsResourceTypeName":"imagebuilder-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ImageBuilder::Workflow\",\n  \"Properties\" : {\n      \"ChangeDescription\" : String,\n      \"Data\" : String,\n      \"Description\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String,\n      \"Uri\" : String,\n      \"Version\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ImageBuilder::Workflow\nProperties:\n  ChangeDescription: String\n  Data: String\n  Description: String\n  KmsKeyId: String\n  Name: String\n  Tags: \n    Key: Value\n  Type: String\n  Uri: String\n  Version: String\n","awsServiceName":"ImageBuilder","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSMIncidents::ReplicationSet","awsResourceTypeName":"ssmincidents-replicationset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMIncidents::ReplicationSet\",\n  \"Properties\" : {\n      \"DeletionProtected\" : Boolean,\n      \"Regions\" : [ ReplicationRegion, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMIncidents::ReplicationSet\nProperties:\n  DeletionProtected: Boolean\n  Regions: \n    - ReplicationRegion\n  Tags: \n    - Tag\n","awsServiceName":"SSMIncidents","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMIncidents::ResponsePlan","awsResourceTypeName":"ssmincidents-responseplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMIncidents::ResponsePlan\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"ChatChannel\" : ChatChannel,\n      \"DisplayName\" : String,\n      \"Engagements\" : [ String, ... ],\n      \"IncidentTemplate\" : IncidentTemplate,\n      \"Integrations\" : [ Integration, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMIncidents::ResponsePlan\nProperties:\n  Actions: \n    - Action\n  ChatChannel: \n    ChatChannel\n  DisplayName: String\n  Engagements: \n    - String\n  IncidentTemplate: \n    IncidentTemplate\n  Integrations: \n    - Integration\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"SSMIncidents","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::Contact","awsResourceTypeName":"ssmcontacts-contact","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::Contact\",\n  \"Properties\" : {\n      \"Alias\" : String,\n      \"DisplayName\" : String,\n      \"Plan\" : [ Stage, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::Contact\nProperties:\n  Alias: String\n  DisplayName: String\n  Plan: \n    - Stage\n  Type: String\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::ContactChannel","awsResourceTypeName":"ssmcontacts-contactchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::ContactChannel\",\n  \"Properties\" : {\n      \"ChannelAddress\" : String,\n      \"ChannelName\" : String,\n      \"ChannelType\" : String,\n      \"ContactId\" : String,\n      \"DeferActivation\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::ContactChannel\nProperties:\n  ChannelAddress: String\n  ChannelName: String\n  ChannelType: String\n  ContactId: String\n  DeferActivation: Boolean\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::Plan","awsResourceTypeName":"ssmcontacts-plan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::Plan\",\n  \"Properties\" : {\n      \"ContactId\" : String,\n      \"RotationIds\" : [ String, ... ],\n      \"Stages\" : [ Stage, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::Plan\nProperties:\n  ContactId: String\n  RotationIds: \n    - String\n  Stages: \n    - Stage\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::SSMContacts::Rotation","awsResourceTypeName":"ssmcontacts-rotation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSMContacts::Rotation\",\n  \"Properties\" : {\n      \"ContactIds\" : [ String, ... ],\n      \"Name\" : String,\n      \"Recurrence\" : RecurrenceSettings,\n      \"StartTime\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeZoneId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSMContacts::Rotation\nProperties:\n  ContactIds: \n    - String\n  Name: String\n  Recurrence: \n    RecurrenceSettings\n  StartTime: String\n  Tags: \n    - Tag\n  TimeZoneId: String\n","awsServiceName":"SSMContacts","awsServiceCategory":"management"},{"awsResourceType":"AWS::Inspector::AssessmentTarget","awsResourceTypeName":"inspector-assessmenttarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Inspector::AssessmentTarget\",\n  \"Properties\" : {\n      \"AssessmentTargetName\" : String,\n      \"ResourceGroupArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Inspector::AssessmentTarget\nProperties:\n  AssessmentTargetName: String\n  ResourceGroupArn: String\n","awsServiceName":"Inspector","awsServiceCategory":"security"},{"awsResourceType":"AWS::Inspector::AssessmentTemplate","awsResourceTypeName":"inspector-assessmenttemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Inspector::AssessmentTemplate\",\n  \"Properties\" : {\n      \"AssessmentTargetArn\" : String,\n      \"AssessmentTemplateName\" : String,\n      \"DurationInSeconds\" : Integer,\n      \"RulesPackageArns\" : [ String, ... ],\n      \"UserAttributesForFindings\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Inspector::AssessmentTemplate\nProperties:\n  AssessmentTargetArn: String\n  AssessmentTemplateName: String\n  DurationInSeconds: Integer\n  RulesPackageArns: \n    - String\n  UserAttributesForFindings: \n    - Tag\n","awsServiceName":"Inspector","awsServiceCategory":"security"},{"awsResourceType":"AWS::Inspector::ResourceGroup","awsResourceTypeName":"inspector-resourcegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Inspector::ResourceGroup\",\n  \"Properties\" : {\n      \"ResourceGroupTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Inspector::ResourceGroup\nProperties:\n  ResourceGroupTags: \n    - Tag\n","awsServiceName":"Inspector","awsServiceCategory":"security"},{"awsResourceType":"AWS::InspectorV2::CisScanConfiguration","awsResourceTypeName":"inspectorv2-cisscanconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::InspectorV2::CisScanConfiguration\",\n  \"Properties\" : {\n      \"ScanName\" : String,\n      \"Schedule\" : Schedule,\n      \"SecurityLevel\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Targets\" : CisTargets\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::InspectorV2::CisScanConfiguration\nProperties:\n  ScanName: String\n  Schedule: \n    Schedule\n  SecurityLevel: String\n  Tags: \n    Key: Value\n  Targets: \n    CisTargets\n","awsServiceName":"InspectorV2","awsServiceCategory":"security"},{"awsResourceType":"AWS::InspectorV2::Filter","awsResourceTypeName":"inspectorv2-filter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::InspectorV2::Filter\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FilterAction\" : String,\n      \"FilterCriteria\" : FilterCriteria,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::InspectorV2::Filter\nProperties:\n  Description: String\n  FilterAction: String\n  FilterCriteria: \n    FilterCriteria\n  Name: String\n","awsServiceName":"InspectorV2","awsServiceCategory":"security"},{"awsResourceType":"AWS::IoT::AccountAuditConfiguration","awsResourceTypeName":"iot-accountauditconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::AccountAuditConfiguration\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"AuditCheckConfigurations\" : AuditCheckConfigurations,\n      \"AuditNotificationTargetConfigurations\" : AuditNotificationTargetConfigurations,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::AccountAuditConfiguration\nProperties:\n  AccountId: String\n  AuditCheckConfigurations: \n    AuditCheckConfigurations\n  AuditNotificationTargetConfigurations: \n    AuditNotificationTargetConfigurations\n  RoleArn: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Authorizer","awsResourceTypeName":"iot-authorizer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Authorizer\",\n  \"Properties\" : {\n      \"AuthorizerFunctionArn\" : String,\n      \"AuthorizerName\" : String,\n      \"EnableCachingForHttp\" : Boolean,\n      \"SigningDisabled\" : Boolean,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TokenKeyName\" : String,\n      \"TokenSigningPublicKeys\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Authorizer\nProperties:\n  AuthorizerFunctionArn: String\n  AuthorizerName: String\n  EnableCachingForHttp: Boolean\n  SigningDisabled: Boolean\n  Status: String\n  Tags: \n    - Tag\n  TokenKeyName: String\n  TokenSigningPublicKeys: \n    Key: Value\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::BillingGroup","awsResourceTypeName":"iot-billinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::BillingGroup\",\n  \"Properties\" : {\n      \"BillingGroupName\" : String,\n      \"BillingGroupProperties\" : BillingGroupProperties,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::BillingGroup\nProperties:\n  BillingGroupName: String\n  BillingGroupProperties: \n    BillingGroupProperties\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::CACertificate","awsResourceTypeName":"iot-cacertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::CACertificate\",\n  \"Properties\" : {\n      \"AutoRegistrationStatus\" : String,\n      \"CACertificatePem\" : String,\n      \"CertificateMode\" : String,\n      \"RegistrationConfig\" : RegistrationConfig,\n      \"RemoveAutoRegistration\" : Boolean,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VerificationCertificatePem\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::CACertificate\nProperties:\n  AutoRegistrationStatus: String\n  CACertificatePem: String\n  CertificateMode: String\n  RegistrationConfig: \n    RegistrationConfig\n  RemoveAutoRegistration: Boolean\n  Status: String\n  Tags: \n    - Tag\n  VerificationCertificatePem: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Certificate","awsResourceTypeName":"iot-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Certificate\",\n  \"Properties\" : {\n      \"CACertificatePem\" : String,\n      \"CertificateMode\" : String,\n      \"CertificatePem\" : String,\n      \"CertificateSigningRequest\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Certificate\nProperties:\n  CACertificatePem: String\n  CertificateMode: String\n  CertificatePem: String\n  CertificateSigningRequest: String\n  Status: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::CertificateProvider","awsResourceTypeName":"iot-certificateprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::CertificateProvider\",\n  \"Properties\" : {\n      \"AccountDefaultForOperations\" : [ String, ... ],\n      \"CertificateProviderName\" : String,\n      \"LambdaFunctionArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::CertificateProvider\nProperties:\n  AccountDefaultForOperations: \n    - String\n  CertificateProviderName: String\n  LambdaFunctionArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::CustomMetric","awsResourceTypeName":"iot-custommetric","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::CustomMetric\",\n  \"Properties\" : {\n      \"DisplayName\" : String,\n      \"MetricName\" : String,\n      \"MetricType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::CustomMetric\nProperties:\n  DisplayName: String\n  MetricName: String\n  MetricType: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Dimension","awsResourceTypeName":"iot-dimension","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Dimension\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"StringValues\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Dimension\nProperties:\n  Name: String\n  StringValues: \n    - String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::DomainConfiguration","awsResourceTypeName":"iot-domainconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::DomainConfiguration\",\n  \"Properties\" : {\n      \"AuthorizerConfig\" : AuthorizerConfig,\n      \"DomainConfigurationName\" : String,\n      \"DomainConfigurationStatus\" : String,\n      \"DomainName\" : String,\n      \"ServerCertificateArns\" : [ String, ... ],\n      \"ServerCertificateConfig\" : ServerCertificateConfig,\n      \"ServiceType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TlsConfig\" : TlsConfig,\n      \"ValidationCertificateArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::DomainConfiguration\nProperties:\n  AuthorizerConfig: \n    AuthorizerConfig\n  DomainConfigurationName: String\n  DomainConfigurationStatus: String\n  DomainName: String\n  ServerCertificateArns: \n    - String\n  ServerCertificateConfig: \n    ServerCertificateConfig\n  ServiceType: String\n  Tags: \n    - Tag\n  TlsConfig: \n    TlsConfig\n  ValidationCertificateArn: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::FleetMetric","awsResourceTypeName":"iot-fleetmetric","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::FleetMetric\",\n  \"Properties\" : {\n      \"AggregationField\" : String,\n      \"AggregationType\" : AggregationType,\n      \"Description\" : String,\n      \"IndexName\" : String,\n      \"MetricName\" : String,\n      \"Period\" : Integer,\n      \"QueryString\" : String,\n      \"QueryVersion\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Unit\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::FleetMetric\nProperties:\n  AggregationField: String\n  AggregationType: \n    AggregationType\n  Description: String\n  IndexName: String\n  MetricName: String\n  Period: Integer\n  QueryString: \n    String\n  QueryVersion: String\n  Tags: \n    - Tag\n  Unit: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::JobTemplate","awsResourceTypeName":"iot-jobtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::JobTemplate\",\n  \"Properties\" : {\n      \"AbortConfig\" : AbortConfig,\n      \"Description\" : String,\n      \"DestinationPackageVersions\" : [ String, ... ],\n      \"Document\" : String,\n      \"DocumentSource\" : String,\n      \"JobArn\" : String,\n      \"JobExecutionsRetryConfig\" : JobExecutionsRetryConfig,\n      \"JobExecutionsRolloutConfig\" : JobExecutionsRolloutConfig,\n      \"JobTemplateId\" : String,\n      \"MaintenanceWindows\" : [ MaintenanceWindow, ... ],\n      \"PresignedUrlConfig\" : PresignedUrlConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeoutConfig\" : TimeoutConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::JobTemplate\nProperties:\n  AbortConfig: \n    AbortConfig\n  Description: String\n  DestinationPackageVersions: \n    - String\n  Document: String\n  DocumentSource: String\n  JobArn: String\n  JobExecutionsRetryConfig: \n    JobExecutionsRetryConfig\n  JobExecutionsRolloutConfig: \n    JobExecutionsRolloutConfig\n  JobTemplateId: String\n  MaintenanceWindows: \n    - MaintenanceWindow\n  PresignedUrlConfig: \n    PresignedUrlConfig\n  Tags: \n    - Tag\n  TimeoutConfig: \n    TimeoutConfig\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Logging","awsResourceTypeName":"iot-logging","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Logging\",\n  \"Properties\" : {\n      \"AccountId\" : String,\n      \"DefaultLogLevel\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Logging\nProperties:\n  AccountId: String\n  DefaultLogLevel: String\n  RoleArn: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::MitigationAction","awsResourceTypeName":"iot-mitigationaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::MitigationAction\",\n  \"Properties\" : {\n      \"ActionName\" : String,\n      \"ActionParams\" : ActionParams,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::MitigationAction\nProperties:\n  ActionName: String\n  ActionParams: \n    ActionParams\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Policy","awsResourceTypeName":"iot-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Policy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"PolicyName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Policy\nProperties:\n  PolicyDocument: Json\n  PolicyName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::PolicyPrincipalAttachment","awsResourceTypeName":"iot-policyprincipalattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::PolicyPrincipalAttachment\",\n  \"Properties\" : {\n      \"PolicyName\" : String,\n      \"Principal\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::PolicyPrincipalAttachment\nProperties:\n  PolicyName: String\n  Principal: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ProvisioningTemplate","awsResourceTypeName":"iot-provisioningtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ProvisioningTemplate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"PreProvisioningHook\" : ProvisioningHook,\n      \"ProvisioningRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateBody\" : String,\n      \"TemplateName\" : String,\n      \"TemplateType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ProvisioningTemplate\nProperties:\n  Description: String\n  Enabled: Boolean\n  PreProvisioningHook: \n    ProvisioningHook\n  ProvisioningRoleArn: String\n  Tags: \n    - Tag\n  TemplateBody: String\n  TemplateName: String\n  TemplateType: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ResourceSpecificLogging","awsResourceTypeName":"iot-resourcespecificlogging","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ResourceSpecificLogging\",\n  \"Properties\" : {\n      \"LogLevel\" : String,\n      \"TargetName\" : String,\n      \"TargetType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ResourceSpecificLogging\nProperties:\n  LogLevel: String\n  TargetName: String\n  TargetType: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::RoleAlias","awsResourceTypeName":"iot-rolealias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::RoleAlias\",\n  \"Properties\" : {\n      \"CredentialDurationSeconds\" : Integer,\n      \"RoleAlias\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::RoleAlias\nProperties:\n  CredentialDurationSeconds: Integer\n  RoleAlias: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ScheduledAudit","awsResourceTypeName":"iot-scheduledaudit","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ScheduledAudit\",\n  \"Properties\" : {\n      \"DayOfMonth\" : String,\n      \"DayOfWeek\" : String,\n      \"Frequency\" : String,\n      \"ScheduledAuditName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetCheckNames\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ScheduledAudit\nProperties:\n  DayOfMonth: String\n  DayOfWeek: String\n  Frequency: String\n  ScheduledAuditName: String\n  Tags: \n    - Tag\n  TargetCheckNames: \n    - String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::SecurityProfile","awsResourceTypeName":"iot-securityprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::SecurityProfile\",\n  \"Properties\" : {\n      \"AdditionalMetricsToRetainV2\" : [ MetricToRetain, ... ],\n      \"AlertTargets\" : {Key: Value, ...},\n      \"Behaviors\" : [ Behavior, ... ],\n      \"MetricsExportConfig\" : MetricsExportConfig,\n      \"SecurityProfileDescription\" : String,\n      \"SecurityProfileName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArns\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::SecurityProfile\nProperties:\n  AdditionalMetricsToRetainV2: \n    - MetricToRetain\n  AlertTargets: \n    Key: Value\n  Behaviors: \n    - Behavior\n  MetricsExportConfig: \n    MetricsExportConfig\n  SecurityProfileDescription: String\n  SecurityProfileName: String\n  Tags: \n    - Tag\n  TargetArns: \n    - String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::SoftwarePackage","awsResourceTypeName":"iot-softwarepackage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::SoftwarePackage\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"PackageName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::SoftwarePackage\nProperties:\n  Description: String\n  PackageName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::SoftwarePackageVersion","awsResourceTypeName":"iot-softwarepackageversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::SoftwarePackageVersion\",\n  \"Properties\" : {\n      \"Attributes\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"PackageName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VersionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::SoftwarePackageVersion\nProperties:\n  Attributes: \n    Key: Value\n  Description: String\n  PackageName: String\n  Tags: \n    - Tag\n  VersionName: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::Thing","awsResourceTypeName":"iot-thing","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::Thing\",\n  \"Properties\" : {\n      \"AttributePayload\" : AttributePayload,\n      \"ThingName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::Thing\nProperties:\n  AttributePayload: \n    AttributePayload\n  ThingName: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ThingGroup","awsResourceTypeName":"iot-thinggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ThingGroup\",\n  \"Properties\" : {\n      \"ParentGroupName\" : String,\n      \"QueryString\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingGroupName\" : String,\n      \"ThingGroupProperties\" : ThingGroupProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ThingGroup\nProperties:\n  ParentGroupName: String\n  QueryString: \n    String\n  Tags: \n    - Tag\n  ThingGroupName: String\n  ThingGroupProperties: \n    ThingGroupProperties\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ThingPrincipalAttachment","awsResourceTypeName":"iot-thingprincipalattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ThingPrincipalAttachment\",\n  \"Properties\" : {\n      \"Principal\" : String,\n      \"ThingName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ThingPrincipalAttachment\nProperties:\n  Principal: String\n  ThingName: String\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::ThingType","awsResourceTypeName":"iot-thingtype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::ThingType\",\n  \"Properties\" : {\n      \"DeprecateThingType\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingTypeName\" : String,\n      \"ThingTypeProperties\" : ThingTypeProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::ThingType\nProperties:\n  DeprecateThingType: Boolean\n  Tags: \n    - Tag\n  ThingTypeName: String\n  ThingTypeProperties: \n    ThingTypeProperties\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::TopicRule","awsResourceTypeName":"iot-topicrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::TopicRule\",\n  \"Properties\" : {\n      \"RuleName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TopicRulePayload\" : TopicRulePayload\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::TopicRule\nProperties:\n  RuleName: String\n  Tags: \n    - Tag\n  TopicRulePayload: \n    TopicRulePayload\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT::TopicRuleDestination","awsResourceTypeName":"iot-topicruledestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT::TopicRuleDestination\",\n  \"Properties\" : {\n      \"HttpUrlProperties\" : HttpUrlDestinationSummary,\n      \"Status\" : String,\n      \"VpcProperties\" : VpcDestinationProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT::TopicRuleDestination\nProperties:\n  HttpUrlProperties: \n    HttpUrlDestinationSummary\n  Status: String\n  VpcProperties: \n    VpcDestinationProperties\n","awsServiceName":"IoT","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT1Click::Device","awsResourceTypeName":"iot1click-device","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT1Click::Device\",\n  \"Properties\" : {\n      \"DeviceId\" : String,\n      \"Enabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT1Click::Device\nProperties:\n  DeviceId: String\n  Enabled: Boolean\n","awsServiceName":"IoT1Click","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT1Click::Placement","awsResourceTypeName":"iot1click-placement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT1Click::Placement\",\n  \"Properties\" : {\n      \"AssociatedDevices\" : Json,\n      \"Attributes\" : Json,\n      \"PlacementName\" : String,\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT1Click::Placement\nProperties:\n  AssociatedDevices: Json\n  Attributes: Json\n  PlacementName: String\n  ProjectName: String\n","awsServiceName":"IoT1Click","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoT1Click::Project","awsResourceTypeName":"iot1click-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoT1Click::Project\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"PlacementTemplate\" : PlacementTemplate,\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoT1Click::Project\nProperties:\n  Description: String\n  PlacementTemplate: \n    PlacementTemplate\n  ProjectName: String\n","awsServiceName":"IoT1Click","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Channel","awsResourceTypeName":"iotanalytics-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Channel\",\n  \"Properties\" : {\n      \"ChannelName\" : String,\n      \"ChannelStorage\" : ChannelStorage,\n      \"RetentionPeriod\" : RetentionPeriod,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Channel\nProperties:\n  ChannelName: String\n  ChannelStorage: \n    ChannelStorage\n  RetentionPeriod: \n    RetentionPeriod\n  Tags: \n    - Tag\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Dataset","awsResourceTypeName":"iotanalytics-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Dataset\",\n  \"Properties\" : {\n      \"Actions\" : [ Action, ... ],\n      \"ContentDeliveryRules\" : [ DatasetContentDeliveryRule, ... ],\n      \"DatasetName\" : String,\n      \"LateDataRules\" : [ LateDataRule, ... ],\n      \"RetentionPeriod\" : RetentionPeriod,\n      \"Tags\" : [ Tag, ... ],\n      \"Triggers\" : [ Trigger, ... ],\n      \"VersioningConfiguration\" : VersioningConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Dataset\nProperties:\n  Actions: \n    - Action\n  ContentDeliveryRules: \n    - DatasetContentDeliveryRule\n  DatasetName: String\n  LateDataRules: \n    - LateDataRule\n  RetentionPeriod: \n    RetentionPeriod\n  Tags: \n    - Tag\n  Triggers: \n    - Trigger\n  VersioningConfiguration: \n    VersioningConfiguration\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Datastore","awsResourceTypeName":"iotanalytics-datastore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Datastore\",\n  \"Properties\" : {\n      \"DatastoreName\" : String,\n      \"DatastorePartitions\" : DatastorePartitions,\n      \"DatastoreStorage\" : DatastoreStorage,\n      \"FileFormatConfiguration\" : FileFormatConfiguration,\n      \"RetentionPeriod\" : RetentionPeriod,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Datastore\nProperties:\n  DatastoreName: String\n  DatastorePartitions: \n    DatastorePartitions\n  DatastoreStorage: \n    DatastoreStorage\n  FileFormatConfiguration: \n    FileFormatConfiguration\n  RetentionPeriod: \n    RetentionPeriod\n  Tags: \n    - Tag\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTAnalytics::Pipeline","awsResourceTypeName":"iotanalytics-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTAnalytics::Pipeline\",\n  \"Properties\" : {\n      \"PipelineActivities\" : [ Activity, ... ],\n      \"PipelineName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTAnalytics::Pipeline\nProperties:\n  PipelineActivities: \n    - Activity\n  PipelineName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTAnalytics","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTCoreDeviceAdvisor::SuiteDefinition","awsResourceTypeName":"iotcoredeviceadvisor-suitedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTCoreDeviceAdvisor::SuiteDefinition\",\n  \"Properties\" : {\n      \"SuiteDefinitionConfiguration\" : SuiteDefinitionConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTCoreDeviceAdvisor::SuiteDefinition\nProperties:\n  SuiteDefinitionConfiguration: \n    SuiteDefinitionConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"IoTCoreDeviceAdvisor","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTEvents::AlarmModel","awsResourceTypeName":"iotevents-alarmmodel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTEvents::AlarmModel\",\n  \"Properties\" : {\n      \"AlarmCapabilities\" : AlarmCapabilities,\n      \"AlarmEventActions\" : AlarmEventActions,\n      \"AlarmModelDescription\" : String,\n      \"AlarmModelName\" : String,\n      \"AlarmRule\" : AlarmRule,\n      \"Key\" : String,\n      \"RoleArn\" : String,\n      \"Severity\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTEvents::AlarmModel\nProperties:\n  AlarmCapabilities: \n    AlarmCapabilities\n  AlarmEventActions: \n    AlarmEventActions\n  AlarmModelDescription: String\n  AlarmModelName: String\n  AlarmRule: \n    AlarmRule\n  Key: String\n  RoleArn: String\n  Severity: Integer\n  Tags: \n    - Tag\n","awsServiceName":"IoTEvents","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTEvents::DetectorModel","awsResourceTypeName":"iotevents-detectormodel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTEvents::DetectorModel\",\n  \"Properties\" : {\n      \"DetectorModelDefinition\" : DetectorModelDefinition,\n      \"DetectorModelDescription\" : String,\n      \"DetectorModelName\" : String,\n      \"EvaluationMethod\" : String,\n      \"Key\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTEvents::DetectorModel\nProperties:\n  DetectorModelDefinition: \n    DetectorModelDefinition\n  DetectorModelDescription: String\n  DetectorModelName: String\n  EvaluationMethod: String\n  Key: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTEvents","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTEvents::Input","awsResourceTypeName":"iotevents-input","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTEvents::Input\",\n  \"Properties\" : {\n      \"InputDefinition\" : InputDefinition,\n      \"InputDescription\" : String,\n      \"InputName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTEvents::Input\nProperties:\n  InputDefinition: \n    InputDefinition\n  InputDescription: String\n  InputName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTEvents","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetHub::Application","awsResourceTypeName":"iotfleethub-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetHub::Application\",\n  \"Properties\" : {\n      \"ApplicationDescription\" : String,\n      \"ApplicationName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetHub::Application\nProperties:\n  ApplicationDescription: String\n  ApplicationName: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetHub","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::Campaign","awsResourceTypeName":"iotfleetwise-campaign","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::Campaign\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"CollectionScheme\" : CollectionScheme,\n      \"Compression\" : String,\n      \"DataDestinationConfigs\" : [ DataDestinationConfig, ... ],\n      \"DataExtraDimensions\" : [ String, ... ],\n      \"Description\" : String,\n      \"DiagnosticsMode\" : String,\n      \"ExpiryTime\" : String,\n      \"Name\" : String,\n      \"PostTriggerCollectionDuration\" : Number,\n      \"Priority\" : Integer,\n      \"SignalCatalogArn\" : String,\n      \"SignalsToCollect\" : [ SignalInformation, ... ],\n      \"SpoolingMode\" : String,\n      \"StartTime\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::Campaign\nProperties:\n  Action: String\n  CollectionScheme: \n    CollectionScheme\n  Compression: String\n  DataDestinationConfigs: \n    - DataDestinationConfig\n  DataExtraDimensions: \n    - String\n  Description: String\n  DiagnosticsMode: String\n  ExpiryTime: String\n  Name: String\n  PostTriggerCollectionDuration: Number\n  Priority: Integer\n  SignalCatalogArn: String\n  SignalsToCollect: \n    - SignalInformation\n  SpoolingMode: String\n  StartTime: String\n  Tags: \n    - Tag\n  TargetArn: String\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::DecoderManifest","awsResourceTypeName":"iotfleetwise-decodermanifest","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::DecoderManifest\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ModelManifestArn\" : String,\n      \"Name\" : String,\n      \"NetworkInterfaces\" : [ NetworkInterfacesItems, ... ],\n      \"SignalDecoders\" : [ SignalDecodersItems, ... ],\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::DecoderManifest\nProperties:\n  Description: String\n  ModelManifestArn: String\n  Name: String\n  NetworkInterfaces: \n    - NetworkInterfacesItems\n  SignalDecoders: \n    - SignalDecodersItems\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::Fleet","awsResourceTypeName":"iotfleetwise-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::Fleet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Id\" : String,\n      \"SignalCatalogArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::Fleet\nProperties:\n  Description: String\n  Id: String\n  SignalCatalogArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::ModelManifest","awsResourceTypeName":"iotfleetwise-modelmanifest","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::ModelManifest\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Nodes\" : [ String, ... ],\n      \"SignalCatalogArn\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::ModelManifest\nProperties:\n  Description: String\n  Name: String\n  Nodes: \n    - String\n  SignalCatalogArn: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::SignalCatalog","awsResourceTypeName":"iotfleetwise-signalcatalog","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::SignalCatalog\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"NodeCounts\" : NodeCounts,\n      \"Nodes\" : [ Node, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::SignalCatalog\nProperties:\n  Description: String\n  Name: String\n  NodeCounts: \n    NodeCounts\n  Nodes: \n    - Node\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTFleetWise::Vehicle","awsResourceTypeName":"iotfleetwise-vehicle","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTFleetWise::Vehicle\",\n  \"Properties\" : {\n      \"AssociationBehavior\" : String,\n      \"Attributes\" : {Key: Value, ...},\n      \"DecoderManifestArn\" : String,\n      \"ModelManifestArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTFleetWise::Vehicle\nProperties:\n  AssociationBehavior: String\n  Attributes: \n    Key: Value\n  DecoderManifestArn: String\n  ModelManifestArn: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTFleetWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ConnectorDefinition","awsResourceTypeName":"greengrass-connectordefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ConnectorDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : ConnectorDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ConnectorDefinition\nProperties:\n  InitialVersion: \n    ConnectorDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ConnectorDefinitionVersion","awsResourceTypeName":"greengrass-connectordefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ConnectorDefinitionVersion\",\n  \"Properties\" : {\n      \"ConnectorDefinitionId\" : String,\n      \"Connectors\" : [ Connector, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ConnectorDefinitionVersion\nProperties:\n  ConnectorDefinitionId: String\n  Connectors: \n    - Connector\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::CoreDefinition","awsResourceTypeName":"greengrass-coredefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::CoreDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : CoreDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::CoreDefinition\nProperties:\n  InitialVersion: \n    CoreDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::CoreDefinitionVersion","awsResourceTypeName":"greengrass-coredefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::CoreDefinitionVersion\",\n  \"Properties\" : {\n      \"CoreDefinitionId\" : String,\n      \"Cores\" : [ Core, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::CoreDefinitionVersion\nProperties:\n  CoreDefinitionId: String\n  Cores: \n    - Core\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::DeviceDefinition","awsResourceTypeName":"greengrass-devicedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::DeviceDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : DeviceDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::DeviceDefinition\nProperties:\n  InitialVersion: \n    DeviceDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::DeviceDefinitionVersion","awsResourceTypeName":"greengrass-devicedefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::DeviceDefinitionVersion\",\n  \"Properties\" : {\n      \"DeviceDefinitionId\" : String,\n      \"Devices\" : [ Device, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::DeviceDefinitionVersion\nProperties:\n  DeviceDefinitionId: String\n  Devices: \n    - Device\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::FunctionDefinition","awsResourceTypeName":"greengrass-functiondefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::FunctionDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : FunctionDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::FunctionDefinition\nProperties:\n  InitialVersion: \n    FunctionDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::FunctionDefinitionVersion","awsResourceTypeName":"greengrass-functiondefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::FunctionDefinitionVersion\",\n  \"Properties\" : {\n      \"DefaultConfig\" : DefaultConfig,\n      \"FunctionDefinitionId\" : String,\n      \"Functions\" : [ Function, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::FunctionDefinitionVersion\nProperties:\n  DefaultConfig: \n    DefaultConfig\n  FunctionDefinitionId: String\n  Functions: \n    - Function\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::Group","awsResourceTypeName":"greengrass-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::Group\",\n  \"Properties\" : {\n      \"InitialVersion\" : GroupVersion,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::Group\nProperties:\n  InitialVersion: \n    GroupVersion\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::GroupVersion","awsResourceTypeName":"greengrass-groupversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::GroupVersion\",\n  \"Properties\" : {\n      \"ConnectorDefinitionVersionArn\" : String,\n      \"CoreDefinitionVersionArn\" : String,\n      \"DeviceDefinitionVersionArn\" : String,\n      \"FunctionDefinitionVersionArn\" : String,\n      \"GroupId\" : String,\n      \"LoggerDefinitionVersionArn\" : String,\n      \"ResourceDefinitionVersionArn\" : String,\n      \"SubscriptionDefinitionVersionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::GroupVersion\nProperties:\n  ConnectorDefinitionVersionArn: String\n  CoreDefinitionVersionArn: String\n  DeviceDefinitionVersionArn: String\n  FunctionDefinitionVersionArn: String\n  GroupId: String\n  LoggerDefinitionVersionArn: String\n  ResourceDefinitionVersionArn: String\n  SubscriptionDefinitionVersionArn: String\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::LoggerDefinition","awsResourceTypeName":"greengrass-loggerdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::LoggerDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : LoggerDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::LoggerDefinition\nProperties:\n  InitialVersion: \n    LoggerDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::LoggerDefinitionVersion","awsResourceTypeName":"greengrass-loggerdefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::LoggerDefinitionVersion\",\n  \"Properties\" : {\n      \"LoggerDefinitionId\" : String,\n      \"Loggers\" : [ Logger, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::LoggerDefinitionVersion\nProperties:\n  LoggerDefinitionId: String\n  Loggers: \n    - Logger\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ResourceDefinition","awsResourceTypeName":"greengrass-resourcedefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ResourceDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : ResourceDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ResourceDefinition\nProperties:\n  InitialVersion: \n    ResourceDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::ResourceDefinitionVersion","awsResourceTypeName":"greengrass-resourcedefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::ResourceDefinitionVersion\",\n  \"Properties\" : {\n      \"ResourceDefinitionId\" : String,\n      \"Resources\" : [ ResourceInstance, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::ResourceDefinitionVersion\nProperties:\n  ResourceDefinitionId: String\n  Resources: \n    - ResourceInstance\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::SubscriptionDefinition","awsResourceTypeName":"greengrass-subscriptiondefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::SubscriptionDefinition\",\n  \"Properties\" : {\n      \"InitialVersion\" : SubscriptionDefinitionVersion,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::SubscriptionDefinition\nProperties:\n  InitialVersion: \n    SubscriptionDefinitionVersion\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::Greengrass::SubscriptionDefinitionVersion","awsResourceTypeName":"greengrass-subscriptiondefinitionversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Greengrass::SubscriptionDefinitionVersion\",\n  \"Properties\" : {\n      \"SubscriptionDefinitionId\" : String,\n      \"Subscriptions\" : [ Subscription, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Greengrass::SubscriptionDefinitionVersion\nProperties:\n  SubscriptionDefinitionId: String\n  Subscriptions: \n    - Subscription\n","awsServiceName":"Greengrass","awsServiceCategory":"iot"},{"awsResourceType":"AWS::GreengrassV2::ComponentVersion","awsResourceTypeName":"greengrassv2-componentversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GreengrassV2::ComponentVersion\",\n  \"Properties\" : {\n      \"InlineRecipe\" : String,\n      \"LambdaFunction\" : LambdaFunctionRecipeSource,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GreengrassV2::ComponentVersion\nProperties:\n  InlineRecipe: String\n  LambdaFunction: \n    LambdaFunctionRecipeSource\n  Tags: \n    Key: Value\n","awsServiceName":"GreengrassV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::GreengrassV2::Deployment","awsResourceTypeName":"greengrassv2-deployment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::GreengrassV2::Deployment\",\n  \"Properties\" : {\n      \"Components\" : {Key: Value, ...},\n      \"DeploymentName\" : String,\n      \"DeploymentPolicies\" : DeploymentPolicies,\n      \"IotJobConfiguration\" : DeploymentIoTJobConfiguration,\n      \"ParentTargetArn\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::GreengrassV2::Deployment\nProperties:\n  Components: \n    Key: Value\n  DeploymentName: String\n  DeploymentPolicies: \n    DeploymentPolicies\n  IotJobConfiguration: \n    DeploymentIoTJobConfiguration\n  ParentTargetArn: String\n  Tags: \n    Key: Value\n  TargetArn: String\n","awsServiceName":"GreengrassV2","awsServiceCategory":"other"},{"awsResourceType":"AWS::IoTSiteWise::AccessPolicy","awsResourceTypeName":"iotsitewise-accesspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::AccessPolicy\",\n  \"Properties\" : {\n      \"AccessPolicyIdentity\" : AccessPolicyIdentity,\n      \"AccessPolicyPermission\" : String,\n      \"AccessPolicyResource\" : AccessPolicyResource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::AccessPolicy\nProperties:\n  AccessPolicyIdentity: \n    AccessPolicyIdentity\n  AccessPolicyPermission: String\n  AccessPolicyResource: \n    AccessPolicyResource\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Asset","awsResourceTypeName":"iotsitewise-asset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Asset\",\n  \"Properties\" : {\n      \"AssetDescription\" : String,\n      \"AssetExternalId\" : String,\n      \"AssetHierarchies\" : [ AssetHierarchy, ... ],\n      \"AssetModelId\" : String,\n      \"AssetName\" : String,\n      \"AssetProperties\" : [ AssetProperty, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Asset\nProperties:\n  AssetDescription: String\n  AssetExternalId: String\n  AssetHierarchies: \n    - AssetHierarchy\n  AssetModelId: String\n  AssetName: String\n  AssetProperties: \n    - AssetProperty\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::AssetModel","awsResourceTypeName":"iotsitewise-assetmodel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::AssetModel\",\n  \"Properties\" : {\n      \"AssetModelCompositeModels\" : [ AssetModelCompositeModel, ... ],\n      \"AssetModelDescription\" : String,\n      \"AssetModelExternalId\" : String,\n      \"AssetModelHierarchies\" : [ AssetModelHierarchy, ... ],\n      \"AssetModelName\" : String,\n      \"AssetModelProperties\" : [ AssetModelProperty, ... ],\n      \"AssetModelType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::AssetModel\nProperties:\n  AssetModelCompositeModels: \n    - AssetModelCompositeModel\n  AssetModelDescription: String\n  AssetModelExternalId: String\n  AssetModelHierarchies: \n    - AssetModelHierarchy\n  AssetModelName: String\n  AssetModelProperties: \n    - AssetModelProperty\n  AssetModelType: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Dashboard","awsResourceTypeName":"iotsitewise-dashboard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Dashboard\",\n  \"Properties\" : {\n      \"DashboardDefinition\" : String,\n      \"DashboardDescription\" : String,\n      \"DashboardName\" : String,\n      \"ProjectId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Dashboard\nProperties:\n  DashboardDefinition: String\n  DashboardDescription: String\n  DashboardName: String\n  ProjectId: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Gateway","awsResourceTypeName":"iotsitewise-gateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Gateway\",\n  \"Properties\" : {\n      \"GatewayCapabilitySummaries\" : [ GatewayCapabilitySummary, ... ],\n      \"GatewayName\" : String,\n      \"GatewayPlatform\" : GatewayPlatform,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Gateway\nProperties:\n  GatewayCapabilitySummaries: \n    - GatewayCapabilitySummary\n  GatewayName: String\n  GatewayPlatform: \n    GatewayPlatform\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Portal","awsResourceTypeName":"iotsitewise-portal","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Portal\",\n  \"Properties\" : {\n      \"Alarms\" : Alarms,\n      \"NotificationSenderEmail\" : String,\n      \"PortalAuthMode\" : String,\n      \"PortalContactEmail\" : String,\n      \"PortalDescription\" : String,\n      \"PortalName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Portal\nProperties:\n  Alarms: \n    Alarms\n  NotificationSenderEmail: String\n  PortalAuthMode: String\n  PortalContactEmail: String\n  PortalDescription: String\n  PortalName: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTSiteWise::Project","awsResourceTypeName":"iotsitewise-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTSiteWise::Project\",\n  \"Properties\" : {\n      \"AssetIds\" : [ String, ... ],\n      \"PortalId\" : String,\n      \"ProjectDescription\" : String,\n      \"ProjectName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTSiteWise::Project\nProperties:\n  AssetIds: \n    - String\n  PortalId: String\n  ProjectDescription: String\n  ProjectName: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTSiteWise","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::ComponentType","awsResourceTypeName":"iottwinmaker-componenttype","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::ComponentType\",\n  \"Properties\" : {\n      \"ComponentTypeId\" : String,\n      \"CompositeComponentTypes\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"ExtendsFrom\" : [ String, ... ],\n      \"Functions\" : {Key: Value, ...},\n      \"IsSingleton\" : Boolean,\n      \"PropertyDefinitions\" : {Key: Value, ...},\n      \"PropertyGroups\" : {Key: Value, ...},\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::ComponentType\nProperties:\n  ComponentTypeId: String\n  CompositeComponentTypes: \n    Key: Value\n  Description: String\n  ExtendsFrom: \n    - String\n  Functions: \n    Key: Value\n  IsSingleton: Boolean\n  PropertyDefinitions: \n    Key: Value\n  PropertyGroups: \n    Key: Value\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::Entity","awsResourceTypeName":"iottwinmaker-entity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::Entity\",\n  \"Properties\" : {\n      \"Components\" : {Key: Value, ...},\n      \"CompositeComponents\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"EntityId\" : String,\n      \"EntityName\" : String,\n      \"ParentEntityId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::Entity\nProperties:\n  Components: \n    Key: Value\n  CompositeComponents: \n    Key: Value\n  Description: String\n  EntityId: String\n  EntityName: String\n  ParentEntityId: String\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::Scene","awsResourceTypeName":"iottwinmaker-scene","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::Scene\",\n  \"Properties\" : {\n      \"Capabilities\" : [ String, ... ],\n      \"ContentLocation\" : String,\n      \"Description\" : String,\n      \"SceneId\" : String,\n      \"SceneMetadata\" : {Key: Value, ...},\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::Scene\nProperties:\n  Capabilities: \n    - String\n  ContentLocation: String\n  Description: String\n  SceneId: String\n  SceneMetadata: \n    Key: Value\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::SyncJob","awsResourceTypeName":"iottwinmaker-syncjob","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::SyncJob\",\n  \"Properties\" : {\n      \"SyncRole\" : String,\n      \"SyncSource\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::SyncJob\nProperties:\n  SyncRole: String\n  SyncSource: String\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTTwinMaker::Workspace","awsResourceTypeName":"iottwinmaker-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTTwinMaker::Workspace\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Role\" : String,\n      \"S3Location\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"WorkspaceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTTwinMaker::Workspace\nProperties:\n  Description: String\n  Role: String\n  S3Location: String\n  Tags: \n    Key: Value\n  WorkspaceId: String\n","awsServiceName":"IoTTwinMaker","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::Destination","awsResourceTypeName":"iotwireless-destination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::Destination\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Expression\" : String,\n      \"ExpressionType\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::Destination\nProperties:\n  Description: String\n  Expression: String\n  ExpressionType: String\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::DeviceProfile","awsResourceTypeName":"iotwireless-deviceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::DeviceProfile\",\n  \"Properties\" : {\n      \"LoRaWAN\" : LoRaWANDeviceProfile,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::DeviceProfile\nProperties:\n  LoRaWAN: \n    LoRaWANDeviceProfile\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::FuotaTask","awsResourceTypeName":"iotwireless-fuotatask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::FuotaTask\",\n  \"Properties\" : {\n      \"AssociateMulticastGroup\" : String,\n      \"AssociateWirelessDevice\" : String,\n      \"Description\" : String,\n      \"DisassociateMulticastGroup\" : String,\n      \"DisassociateWirelessDevice\" : String,\n      \"FirmwareUpdateImage\" : String,\n      \"FirmwareUpdateRole\" : String,\n      \"LoRaWAN\" : LoRaWAN,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::FuotaTask\nProperties:\n  AssociateMulticastGroup: String\n  AssociateWirelessDevice: String\n  Description: String\n  DisassociateMulticastGroup: String\n  DisassociateWirelessDevice: String\n  FirmwareUpdateImage: String\n  FirmwareUpdateRole: String\n  LoRaWAN: \n    LoRaWAN\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::MulticastGroup","awsResourceTypeName":"iotwireless-multicastgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::MulticastGroup\",\n  \"Properties\" : {\n      \"AssociateWirelessDevice\" : String,\n      \"Description\" : String,\n      \"DisassociateWirelessDevice\" : String,\n      \"LoRaWAN\" : LoRaWAN,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::MulticastGroup\nProperties:\n  AssociateWirelessDevice: String\n  Description: String\n  DisassociateWirelessDevice: String\n  LoRaWAN: \n    LoRaWAN\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::NetworkAnalyzerConfiguration","awsResourceTypeName":"iotwireless-networkanalyzerconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::NetworkAnalyzerConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TraceContent\" : TraceContent,\n      \"WirelessDevices\" : [ String, ... ],\n      \"WirelessGateways\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::NetworkAnalyzerConfiguration\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  TraceContent: \n    TraceContent\n  WirelessDevices: \n    - String\n  WirelessGateways: \n    - String\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::PartnerAccount","awsResourceTypeName":"iotwireless-partneraccount","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::PartnerAccount\",\n  \"Properties\" : {\n      \"AccountLinked\" : Boolean,\n      \"PartnerAccountId\" : String,\n      \"PartnerType\" : String,\n      \"Sidewalk\" : SidewalkAccountInfo,\n      \"SidewalkResponse\" : SidewalkAccountInfoWithFingerprint,\n      \"SidewalkUpdate\" : SidewalkUpdateAccount,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::PartnerAccount\nProperties:\n  AccountLinked: Boolean\n  PartnerAccountId: String\n  PartnerType: String\n  Sidewalk: \n    SidewalkAccountInfo\n  SidewalkResponse: \n    SidewalkAccountInfoWithFingerprint\n  SidewalkUpdate: \n    SidewalkUpdateAccount\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::ServiceProfile","awsResourceTypeName":"iotwireless-serviceprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::ServiceProfile\",\n  \"Properties\" : {\n      \"LoRaWAN\" : LoRaWANServiceProfile,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::ServiceProfile\nProperties:\n  LoRaWAN: \n    LoRaWANServiceProfile\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::TaskDefinition","awsResourceTypeName":"iotwireless-taskdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::TaskDefinition\",\n  \"Properties\" : {\n      \"AutoCreateTasks\" : Boolean,\n      \"LoRaWANUpdateGatewayTaskEntry\" : LoRaWANUpdateGatewayTaskEntry,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TaskDefinitionType\" : String,\n      \"Update\" : UpdateWirelessGatewayTaskCreate\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::TaskDefinition\nProperties:\n  AutoCreateTasks: Boolean\n  LoRaWANUpdateGatewayTaskEntry: \n    LoRaWANUpdateGatewayTaskEntry\n  Name: String\n  Tags: \n    - Tag\n  TaskDefinitionType: String\n  Update: \n    UpdateWirelessGatewayTaskCreate\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::WirelessDevice","awsResourceTypeName":"iotwireless-wirelessdevice","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::WirelessDevice\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DestinationName\" : String,\n      \"LastUplinkReceivedAt\" : String,\n      \"LoRaWAN\" : LoRaWANDevice,\n      \"Name\" : String,\n      \"Positioning\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingArn\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::WirelessDevice\nProperties:\n  Description: String\n  DestinationName: String\n  LastUplinkReceivedAt: String\n  LoRaWAN: \n    LoRaWANDevice\n  Name: String\n  Positioning: String\n  Tags: \n    - Tag\n  ThingArn: String\n  Type: String\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::WirelessDeviceImportTask","awsResourceTypeName":"iotwireless-wirelessdeviceimporttask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::WirelessDeviceImportTask\",\n  \"Properties\" : {\n      \"DestinationName\" : String,\n      \"Sidewalk\" : Sidewalk,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::WirelessDeviceImportTask\nProperties:\n  DestinationName: String\n  Sidewalk: \n    Sidewalk\n  Tags: \n    - Tag\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IoTWireless::WirelessGateway","awsResourceTypeName":"iotwireless-wirelessgateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IoTWireless::WirelessGateway\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"LastUplinkReceivedAt\" : String,\n      \"LoRaWAN\" : LoRaWANGateway,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThingArn\" : String,\n      \"ThingName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IoTWireless::WirelessGateway\nProperties:\n  Description: String\n  LastUplinkReceivedAt: String\n  LoRaWAN: \n    LoRaWANGateway\n  Name: String\n  Tags: \n    - Tag\n  ThingArn: String\n  ThingName: String\n","awsServiceName":"IoTWireless","awsServiceCategory":"iot"},{"awsResourceType":"AWS::IVS::Channel","awsResourceTypeName":"ivs-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::Channel\",\n  \"Properties\" : {\n      \"Authorized\" : Boolean,\n      \"InsecureIngest\" : Boolean,\n      \"LatencyMode\" : String,\n      \"Name\" : String,\n      \"Preset\" : String,\n      \"RecordingConfigurationArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::Channel\nProperties:\n  Authorized: Boolean\n  InsecureIngest: Boolean\n  LatencyMode: String\n  Name: String\n  Preset: String\n  RecordingConfigurationArn: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::EncoderConfiguration","awsResourceTypeName":"ivs-encoderconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::EncoderConfiguration\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Video\" : Video\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::EncoderConfiguration\nProperties:\n  Name: String\n  Tags: \n    - Tag\n  Video: \n    Video\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::PlaybackKeyPair","awsResourceTypeName":"ivs-playbackkeypair","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::PlaybackKeyPair\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"PublicKeyMaterial\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::PlaybackKeyPair\nProperties:\n  Name: String\n  PublicKeyMaterial: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::PlaybackRestrictionPolicy","awsResourceTypeName":"ivs-playbackrestrictionpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::PlaybackRestrictionPolicy\",\n  \"Properties\" : {\n      \"AllowedCountries\" : [ String, ... ],\n      \"AllowedOrigins\" : [ String, ... ],\n      \"EnableStrictOriginEnforcement\" : Boolean,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::PlaybackRestrictionPolicy\nProperties:\n  AllowedCountries: \n    - String\n  AllowedOrigins: \n    - String\n  EnableStrictOriginEnforcement: Boolean\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::RecordingConfiguration","awsResourceTypeName":"ivs-recordingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::RecordingConfiguration\",\n  \"Properties\" : {\n      \"DestinationConfiguration\" : DestinationConfiguration,\n      \"Name\" : String,\n      \"RecordingReconnectWindowSeconds\" : Integer,\n      \"RenditionConfiguration\" : RenditionConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"ThumbnailConfiguration\" : ThumbnailConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::RecordingConfiguration\nProperties:\n  DestinationConfiguration: \n    DestinationConfiguration\n  Name: String\n  RecordingReconnectWindowSeconds: Integer\n  RenditionConfiguration: \n    RenditionConfiguration\n  Tags: \n    - Tag\n  ThumbnailConfiguration: \n    ThumbnailConfiguration\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::Stage","awsResourceTypeName":"ivs-stage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::Stage\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::Stage\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::StorageConfiguration","awsResourceTypeName":"ivs-storageconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::StorageConfiguration\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"S3\" : S3StorageConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::StorageConfiguration\nProperties:\n  Name: String\n  S3: \n    S3StorageConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVS::StreamKey","awsResourceTypeName":"ivs-streamkey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVS::StreamKey\",\n  \"Properties\" : {\n      \"ChannelArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVS::StreamKey\nProperties:\n  ChannelArn: String\n  Tags: \n    - Tag\n","awsServiceName":"IVS","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVSChat::LoggingConfiguration","awsResourceTypeName":"ivschat-loggingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVSChat::LoggingConfiguration\",\n  \"Properties\" : {\n      \"DestinationConfiguration\" : DestinationConfiguration,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVSChat::LoggingConfiguration\nProperties:\n  DestinationConfiguration: \n    DestinationConfiguration\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVSChat","awsServiceCategory":"other"},{"awsResourceType":"AWS::IVSChat::Room","awsResourceTypeName":"ivschat-room","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::IVSChat::Room\",\n  \"Properties\" : {\n      \"LoggingConfigurationIdentifiers\" : [ String, ... ],\n      \"MaximumMessageLength\" : Integer,\n      \"MaximumMessageRatePerSecond\" : Integer,\n      \"MessageReviewHandler\" : MessageReviewHandler,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::IVSChat::Room\nProperties:\n  LoggingConfigurationIdentifiers: \n    - String\n  MaximumMessageLength: Integer\n  MaximumMessageRatePerSecond: Integer\n  MessageReviewHandler: \n    MessageReviewHandler\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"IVSChat","awsServiceCategory":"other"},{"awsResourceType":"AWS::Kendra::DataSource","awsResourceTypeName":"kendra-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kendra::DataSource\",\n  \"Properties\" : {\n      \"CustomDocumentEnrichmentConfiguration\" : CustomDocumentEnrichmentConfiguration,\n      \"DataSourceConfiguration\" : DataSourceConfiguration,\n      \"Description\" : String,\n      \"IndexId\" : String,\n      \"LanguageCode\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Schedule\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kendra::DataSource\nProperties:\n  CustomDocumentEnrichmentConfiguration: \n    CustomDocumentEnrichmentConfiguration\n  DataSourceConfiguration: \n    DataSourceConfiguration\n  Description: String\n  IndexId: String\n  LanguageCode: String\n  Name: String\n  RoleArn: String\n  Schedule: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"Kendra","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Kendra::Faq","awsResourceTypeName":"kendra-faq","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kendra::Faq\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FileFormat\" : String,\n      \"IndexId\" : String,\n      \"LanguageCode\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"S3Path\" : S3Path,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kendra::Faq\nProperties:\n  Description: String\n  FileFormat: String\n  IndexId: String\n  LanguageCode: String\n  Name: String\n  RoleArn: String\n  S3Path: \n    S3Path\n  Tags: \n    - Tag\n","awsServiceName":"Kendra","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Kendra::Index","awsResourceTypeName":"kendra-index","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kendra::Index\",\n  \"Properties\" : {\n      \"CapacityUnits\" : CapacityUnitsConfiguration,\n      \"Description\" : String,\n      \"DocumentMetadataConfigurations\" : [ DocumentMetadataConfiguration, ... ],\n      \"Edition\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"UserContextPolicy\" : String,\n      \"UserTokenConfigurations\" : [ UserTokenConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kendra::Index\nProperties:\n  CapacityUnits: \n    CapacityUnitsConfiguration\n  Description: String\n  DocumentMetadataConfigurations: \n    - DocumentMetadataConfiguration\n  Edition: String\n  Name: String\n  RoleArn: String\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  Tags: \n    - Tag\n  UserContextPolicy: String\n  UserTokenConfigurations: \n    - UserTokenConfiguration\n","awsServiceName":"Kendra","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::KendraRanking::ExecutionPlan","awsResourceTypeName":"kendraranking-executionplan","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KendraRanking::ExecutionPlan\",\n  \"Properties\" : {\n      \"CapacityUnits\" : CapacityUnitsConfiguration,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KendraRanking::ExecutionPlan\nProperties:\n  CapacityUnits: \n    CapacityUnitsConfiguration\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"KendraRanking","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Cassandra::Keyspace","awsResourceTypeName":"cassandra-keyspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cassandra::Keyspace\",\n  \"Properties\" : {\n      \"KeyspaceName\" : String,\n      \"ReplicationSpecification\" : ReplicationSpecification,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cassandra::Keyspace\nProperties:\n  KeyspaceName: String\n  ReplicationSpecification: \n    ReplicationSpecification\n  Tags: \n    - Tag\n","awsServiceName":"Cassandra","awsServiceCategory":"other"},{"awsResourceType":"AWS::Cassandra::Table","awsResourceTypeName":"cassandra-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Cassandra::Table\",\n  \"Properties\" : {\n      \"AutoScalingSpecifications\" : AutoScalingSpecification,\n      \"BillingMode\" : BillingMode,\n      \"ClientSideTimestampsEnabled\" : Boolean,\n      \"ClusteringKeyColumns\" : [ ClusteringKeyColumn, ... ],\n      \"DefaultTimeToLive\" : Integer,\n      \"EncryptionSpecification\" : EncryptionSpecification,\n      \"KeyspaceName\" : String,\n      \"PartitionKeyColumns\" : [ Column, ... ],\n      \"PointInTimeRecoveryEnabled\" : Boolean,\n      \"RegularColumns\" : [ Column, ... ],\n      \"ReplicaSpecifications\" : [ ReplicaSpecification, ... ],\n      \"TableName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Cassandra::Table\nProperties:\n  AutoScalingSpecifications: \n    AutoScalingSpecification\n  BillingMode: \n    BillingMode\n  ClientSideTimestampsEnabled: Boolean\n  ClusteringKeyColumns: \n    - ClusteringKeyColumn\n  DefaultTimeToLive: Integer\n  EncryptionSpecification: \n    EncryptionSpecification\n  KeyspaceName: String\n  PartitionKeyColumns: \n    - Column\n  PointInTimeRecoveryEnabled: Boolean\n  RegularColumns: \n    - Column\n  ReplicaSpecifications: \n    - ReplicaSpecification\n  TableName: String\n  Tags: \n    - Tag\n","awsServiceName":"Cassandra","awsServiceCategory":"other"},{"awsResourceType":"AWS::Kinesis::Stream","awsResourceTypeName":"kinesis-stream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kinesis::Stream\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RetentionPeriodHours\" : Integer,\n      \"ShardCount\" : Integer,\n      \"StreamEncryption\" : StreamEncryption,\n      \"StreamModeDetails\" : StreamModeDetails,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kinesis::Stream\nProperties:\n  Name: String\n  RetentionPeriodHours: Integer\n  ShardCount: Integer\n  StreamEncryption: \n    StreamEncryption\n  StreamModeDetails: \n    StreamModeDetails\n  Tags: \n    - Tag\n","awsServiceName":"Kinesis","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::Kinesis::StreamConsumer","awsResourceTypeName":"kinesis-streamconsumer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Kinesis::StreamConsumer\",\n  \"Properties\" : {\n      \"ConsumerName\" : String,\n      \"StreamARN\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Kinesis::StreamConsumer\nProperties:\n  ConsumerName: String\n  StreamARN: String\n","awsServiceName":"Kinesis","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalytics::Application","awsResourceTypeName":"kinesisanalytics-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalytics::Application\",\n  \"Properties\" : {\n      \"ApplicationCode\" : String,\n      \"ApplicationDescription\" : String,\n      \"ApplicationName\" : String,\n      \"Inputs\" : [ Input, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalytics::Application\nProperties:\n  ApplicationCode: String\n  ApplicationDescription: String\n  ApplicationName: String\n  Inputs: \n    - Input\n","awsServiceName":"KinesisAnalytics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalytics::ApplicationOutput","awsResourceTypeName":"kinesisanalytics-applicationoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalytics::ApplicationOutput\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Output\" : Output\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalytics::ApplicationOutput\nProperties:\n  ApplicationName: String\n  Output: \n    Output\n","awsServiceName":"KinesisAnalytics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalytics::ApplicationReferenceDataSource","awsResourceTypeName":"kinesisanalytics-applicationreferencedatasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalytics::ApplicationReferenceDataSource\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"ReferenceDataSource\" : ReferenceDataSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalytics::ApplicationReferenceDataSource\nProperties:\n  ApplicationName: String\n  ReferenceDataSource: \n    ReferenceDataSource\n","awsServiceName":"KinesisAnalytics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::Application","awsResourceTypeName":"kinesisanalyticsv2-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::Application\",\n  \"Properties\" : {\n      \"ApplicationConfiguration\" : ApplicationConfiguration,\n      \"ApplicationDescription\" : String,\n      \"ApplicationMaintenanceConfiguration\" : ApplicationMaintenanceConfiguration,\n      \"ApplicationMode\" : String,\n      \"ApplicationName\" : String,\n      \"RunConfiguration\" : RunConfiguration,\n      \"RuntimeEnvironment\" : String,\n      \"ServiceExecutionRole\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::Application\nProperties:\n  ApplicationConfiguration: \n    ApplicationConfiguration\n  ApplicationDescription: String\n  ApplicationMaintenanceConfiguration: \n    ApplicationMaintenanceConfiguration\n  ApplicationMode: String\n  ApplicationName: String\n  RunConfiguration: \n    RunConfiguration\n  RuntimeEnvironment: String\n  ServiceExecutionRole: String\n  Tags: \n    - Tag\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption","awsResourceTypeName":"kinesisanalyticsv2-applicationcloudwatchloggingoption","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"CloudWatchLoggingOption\" : CloudWatchLoggingOption\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\nProperties:\n  ApplicationName: String\n  CloudWatchLoggingOption: \n    CloudWatchLoggingOption\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::ApplicationOutput","awsResourceTypeName":"kinesisanalyticsv2-applicationoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::ApplicationOutput\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"Output\" : Output\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::ApplicationOutput\nProperties:\n  ApplicationName: String\n  Output: \n    Output\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource","awsResourceTypeName":"kinesisanalyticsv2-applicationreferencedatasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\",\n  \"Properties\" : {\n      \"ApplicationName\" : String,\n      \"ReferenceDataSource\" : ReferenceDataSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\nProperties:\n  ApplicationName: String\n  ReferenceDataSource: \n    ReferenceDataSource\n","awsServiceName":"KinesisAnalyticsV2","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::KinesisFirehose::DeliveryStream","awsResourceTypeName":"kinesisfirehose-deliverystream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisFirehose::DeliveryStream\",\n  \"Properties\" : {\n      \"AmazonOpenSearchServerlessDestinationConfiguration\" : AmazonOpenSearchServerlessDestinationConfiguration,\n      \"AmazonopensearchserviceDestinationConfiguration\" : AmazonopensearchserviceDestinationConfiguration,\n      \"DeliveryStreamEncryptionConfigurationInput\" : DeliveryStreamEncryptionConfigurationInput,\n      \"DeliveryStreamName\" : String,\n      \"DeliveryStreamType\" : String,\n      \"ElasticsearchDestinationConfiguration\" : ElasticsearchDestinationConfiguration,\n      \"ExtendedS3DestinationConfiguration\" : ExtendedS3DestinationConfiguration,\n      \"HttpEndpointDestinationConfiguration\" : HttpEndpointDestinationConfiguration,\n      \"KinesisStreamSourceConfiguration\" : KinesisStreamSourceConfiguration,\n      \"MSKSourceConfiguration\" : MSKSourceConfiguration,\n      \"RedshiftDestinationConfiguration\" : RedshiftDestinationConfiguration,\n      \"S3DestinationConfiguration\" : S3DestinationConfiguration,\n      \"SnowflakeDestinationConfiguration\" : SnowflakeDestinationConfiguration,\n      \"SplunkDestinationConfiguration\" : SplunkDestinationConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisFirehose::DeliveryStream\nProperties:\n  AmazonOpenSearchServerlessDestinationConfiguration: \n    AmazonOpenSearchServerlessDestinationConfiguration\n  AmazonopensearchserviceDestinationConfiguration: \n    AmazonopensearchserviceDestinationConfiguration\n  DeliveryStreamEncryptionConfigurationInput: \n    DeliveryStreamEncryptionConfigurationInput\n  DeliveryStreamName: String\n  DeliveryStreamType: String\n  ElasticsearchDestinationConfiguration: \n    ElasticsearchDestinationConfiguration\n  ExtendedS3DestinationConfiguration: \n    ExtendedS3DestinationConfiguration\n  HttpEndpointDestinationConfiguration: \n    HttpEndpointDestinationConfiguration\n  KinesisStreamSourceConfiguration: \n    KinesisStreamSourceConfiguration\n  MSKSourceConfiguration: \n    MSKSourceConfiguration\n  RedshiftDestinationConfiguration: \n    RedshiftDestinationConfiguration\n  S3DestinationConfiguration: \n    S3DestinationConfiguration\n  SnowflakeDestinationConfiguration: \n    SnowflakeDestinationConfiguration\n  SplunkDestinationConfiguration: \n    SplunkDestinationConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"KinesisFirehose","awsServiceCategory":"other"},{"awsResourceType":"AWS::KinesisVideo::SignalingChannel","awsResourceTypeName":"kinesisvideo-signalingchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisVideo::SignalingChannel\",\n  \"Properties\" : {\n      \"MessageTtlSeconds\" : Integer,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisVideo::SignalingChannel\nProperties:\n  MessageTtlSeconds: Integer\n  Name: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"KinesisVideo","awsServiceCategory":"other"},{"awsResourceType":"AWS::KinesisVideo::Stream","awsResourceTypeName":"kinesisvideo-stream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KinesisVideo::Stream\",\n  \"Properties\" : {\n      \"DataRetentionInHours\" : Integer,\n      \"DeviceName\" : String,\n      \"KmsKeyId\" : String,\n      \"MediaType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KinesisVideo::Stream\nProperties:\n  DataRetentionInHours: Integer\n  DeviceName: String\n  KmsKeyId: String\n  MediaType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"KinesisVideo","awsServiceCategory":"other"},{"awsResourceType":"AWS::KMS::Alias","awsResourceTypeName":"kms-alias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KMS::Alias\",\n  \"Properties\" : {\n      \"AliasName\" : String,\n      \"TargetKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KMS::Alias\nProperties:\n  AliasName: String\n  TargetKeyId: String\n","awsServiceName":"KMS","awsServiceCategory":"other"},{"awsResourceType":"AWS::KMS::Key","awsResourceTypeName":"kms-key","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KMS::Key\",\n  \"Properties\" : {\n      \"BypassPolicyLockoutSafetyCheck\" : Boolean,\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"EnableKeyRotation\" : Boolean,\n      \"KeyPolicy\" : Json,\n      \"KeySpec\" : String,\n      \"KeyUsage\" : String,\n      \"MultiRegion\" : Boolean,\n      \"Origin\" : String,\n      \"PendingWindowInDays\" : Integer,\n      \"RotationPeriodInDays\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KMS::Key\nProperties:\n  BypassPolicyLockoutSafetyCheck: Boolean\n  Description: String\n  Enabled: Boolean\n  EnableKeyRotation: Boolean\n  KeyPolicy: Json\n  KeySpec: String\n  KeyUsage: String\n  MultiRegion: Boolean\n  Origin: String\n  PendingWindowInDays: Integer\n  RotationPeriodInDays: Integer\n  Tags: \n    - Tag\n","awsServiceName":"KMS","awsServiceCategory":"other"},{"awsResourceType":"AWS::KMS::ReplicaKey","awsResourceTypeName":"kms-replicakey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KMS::ReplicaKey\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Enabled\" : Boolean,\n      \"KeyPolicy\" : Json,\n      \"PendingWindowInDays\" : Integer,\n      \"PrimaryKeyArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KMS::ReplicaKey\nProperties:\n  Description: String\n  Enabled: Boolean\n  KeyPolicy: Json\n  PendingWindowInDays: Integer\n  PrimaryKeyArn: String\n  Tags: \n    - Tag\n","awsServiceName":"KMS","awsServiceCategory":"other"},{"awsResourceType":"AWS::LakeFormation::DataCellsFilter","awsResourceTypeName":"lakeformation-datacellsfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::DataCellsFilter\",\n  \"Properties\" : {\n      \"ColumnNames\" : [ String, ... ],\n      \"ColumnWildcard\" : ColumnWildcard,\n      \"DatabaseName\" : String,\n      \"Name\" : String,\n      \"RowFilter\" : RowFilter,\n      \"TableCatalogId\" : String,\n      \"TableName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::DataCellsFilter\nProperties:\n  ColumnNames: \n    - String\n  ColumnWildcard: \n    ColumnWildcard\n  DatabaseName: String\n  Name: String\n  RowFilter: \n    RowFilter\n  TableCatalogId: String\n  TableName: String\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::DataLakeSettings","awsResourceTypeName":"lakeformation-datalakesettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::DataLakeSettings\",\n  \"Properties\" : {\n      \"Admins\" : [ DataLakePrincipal, ... ],\n      \"AllowExternalDataFiltering\" : Boolean,\n      \"AllowFullTableExternalDataAccess\" : Boolean,\n      \"AuthorizedSessionTagValueList\" : [ String, ... ],\n      \"CreateDatabaseDefaultPermissions\" : [ PrincipalPermissions, ... ],\n      \"CreateTableDefaultPermissions\" : [ PrincipalPermissions, ... ],\n      \"ExternalDataFilteringAllowList\" : [ DataLakePrincipal, ... ],\n      \"MutationType\" : String,\n      \"Parameters\" : Json,\n      \"TrustedResourceOwners\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::DataLakeSettings\nProperties:\n  Admins: \n    - DataLakePrincipal\n  AllowExternalDataFiltering: Boolean\n  AllowFullTableExternalDataAccess: Boolean\n  AuthorizedSessionTagValueList: \n    - String\n  CreateDatabaseDefaultPermissions: \n    - PrincipalPermissions\n  CreateTableDefaultPermissions: \n    - PrincipalPermissions\n  ExternalDataFilteringAllowList: \n    - DataLakePrincipal\n  MutationType: String\n  Parameters: Json\n  TrustedResourceOwners: \n    - String\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::Permissions","awsResourceTypeName":"lakeformation-permissions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::Permissions\",\n  \"Properties\" : {\n      \"DataLakePrincipal\" : DataLakePrincipal,\n      \"Permissions\" : [ String, ... ],\n      \"PermissionsWithGrantOption\" : [ String, ... ],\n      \"Resource\" : Resource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::Permissions\nProperties:\n  DataLakePrincipal: \n    DataLakePrincipal\n  Permissions: \n    - String\n  PermissionsWithGrantOption: \n    - String\n  Resource: \n    Resource\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::PrincipalPermissions","awsResourceTypeName":"lakeformation-principalpermissions","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::PrincipalPermissions\",\n  \"Properties\" : {\n      \"Catalog\" : String,\n      \"Permissions\" : [ String, ... ],\n      \"PermissionsWithGrantOption\" : [ String, ... ],\n      \"Principal\" : DataLakePrincipal,\n      \"Resource\" : Resource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::PrincipalPermissions\nProperties:\n  Catalog: String\n  Permissions: \n    - String\n  PermissionsWithGrantOption: \n    - String\n  Principal: \n    DataLakePrincipal\n  Resource: \n    Resource\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::Resource","awsResourceTypeName":"lakeformation-resource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::Resource\",\n  \"Properties\" : {\n      \"HybridAccessEnabled\" : Boolean,\n      \"ResourceArn\" : String,\n      \"RoleArn\" : String,\n      \"UseServiceLinkedRole\" : Boolean,\n      \"WithFederation\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::Resource\nProperties:\n  HybridAccessEnabled: Boolean\n  ResourceArn: String\n  RoleArn: String\n  UseServiceLinkedRole: Boolean\n  WithFederation: Boolean\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::Tag","awsResourceTypeName":"lakeformation-tag","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::Tag\",\n  \"Properties\" : {\n      \"CatalogId\" : String,\n      \"TagKey\" : String,\n      \"TagValues\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::Tag\nProperties:\n  CatalogId: String\n  TagKey: String\n  TagValues: \n    - String\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::LakeFormation::TagAssociation","awsResourceTypeName":"lakeformation-tagassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LakeFormation::TagAssociation\",\n  \"Properties\" : {\n      \"LFTags\" : [ LFTagPair, ... ],\n      \"Resource\" : Resource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LakeFormation::TagAssociation\nProperties:\n  LFTags: \n    - LFTagPair\n  Resource: \n    Resource\n","awsServiceName":"LakeFormation","awsServiceCategory":"database"},{"awsResourceType":"AWS::Lambda::Alias","awsResourceTypeName":"lambda-alias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Alias\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FunctionName\" : String,\n      \"FunctionVersion\" : String,\n      \"Name\" : String,\n      \"ProvisionedConcurrencyConfig\" : ProvisionedConcurrencyConfiguration,\n      \"RoutingConfig\" : AliasRoutingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Alias\nProperties:\n  Description: String\n  FunctionName: String\n  FunctionVersion: String\n  Name: String\n  ProvisionedConcurrencyConfig: \n    ProvisionedConcurrencyConfiguration\n  RoutingConfig: \n    AliasRoutingConfiguration\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::CodeSigningConfig","awsResourceTypeName":"lambda-codesigningconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::CodeSigningConfig\",\n  \"Properties\" : {\n      \"AllowedPublishers\" : AllowedPublishers,\n      \"CodeSigningPolicies\" : CodeSigningPolicies,\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::CodeSigningConfig\nProperties:\n  AllowedPublishers: \n    AllowedPublishers\n  CodeSigningPolicies: \n    CodeSigningPolicies\n  Description: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::EventInvokeConfig","awsResourceTypeName":"lambda-eventinvokeconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::EventInvokeConfig\",\n  \"Properties\" : {\n      \"DestinationConfig\" : DestinationConfig,\n      \"FunctionName\" : String,\n      \"MaximumEventAgeInSeconds\" : Integer,\n      \"MaximumRetryAttempts\" : Integer,\n      \"Qualifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::EventInvokeConfig\nProperties:\n  DestinationConfig: \n    DestinationConfig\n  FunctionName: String\n  MaximumEventAgeInSeconds: Integer\n  MaximumRetryAttempts: Integer\n  Qualifier: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::EventSourceMapping","awsResourceTypeName":"lambda-eventsourcemapping","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::EventSourceMapping\",\n  \"Properties\" : {\n      \"AmazonManagedKafkaEventSourceConfig\" : AmazonManagedKafkaEventSourceConfig,\n      \"BatchSize\" : Integer,\n      \"BisectBatchOnFunctionError\" : Boolean,\n      \"DestinationConfig\" : DestinationConfig,\n      \"DocumentDBEventSourceConfig\" : DocumentDBEventSourceConfig,\n      \"Enabled\" : Boolean,\n      \"EventSourceArn\" : String,\n      \"FilterCriteria\" : FilterCriteria,\n      \"FunctionName\" : String,\n      \"FunctionResponseTypes\" : [ String, ... ],\n      \"MaximumBatchingWindowInSeconds\" : Integer,\n      \"MaximumRecordAgeInSeconds\" : Integer,\n      \"MaximumRetryAttempts\" : Integer,\n      \"ParallelizationFactor\" : Integer,\n      \"Queues\" : [ String, ... ],\n      \"ScalingConfig\" : ScalingConfig,\n      \"SelfManagedEventSource\" : SelfManagedEventSource,\n      \"SelfManagedKafkaEventSourceConfig\" : SelfManagedKafkaEventSourceConfig,\n      \"SourceAccessConfigurations\" : [ SourceAccessConfiguration, ... ],\n      \"StartingPosition\" : String,\n      \"StartingPositionTimestamp\" : Number,\n      \"Topics\" : [ String, ... ],\n      \"TumblingWindowInSeconds\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::EventSourceMapping\nProperties:\n  AmazonManagedKafkaEventSourceConfig: \n    AmazonManagedKafkaEventSourceConfig\n  BatchSize: Integer\n  BisectBatchOnFunctionError: Boolean\n  DestinationConfig: \n    DestinationConfig\n  DocumentDBEventSourceConfig: \n    DocumentDBEventSourceConfig\n  Enabled: Boolean\n  EventSourceArn: String\n  FilterCriteria: \n    FilterCriteria\n  FunctionName: String\n  FunctionResponseTypes: \n    - String\n  MaximumBatchingWindowInSeconds: Integer\n  MaximumRecordAgeInSeconds: Integer\n  MaximumRetryAttempts: Integer\n  ParallelizationFactor: Integer\n  Queues: \n    - String\n  ScalingConfig: \n    ScalingConfig\n  SelfManagedEventSource: \n    SelfManagedEventSource\n  SelfManagedKafkaEventSourceConfig: \n    SelfManagedKafkaEventSourceConfig\n  SourceAccessConfigurations: \n    - SourceAccessConfiguration\n  StartingPosition: String\n  StartingPositionTimestamp: Number\n  Topics: \n    - String\n  TumblingWindowInSeconds: Integer\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Function","awsResourceTypeName":"lambda-function","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Function\",\n  \"Properties\" : {\n      \"Architectures\" : [ String, ... ],\n      \"Code\" : Code,\n      \"CodeSigningConfigArn\" : String,\n      \"DeadLetterConfig\" : DeadLetterConfig,\n      \"Description\" : String,\n      \"Environment\" : Environment,\n      \"EphemeralStorage\" : EphemeralStorage,\n      \"FileSystemConfigs\" : [ FileSystemConfig, ... ],\n      \"FunctionName\" : String,\n      \"Handler\" : String,\n      \"ImageConfig\" : ImageConfig,\n      \"KmsKeyArn\" : String,\n      \"Layers\" : [ String, ... ],\n      \"LoggingConfig\" : LoggingConfig,\n      \"MemorySize\" : Integer,\n      \"PackageType\" : String,\n      \"ReservedConcurrentExecutions\" : Integer,\n      \"Role\" : String,\n      \"Runtime\" : String,\n      \"RuntimeManagementConfig\" : RuntimeManagementConfig,\n      \"SnapStart\" : SnapStart,\n      \"Tags\" : [ Tag, ... ],\n      \"Timeout\" : Integer,\n      \"TracingConfig\" : TracingConfig,\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Function\nProperties:\n  Architectures: \n    - String\n  Code: \n    Code\n  CodeSigningConfigArn: String\n  DeadLetterConfig: \n    DeadLetterConfig\n  Description: String\n  Environment: \n    Environment\n  EphemeralStorage: \n    EphemeralStorage\n  FileSystemConfigs: \n    - FileSystemConfig\n  FunctionName: String\n  Handler: String\n  ImageConfig: \n    ImageConfig\n  KmsKeyArn: String\n  Layers: \n    - String\n  LoggingConfig: \n    LoggingConfig\n  MemorySize: Integer\n  PackageType: String\n  ReservedConcurrentExecutions: Integer\n  Role: String\n  Runtime: String\n  RuntimeManagementConfig: \n    RuntimeManagementConfig\n  SnapStart: \n    SnapStart\n  Tags: \n    - Tag\n  Timeout: Integer\n  TracingConfig: \n    TracingConfig\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::LayerVersion","awsResourceTypeName":"lambda-layerversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::LayerVersion\",\n  \"Properties\" : {\n      \"CompatibleArchitectures\" : [ String, ... ],\n      \"CompatibleRuntimes\" : [ String, ... ],\n      \"Content\" : Content,\n      \"Description\" : String,\n      \"LayerName\" : String,\n      \"LicenseInfo\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::LayerVersion\nProperties:\n  CompatibleArchitectures: \n    - String\n  CompatibleRuntimes: \n    - String\n  Content: \n    Content\n  Description: String\n  LayerName: String\n  LicenseInfo: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::LayerVersionPermission","awsResourceTypeName":"lambda-layerversionpermission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::LayerVersionPermission\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"LayerVersionArn\" : String,\n      \"OrganizationId\" : String,\n      \"Principal\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::LayerVersionPermission\nProperties:\n  Action: String\n  LayerVersionArn: String\n  OrganizationId: String\n  Principal: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Permission","awsResourceTypeName":"lambda-permission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Permission\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"EventSourceToken\" : String,\n      \"FunctionName\" : String,\n      \"FunctionUrlAuthType\" : String,\n      \"Principal\" : String,\n      \"PrincipalOrgID\" : String,\n      \"SourceAccount\" : String,\n      \"SourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Permission\nProperties:\n  Action: String\n  EventSourceToken: String\n  FunctionName: String\n  FunctionUrlAuthType: String\n  Principal: String\n  PrincipalOrgID: String\n  SourceAccount: String\n  SourceArn: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Url","awsResourceTypeName":"lambda-url","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Url\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"Cors\" : Cors,\n      \"InvokeMode\" : String,\n      \"Qualifier\" : String,\n      \"TargetFunctionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Url\nProperties:\n  AuthType: String\n  Cors: \n    Cors\n  InvokeMode: String\n  Qualifier: String\n  TargetFunctionArn: String\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lambda::Version","awsResourceTypeName":"lambda-version","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lambda::Version\",\n  \"Properties\" : {\n      \"CodeSha256\" : String,\n      \"Description\" : String,\n      \"FunctionName\" : String,\n      \"ProvisionedConcurrencyConfig\" : ProvisionedConcurrencyConfiguration,\n      \"RuntimePolicy\" : RuntimePolicy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lambda::Version\nProperties:\n  CodeSha256: String\n  Description: String\n  FunctionName: String\n  ProvisionedConcurrencyConfig: \n    ProvisionedConcurrencyConfiguration\n  RuntimePolicy: \n    RuntimePolicy\n","awsServiceName":"Lambda","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lex::Bot","awsResourceTypeName":"lex-bot","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::Bot\",\n  \"Properties\" : {\n      \"AutoBuildBotLocales\" : Boolean,\n      \"BotFileS3Location\" : S3Location,\n      \"BotLocales\" : [ BotLocale, ... ],\n      \"BotTags\" : [ Tag, ... ],\n      \"DataPrivacy\" : DataPrivacy,\n      \"Description\" : String,\n      \"IdleSessionTTLInSeconds\" : Integer,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"TestBotAliasSettings\" : TestBotAliasSettings,\n      \"TestBotAliasTags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::Bot\nProperties:\n  AutoBuildBotLocales: Boolean\n  BotFileS3Location: \n    S3Location\n  BotLocales: \n    - BotLocale\n  BotTags: \n    - Tag\n  DataPrivacy: \n    DataPrivacy\n  Description: String\n  IdleSessionTTLInSeconds: Integer\n  Name: String\n  RoleArn: String\n  TestBotAliasSettings: \n    TestBotAliasSettings\n  TestBotAliasTags: \n    - Tag\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Lex::BotAlias","awsResourceTypeName":"lex-botalias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::BotAlias\",\n  \"Properties\" : {\n      \"BotAliasLocaleSettings\" : [ BotAliasLocaleSettingsItem, ... ],\n      \"BotAliasName\" : String,\n      \"BotAliasTags\" : [ Tag, ... ],\n      \"BotId\" : String,\n      \"BotVersion\" : String,\n      \"ConversationLogSettings\" : ConversationLogSettings,\n      \"Description\" : String,\n      \"SentimentAnalysisSettings\" : SentimentAnalysisSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::BotAlias\nProperties:\n  BotAliasLocaleSettings: \n    - BotAliasLocaleSettingsItem\n  BotAliasName: String\n  BotAliasTags: \n    - Tag\n  BotId: String\n  BotVersion: String\n  ConversationLogSettings: \n    ConversationLogSettings\n  Description: String\n  SentimentAnalysisSettings: \n    SentimentAnalysisSettings\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Lex::BotVersion","awsResourceTypeName":"lex-botversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::BotVersion\",\n  \"Properties\" : {\n      \"BotId\" : String,\n      \"BotVersionLocaleSpecification\" : [ BotVersionLocaleSpecification, ... ],\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::BotVersion\nProperties:\n  BotId: String\n  BotVersionLocaleSpecification: \n    - BotVersionLocaleSpecification\n  Description: String\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Lex::ResourcePolicy","awsResourceTypeName":"lex-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lex::ResourcePolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lex::ResourcePolicy\nProperties:\n  Policy: Json\n  ResourceArn: String\n","awsServiceName":"Lex","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::LicenseManager::Grant","awsResourceTypeName":"licensemanager-grant","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LicenseManager::Grant\",\n  \"Properties\" : {\n      \"AllowedOperations\" : [ String, ... ],\n      \"GrantName\" : String,\n      \"HomeRegion\" : String,\n      \"LicenseArn\" : String,\n      \"Principals\" : [ String, ... ],\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LicenseManager::Grant\nProperties:\n  AllowedOperations: \n    - String\n  GrantName: String\n  HomeRegion: String\n  LicenseArn: String\n  Principals: \n    - String\n  Status: String\n","awsServiceName":"LicenseManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::LicenseManager::License","awsResourceTypeName":"licensemanager-license","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LicenseManager::License\",\n  \"Properties\" : {\n      \"Beneficiary\" : String,\n      \"ConsumptionConfiguration\" : ConsumptionConfiguration,\n      \"Entitlements\" : [ Entitlement, ... ],\n      \"HomeRegion\" : String,\n      \"Issuer\" : IssuerData,\n      \"LicenseMetadata\" : [ Metadata, ... ],\n      \"LicenseName\" : String,\n      \"ProductName\" : String,\n      \"ProductSKU\" : String,\n      \"Status\" : String,\n      \"Validity\" : ValidityDateFormat\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LicenseManager::License\nProperties:\n  Beneficiary: String\n  ConsumptionConfiguration: \n    ConsumptionConfiguration\n  Entitlements: \n    - Entitlement\n  HomeRegion: String\n  Issuer: \n    IssuerData\n  LicenseMetadata: \n    - Metadata\n  LicenseName: String\n  ProductName: String\n  ProductSKU: String\n  Status: String\n  Validity: \n    ValidityDateFormat\n","awsServiceName":"LicenseManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::Lightsail::Alarm","awsResourceTypeName":"lightsail-alarm","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Alarm\",\n  \"Properties\" : {\n      \"AlarmName\" : String,\n      \"ComparisonOperator\" : String,\n      \"ContactProtocols\" : [ String, ... ],\n      \"DatapointsToAlarm\" : Integer,\n      \"EvaluationPeriods\" : Integer,\n      \"MetricName\" : String,\n      \"MonitoredResourceName\" : String,\n      \"NotificationEnabled\" : Boolean,\n      \"NotificationTriggers\" : [ String, ... ],\n      \"Threshold\" : Number,\n      \"TreatMissingData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Alarm\nProperties:\n  AlarmName: String\n  ComparisonOperator: String\n  ContactProtocols: \n    - String\n  DatapointsToAlarm: Integer\n  EvaluationPeriods: Integer\n  MetricName: String\n  MonitoredResourceName: String\n  NotificationEnabled: Boolean\n  NotificationTriggers: \n    - String\n  Threshold: Number\n  TreatMissingData: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Bucket","awsResourceTypeName":"lightsail-bucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Bucket\",\n  \"Properties\" : {\n      \"AccessRules\" : AccessRules,\n      \"BucketName\" : String,\n      \"BundleId\" : String,\n      \"ObjectVersioning\" : Boolean,\n      \"ReadOnlyAccessAccounts\" : [ String, ... ],\n      \"ResourcesReceivingAccess\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Bucket\nProperties:\n  AccessRules: \n    AccessRules\n  BucketName: String\n  BundleId: String\n  ObjectVersioning: Boolean\n  ReadOnlyAccessAccounts: \n    - String\n  ResourcesReceivingAccess: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Certificate","awsResourceTypeName":"lightsail-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Certificate\",\n  \"Properties\" : {\n      \"CertificateName\" : String,\n      \"DomainName\" : String,\n      \"SubjectAlternativeNames\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Certificate\nProperties:\n  CertificateName: String\n  DomainName: String\n  SubjectAlternativeNames: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Container","awsResourceTypeName":"lightsail-container","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Container\",\n  \"Properties\" : {\n      \"ContainerServiceDeployment\" : ContainerServiceDeployment,\n      \"IsDisabled\" : Boolean,\n      \"Power\" : String,\n      \"PrivateRegistryAccess\" : PrivateRegistryAccess,\n      \"PublicDomainNames\" : [ PublicDomainName, ... ],\n      \"Scale\" : Integer,\n      \"ServiceName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Container\nProperties:\n  ContainerServiceDeployment: \n    ContainerServiceDeployment\n  IsDisabled: Boolean\n  Power: String\n  PrivateRegistryAccess: \n    PrivateRegistryAccess\n  PublicDomainNames: \n    - PublicDomainName\n  Scale: Integer\n  ServiceName: String\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Database","awsResourceTypeName":"lightsail-database","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Database\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"BackupRetention\" : Boolean,\n      \"CaCertificateIdentifier\" : String,\n      \"MasterDatabaseName\" : String,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"RelationalDatabaseBlueprintId\" : String,\n      \"RelationalDatabaseBundleId\" : String,\n      \"RelationalDatabaseName\" : String,\n      \"RelationalDatabaseParameters\" : [ RelationalDatabaseParameter, ... ],\n      \"RotateMasterUserPassword\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Database\nProperties:\n  AvailabilityZone: String\n  BackupRetention: Boolean\n  CaCertificateIdentifier: String\n  MasterDatabaseName: String\n  MasterUsername: String\n  MasterUserPassword: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  RelationalDatabaseBlueprintId: String\n  RelationalDatabaseBundleId: String\n  RelationalDatabaseName: String\n  RelationalDatabaseParameters: \n    - RelationalDatabaseParameter\n  RotateMasterUserPassword: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Disk","awsResourceTypeName":"lightsail-disk","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Disk\",\n  \"Properties\" : {\n      \"AddOns\" : [ AddOn, ... ],\n      \"AvailabilityZone\" : String,\n      \"DiskName\" : String,\n      \"Location\" : Location,\n      \"SizeInGb\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Disk\nProperties:\n  AddOns: \n    - AddOn\n  AvailabilityZone: String\n  DiskName: String\n  Location: \n    Location\n  SizeInGb: Integer\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Distribution","awsResourceTypeName":"lightsail-distribution","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Distribution\",\n  \"Properties\" : {\n      \"BundleId\" : String,\n      \"CacheBehaviors\" : [ CacheBehaviorPerPath, ... ],\n      \"CacheBehaviorSettings\" : CacheSettings,\n      \"CertificateName\" : String,\n      \"DefaultCacheBehavior\" : CacheBehavior,\n      \"DistributionName\" : String,\n      \"IpAddressType\" : String,\n      \"IsEnabled\" : Boolean,\n      \"Origin\" : InputOrigin,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Distribution\nProperties:\n  BundleId: String\n  CacheBehaviors: \n    - CacheBehaviorPerPath\n  CacheBehaviorSettings: \n    CacheSettings\n  CertificateName: String\n  DefaultCacheBehavior: \n    CacheBehavior\n  DistributionName: String\n  IpAddressType: String\n  IsEnabled: Boolean\n  Origin: \n    InputOrigin\n  Tags: \n    - Tag\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::Instance","awsResourceTypeName":"lightsail-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::Instance\",\n  \"Properties\" : {\n      \"AddOns\" : [ AddOn, ... ],\n      \"AvailabilityZone\" : String,\n      \"BlueprintId\" : String,\n      \"BundleId\" : String,\n      \"Hardware\" : Hardware,\n      \"InstanceName\" : String,\n      \"KeyPairName\" : String,\n      \"Location\" : Location,\n      \"Networking\" : Networking,\n      \"State\" : State,\n      \"Tags\" : [ Tag, ... ],\n      \"UserData\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::Instance\nProperties:\n  AddOns: \n    - AddOn\n  AvailabilityZone: String\n  BlueprintId: String\n  BundleId: String\n  Hardware: \n    Hardware\n  InstanceName: String\n  KeyPairName: String\n  Location: \n    Location\n  Networking: \n    Networking\n  State: \n    State\n  Tags: \n    - Tag\n  UserData: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::LoadBalancer","awsResourceTypeName":"lightsail-loadbalancer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::LoadBalancer\",\n  \"Properties\" : {\n      \"AttachedInstances\" : [ String, ... ],\n      \"HealthCheckPath\" : String,\n      \"InstancePort\" : Integer,\n      \"IpAddressType\" : String,\n      \"LoadBalancerName\" : String,\n      \"SessionStickinessEnabled\" : Boolean,\n      \"SessionStickinessLBCookieDurationSeconds\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TlsPolicyName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::LoadBalancer\nProperties:\n  AttachedInstances: \n    - String\n  HealthCheckPath: String\n  InstancePort: Integer\n  IpAddressType: String\n  LoadBalancerName: String\n  SessionStickinessEnabled: Boolean\n  SessionStickinessLBCookieDurationSeconds: String\n  Tags: \n    - Tag\n  TlsPolicyName: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::LoadBalancerTlsCertificate","awsResourceTypeName":"lightsail-loadbalancertlscertificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::LoadBalancerTlsCertificate\",\n  \"Properties\" : {\n      \"CertificateAlternativeNames\" : [ String, ... ],\n      \"CertificateDomainName\" : String,\n      \"CertificateName\" : String,\n      \"HttpsRedirectionEnabled\" : Boolean,\n      \"IsAttached\" : Boolean,\n      \"LoadBalancerName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::LoadBalancerTlsCertificate\nProperties:\n  CertificateAlternativeNames: \n    - String\n  CertificateDomainName: String\n  CertificateName: String\n  HttpsRedirectionEnabled: Boolean\n  IsAttached: Boolean\n  LoadBalancerName: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Lightsail::StaticIp","awsResourceTypeName":"lightsail-staticip","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Lightsail::StaticIp\",\n  \"Properties\" : {\n      \"AttachedTo\" : String,\n      \"StaticIpName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Lightsail::StaticIp\nProperties:\n  AttachedTo: String\n  StaticIpName: String\n","awsServiceName":"Lightsail","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Location::APIKey","awsResourceTypeName":"location-apikey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::APIKey\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ExpireTime\" : String,\n      \"ForceDelete\" : Boolean,\n      \"ForceUpdate\" : Boolean,\n      \"KeyName\" : String,\n      \"NoExpiry\" : Boolean,\n      \"Restrictions\" : ApiKeyRestrictions,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::APIKey\nProperties:\n  Description: String\n  ExpireTime: String\n  ForceDelete: Boolean\n  ForceUpdate: Boolean\n  KeyName: String\n  NoExpiry: Boolean\n  Restrictions: \n    ApiKeyRestrictions\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::GeofenceCollection","awsResourceTypeName":"location-geofencecollection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::GeofenceCollection\",\n  \"Properties\" : {\n      \"CollectionName\" : String,\n      \"Description\" : String,\n      \"KmsKeyId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::GeofenceCollection\nProperties:\n  CollectionName: String\n  Description: String\n  KmsKeyId: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::Map","awsResourceTypeName":"location-map","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::Map\",\n  \"Properties\" : {\n      \"Configuration\" : MapConfiguration,\n      \"Description\" : String,\n      \"MapName\" : String,\n      \"PricingPlan\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::Map\nProperties:\n  Configuration: \n    MapConfiguration\n  Description: String\n  MapName: String\n  PricingPlan: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::PlaceIndex","awsResourceTypeName":"location-placeindex","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::PlaceIndex\",\n  \"Properties\" : {\n      \"DataSource\" : String,\n      \"DataSourceConfiguration\" : DataSourceConfiguration,\n      \"Description\" : String,\n      \"IndexName\" : String,\n      \"PricingPlan\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::PlaceIndex\nProperties:\n  DataSource: String\n  DataSourceConfiguration: \n    DataSourceConfiguration\n  Description: String\n  IndexName: String\n  PricingPlan: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::RouteCalculator","awsResourceTypeName":"location-routecalculator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::RouteCalculator\",\n  \"Properties\" : {\n      \"CalculatorName\" : String,\n      \"DataSource\" : String,\n      \"Description\" : String,\n      \"PricingPlan\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::RouteCalculator\nProperties:\n  CalculatorName: String\n  DataSource: String\n  Description: String\n  PricingPlan: String\n  Tags: \n    - Tag\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::Tracker","awsResourceTypeName":"location-tracker","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::Tracker\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventBridgeEnabled\" : Boolean,\n      \"KmsKeyEnableGeospatialQueries\" : Boolean,\n      \"KmsKeyId\" : String,\n      \"PositionFiltering\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrackerName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::Tracker\nProperties:\n  Description: String\n  EventBridgeEnabled: Boolean\n  KmsKeyEnableGeospatialQueries: Boolean\n  KmsKeyId: String\n  PositionFiltering: String\n  Tags: \n    - Tag\n  TrackerName: String\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::Location::TrackerConsumer","awsResourceTypeName":"location-trackerconsumer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Location::TrackerConsumer\",\n  \"Properties\" : {\n      \"ConsumerArn\" : String,\n      \"TrackerName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Location::TrackerConsumer\nProperties:\n  ConsumerArn: String\n  TrackerName: String\n","awsServiceName":"Location","awsServiceCategory":"other"},{"awsResourceType":"AWS::LookoutEquipment::InferenceScheduler","awsResourceTypeName":"lookoutequipment-inferencescheduler","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutEquipment::InferenceScheduler\",\n  \"Properties\" : {\n      \"DataDelayOffsetInMinutes\" : Integer,\n      \"DataInputConfiguration\" : DataInputConfiguration,\n      \"DataOutputConfiguration\" : DataOutputConfiguration,\n      \"DataUploadFrequency\" : String,\n      \"InferenceSchedulerName\" : String,\n      \"ModelName\" : String,\n      \"RoleArn\" : String,\n      \"ServerSideKmsKeyId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutEquipment::InferenceScheduler\nProperties:\n  DataDelayOffsetInMinutes: Integer\n  DataInputConfiguration: \n    DataInputConfiguration\n  DataOutputConfiguration: \n    DataOutputConfiguration\n  DataUploadFrequency: String\n  InferenceSchedulerName: String\n  ModelName: String\n  RoleArn: String\n  ServerSideKmsKeyId: String\n  Tags: \n    - Tag\n","awsServiceName":"LookoutEquipment","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::LookoutMetrics::Alert","awsResourceTypeName":"lookoutmetrics-alert","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutMetrics::Alert\",\n  \"Properties\" : {\n      \"Action\" : Action,\n      \"AlertDescription\" : String,\n      \"AlertName\" : String,\n      \"AlertSensitivityThreshold\" : Integer,\n      \"AnomalyDetectorArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutMetrics::Alert\nProperties:\n  Action: \n    Action\n  AlertDescription: String\n  AlertName: String\n  AlertSensitivityThreshold: Integer\n  AnomalyDetectorArn: String\n","awsServiceName":"LookoutMetrics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::LookoutMetrics::AnomalyDetector","awsResourceTypeName":"lookoutmetrics-anomalydetector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutMetrics::AnomalyDetector\",\n  \"Properties\" : {\n      \"AnomalyDetectorConfig\" : AnomalyDetectorConfig,\n      \"AnomalyDetectorDescription\" : String,\n      \"AnomalyDetectorName\" : String,\n      \"KmsKeyArn\" : String,\n      \"MetricSetList\" : [ MetricSet, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutMetrics::AnomalyDetector\nProperties:\n  AnomalyDetectorConfig: \n    AnomalyDetectorConfig\n  AnomalyDetectorDescription: String\n  AnomalyDetectorName: String\n  KmsKeyArn: String\n  MetricSetList: \n    - MetricSet\n","awsServiceName":"LookoutMetrics","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::LookoutVision::Project","awsResourceTypeName":"lookoutvision-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::LookoutVision::Project\",\n  \"Properties\" : {\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::LookoutVision::Project\nProperties:\n  ProjectName: String\n","awsServiceName":"LookoutVision","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::M2::Application","awsResourceTypeName":"m2-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::M2::Application\",\n  \"Properties\" : {\n      \"Definition\" : Definition,\n      \"Description\" : String,\n      \"EngineType\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::M2::Application\nProperties:\n  Definition: \n    Definition\n  Description: String\n  EngineType: String\n  KmsKeyId: String\n  Name: String\n  RoleArn: String\n  Tags: \n    Key: Value\n","awsServiceName":"M2","awsServiceCategory":"other"},{"awsResourceType":"AWS::M2::Environment","awsResourceTypeName":"m2-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::M2::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EngineType\" : String,\n      \"EngineVersion\" : String,\n      \"HighAvailabilityConfig\" : HighAvailabilityConfig,\n      \"InstanceType\" : String,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"StorageConfigurations\" : [ StorageConfiguration, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::M2::Environment\nProperties:\n  Description: String\n  EngineType: String\n  EngineVersion: String\n  HighAvailabilityConfig: \n    HighAvailabilityConfig\n  InstanceType: String\n  KmsKeyId: String\n  Name: String\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  SecurityGroupIds: \n    - String\n  StorageConfigurations: \n    - StorageConfiguration\n  SubnetIds: \n    - String\n  Tags: \n    Key: Value\n","awsServiceName":"M2","awsServiceCategory":"other"},{"awsResourceType":"AWS::Macie::AllowList","awsResourceTypeName":"macie-allowlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::AllowList\",\n  \"Properties\" : {\n      \"Criteria\" : Criteria,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::AllowList\nProperties:\n  Criteria: \n    Criteria\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::Macie::CustomDataIdentifier","awsResourceTypeName":"macie-customdataidentifier","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::CustomDataIdentifier\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"IgnoreWords\" : [ String, ... ],\n      \"Keywords\" : [ String, ... ],\n      \"MaximumMatchDistance\" : Integer,\n      \"Name\" : String,\n      \"Regex\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::CustomDataIdentifier\nProperties:\n  Description: String\n  IgnoreWords: \n    - String\n  Keywords: \n    - String\n  MaximumMatchDistance: Integer\n  Name: String\n  Regex: String\n  Tags: \n    - Tag\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::Macie::FindingsFilter","awsResourceTypeName":"macie-findingsfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::FindingsFilter\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Description\" : String,\n      \"FindingCriteria\" : FindingCriteria,\n      \"Name\" : String,\n      \"Position\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::FindingsFilter\nProperties:\n  Action: String\n  Description: String\n  FindingCriteria: \n    FindingCriteria\n  Name: String\n  Position: Integer\n  Tags: \n    - Tag\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::Macie::Session","awsResourceTypeName":"macie-session","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Macie::Session\",\n  \"Properties\" : {\n      \"FindingPublishingFrequency\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Macie::Session\nProperties:\n  FindingPublishingFrequency: String\n  Status: String\n","awsServiceName":"Macie","awsServiceCategory":"security"},{"awsResourceType":"AWS::ManagedBlockchain::Accessor","awsResourceTypeName":"managedblockchain-accessor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ManagedBlockchain::Accessor\",\n  \"Properties\" : {\n      \"AccessorType\" : String,\n      \"NetworkType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ManagedBlockchain::Accessor\nProperties:\n  AccessorType: String\n  NetworkType: String\n  Tags: \n    - Tag\n","awsServiceName":"ManagedBlockchain","awsServiceCategory":"blockchain"},{"awsResourceType":"AWS::ManagedBlockchain::Member","awsResourceTypeName":"managedblockchain-member","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ManagedBlockchain::Member\",\n  \"Properties\" : {\n      \"InvitationId\" : String,\n      \"MemberConfiguration\" : MemberConfiguration,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"NetworkId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ManagedBlockchain::Member\nProperties:\n  InvitationId: String\n  MemberConfiguration: \n    MemberConfiguration\n  NetworkConfiguration: \n    NetworkConfiguration\n  NetworkId: String\n","awsServiceName":"ManagedBlockchain","awsServiceCategory":"blockchain"},{"awsResourceType":"AWS::ManagedBlockchain::Node","awsResourceTypeName":"managedblockchain-node","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ManagedBlockchain::Node\",\n  \"Properties\" : {\n      \"MemberId\" : String,\n      \"NetworkId\" : String,\n      \"NodeConfiguration\" : NodeConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ManagedBlockchain::Node\nProperties:\n  MemberId: String\n  NetworkId: String\n  NodeConfiguration: \n    NodeConfiguration\n","awsServiceName":"ManagedBlockchain","awsServiceCategory":"blockchain"},{"awsResourceType":"AWS::MediaConnect::Bridge","awsResourceTypeName":"mediaconnect-bridge","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::Bridge\",\n  \"Properties\" : {\n      \"EgressGatewayBridge\" : EgressGatewayBridge,\n      \"IngressGatewayBridge\" : IngressGatewayBridge,\n      \"Name\" : String,\n      \"Outputs\" : [ BridgeOutput, ... ],\n      \"PlacementArn\" : String,\n      \"SourceFailoverConfig\" : FailoverConfig,\n      \"Sources\" : [ BridgeSource, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::Bridge\nProperties:\n  EgressGatewayBridge: \n    EgressGatewayBridge\n  IngressGatewayBridge: \n    IngressGatewayBridge\n  Name: String\n  Outputs: \n    - BridgeOutput\n  PlacementArn: String\n  SourceFailoverConfig: \n    FailoverConfig\n  Sources: \n    - BridgeSource\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::BridgeOutput","awsResourceTypeName":"mediaconnect-bridgeoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::BridgeOutput\",\n  \"Properties\" : {\n      \"BridgeArn\" : String,\n      \"Name\" : String,\n      \"NetworkOutput\" : BridgeNetworkOutput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::BridgeOutput\nProperties:\n  BridgeArn: String\n  Name: String\n  NetworkOutput: \n    BridgeNetworkOutput\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::BridgeSource","awsResourceTypeName":"mediaconnect-bridgesource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::BridgeSource\",\n  \"Properties\" : {\n      \"BridgeArn\" : String,\n      \"FlowSource\" : BridgeFlowSource,\n      \"Name\" : String,\n      \"NetworkSource\" : BridgeNetworkSource\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::BridgeSource\nProperties:\n  BridgeArn: String\n  FlowSource: \n    BridgeFlowSource\n  Name: String\n  NetworkSource: \n    BridgeNetworkSource\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::Flow","awsResourceTypeName":"mediaconnect-flow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::Flow\",\n  \"Properties\" : {\n      \"AvailabilityZone\" : String,\n      \"Name\" : String,\n      \"Source\" : Source,\n      \"SourceFailoverConfig\" : FailoverConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::Flow\nProperties:\n  AvailabilityZone: String\n  Name: String\n  Source: \n    Source\n  SourceFailoverConfig: \n    FailoverConfig\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowEntitlement","awsResourceTypeName":"mediaconnect-flowentitlement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowEntitlement\",\n  \"Properties\" : {\n      \"DataTransferSubscriberFeePercent\" : Integer,\n      \"Description\" : String,\n      \"Encryption\" : Encryption,\n      \"EntitlementStatus\" : String,\n      \"FlowArn\" : String,\n      \"Name\" : String,\n      \"Subscribers\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowEntitlement\nProperties:\n  DataTransferSubscriberFeePercent: Integer\n  Description: String\n  Encryption: \n    Encryption\n  EntitlementStatus: String\n  FlowArn: String\n  Name: String\n  Subscribers: \n    - String\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowOutput","awsResourceTypeName":"mediaconnect-flowoutput","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowOutput\",\n  \"Properties\" : {\n      \"CidrAllowList\" : [ String, ... ],\n      \"Description\" : String,\n      \"Destination\" : String,\n      \"Encryption\" : Encryption,\n      \"FlowArn\" : String,\n      \"MaxLatency\" : Integer,\n      \"MinLatency\" : Integer,\n      \"Name\" : String,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"RemoteId\" : String,\n      \"SmoothingLatency\" : Integer,\n      \"StreamId\" : String,\n      \"VpcInterfaceAttachment\" : VpcInterfaceAttachment\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowOutput\nProperties:\n  CidrAllowList: \n    - String\n  Description: String\n  Destination: String\n  Encryption: \n    Encryption\n  FlowArn: String\n  MaxLatency: Integer\n  MinLatency: Integer\n  Name: String\n  Port: Integer\n  Protocol: String\n  RemoteId: String\n  SmoothingLatency: Integer\n  StreamId: String\n  VpcInterfaceAttachment: \n    VpcInterfaceAttachment\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowSource","awsResourceTypeName":"mediaconnect-flowsource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowSource\",\n  \"Properties\" : {\n      \"Decryption\" : Encryption,\n      \"Description\" : String,\n      \"EntitlementArn\" : String,\n      \"FlowArn\" : String,\n      \"GatewayBridgeSource\" : GatewayBridgeSource,\n      \"IngestPort\" : Integer,\n      \"MaxBitrate\" : Integer,\n      \"MaxLatency\" : Integer,\n      \"MinLatency\" : Integer,\n      \"Name\" : String,\n      \"Protocol\" : String,\n      \"SenderControlPort\" : Integer,\n      \"SenderIpAddress\" : String,\n      \"SourceListenerAddress\" : String,\n      \"SourceListenerPort\" : Integer,\n      \"StreamId\" : String,\n      \"VpcInterfaceName\" : String,\n      \"WhitelistCidr\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowSource\nProperties:\n  Decryption: \n    Encryption\n  Description: String\n  EntitlementArn: String\n  FlowArn: String\n  GatewayBridgeSource: \n    GatewayBridgeSource\n  IngestPort: Integer\n  MaxBitrate: Integer\n  MaxLatency: Integer\n  MinLatency: Integer\n  Name: String\n  Protocol: String\n  SenderControlPort: Integer\n  SenderIpAddress: String\n  SourceListenerAddress: String\n  SourceListenerPort: Integer\n  StreamId: String\n  VpcInterfaceName: String\n  WhitelistCidr: String\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::FlowVpcInterface","awsResourceTypeName":"mediaconnect-flowvpcinterface","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::FlowVpcInterface\",\n  \"Properties\" : {\n      \"FlowArn\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::FlowVpcInterface\nProperties:\n  FlowArn: String\n  Name: String\n  RoleArn: String\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConnect::Gateway","awsResourceTypeName":"mediaconnect-gateway","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConnect::Gateway\",\n  \"Properties\" : {\n      \"EgressCidrBlocks\" : [ String, ... ],\n      \"Name\" : String,\n      \"Networks\" : [ GatewayNetwork, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConnect::Gateway\nProperties:\n  EgressCidrBlocks: \n    - String\n  Name: String\n  Networks: \n    - GatewayNetwork\n","awsServiceName":"MediaConnect","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConvert::JobTemplate","awsResourceTypeName":"mediaconvert-jobtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConvert::JobTemplate\",\n  \"Properties\" : {\n      \"AccelerationSettings\" : AccelerationSettings,\n      \"Category\" : String,\n      \"Description\" : String,\n      \"HopDestinations\" : [ HopDestination, ... ],\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"Queue\" : String,\n      \"SettingsJson\" : Json,\n      \"StatusUpdateInterval\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConvert::JobTemplate\nProperties:\n  AccelerationSettings: \n    AccelerationSettings\n  Category: String\n  Description: String\n  HopDestinations: \n    - HopDestination\n  Name: String\n  Priority: Integer\n  Queue: String\n  SettingsJson: \n    Json\n  StatusUpdateInterval: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaConvert","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConvert::Preset","awsResourceTypeName":"mediaconvert-preset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConvert::Preset\",\n  \"Properties\" : {\n      \"Category\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"SettingsJson\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConvert::Preset\nProperties:\n  Category: String\n  Description: String\n  Name: String\n  SettingsJson: \n    Json\n  Tags: \n    - Tag\n","awsServiceName":"MediaConvert","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaConvert::Queue","awsResourceTypeName":"mediaconvert-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaConvert::Queue\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"PricingPlan\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaConvert::Queue\nProperties:\n  Description: String\n  Name: String\n  PricingPlan: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaConvert","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Channel","awsResourceTypeName":"medialive-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Channel\",\n  \"Properties\" : {\n      \"CdiInputSpecification\" : CdiInputSpecification,\n      \"ChannelClass\" : String,\n      \"Destinations\" : [ OutputDestination, ... ],\n      \"EncoderSettings\" : EncoderSettings,\n      \"InputAttachments\" : [ InputAttachment, ... ],\n      \"InputSpecification\" : InputSpecification,\n      \"LogLevel\" : String,\n      \"Maintenance\" : MaintenanceCreateSettings,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Vpc\" : VpcOutputSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Channel\nProperties:\n  CdiInputSpecification: \n    CdiInputSpecification\n  ChannelClass: String\n  Destinations: \n    - OutputDestination\n  EncoderSettings: \n    EncoderSettings\n  InputAttachments: \n    - InputAttachment\n  InputSpecification: \n    InputSpecification\n  LogLevel: String\n  Maintenance: \n    MaintenanceCreateSettings\n  Name: String\n  RoleArn: String\n  Tags: \n    - Tag\n  Vpc: \n    VpcOutputSettings\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Input","awsResourceTypeName":"medialive-input","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Input\",\n  \"Properties\" : {\n      \"Destinations\" : [ InputDestinationRequest, ... ],\n      \"InputDevices\" : [ InputDeviceSettings, ... ],\n      \"InputSecurityGroups\" : [ String, ... ],\n      \"MediaConnectFlows\" : [ MediaConnectFlowRequest, ... ],\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Sources\" : [ InputSourceRequest, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"Vpc\" : InputVpcRequest\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Input\nProperties:\n  Destinations: \n    - InputDestinationRequest\n  InputDevices: \n    - InputDeviceSettings\n  InputSecurityGroups: \n    - String\n  MediaConnectFlows: \n    - MediaConnectFlowRequest\n  Name: String\n  RoleArn: String\n  Sources: \n    - InputSourceRequest\n  Tags: \n    - Tag\n  Type: String\n  Vpc: \n    InputVpcRequest\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::InputSecurityGroup","awsResourceTypeName":"medialive-inputsecuritygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::InputSecurityGroup\",\n  \"Properties\" : {\n      \"Tags\" : [ Tag, ... ],\n      \"WhitelistRules\" : [ InputWhitelistRuleCidr, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::InputSecurityGroup\nProperties:\n  Tags: \n    - Tag\n  WhitelistRules: \n    - InputWhitelistRuleCidr\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Multiplex","awsResourceTypeName":"medialive-multiplex","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Multiplex\",\n  \"Properties\" : {\n      \"AvailabilityZones\" : [ String, ... ],\n      \"Destinations\" : [ MultiplexOutputDestination, ... ],\n      \"MultiplexSettings\" : MultiplexSettings,\n      \"Name\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Multiplex\nProperties:\n  AvailabilityZones: \n    - String\n  Destinations: \n    - MultiplexOutputDestination\n  MultiplexSettings: \n    MultiplexSettings\n  Name: String\n  Tags: \n    - Tags\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaLive::Multiplexprogram","awsResourceTypeName":"medialive-multiplexprogram","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaLive::Multiplexprogram\",\n  \"Properties\" : {\n      \"ChannelId\" : String,\n      \"MultiplexId\" : String,\n      \"MultiplexProgramSettings\" : MultiplexProgramSettings,\n      \"PacketIdentifiersMap\" : MultiplexProgramPacketIdentifiersMap,\n      \"PipelineDetails\" : [ MultiplexProgramPipelineDetail, ... ],\n      \"PreferredChannelPipeline\" : String,\n      \"ProgramName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaLive::Multiplexprogram\nProperties:\n  ChannelId: String\n  MultiplexId: String\n  MultiplexProgramSettings: \n    MultiplexProgramSettings\n  PacketIdentifiersMap: \n    MultiplexProgramPacketIdentifiersMap\n  PipelineDetails: \n    - MultiplexProgramPipelineDetail\n  PreferredChannelPipeline: String\n  ProgramName: String\n","awsServiceName":"MediaLive","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::Asset","awsResourceTypeName":"mediapackage-asset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::Asset\",\n  \"Properties\" : {\n      \"EgressEndpoints\" : [ EgressEndpoint, ... ],\n      \"Id\" : String,\n      \"PackagingGroupId\" : String,\n      \"ResourceId\" : String,\n      \"SourceArn\" : String,\n      \"SourceRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::Asset\nProperties:\n  EgressEndpoints: \n    - EgressEndpoint\n  Id: String\n  PackagingGroupId: String\n  ResourceId: String\n  SourceArn: String\n  SourceRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::Channel","awsResourceTypeName":"mediapackage-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::Channel\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EgressAccessLogs\" : LogConfiguration,\n      \"HlsIngest\" : HlsIngest,\n      \"Id\" : String,\n      \"IngressAccessLogs\" : LogConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::Channel\nProperties:\n  Description: String\n  EgressAccessLogs: \n    LogConfiguration\n  HlsIngest: \n    HlsIngest\n  Id: String\n  IngressAccessLogs: \n    LogConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::OriginEndpoint","awsResourceTypeName":"mediapackage-originendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::OriginEndpoint\",\n  \"Properties\" : {\n      \"Authorization\" : Authorization,\n      \"ChannelId\" : String,\n      \"CmafPackage\" : CmafPackage,\n      \"DashPackage\" : DashPackage,\n      \"Description\" : String,\n      \"HlsPackage\" : HlsPackage,\n      \"Id\" : String,\n      \"ManifestName\" : String,\n      \"MssPackage\" : MssPackage,\n      \"Origination\" : String,\n      \"StartoverWindowSeconds\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TimeDelaySeconds\" : Integer,\n      \"Whitelist\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::OriginEndpoint\nProperties:\n  Authorization: \n    Authorization\n  ChannelId: String\n  CmafPackage: \n    CmafPackage\n  DashPackage: \n    DashPackage\n  Description: String\n  HlsPackage: \n    HlsPackage\n  Id: String\n  ManifestName: String\n  MssPackage: \n    MssPackage\n  Origination: String\n  StartoverWindowSeconds: Integer\n  Tags: \n    - Tag\n  TimeDelaySeconds: Integer\n  Whitelist: \n    - String\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::PackagingConfiguration","awsResourceTypeName":"mediapackage-packagingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::PackagingConfiguration\",\n  \"Properties\" : {\n      \"CmafPackage\" : CmafPackage,\n      \"DashPackage\" : DashPackage,\n      \"HlsPackage\" : HlsPackage,\n      \"Id\" : String,\n      \"MssPackage\" : MssPackage,\n      \"PackagingGroupId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::PackagingConfiguration\nProperties:\n  CmafPackage: \n    CmafPackage\n  DashPackage: \n    DashPackage\n  HlsPackage: \n    HlsPackage\n  Id: String\n  MssPackage: \n    MssPackage\n  PackagingGroupId: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackage::PackagingGroup","awsResourceTypeName":"mediapackage-packaginggroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackage::PackagingGroup\",\n  \"Properties\" : {\n      \"Authorization\" : Authorization,\n      \"EgressAccessLogs\" : LogConfiguration,\n      \"Id\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackage::PackagingGroup\nProperties:\n  Authorization: \n    Authorization\n  EgressAccessLogs: \n    LogConfiguration\n  Id: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackage","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::Channel","awsResourceTypeName":"mediapackagev2-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::Channel\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::Channel\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::ChannelGroup","awsResourceTypeName":"mediapackagev2-channelgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::ChannelGroup\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::ChannelGroup\nProperties:\n  ChannelGroupName: String\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::ChannelPolicy","awsResourceTypeName":"mediapackagev2-channelpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::ChannelPolicy\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::ChannelPolicy\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  Policy: Json\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::OriginEndpoint","awsResourceTypeName":"mediapackagev2-originendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::OriginEndpoint\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"ContainerType\" : String,\n      \"Description\" : String,\n      \"HlsManifests\" : [ HlsManifestConfiguration, ... ],\n      \"LowLatencyHlsManifests\" : [ LowLatencyHlsManifestConfiguration, ... ],\n      \"OriginEndpointName\" : String,\n      \"Segment\" : Segment,\n      \"StartoverWindowSeconds\" : Integer,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::OriginEndpoint\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  ContainerType: String\n  Description: String\n  HlsManifests: \n    - HlsManifestConfiguration\n  LowLatencyHlsManifests: \n    - LowLatencyHlsManifestConfiguration\n  OriginEndpointName: String\n  Segment: \n    Segment\n  StartoverWindowSeconds: Integer\n  Tags: \n    - Tag\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaPackageV2::OriginEndpointPolicy","awsResourceTypeName":"mediapackagev2-originendpointpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaPackageV2::OriginEndpointPolicy\",\n  \"Properties\" : {\n      \"ChannelGroupName\" : String,\n      \"ChannelName\" : String,\n      \"OriginEndpointName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaPackageV2::OriginEndpointPolicy\nProperties:\n  ChannelGroupName: String\n  ChannelName: String\n  OriginEndpointName: String\n  Policy: Json\n","awsServiceName":"MediaPackageV2","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::Channel","awsResourceTypeName":"mediatailor-channel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::Channel\",\n  \"Properties\" : {\n      \"Audiences\" : [ String, ... ],\n      \"ChannelName\" : String,\n      \"FillerSlate\" : SlateSource,\n      \"LogConfiguration\" : LogConfigurationForChannel,\n      \"Outputs\" : [ RequestOutputItem, ... ],\n      \"PlaybackMode\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Tier\" : String,\n      \"TimeShiftConfiguration\" : TimeShiftConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::Channel\nProperties:\n  Audiences: \n    - String\n  ChannelName: String\n  FillerSlate: \n    SlateSource\n  LogConfiguration: \n    LogConfigurationForChannel\n  Outputs: \n    - RequestOutputItem\n  PlaybackMode: String\n  Tags: \n    - Tag\n  Tier: String\n  TimeShiftConfiguration: \n    TimeShiftConfiguration\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::ChannelPolicy","awsResourceTypeName":"mediatailor-channelpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::ChannelPolicy\",\n  \"Properties\" : {\n      \"ChannelName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::ChannelPolicy\nProperties:\n  ChannelName: String\n  Policy: Json\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::LiveSource","awsResourceTypeName":"mediatailor-livesource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::LiveSource\",\n  \"Properties\" : {\n      \"HttpPackageConfigurations\" : [ HttpPackageConfiguration, ... ],\n      \"LiveSourceName\" : String,\n      \"SourceLocationName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::LiveSource\nProperties:\n  HttpPackageConfigurations: \n    - HttpPackageConfiguration\n  LiveSourceName: String\n  SourceLocationName: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::PlaybackConfiguration","awsResourceTypeName":"mediatailor-playbackconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::PlaybackConfiguration\",\n  \"Properties\" : {\n      \"AdDecisionServerUrl\" : String,\n      \"AvailSuppression\" : AvailSuppression,\n      \"Bumper\" : Bumper,\n      \"CdnConfiguration\" : CdnConfiguration,\n      \"ConfigurationAliases\" : {Key: Value, ...},\n      \"DashConfiguration\" : DashConfiguration,\n      \"HlsConfiguration\" : HlsConfiguration,\n      \"LivePreRollConfiguration\" : LivePreRollConfiguration,\n      \"ManifestProcessingRules\" : ManifestProcessingRules,\n      \"Name\" : String,\n      \"PersonalizationThresholdSeconds\" : Integer,\n      \"SlateAdUrl\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TranscodeProfileName\" : String,\n      \"VideoContentSourceUrl\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::PlaybackConfiguration\nProperties:\n  AdDecisionServerUrl: String\n  AvailSuppression: \n    AvailSuppression\n  Bumper: \n    Bumper\n  CdnConfiguration: \n    CdnConfiguration\n  ConfigurationAliases: \n    Key: Value\n  DashConfiguration: \n    DashConfiguration\n  HlsConfiguration: \n    HlsConfiguration\n  LivePreRollConfiguration: \n    LivePreRollConfiguration\n  ManifestProcessingRules: \n    ManifestProcessingRules\n  Name: String\n  PersonalizationThresholdSeconds: Integer\n  SlateAdUrl: String\n  Tags: \n    - Tag\n  TranscodeProfileName: String\n  VideoContentSourceUrl: String\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::SourceLocation","awsResourceTypeName":"mediatailor-sourcelocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::SourceLocation\",\n  \"Properties\" : {\n      \"AccessConfiguration\" : AccessConfiguration,\n      \"DefaultSegmentDeliveryConfiguration\" : DefaultSegmentDeliveryConfiguration,\n      \"HttpConfiguration\" : HttpConfiguration,\n      \"SegmentDeliveryConfigurations\" : [ SegmentDeliveryConfiguration, ... ],\n      \"SourceLocationName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::SourceLocation\nProperties:\n  AccessConfiguration: \n    AccessConfiguration\n  DefaultSegmentDeliveryConfiguration: \n    DefaultSegmentDeliveryConfiguration\n  HttpConfiguration: \n    HttpConfiguration\n  SegmentDeliveryConfigurations: \n    - SegmentDeliveryConfiguration\n  SourceLocationName: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaTailor::VodSource","awsResourceTypeName":"mediatailor-vodsource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaTailor::VodSource\",\n  \"Properties\" : {\n      \"HttpPackageConfigurations\" : [ HttpPackageConfiguration, ... ],\n      \"SourceLocationName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VodSourceName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaTailor::VodSource\nProperties:\n  HttpPackageConfigurations: \n    - HttpPackageConfiguration\n  SourceLocationName: String\n  Tags: \n    - Tag\n  VodSourceName: String\n","awsServiceName":"MediaTailor","awsServiceCategory":"media"},{"awsResourceType":"AWS::MediaStore::Container","awsResourceTypeName":"mediastore-container","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MediaStore::Container\",\n  \"Properties\" : {\n      \"AccessLoggingEnabled\" : Boolean,\n      \"ContainerName\" : String,\n      \"CorsPolicy\" : [ CorsRule, ... ],\n      \"LifecyclePolicy\" : String,\n      \"MetricPolicy\" : MetricPolicy,\n      \"Policy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MediaStore::Container\nProperties:\n  AccessLoggingEnabled: Boolean\n  ContainerName: String\n  CorsPolicy: \n    - CorsRule\n  LifecyclePolicy: String\n  MetricPolicy: \n    MetricPolicy\n  Policy: String\n  Tags: \n    - Tag\n","awsServiceName":"MediaStore","awsServiceCategory":"storage"},{"awsResourceType":"AWS::AmazonMQ::Broker","awsResourceTypeName":"amazonmq-broker","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmazonMQ::Broker\",\n  \"Properties\" : {\n      \"AuthenticationStrategy\" : String,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"BrokerName\" : String,\n      \"Configuration\" : ConfigurationId,\n      \"DataReplicationMode\" : String,\n      \"DataReplicationPrimaryBrokerArn\" : String,\n      \"DeploymentMode\" : String,\n      \"EncryptionOptions\" : EncryptionOptions,\n      \"EngineType\" : String,\n      \"EngineVersion\" : String,\n      \"HostInstanceType\" : String,\n      \"LdapServerMetadata\" : LdapServerMetadata,\n      \"Logs\" : LogList,\n      \"MaintenanceWindowStartTime\" : MaintenanceWindow,\n      \"PubliclyAccessible\" : Boolean,\n      \"SecurityGroups\" : [ String, ... ],\n      \"StorageType\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ TagsEntry, ... ],\n      \"Users\" : [ User, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmazonMQ::Broker\nProperties:\n  AuthenticationStrategy: String\n  AutoMinorVersionUpgrade: Boolean\n  BrokerName: String\n  Configuration: \n    ConfigurationId\n  DataReplicationMode: String\n  DataReplicationPrimaryBrokerArn: String\n  DeploymentMode: String\n  EncryptionOptions: \n    EncryptionOptions\n  EngineType: String\n  EngineVersion: String\n  HostInstanceType: String\n  LdapServerMetadata: \n    LdapServerMetadata\n  Logs: \n    LogList\n  MaintenanceWindowStartTime: \n    MaintenanceWindow\n  PubliclyAccessible: Boolean\n  SecurityGroups: \n    - String\n  StorageType: String\n  SubnetIds: \n    - String\n  Tags: \n    - TagsEntry\n  Users: \n    - User\n","awsServiceName":"AmazonMQ","awsServiceCategory":"storage"},{"awsResourceType":"AWS::AmazonMQ::Configuration","awsResourceTypeName":"amazonmq-configuration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmazonMQ::Configuration\",\n  \"Properties\" : {\n      \"AuthenticationStrategy\" : String,\n      \"Data\" : String,\n      \"Description\" : String,\n      \"EngineType\" : String,\n      \"EngineVersion\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmazonMQ::Configuration\nProperties:\n  AuthenticationStrategy: String\n  Data: String\n  Description: String\n  EngineType: String\n  EngineVersion: String\n  Name: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"AmazonMQ","awsServiceCategory":"storage"},{"awsResourceType":"AWS::AmazonMQ::ConfigurationAssociation","awsResourceTypeName":"amazonmq-configurationassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::AmazonMQ::ConfigurationAssociation\",\n  \"Properties\" : {\n      \"Broker\" : String,\n      \"Configuration\" : ConfigurationId\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::AmazonMQ::ConfigurationAssociation\nProperties:\n  Broker: String\n  Configuration: \n    ConfigurationId\n","awsServiceName":"AmazonMQ","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::ACL","awsResourceTypeName":"memorydb-acl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::ACL\",\n  \"Properties\" : {\n      \"ACLName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UserNames\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::ACL\nProperties:\n  ACLName: String\n  Tags: \n    - Tag\n  UserNames: \n    - String\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::Cluster","awsResourceTypeName":"memorydb-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::Cluster\",\n  \"Properties\" : {\n      \"ACLName\" : String,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"ClusterEndpoint\" : Endpoint,\n      \"ClusterName\" : String,\n      \"DataTiering\" : String,\n      \"Description\" : String,\n      \"EngineVersion\" : String,\n      \"FinalSnapshotName\" : String,\n      \"KmsKeyId\" : String,\n      \"MaintenanceWindow\" : String,\n      \"NodeType\" : String,\n      \"NumReplicasPerShard\" : Integer,\n      \"NumShards\" : Integer,\n      \"ParameterGroupName\" : String,\n      \"Port\" : Integer,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SnapshotArns\" : [ String, ... ],\n      \"SnapshotName\" : String,\n      \"SnapshotRetentionLimit\" : Integer,\n      \"SnapshotWindow\" : String,\n      \"SnsTopicArn\" : String,\n      \"SnsTopicStatus\" : String,\n      \"SubnetGroupName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TLSEnabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::Cluster\nProperties:\n  ACLName: String\n  AutoMinorVersionUpgrade: Boolean\n  ClusterEndpoint: \n    Endpoint\n  ClusterName: String\n  DataTiering: String\n  Description: String\n  EngineVersion: String\n  FinalSnapshotName: String\n  KmsKeyId: String\n  MaintenanceWindow: String\n  NodeType: String\n  NumReplicasPerShard: Integer\n  NumShards: Integer\n  ParameterGroupName: String\n  Port: Integer\n  SecurityGroupIds: \n    - String\n  SnapshotArns: \n    - String\n  SnapshotName: String\n  SnapshotRetentionLimit: Integer\n  SnapshotWindow: String\n  SnsTopicArn: String\n  SnsTopicStatus: String\n  SubnetGroupName: String\n  Tags: \n    - Tag\n  TLSEnabled: Boolean\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::ParameterGroup","awsResourceTypeName":"memorydb-parametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::ParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"ParameterGroupName\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::ParameterGroup\nProperties:\n  Description: String\n  Family: String\n  ParameterGroupName: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::SubnetGroup","awsResourceTypeName":"memorydb-subnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::SubnetGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"SubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::SubnetGroup\nProperties:\n  Description: String\n  SubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MemoryDB::User","awsResourceTypeName":"memorydb-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MemoryDB::User\",\n  \"Properties\" : {\n      \"AccessString\" : String,\n      \"AuthenticationMode\" : AuthenticationMode,\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MemoryDB::User\nProperties:\n  AccessString: \n    String\n  AuthenticationMode: \n    AuthenticationMode\n  Tags: \n    - Tag\n  UserName: String\n","awsServiceName":"MemoryDB","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::BatchScramSecret","awsResourceTypeName":"msk-batchscramsecret","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::BatchScramSecret\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"SecretArnList\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::BatchScramSecret\nProperties:\n  ClusterArn: String\n  SecretArnList: \n    - String\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::Cluster","awsResourceTypeName":"msk-cluster","awsResourceTypeCloudformationJson":"import boto3\n\nclient = boto3.client('kafka')\n\nresponse = client.create_cluster(\n    BrokerNodeGroupInfo={\n        'BrokerAZDistribution': 'DEFAULT',\n        'ClientSubnets': [\n            'subnet-012345678901fedcba',\n            'subnet-9876543210abcdef01'\n        ],\n        'InstanceType': 'kafka.m5.large',\n        'SecurityGroups': [\n            'sg-012345abcdef789789'\n        ]\n    },\n    ClusterName='SalesCluster',\n    EncryptionInfo={\n        'EncryptionInTransit': {\n            'ClientBroker': 'TLS_PLAINTEXT',\n            'InCluster': True\n        }\n    },\n    EnhancedMonitoring='PER_TOPIC_PER_BROKER',\n    KafkaVersion='2.2.1',\n    NumberOfBrokerNodes=2\n)\n\nprint(response)\n","awsResourceTypeCloudformationYaml":"{\n  \"Type\" : \"AWS::MSK::Cluster\",\n  \"Properties\" : {\n      \"BrokerNodeGroupInfo\" : BrokerNodeGroupInfo,\n      \"ClientAuthentication\" : ClientAuthentication,\n      \"ClusterName\" : String,\n      \"ConfigurationInfo\" : ConfigurationInfo,\n      \"CurrentVersion\" : String,\n      \"EncryptionInfo\" : EncryptionInfo,\n      \"EnhancedMonitoring\" : String,\n      \"KafkaVersion\" : String,\n      \"LoggingInfo\" : LoggingInfo,\n      \"NumberOfBrokerNodes\" : Integer,\n      \"OpenMonitoring\" : OpenMonitoring,\n      \"StorageMode\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::ClusterPolicy","awsResourceTypeName":"msk-clusterpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::ClusterPolicy\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::ClusterPolicy\nProperties:\n  ClusterArn: String\n  Policy: Json\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::Configuration","awsResourceTypeName":"msk-configuration","awsResourceTypeCloudformationJson":"auto.create.topics.enable = true\n\nzookeeper.connection.timeout.ms = 1000\n\nlog.roll.ms = 604800000","awsResourceTypeCloudformationYaml":"import boto3\n\nclient = boto3.client('kafka')\n\nconfig_file = open('config-file.txt', 'r')\n\nserver_properties = config_file.read()\n\nresponse = client.create_configuration(\n    Name='SalesClusterConfiguration',\n    Description='The configuration to use on all sales clusters.',\n    KafkaVersions=['1.1.1', '2.1.0'],\n    ServerProperties=server_properties\n)\n\nprint(response)","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::Replicator","awsResourceTypeName":"msk-replicator","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::Replicator\",\n  \"Properties\" : {\n      \"CurrentVersion\" : String,\n      \"Description\" : String,\n      \"KafkaClusters\" : [ KafkaCluster, ... ],\n      \"ReplicationInfoList\" : [ ReplicationInfo, ... ],\n      \"ReplicatorName\" : String,\n      \"ServiceExecutionRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::Replicator\nProperties:\n  CurrentVersion: String\n  Description: String\n  KafkaClusters: \n    - KafkaCluster\n  ReplicationInfoList: \n    - ReplicationInfo\n  ReplicatorName: String\n  ServiceExecutionRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::ServerlessCluster","awsResourceTypeName":"msk-serverlesscluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::ServerlessCluster\",\n  \"Properties\" : {\n      \"ClientAuthentication\" : ClientAuthentication,\n      \"ClusterName\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"VpcConfigs\" : [ VpcConfig, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::ServerlessCluster\nProperties:\n  ClientAuthentication: \n    ClientAuthentication\n  ClusterName: String\n  Tags: \n    Key: Value\n  VpcConfigs: \n    - VpcConfig\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MSK::VpcConnection","awsResourceTypeName":"msk-vpcconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MSK::VpcConnection\",\n  \"Properties\" : {\n      \"Authentication\" : String,\n      \"ClientSubnets\" : [ String, ... ],\n      \"SecurityGroups\" : [ String, ... ],\n      \"Tags\" : {Key: Value, ...},\n      \"TargetClusterArn\" : String,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MSK::VpcConnection\nProperties:\n  Authentication: String\n  ClientSubnets: \n    - String\n  SecurityGroups: \n    - String\n  Tags: \n    Key: Value\n  TargetClusterArn: String\n  VpcId: String\n","awsServiceName":"MSK","awsServiceCategory":"storage"},{"awsResourceType":"AWS::KafkaConnect::Connector","awsResourceTypeName":"kafkaconnect-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KafkaConnect::Connector\",\n  \"Properties\" : {\n      \"Capacity\" : Capacity,\n      \"ConnectorConfiguration\" : {Key: Value, ...},\n      \"ConnectorDescription\" : String,\n      \"ConnectorName\" : String,\n      \"KafkaCluster\" : KafkaCluster,\n      \"KafkaClusterClientAuthentication\" : KafkaClusterClientAuthentication,\n      \"KafkaClusterEncryptionInTransit\" : KafkaClusterEncryptionInTransit,\n      \"KafkaConnectVersion\" : String,\n      \"LogDelivery\" : LogDelivery,\n      \"Plugins\" : [ Plugin, ... ],\n      \"ServiceExecutionRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkerConfiguration\" : WorkerConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KafkaConnect::Connector\nProperties:\n  Capacity: \n    Capacity\n  ConnectorConfiguration: \n    Key: Value\n  ConnectorDescription: String\n  ConnectorName: String\n  KafkaCluster: \n    KafkaCluster\n  KafkaClusterClientAuthentication: \n    KafkaClusterClientAuthentication\n  KafkaClusterEncryptionInTransit: \n    KafkaClusterEncryptionInTransit\n  KafkaConnectVersion: String\n  LogDelivery: \n    LogDelivery\n  Plugins: \n    - Plugin\n  ServiceExecutionRoleArn: String\n  Tags: \n    - Tag\n  WorkerConfiguration: \n    WorkerConfiguration\n","awsServiceName":"KafkaConnect","awsServiceCategory":"storage"},{"awsResourceType":"AWS::KafkaConnect::CustomPlugin","awsResourceTypeName":"kafkaconnect-customplugin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KafkaConnect::CustomPlugin\",\n  \"Properties\" : {\n      \"ContentType\" : String,\n      \"Description\" : String,\n      \"Location\" : CustomPluginLocation,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KafkaConnect::CustomPlugin\nProperties:\n  ContentType: String\n  Description: String\n  Location: \n    CustomPluginLocation\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"KafkaConnect","awsServiceCategory":"storage"},{"awsResourceType":"AWS::KafkaConnect::WorkerConfiguration","awsResourceTypeName":"kafkaconnect-workerconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::KafkaConnect::WorkerConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"PropertiesFileContent\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::KafkaConnect::WorkerConfiguration\nProperties:\n  Description: String\n  Name: String\n  PropertiesFileContent: String\n  Tags: \n    - Tag\n","awsServiceName":"KafkaConnect","awsServiceCategory":"storage"},{"awsResourceType":"AWS::MWAA::Environment","awsResourceTypeName":"mwaa-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::MWAA::Environment\",\n  \"Properties\" : {\n      \"AirflowConfigurationOptions\" : Json,\n      \"AirflowVersion\" : String,\n      \"DagS3Path\" : String,\n      \"EndpointManagement\" : String,\n      \"EnvironmentClass\" : String,\n      \"ExecutionRoleArn\" : String,\n      \"KmsKey\" : String,\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"MaxWorkers\" : Integer,\n      \"MinWorkers\" : Integer,\n      \"Name\" : String,\n      \"NetworkConfiguration\" : NetworkConfiguration,\n      \"PluginsS3ObjectVersion\" : String,\n      \"PluginsS3Path\" : String,\n      \"RequirementsS3ObjectVersion\" : String,\n      \"RequirementsS3Path\" : String,\n      \"Schedulers\" : Integer,\n      \"SourceBucketArn\" : String,\n      \"StartupScriptS3ObjectVersion\" : String,\n      \"StartupScriptS3Path\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"WebserverAccessMode\" : String,\n      \"WeeklyMaintenanceWindowStart\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::MWAA::Environment\nProperties:\n  AirflowConfigurationOptions: Json\n  AirflowVersion: String\n  DagS3Path: String\n  EndpointManagement: String\n  EnvironmentClass: String\n  ExecutionRoleArn: String\n  KmsKey: String\n  LoggingConfiguration: \n    LoggingConfiguration\n  MaxWorkers: Integer\n  MinWorkers: Integer\n  Name: String\n  NetworkConfiguration: \n    NetworkConfiguration\n  PluginsS3ObjectVersion: String\n  PluginsS3Path: String\n  RequirementsS3ObjectVersion: String\n  RequirementsS3Path: String\n  Schedulers: Integer\n  SourceBucketArn: String\n  StartupScriptS3ObjectVersion: String\n  StartupScriptS3Path: String\n  Tags: \n    - Tag\n  WebserverAccessMode: String\n  WeeklyMaintenanceWindowStart: String\n","awsServiceName":"MWAA","awsServiceCategory":"containers"},{"awsResourceType":"AWS::Neptune::DBCluster","awsResourceTypeName":"neptune-dbcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBCluster\",\n  \"Properties\" : {\n      \"AssociatedRoles\" : [ DBClusterRole, ... ],\n      \"AvailabilityZones\" : [ String, ... ],\n      \"BackupRetentionPeriod\" : Integer,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterParameterGroupName\" : String,\n      \"DBInstanceParameterGroupName\" : String,\n      \"DBPort\" : Integer,\n      \"DBSubnetGroupName\" : String,\n      \"DeletionProtection\" : Boolean,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EngineVersion\" : String,\n      \"IamAuthEnabled\" : Boolean,\n      \"KmsKeyId\" : String,\n      \"Port\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"RestoreToTime\" : String,\n      \"RestoreType\" : String,\n      \"ServerlessScalingConfiguration\" : ServerlessScalingConfiguration,\n      \"SnapshotIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBCluster\nProperties:\n  AssociatedRoles: \n    - DBClusterRole\n  AvailabilityZones: \n    - String\n  BackupRetentionPeriod: Integer\n  CopyTagsToSnapshot: Boolean\n  DBClusterIdentifier: String\n  DBClusterParameterGroupName: String\n  DBInstanceParameterGroupName: String\n  DBPort: Integer\n  DBSubnetGroupName: String\n  DeletionProtection: Boolean\n  EnableCloudwatchLogsExports: \n    - String\n  EngineVersion: String\n  IamAuthEnabled: Boolean\n  KmsKeyId: String\n  Port: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  RestoreToTime: String\n  RestoreType: String\n  ServerlessScalingConfiguration: \n    ServerlessScalingConfiguration\n  SnapshotIdentifier: String\n  SourceDBClusterIdentifier: String\n  StorageEncrypted: Boolean\n  Tags: \n    - Tag\n  UseLatestRestorableTime: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBClusterParameterGroup","awsResourceTypeName":"neptune-dbclusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBClusterParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Name\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBClusterParameterGroup\nProperties:\n  Description: String\n  Family: String\n  Name: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBInstance","awsResourceTypeName":"neptune-dbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBInstance\",\n  \"Properties\" : {\n      \"AllowMajorVersionUpgrade\" : Boolean,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"DBClusterIdentifier\" : String,\n      \"DBInstanceClass\" : String,\n      \"DBInstanceIdentifier\" : String,\n      \"DBParameterGroupName\" : String,\n      \"DBSnapshotIdentifier\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBInstance\nProperties:\n  AllowMajorVersionUpgrade: Boolean\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  DBClusterIdentifier: String\n  DBInstanceClass: String\n  DBInstanceIdentifier: String\n  DBParameterGroupName: String\n  DBSnapshotIdentifier: String\n  DBSubnetGroupName: String\n  PreferredMaintenanceWindow: String\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBParameterGroup","awsResourceTypeName":"neptune-dbparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Name\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBParameterGroup\nProperties:\n  Description: String\n  Family: String\n  Name: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::Neptune::DBSubnetGroup","awsResourceTypeName":"neptune-dbsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Neptune::DBSubnetGroup\",\n  \"Properties\" : {\n      \"DBSubnetGroupDescription\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Neptune::DBSubnetGroup\nProperties:\n  DBSubnetGroupDescription: String\n  DBSubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Neptune","awsServiceCategory":"database"},{"awsResourceType":"AWS::NeptuneGraph::Graph","awsResourceTypeName":"neptunegraph-graph","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NeptuneGraph::Graph\",\n  \"Properties\" : {\n      \"DeletionProtection\" : Boolean,\n      \"GraphName\" : String,\n      \"ProvisionedMemory\" : Integer,\n      \"PublicConnectivity\" : Boolean,\n      \"ReplicaCount\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"VectorSearchConfiguration\" : VectorSearchConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NeptuneGraph::Graph\nProperties:\n  DeletionProtection: Boolean\n  GraphName: String\n  ProvisionedMemory: Integer\n  PublicConnectivity: Boolean\n  ReplicaCount: Integer\n  Tags: \n    - Tag\n  VectorSearchConfiguration: \n    VectorSearchConfiguration\n","awsServiceName":"NeptuneGraph","awsServiceCategory":"database"},{"awsResourceType":"AWS::NeptuneGraph::PrivateGraphEndpoint","awsResourceTypeName":"neptunegraph-privategraphendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NeptuneGraph::PrivateGraphEndpoint\",\n  \"Properties\" : {\n      \"GraphIdentifier\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NeptuneGraph::PrivateGraphEndpoint\nProperties:\n  GraphIdentifier: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  VpcId: String\n","awsServiceName":"NeptuneGraph","awsServiceCategory":"database"},{"awsResourceType":"AWS::NetworkFirewall::Firewall","awsResourceTypeName":"networkfirewall-firewall","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::Firewall\",\n  \"Properties\" : {\n      \"DeleteProtection\" : Boolean,\n      \"Description\" : String,\n      \"FirewallName\" : String,\n      \"FirewallPolicyArn\" : String,\n      \"FirewallPolicyChangeProtection\" : Boolean,\n      \"SubnetChangeProtection\" : Boolean,\n      \"SubnetMappings\" : [ SubnetMapping, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::Firewall\nProperties:\n  DeleteProtection: Boolean\n  Description: String\n  FirewallName: String\n  FirewallPolicyArn: String\n  FirewallPolicyChangeProtection: Boolean\n  SubnetChangeProtection: Boolean\n  SubnetMappings: \n    - SubnetMapping\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::FirewallPolicy","awsResourceTypeName":"networkfirewall-firewallpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::FirewallPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FirewallPolicy\" : FirewallPolicy,\n      \"FirewallPolicyName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::FirewallPolicy\nProperties:\n  Description: String\n  FirewallPolicy: \n    FirewallPolicy\n  FirewallPolicyName: String\n  Tags: \n    - Tag\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::LoggingConfiguration","awsResourceTypeName":"networkfirewall-loggingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::LoggingConfiguration\",\n  \"Properties\" : {\n      \"FirewallArn\" : String,\n      \"FirewallName\" : String,\n      \"LoggingConfiguration\" : LoggingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::LoggingConfiguration\nProperties:\n  FirewallArn: String\n  FirewallName: String\n  LoggingConfiguration: \n    LoggingConfiguration\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::RuleGroup","awsResourceTypeName":"networkfirewall-rulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::RuleGroup\",\n  \"Properties\" : {\n      \"Capacity\" : Integer,\n      \"Description\" : String,\n      \"RuleGroup\" : RuleGroup,\n      \"RuleGroupName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::RuleGroup\nProperties:\n  Capacity: Integer\n  Description: String\n  RuleGroup: \n    RuleGroup\n  RuleGroupName: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkFirewall::TLSInspectionConfiguration","awsResourceTypeName":"networkfirewall-tlsinspectionconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkFirewall::TLSInspectionConfiguration\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TLSInspectionConfiguration\" : TLSInspectionConfiguration,\n      \"TLSInspectionConfigurationName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkFirewall::TLSInspectionConfiguration\nProperties:\n  Description: String\n  Tags: \n    - Tag\n  TLSInspectionConfiguration: \n    TLSInspectionConfiguration\n  TLSInspectionConfigurationName: String\n","awsServiceName":"NetworkFirewall","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::ConnectAttachment","awsResourceTypeName":"networkmanager-connectattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::ConnectAttachment\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"EdgeLocation\" : String,\n      \"Options\" : ConnectAttachmentOptions,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"Tags\" : [ Tag, ... ],\n      \"TransportAttachmentId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::ConnectAttachment\nProperties:\n  CoreNetworkId: String\n  EdgeLocation: String\n  Options: \n    ConnectAttachmentOptions\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  Tags: \n    - Tag\n  TransportAttachmentId: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::ConnectPeer","awsResourceTypeName":"networkmanager-connectpeer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::ConnectPeer\",\n  \"Properties\" : {\n      \"BgpOptions\" : BgpOptions,\n      \"ConnectAttachmentId\" : String,\n      \"CoreNetworkAddress\" : String,\n      \"InsideCidrBlocks\" : [ String, ... ],\n      \"PeerAddress\" : String,\n      \"SubnetArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::ConnectPeer\nProperties:\n  BgpOptions: \n    BgpOptions\n  ConnectAttachmentId: String\n  CoreNetworkAddress: String\n  InsideCidrBlocks: \n    - String\n  PeerAddress: String\n  SubnetArn: String\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::CoreNetwork","awsResourceTypeName":"networkmanager-corenetwork","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::CoreNetwork\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"PolicyDocument\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::CoreNetwork\nProperties:\n  Description: String\n  GlobalNetworkId: String\n  PolicyDocument: Json\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::CustomerGatewayAssociation","awsResourceTypeName":"networkmanager-customergatewayassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::CustomerGatewayAssociation\",\n  \"Properties\" : {\n      \"CustomerGatewayArn\" : String,\n      \"DeviceId\" : String,\n      \"GlobalNetworkId\" : String,\n      \"LinkId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::CustomerGatewayAssociation\nProperties:\n  CustomerGatewayArn: String\n  DeviceId: String\n  GlobalNetworkId: String\n  LinkId: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::Device","awsResourceTypeName":"networkmanager-device","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::Device\",\n  \"Properties\" : {\n      \"AWSLocation\" : AWSLocation,\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"Location\" : Location,\n      \"Model\" : String,\n      \"SerialNumber\" : String,\n      \"SiteId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"Vendor\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::Device\nProperties:\n  AWSLocation: \n    AWSLocation\n  Description: String\n  GlobalNetworkId: String\n  Location: \n    Location\n  Model: String\n  SerialNumber: String\n  SiteId: String\n  Tags: \n    - Tag\n  Type: String\n  Vendor: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::GlobalNetwork","awsResourceTypeName":"networkmanager-globalnetwork","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::GlobalNetwork\",\n  \"Properties\" : {\n      \"CreatedAt\" : String,\n      \"Description\" : String,\n      \"State\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::GlobalNetwork\nProperties:\n  CreatedAt: String\n  Description: String\n  State: String\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::Link","awsResourceTypeName":"networkmanager-link","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::Link\",\n  \"Properties\" : {\n      \"Bandwidth\" : Bandwidth,\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"Provider\" : String,\n      \"SiteId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::Link\nProperties:\n  Bandwidth: \n    Bandwidth\n  Description: String\n  GlobalNetworkId: String\n  Provider: String\n  SiteId: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::LinkAssociation","awsResourceTypeName":"networkmanager-linkassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::LinkAssociation\",\n  \"Properties\" : {\n      \"DeviceId\" : String,\n      \"GlobalNetworkId\" : String,\n      \"LinkId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::LinkAssociation\nProperties:\n  DeviceId: String\n  GlobalNetworkId: String\n  LinkId: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::Site","awsResourceTypeName":"networkmanager-site","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::Site\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GlobalNetworkId\" : String,\n      \"Location\" : Location,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::Site\nProperties:\n  Description: String\n  GlobalNetworkId: String\n  Location: \n    Location\n  Tags: \n    - Tag\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::SiteToSiteVpnAttachment","awsResourceTypeName":"networkmanager-sitetositevpnattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::SiteToSiteVpnAttachment\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"Tags\" : [ Tag, ... ],\n      \"VpnConnectionArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::SiteToSiteVpnAttachment\nProperties:\n  CoreNetworkId: String\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  Tags: \n    - Tag\n  VpnConnectionArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::TransitGatewayPeering","awsResourceTypeName":"networkmanager-transitgatewaypeering","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::TransitGatewayPeering\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::TransitGatewayPeering\nProperties:\n  CoreNetworkId: String\n  Tags: \n    - Tag\n  TransitGatewayArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::TransitGatewayRegistration","awsResourceTypeName":"networkmanager-transitgatewayregistration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::TransitGatewayRegistration\",\n  \"Properties\" : {\n      \"GlobalNetworkId\" : String,\n      \"TransitGatewayArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::TransitGatewayRegistration\nProperties:\n  GlobalNetworkId: String\n  TransitGatewayArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::TransitGatewayRouteTableAttachment","awsResourceTypeName":"networkmanager-transitgatewayroutetableattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::TransitGatewayRouteTableAttachment\",\n  \"Properties\" : {\n      \"PeeringId\" : String,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"Tags\" : [ Tag, ... ],\n      \"TransitGatewayRouteTableArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::TransitGatewayRouteTableAttachment\nProperties:\n  PeeringId: String\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  Tags: \n    - Tag\n  TransitGatewayRouteTableArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NetworkManager::VpcAttachment","awsResourceTypeName":"networkmanager-vpcattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NetworkManager::VpcAttachment\",\n  \"Properties\" : {\n      \"CoreNetworkId\" : String,\n      \"Options\" : VpcOptions,\n      \"ProposedSegmentChange\" : ProposedSegmentChange,\n      \"SubnetArns\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NetworkManager::VpcAttachment\nProperties:\n  CoreNetworkId: String\n  Options: \n    VpcOptions\n  ProposedSegmentChange: \n    ProposedSegmentChange\n  SubnetArns: \n    - String\n  Tags: \n    - Tag\n  VpcArn: String\n","awsServiceName":"NetworkManager","awsServiceCategory":"networking"},{"awsResourceType":"AWS::NimbleStudio::LaunchProfile","awsResourceTypeName":"nimblestudio-launchprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::LaunchProfile\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Ec2SubnetIds\" : [ String, ... ],\n      \"LaunchProfileProtocolVersions\" : [ String, ... ],\n      \"Name\" : String,\n      \"StreamConfiguration\" : StreamConfiguration,\n      \"StudioComponentIds\" : [ String, ... ],\n      \"StudioId\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::LaunchProfile\nProperties:\n  Description: String\n  Ec2SubnetIds: \n    - String\n  LaunchProfileProtocolVersions: \n    - String\n  Name: String\n  StreamConfiguration: \n    StreamConfiguration\n  StudioComponentIds: \n    - String\n  StudioId: String\n  Tags: \n    Key: Value\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::NimbleStudio::StreamingImage","awsResourceTypeName":"nimblestudio-streamingimage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::StreamingImage\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Ec2ImageId\" : String,\n      \"Name\" : String,\n      \"StudioId\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::StreamingImage\nProperties:\n  Description: String\n  Ec2ImageId: String\n  Name: String\n  StudioId: String\n  Tags: \n    Key: Value\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::NimbleStudio::Studio","awsResourceTypeName":"nimblestudio-studio","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::Studio\",\n  \"Properties\" : {\n      \"AdminRoleArn\" : String,\n      \"DisplayName\" : String,\n      \"StudioEncryptionConfiguration\" : StudioEncryptionConfiguration,\n      \"StudioName\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"UserRoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::Studio\nProperties:\n  AdminRoleArn: String\n  DisplayName: String\n  StudioEncryptionConfiguration: \n    StudioEncryptionConfiguration\n  StudioName: String\n  Tags: \n    Key: Value\n  UserRoleArn: String\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::NimbleStudio::StudioComponent","awsResourceTypeName":"nimblestudio-studiocomponent","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::NimbleStudio::StudioComponent\",\n  \"Properties\" : {\n      \"Configuration\" : StudioComponentConfiguration,\n      \"Description\" : String,\n      \"Ec2SecurityGroupIds\" : [ String, ... ],\n      \"InitializationScripts\" : [ StudioComponentInitializationScript, ... ],\n      \"Name\" : String,\n      \"RuntimeRoleArn\" : String,\n      \"ScriptParameters\" : [ ScriptParameterKeyValue, ... ],\n      \"SecureInitializationRoleArn\" : String,\n      \"StudioId\" : String,\n      \"Subtype\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::NimbleStudio::StudioComponent\nProperties:\n  Configuration: \n    StudioComponentConfiguration\n  Description: String\n  Ec2SecurityGroupIds: \n    - String\n  InitializationScripts: \n    - StudioComponentInitializationScript\n  Name: String\n  RuntimeRoleArn: String\n  ScriptParameters: \n    - ScriptParameterKeyValue\n  SecureInitializationRoleArn: String\n  StudioId: String\n  Subtype: String\n  Tags: \n    Key: Value\n  Type: String\n","awsServiceName":"NimbleStudio","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Oam::Link","awsResourceTypeName":"oam-link","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Oam::Link\",\n  \"Properties\" : {\n      \"LabelTemplate\" : String,\n      \"LinkConfiguration\" : LinkConfiguration,\n      \"ResourceTypes\" : [ String, ... ],\n      \"SinkIdentifier\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Oam::Link\nProperties:\n  LabelTemplate: String\n  LinkConfiguration: \n    LinkConfiguration\n  ResourceTypes: \n    - String\n  SinkIdentifier: String\n  Tags: \n    Key: Value\n","awsServiceName":"Oam","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Oam::Sink","awsResourceTypeName":"oam-sink","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Oam::Sink\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Oam::Sink\nProperties:\n  Name: String\n  Policy: Json\n  Tags: \n    Key: Value\n","awsServiceName":"Oam","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Omics::AnnotationStore","awsResourceTypeName":"omics-annotationstore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::AnnotationStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Reference\" : ReferenceItem,\n      \"SseConfig\" : SseConfig,\n      \"StoreFormat\" : String,\n      \"StoreOptions\" : StoreOptions,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::AnnotationStore\nProperties:\n  Description: String\n  Name: String\n  Reference: \n    ReferenceItem\n  SseConfig: \n    SseConfig\n  StoreFormat: String\n  StoreOptions: \n    StoreOptions\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::ReferenceStore","awsResourceTypeName":"omics-referencestore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::ReferenceStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"SseConfig\" : SseConfig,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::ReferenceStore\nProperties:\n  Description: String\n  Name: String\n  SseConfig: \n    SseConfig\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::RunGroup","awsResourceTypeName":"omics-rungroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::RunGroup\",\n  \"Properties\" : {\n      \"MaxCpus\" : Number,\n      \"MaxDuration\" : Number,\n      \"MaxGpus\" : Number,\n      \"MaxRuns\" : Number,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::RunGroup\nProperties:\n  MaxCpus: Number\n  MaxDuration: Number\n  MaxGpus: Number\n  MaxRuns: Number\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::SequenceStore","awsResourceTypeName":"omics-sequencestore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::SequenceStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"FallbackLocation\" : String,\n      \"Name\" : String,\n      \"SseConfig\" : SseConfig,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::SequenceStore\nProperties:\n  Description: String\n  FallbackLocation: String\n  Name: String\n  SseConfig: \n    SseConfig\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::VariantStore","awsResourceTypeName":"omics-variantstore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::VariantStore\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Reference\" : ReferenceItem,\n      \"SseConfig\" : SseConfig,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::VariantStore\nProperties:\n  Description: String\n  Name: String\n  Reference: \n    ReferenceItem\n  SseConfig: \n    SseConfig\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::Omics::Workflow","awsResourceTypeName":"omics-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Omics::Workflow\",\n  \"Properties\" : {\n      \"Accelerators\" : String,\n      \"DefinitionUri\" : String,\n      \"Description\" : String,\n      \"Engine\" : String,\n      \"Main\" : String,\n      \"Name\" : String,\n      \"ParameterTemplate\" : {Key: Value, ...},\n      \"StorageCapacity\" : Number,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Omics::Workflow\nProperties:\n  Accelerators: String\n  DefinitionUri: String\n  Description: String\n  Engine: String\n  Main: String\n  Name: String\n  ParameterTemplate: \n    Key: Value\n  StorageCapacity: Number\n  Tags: \n    Key: Value\n","awsServiceName":"Omics","awsServiceCategory":"other"},{"awsResourceType":"AWS::OSIS::Pipeline","awsResourceTypeName":"osis-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OSIS::Pipeline\",\n  \"Properties\" : {\n      \"BufferOptions\" : BufferOptions,\n      \"EncryptionAtRestOptions\" : EncryptionAtRestOptions,\n      \"LogPublishingOptions\" : LogPublishingOptions,\n      \"MaxUnits\" : Integer,\n      \"MinUnits\" : Integer,\n      \"PipelineConfigurationBody\" : String,\n      \"PipelineName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcOptions\" : VpcOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OSIS::Pipeline\nProperties:\n  BufferOptions: \n    BufferOptions\n  EncryptionAtRestOptions: \n    EncryptionAtRestOptions\n  LogPublishingOptions: \n    LogPublishingOptions\n  MaxUnits: Integer\n  MinUnits: Integer\n  PipelineConfigurationBody: String\n  PipelineName: String\n  Tags: \n    - Tag\n  VpcOptions: \n    VpcOptions\n","awsServiceName":"OSIS","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchService::Domain","awsResourceTypeName":"opensearchservice-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchService::Domain\",\n  \"Properties\" : {\n      \"AccessPolicies\" : Json,\n      \"AdvancedOptions\" : {Key: Value, ...},\n      \"AdvancedSecurityOptions\" : AdvancedSecurityOptionsInput,\n      \"ClusterConfig\" : ClusterConfig,\n      \"CognitoOptions\" : CognitoOptions,\n      \"DomainEndpointOptions\" : DomainEndpointOptions,\n      \"DomainName\" : String,\n      \"EBSOptions\" : EBSOptions,\n      \"EncryptionAtRestOptions\" : EncryptionAtRestOptions,\n      \"EngineVersion\" : String,\n      \"IPAddressType\" : String,\n      \"LogPublishingOptions\" : {Key: Value, ...},\n      \"NodeToNodeEncryptionOptions\" : NodeToNodeEncryptionOptions,\n      \"OffPeakWindowOptions\" : OffPeakWindowOptions,\n      \"SnapshotOptions\" : SnapshotOptions,\n      \"SoftwareUpdateOptions\" : SoftwareUpdateOptions,\n      \"Tags\" : [ Tag, ... ],\n      \"VPCOptions\" : VPCOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchService::Domain\nProperties:\n  AccessPolicies: Json\n  AdvancedOptions: \n    Key: Value\n  AdvancedSecurityOptions: \n    AdvancedSecurityOptionsInput\n  ClusterConfig: \n    ClusterConfig\n  CognitoOptions: \n    CognitoOptions\n  DomainEndpointOptions: \n    DomainEndpointOptions\n  DomainName: String\n  EBSOptions: \n    EBSOptions\n  EncryptionAtRestOptions: \n    EncryptionAtRestOptions\n  EngineVersion: String\n  IPAddressType: String\n  LogPublishingOptions: \n    Key: Value\n  NodeToNodeEncryptionOptions: \n    NodeToNodeEncryptionOptions\n  OffPeakWindowOptions: \n    OffPeakWindowOptions\n  SnapshotOptions: \n    SnapshotOptions\n  SoftwareUpdateOptions: \n    SoftwareUpdateOptions\n  Tags: \n    - Tag\n  VPCOptions: \n    VPCOptions\n","awsServiceName":"OpenSearchService","awsServiceCategory":"other"},{"awsResourceType":"AWS::Elasticsearch::Domain","awsResourceTypeName":"elasticsearch-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Elasticsearch::Domain\",\n  \"Properties\" : {\n      \"AccessPolicies\" : Json,\n      \"AdvancedOptions\" : {Key: Value, ...},\n      \"AdvancedSecurityOptions\" : AdvancedSecurityOptionsInput,\n      \"CognitoOptions\" : CognitoOptions,\n      \"DomainEndpointOptions\" : DomainEndpointOptions,\n      \"DomainName\" : String,\n      \"EBSOptions\" : EBSOptions,\n      \"ElasticsearchClusterConfig\" : ElasticsearchClusterConfig,\n      \"ElasticsearchVersion\" : String,\n      \"EncryptionAtRestOptions\" : EncryptionAtRestOptions,\n      \"LogPublishingOptions\" : {Key: Value, ...},\n      \"NodeToNodeEncryptionOptions\" : NodeToNodeEncryptionOptions,\n      \"SnapshotOptions\" : SnapshotOptions,\n      \"Tags\" : [ Tag, ... ],\n      \"VPCOptions\" : VPCOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Elasticsearch::Domain\nProperties:\n  AccessPolicies: Json\n  AdvancedOptions: \n    Key: Value\n  AdvancedSecurityOptions: \n    AdvancedSecurityOptionsInput\n  CognitoOptions: \n    CognitoOptions\n  DomainEndpointOptions: \n    DomainEndpointOptions\n  DomainName: String\n  EBSOptions: \n    EBSOptions\n  ElasticsearchClusterConfig: \n    ElasticsearchClusterConfig\n  ElasticsearchVersion: String\n  EncryptionAtRestOptions: \n    EncryptionAtRestOptions\n  LogPublishingOptions: \n    Key: Value\n  NodeToNodeEncryptionOptions: \n    NodeToNodeEncryptionOptions\n  SnapshotOptions: \n    SnapshotOptions\n  Tags: \n    - Tag\n  VPCOptions: \n    VPCOptions\n","awsServiceName":"Elasticsearch","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::AccessPolicy","awsResourceTypeName":"opensearchserverless-accesspolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::AccessPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policy\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::AccessPolicy\nProperties:\n  Description: String\n  Name: String\n  Policy: String\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::Collection","awsResourceTypeName":"opensearchserverless-collection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::Collection\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"StandbyReplicas\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::Collection\nProperties:\n  Description: String\n  Name: String\n  StandbyReplicas: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::LifecyclePolicy","awsResourceTypeName":"opensearchserverless-lifecyclepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::LifecyclePolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policy\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::LifecyclePolicy\nProperties:\n  Description: String\n  Name: String\n  Policy: String\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::SecurityConfig","awsResourceTypeName":"opensearchserverless-securityconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::SecurityConfig\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"SamlOptions\" : SamlConfigOptions,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::SecurityConfig\nProperties:\n  Description: String\n  Name: String\n  SamlOptions: \n    SamlConfigOptions\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::SecurityPolicy","awsResourceTypeName":"opensearchserverless-securitypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::SecurityPolicy\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policy\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::SecurityPolicy\nProperties:\n  Description: String\n  Name: String\n  Policy: String\n  Type: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpenSearchServerless::VpcEndpoint","awsResourceTypeName":"opensearchserverless-vpcendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpenSearchServerless::VpcEndpoint\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpenSearchServerless::VpcEndpoint\nProperties:\n  Name: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  VpcId: String\n","awsServiceName":"OpenSearchServerless","awsServiceCategory":"other"},{"awsResourceType":"AWS::OpsWorks::App","awsResourceTypeName":"opsworks-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::App\",\n  \"Properties\" : {\n      \"AppSource\" : Source,\n      \"Attributes\" : {Key: Value, ...},\n      \"DataSources\" : [ DataSource, ... ],\n      \"Description\" : String,\n      \"Domains\" : [ String, ... ],\n      \"EnableSsl\" : Boolean,\n      \"Environment\" : [ EnvironmentVariable, ... ],\n      \"Name\" : String,\n      \"Shortname\" : String,\n      \"SslConfiguration\" : SslConfiguration,\n      \"StackId\" : String,\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::App\nProperties:\n  AppSource: \n    Source\n  Attributes: \n    Key: Value\n  DataSources: \n    - DataSource\n  Description: String\n  Domains: \n    - String\n  EnableSsl: Boolean\n  Environment: \n    - EnvironmentVariable\n  Name: String\n  Shortname: String\n  SslConfiguration: \n    SslConfiguration\n  StackId: String\n  Type: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::ElasticLoadBalancerAttachment","awsResourceTypeName":"opsworks-elasticloadbalancerattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::ElasticLoadBalancerAttachment\",\n  \"Properties\" : {\n      \"ElasticLoadBalancerName\" : String,\n      \"LayerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::ElasticLoadBalancerAttachment\nProperties:\n  ElasticLoadBalancerName: String\n  LayerId: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Instance","awsResourceTypeName":"opsworks-instance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Instance\",\n  \"Properties\" : {\n      \"AgentVersion\" : String,\n      \"AmiId\" : String,\n      \"Architecture\" : String,\n      \"AutoScalingType\" : String,\n      \"AvailabilityZone\" : String,\n      \"BlockDeviceMappings\" : [ BlockDeviceMapping, ... ],\n      \"EbsOptimized\" : Boolean,\n      \"ElasticIps\" : [ String, ... ],\n      \"Hostname\" : String,\n      \"InstallUpdatesOnBoot\" : Boolean,\n      \"InstanceType\" : String,\n      \"LayerIds\" : [ String, ... ],\n      \"Os\" : String,\n      \"RootDeviceType\" : String,\n      \"SshKeyName\" : String,\n      \"StackId\" : String,\n      \"SubnetId\" : String,\n      \"Tenancy\" : String,\n      \"TimeBasedAutoScaling\" : TimeBasedAutoScaling,\n      \"VirtualizationType\" : String,\n      \"Volumes\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Instance\nProperties:\n  AgentVersion: String\n  AmiId: String\n  Architecture: String\n  AutoScalingType: String\n  AvailabilityZone: String\n  BlockDeviceMappings: \n    - BlockDeviceMapping\n  EbsOptimized: Boolean\n  ElasticIps: \n    - String\n  Hostname: String\n  InstallUpdatesOnBoot: Boolean\n  InstanceType: String\n  LayerIds: \n    - String\n  Os: String\n  RootDeviceType: String\n  SshKeyName: String\n  StackId: String\n  SubnetId: String\n  Tenancy: String\n  TimeBasedAutoScaling: \n    TimeBasedAutoScaling\n  VirtualizationType: String\n  Volumes: \n    - String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Layer","awsResourceTypeName":"opsworks-layer","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Layer\",\n  \"Properties\" : {\n      \"Attributes\" : {Key: Value, ...},\n      \"AutoAssignElasticIps\" : Boolean,\n      \"AutoAssignPublicIps\" : Boolean,\n      \"CustomInstanceProfileArn\" : String,\n      \"CustomJson\" : Json,\n      \"CustomRecipes\" : Recipes,\n      \"CustomSecurityGroupIds\" : [ String, ... ],\n      \"EnableAutoHealing\" : Boolean,\n      \"InstallUpdatesOnBoot\" : Boolean,\n      \"LifecycleEventConfiguration\" : LifecycleEventConfiguration,\n      \"LoadBasedAutoScaling\" : LoadBasedAutoScaling,\n      \"Name\" : String,\n      \"Packages\" : [ String, ... ],\n      \"Shortname\" : String,\n      \"StackId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"UseEbsOptimizedInstances\" : Boolean,\n      \"VolumeConfigurations\" : [ VolumeConfiguration, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Layer\nProperties:\n  Attributes: \n    Key: Value\n  AutoAssignElasticIps: Boolean\n  AutoAssignPublicIps: Boolean\n  CustomInstanceProfileArn: String\n  CustomJson: \n    Json\n  CustomRecipes: \n    Recipes\n  CustomSecurityGroupIds: \n    - String\n  EnableAutoHealing: Boolean\n  InstallUpdatesOnBoot: Boolean\n  LifecycleEventConfiguration: \n    LifecycleEventConfiguration\n  LoadBasedAutoScaling: \n    LoadBasedAutoScaling\n  Name: String\n  Packages: \n    - String\n  Shortname: String\n  StackId: String\n  Tags: \n    - Tag\n  Type: String\n  UseEbsOptimizedInstances: Boolean\n  VolumeConfigurations: \n    - VolumeConfiguration\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Stack","awsResourceTypeName":"opsworks-stack","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Stack\",\n  \"Properties\" : {\n      \"AgentVersion\" : String,\n      \"Attributes\" : {Key: Value, ...},\n      \"ChefConfiguration\" : ChefConfiguration,\n      \"CloneAppIds\" : [ String, ... ],\n      \"ClonePermissions\" : Boolean,\n      \"ConfigurationManager\" : StackConfigurationManager,\n      \"CustomCookbooksSource\" : Source,\n      \"CustomJson\" : Json,\n      \"DefaultAvailabilityZone\" : String,\n      \"DefaultInstanceProfileArn\" : String,\n      \"DefaultOs\" : String,\n      \"DefaultRootDeviceType\" : String,\n      \"DefaultSshKeyName\" : String,\n      \"DefaultSubnetId\" : String,\n      \"EcsClusterArn\" : String,\n      \"ElasticIps\" : [ ElasticIp, ... ],\n      \"HostnameTheme\" : String,\n      \"Name\" : String,\n      \"RdsDbInstances\" : [ RdsDbInstance, ... ],\n      \"ServiceRoleArn\" : String,\n      \"SourceStackId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseCustomCookbooks\" : Boolean,\n      \"UseOpsworksSecurityGroups\" : Boolean,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Stack\nProperties:\n  AgentVersion: String\n  Attributes: \n    Key: Value\n  ChefConfiguration: \n    ChefConfiguration\n  CloneAppIds: \n    - String\n  ClonePermissions: Boolean\n  ConfigurationManager: \n    StackConfigurationManager\n  CustomCookbooksSource: \n    Source\n  CustomJson: \n    Json\n  DefaultAvailabilityZone: String\n  DefaultInstanceProfileArn: String\n  DefaultOs: String\n  DefaultRootDeviceType: String\n  DefaultSshKeyName: String\n  DefaultSubnetId: String\n  EcsClusterArn: String\n  ElasticIps: \n    - ElasticIp\n  HostnameTheme: String\n  Name: String\n  RdsDbInstances: \n    - RdsDbInstance\n  ServiceRoleArn: String\n  SourceStackId: String\n  Tags: \n    - Tag\n  UseCustomCookbooks: Boolean\n  UseOpsworksSecurityGroups: Boolean\n  VpcId: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::UserProfile","awsResourceTypeName":"opsworks-userprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::UserProfile\",\n  \"Properties\" : {\n      \"AllowSelfManagement\" : Boolean,\n      \"IamUserArn\" : String,\n      \"SshPublicKey\" : String,\n      \"SshUsername\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::UserProfile\nProperties:\n  AllowSelfManagement: Boolean\n  IamUserArn: String\n  SshPublicKey: String\n  SshUsername: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorks::Volume","awsResourceTypeName":"opsworks-volume","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorks::Volume\",\n  \"Properties\" : {\n      \"Ec2VolumeId\" : String,\n      \"MountPoint\" : String,\n      \"Name\" : String,\n      \"StackId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorks::Volume\nProperties:\n  Ec2VolumeId: String\n  MountPoint: String\n  Name: String\n  StackId: String\n","awsServiceName":"OpsWorks","awsServiceCategory":"management"},{"awsResourceType":"AWS::OpsWorksCM::Server","awsResourceTypeName":"opsworkscm-server","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::OpsWorksCM::Server\",\n  \"Properties\" : {\n      \"AssociatePublicIpAddress\" : Boolean,\n      \"BackupId\" : String,\n      \"BackupRetentionCount\" : Integer,\n      \"CustomCertificate\" : String,\n      \"CustomDomain\" : String,\n      \"CustomPrivateKey\" : String,\n      \"DisableAutomatedBackup\" : Boolean,\n      \"Engine\" : String,\n      \"EngineAttributes\" : [ EngineAttribute, ... ],\n      \"EngineModel\" : String,\n      \"EngineVersion\" : String,\n      \"InstanceProfileArn\" : String,\n      \"InstanceType\" : String,\n      \"KeyPair\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServiceRoleArn\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::OpsWorksCM::Server\nProperties:\n  AssociatePublicIpAddress: Boolean\n  BackupId: String\n  BackupRetentionCount: Integer\n  CustomCertificate: String\n  CustomDomain: String\n  CustomPrivateKey: String\n  DisableAutomatedBackup: Boolean\n  Engine: String\n  EngineAttributes: \n    - EngineAttribute\n  EngineModel: String\n  EngineVersion: String\n  InstanceProfileArn: String\n  InstanceType: String\n  KeyPair: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  SecurityGroupIds: \n    - String\n  ServiceRoleArn: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"OpsWorksCM","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::Account","awsResourceTypeName":"organizations-account","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::Account\",\n  \"Properties\" : {\n      \"AccountName\" : String,\n      \"Email\" : String,\n      \"ParentIds\" : [ String, ... ],\n      \"RoleName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::Account\nProperties:\n  AccountName: String\n  Email: String\n  ParentIds: \n    - String\n  RoleName: String\n  Tags: \n    - Tag\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::Organization","awsResourceTypeName":"organizations-organization","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::Organization\",\n  \"Properties\" : {\n      \"FeatureSet\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::Organization\nProperties:\n  FeatureSet: String\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::OrganizationalUnit","awsResourceTypeName":"organizations-organizationalunit","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::OrganizationalUnit\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ParentId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::OrganizationalUnit\nProperties:\n  Name: String\n  ParentId: String\n  Tags: \n    - Tag\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::Policy","awsResourceTypeName":"organizations-policy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::Policy\",\n  \"Properties\" : {\n      \"Content\" : Json,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetIds\" : [ String, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::Policy\nProperties:\n  Content: Json\n  Description: String\n  Name: String\n  Tags: \n    - Tag\n  TargetIds: \n    - String\n  Type: String\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Organizations::ResourcePolicy","awsResourceTypeName":"organizations-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Organizations::ResourcePolicy\",\n  \"Properties\" : {\n      \"Content\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Organizations::ResourcePolicy\nProperties:\n  Content: Json\n  Tags: \n    - Tag\n","awsServiceName":"Organizations","awsServiceCategory":"management"},{"awsResourceType":"AWS::Panorama::ApplicationInstance","awsResourceTypeName":"panorama-applicationinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Panorama::ApplicationInstance\",\n  \"Properties\" : {\n      \"ApplicationInstanceIdToReplace\" : String,\n      \"DefaultRuntimeContextDevice\" : String,\n      \"Description\" : String,\n      \"ManifestOverridesPayload\" : ManifestOverridesPayload,\n      \"ManifestPayload\" : ManifestPayload,\n      \"Name\" : String,\n      \"RuntimeRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Panorama::ApplicationInstance\nProperties:\n  ApplicationInstanceIdToReplace: String\n  DefaultRuntimeContextDevice: String\n  Description: String\n  ManifestOverridesPayload: \n    ManifestOverridesPayload\n  ManifestPayload: \n    ManifestPayload\n  Name: String\n  RuntimeRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Panorama","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Panorama::Package","awsResourceTypeName":"panorama-package","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Panorama::Package\",\n  \"Properties\" : {\n      \"PackageName\" : String,\n      \"StorageLocation\" : StorageLocation,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Panorama::Package\nProperties:\n  PackageName: String\n  StorageLocation: \n    StorageLocation\n  Tags: \n    - Tag\n","awsServiceName":"Panorama","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Panorama::PackageVersion","awsResourceTypeName":"panorama-packageversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Panorama::PackageVersion\",\n  \"Properties\" : {\n      \"MarkLatest\" : Boolean,\n      \"OwnerAccount\" : String,\n      \"PackageId\" : String,\n      \"PackageVersion\" : String,\n      \"PatchVersion\" : String,\n      \"UpdatedLatestPatchVersion\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Panorama::PackageVersion\nProperties:\n  MarkLatest: Boolean\n  OwnerAccount: String\n  PackageId: String\n  PackageVersion: String\n  PatchVersion: String\n  UpdatedLatestPatchVersion: String\n","awsServiceName":"Panorama","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Personalize::Dataset","awsResourceTypeName":"personalize-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::Dataset\",\n  \"Properties\" : {\n      \"DatasetGroupArn\" : String,\n      \"DatasetImportJob\" : DatasetImportJob,\n      \"DatasetType\" : String,\n      \"Name\" : String,\n      \"SchemaArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::Dataset\nProperties:\n  DatasetGroupArn: String\n  DatasetImportJob: \n    DatasetImportJob\n  DatasetType: String\n  Name: String\n  SchemaArn: String\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Personalize::DatasetGroup","awsResourceTypeName":"personalize-datasetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::DatasetGroup\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"KmsKeyArn\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::DatasetGroup\nProperties:\n  Domain: String\n  KmsKeyArn: String\n  Name: String\n  RoleArn: String\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Personalize::Schema","awsResourceTypeName":"personalize-schema","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::Schema\",\n  \"Properties\" : {\n      \"Domain\" : String,\n      \"Name\" : String,\n      \"Schema\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::Schema\nProperties:\n  Domain: String\n  Name: String\n  Schema: String\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Personalize::Solution","awsResourceTypeName":"personalize-solution","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Personalize::Solution\",\n  \"Properties\" : {\n      \"DatasetGroupArn\" : String,\n      \"EventType\" : String,\n      \"Name\" : String,\n      \"PerformAutoML\" : Boolean,\n      \"PerformHPO\" : Boolean,\n      \"RecipeArn\" : String,\n      \"SolutionConfig\" : SolutionConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Personalize::Solution\nProperties:\n  DatasetGroupArn: String\n  EventType: String\n  Name: String\n  PerformAutoML: Boolean\n  PerformHPO: Boolean\n  RecipeArn: String\n  SolutionConfig: \n    SolutionConfig\n","awsServiceName":"Personalize","awsServiceCategory":"management"},{"awsResourceType":"AWS::Pinpoint::ADMChannel","awsResourceTypeName":"pinpoint-admchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::ADMChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ClientId\" : String,\n      \"ClientSecret\" : String,\n      \"Enabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::ADMChannel\nProperties:\n  ApplicationId: String\n  ClientId: String\n  ClientSecret: String\n  Enabled: Boolean\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSChannel","awsResourceTypeName":"pinpoint-apnschannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSSandboxChannel","awsResourceTypeName":"pinpoint-apnssandboxchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSSandboxChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSSandboxChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSVoipChannel","awsResourceTypeName":"pinpoint-apnsvoipchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSVoipChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSVoipChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::APNSVoipSandboxChannel","awsResourceTypeName":"pinpoint-apnsvoipsandboxchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::APNSVoipSandboxChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"BundleId\" : String,\n      \"Certificate\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"PrivateKey\" : String,\n      \"TeamId\" : String,\n      \"TokenKey\" : String,\n      \"TokenKeyId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::APNSVoipSandboxChannel\nProperties:\n  ApplicationId: String\n  BundleId: String\n  Certificate: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  PrivateKey: String\n  TeamId: String\n  TokenKey: String\n  TokenKeyId: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::App","awsResourceTypeName":"pinpoint-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::App\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::App\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::ApplicationSettings","awsResourceTypeName":"pinpoint-applicationsettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::ApplicationSettings\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"CampaignHook\" : CampaignHook,\n      \"CloudWatchMetricsEnabled\" : Boolean,\n      \"Limits\" : Limits,\n      \"QuietTime\" : QuietTime\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::ApplicationSettings\nProperties:\n  ApplicationId: String\n  CampaignHook: \n    CampaignHook\n  CloudWatchMetricsEnabled: Boolean\n  Limits: \n    Limits\n  QuietTime: \n    QuietTime\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::BaiduChannel","awsResourceTypeName":"pinpoint-baiduchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::BaiduChannel\",\n  \"Properties\" : {\n      \"ApiKey\" : String,\n      \"ApplicationId\" : String,\n      \"Enabled\" : Boolean,\n      \"SecretKey\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::BaiduChannel\nProperties:\n  ApiKey: String\n  ApplicationId: String\n  Enabled: Boolean\n  SecretKey: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::Campaign","awsResourceTypeName":"pinpoint-campaign","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::Campaign\",\n  \"Properties\" : {\n      \"AdditionalTreatments\" : [ WriteTreatmentResource, ... ],\n      \"ApplicationId\" : String,\n      \"CampaignHook\" : CampaignHook,\n      \"CustomDeliveryConfiguration\" : CustomDeliveryConfiguration,\n      \"Description\" : String,\n      \"HoldoutPercent\" : Integer,\n      \"IsPaused\" : Boolean,\n      \"Limits\" : Limits,\n      \"MessageConfiguration\" : MessageConfiguration,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"Schedule\" : Schedule,\n      \"SegmentId\" : String,\n      \"SegmentVersion\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateConfiguration\" : TemplateConfiguration,\n      \"TreatmentDescription\" : String,\n      \"TreatmentName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::Campaign\nProperties:\n  AdditionalTreatments: \n    - WriteTreatmentResource\n  ApplicationId: String\n  CampaignHook: \n    CampaignHook\n  CustomDeliveryConfiguration: \n    CustomDeliveryConfiguration\n  Description: String\n  HoldoutPercent: Integer\n  IsPaused: Boolean\n  Limits: \n    Limits\n  MessageConfiguration: \n    MessageConfiguration\n  Name: String\n  Priority: Integer\n  Schedule: \n    Schedule\n  SegmentId: String\n  SegmentVersion: Integer\n  Tags: \n    - Tag\n  TemplateConfiguration: \n    TemplateConfiguration\n  TreatmentDescription: String\n  TreatmentName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::EmailChannel","awsResourceTypeName":"pinpoint-emailchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::EmailChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ConfigurationSet\" : String,\n      \"Enabled\" : Boolean,\n      \"FromAddress\" : String,\n      \"Identity\" : String,\n      \"OrchestrationSendingRoleArn\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::EmailChannel\nProperties:\n  ApplicationId: String\n  ConfigurationSet: String\n  Enabled: Boolean\n  FromAddress: String\n  Identity: String\n  OrchestrationSendingRoleArn: String\n  RoleArn: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::EmailTemplate","awsResourceTypeName":"pinpoint-emailtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::EmailTemplate\",\n  \"Properties\" : {\n      \"DefaultSubstitutions\" : String,\n      \"HtmlPart\" : String,\n      \"Subject\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String,\n      \"TextPart\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::EmailTemplate\nProperties:\n  DefaultSubstitutions: String\n  HtmlPart: String\n  Subject: String\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n  TextPart: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::EventStream","awsResourceTypeName":"pinpoint-eventstream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::EventStream\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"DestinationStreamArn\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::EventStream\nProperties:\n  ApplicationId: String\n  DestinationStreamArn: String\n  RoleArn: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::GCMChannel","awsResourceTypeName":"pinpoint-gcmchannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::GCMChannel\",\n  \"Properties\" : {\n      \"ApiKey\" : String,\n      \"ApplicationId\" : String,\n      \"DefaultAuthenticationMethod\" : String,\n      \"Enabled\" : Boolean,\n      \"ServiceJson\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::GCMChannel\nProperties:\n  ApiKey: String\n  ApplicationId: String\n  DefaultAuthenticationMethod: String\n  Enabled: Boolean\n  ServiceJson: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::InAppTemplate","awsResourceTypeName":"pinpoint-inapptemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::InAppTemplate\",\n  \"Properties\" : {\n      \"Content\" : [ InAppMessageContent, ... ],\n      \"CustomConfig\" : Json,\n      \"Layout\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::InAppTemplate\nProperties:\n  Content: \n    - InAppMessageContent\n  CustomConfig: Json\n  Layout: String\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::PushTemplate","awsResourceTypeName":"pinpoint-pushtemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::PushTemplate\",\n  \"Properties\" : {\n      \"ADM\" : AndroidPushNotificationTemplate,\n      \"APNS\" : APNSPushNotificationTemplate,\n      \"Baidu\" : AndroidPushNotificationTemplate,\n      \"Default\" : DefaultPushNotificationTemplate,\n      \"DefaultSubstitutions\" : String,\n      \"GCM\" : AndroidPushNotificationTemplate,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::PushTemplate\nProperties:\n  ADM: \n    AndroidPushNotificationTemplate\n  APNS: \n    APNSPushNotificationTemplate\n  Baidu: \n    AndroidPushNotificationTemplate\n  Default: \n    DefaultPushNotificationTemplate\n  DefaultSubstitutions: String\n  GCM: \n    AndroidPushNotificationTemplate\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::Segment","awsResourceTypeName":"pinpoint-segment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::Segment\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Dimensions\" : SegmentDimensions,\n      \"Name\" : String,\n      \"SegmentGroups\" : SegmentGroups,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::Segment\nProperties:\n  ApplicationId: String\n  Dimensions: \n    SegmentDimensions\n  Name: String\n  SegmentGroups: \n    SegmentGroups\n  Tags: \n    - Tag\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::SMSChannel","awsResourceTypeName":"pinpoint-smschannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::SMSChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Enabled\" : Boolean,\n      \"SenderId\" : String,\n      \"ShortCode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::SMSChannel\nProperties:\n  ApplicationId: String\n  Enabled: Boolean\n  SenderId: String\n  ShortCode: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::SmsTemplate","awsResourceTypeName":"pinpoint-smstemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::SmsTemplate\",\n  \"Properties\" : {\n      \"Body\" : String,\n      \"DefaultSubstitutions\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateDescription\" : String,\n      \"TemplateName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::SmsTemplate\nProperties:\n  Body: String\n  DefaultSubstitutions: String\n  Tags: \n    - Tag\n  TemplateDescription: String\n  TemplateName: String\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::Pinpoint::VoiceChannel","awsResourceTypeName":"pinpoint-voicechannel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Pinpoint::VoiceChannel\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"Enabled\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Pinpoint::VoiceChannel\nProperties:\n  ApplicationId: String\n  Enabled: Boolean\n","awsServiceName":"Pinpoint","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::ConfigurationSet","awsResourceTypeName":"pinpointemail-configurationset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::ConfigurationSet\",\n  \"Properties\" : {\n      \"DeliveryOptions\" : DeliveryOptions,\n      \"Name\" : String,\n      \"ReputationOptions\" : ReputationOptions,\n      \"SendingOptions\" : SendingOptions,\n      \"Tags\" : [ Tags, ... ],\n      \"TrackingOptions\" : TrackingOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::ConfigurationSet\nProperties:\n  DeliveryOptions: \n    DeliveryOptions\n  Name: String\n  ReputationOptions: \n    ReputationOptions\n  SendingOptions: \n    SendingOptions\n  Tags: \n    - Tags\n  TrackingOptions: \n    TrackingOptions\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::ConfigurationSetEventDestination","awsResourceTypeName":"pinpointemail-configurationseteventdestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::ConfigurationSetEventDestination\",\n  \"Properties\" : {\n      \"ConfigurationSetName\" : String,\n      \"EventDestination\" : EventDestination,\n      \"EventDestinationName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::ConfigurationSetEventDestination\nProperties:\n  ConfigurationSetName: String\n  EventDestination: \n    EventDestination\n  EventDestinationName: String\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::DedicatedIpPool","awsResourceTypeName":"pinpointemail-dedicatedippool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::DedicatedIpPool\",\n  \"Properties\" : {\n      \"PoolName\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::DedicatedIpPool\nProperties:\n  PoolName: String\n  Tags: \n    - Tags\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::PinpointEmail::Identity","awsResourceTypeName":"pinpointemail-identity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PinpointEmail::Identity\",\n  \"Properties\" : {\n      \"DkimSigningEnabled\" : Boolean,\n      \"FeedbackForwardingEnabled\" : Boolean,\n      \"MailFromAttributes\" : MailFromAttributes,\n      \"Name\" : String,\n      \"Tags\" : [ Tags, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PinpointEmail::Identity\nProperties:\n  DkimSigningEnabled: Boolean\n  FeedbackForwardingEnabled: Boolean\n  MailFromAttributes: \n    MailFromAttributes\n  Name: String\n  Tags: \n    - Tags\n","awsServiceName":"PinpointEmail","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ACMPCA::Certificate","awsResourceTypeName":"acmpca-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::Certificate\",\n  \"Properties\" : {\n      \"ApiPassthrough\" : ApiPassthrough,\n      \"CertificateAuthorityArn\" : String,\n      \"CertificateSigningRequest\" : String,\n      \"SigningAlgorithm\" : String,\n      \"TemplateArn\" : String,\n      \"Validity\" : Validity,\n      \"ValidityNotBefore\" : Validity\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::Certificate\nProperties:\n  ApiPassthrough: \n    ApiPassthrough\n  CertificateAuthorityArn: String\n  CertificateSigningRequest: String\n  SigningAlgorithm: String\n  TemplateArn: String\n  Validity: \n    Validity\n  ValidityNotBefore: \n    Validity\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::ACMPCA::CertificateAuthority","awsResourceTypeName":"acmpca-certificateauthority","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::CertificateAuthority\",\n  \"Properties\" : {\n      \"CsrExtensions\" : CsrExtensions,\n      \"KeyAlgorithm\" : String,\n      \"KeyStorageSecurityStandard\" : String,\n      \"RevocationConfiguration\" : RevocationConfiguration,\n      \"SigningAlgorithm\" : String,\n      \"Subject\" : Subject,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"UsageMode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::CertificateAuthority\nProperties:\n  CsrExtensions: \n    CsrExtensions\n  KeyAlgorithm: String\n  KeyStorageSecurityStandard: String\n  RevocationConfiguration: \n    RevocationConfiguration\n  SigningAlgorithm: String\n  Subject: \n    Subject\n  Tags: \n    - Tag\n  Type: String\n  UsageMode: String\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::ACMPCA::CertificateAuthorityActivation","awsResourceTypeName":"acmpca-certificateauthorityactivation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::CertificateAuthorityActivation\",\n  \"Properties\" : {\n      \"Certificate\" : String,\n      \"CertificateAuthorityArn\" : String,\n      \"CertificateChain\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::CertificateAuthorityActivation\nProperties:\n  Certificate: String\n  CertificateAuthorityArn: String\n  CertificateChain: String\n  Status: String\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::ACMPCA::Permission","awsResourceTypeName":"acmpca-permission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ACMPCA::Permission\",\n  \"Properties\" : {\n      \"Actions\" : [ String, ... ],\n      \"CertificateAuthorityArn\" : String,\n      \"Principal\" : String,\n      \"SourceAccount\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ACMPCA::Permission\nProperties:\n  Actions: \n    - String\n  CertificateAuthorityArn: String\n  Principal: String\n  SourceAccount: String\n","awsServiceName":"ACMPCA","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::Connector","awsResourceTypeName":"pcaconnectorad-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::Connector\",\n  \"Properties\" : {\n      \"CertificateAuthorityArn\" : String,\n      \"DirectoryId\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"VpcInformation\" : VpcInformation\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::Connector\nProperties:\n  CertificateAuthorityArn: String\n  DirectoryId: String\n  Tags: \n    Key: Value\n  VpcInformation: \n    VpcInformation\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::DirectoryRegistration","awsResourceTypeName":"pcaconnectorad-directoryregistration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::DirectoryRegistration\",\n  \"Properties\" : {\n      \"DirectoryId\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::DirectoryRegistration\nProperties:\n  DirectoryId: String\n  Tags: \n    Key: Value\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::ServicePrincipalName","awsResourceTypeName":"pcaconnectorad-serviceprincipalname","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::ServicePrincipalName\",\n  \"Properties\" : {\n      \"ConnectorArn\" : String,\n      \"DirectoryRegistrationArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::ServicePrincipalName\nProperties:\n  ConnectorArn: String\n  DirectoryRegistrationArn: String\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::Template","awsResourceTypeName":"pcaconnectorad-template","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::Template\",\n  \"Properties\" : {\n      \"ConnectorArn\" : String,\n      \"Definition\" : TemplateDefinition,\n      \"Name\" : String,\n      \"ReenrollAllCertificateHolders\" : Boolean,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::Template\nProperties:\n  ConnectorArn: String\n  Definition: \n    TemplateDefinition\n  Name: String\n  ReenrollAllCertificateHolders: Boolean\n  Tags: \n    Key: Value\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::PCAConnectorAD::TemplateGroupAccessControlEntry","awsResourceTypeName":"pcaconnectorad-templategroupaccesscontrolentry","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::PCAConnectorAD::TemplateGroupAccessControlEntry\",\n  \"Properties\" : {\n      \"AccessRights\" : AccessRights,\n      \"GroupDisplayName\" : String,\n      \"GroupSecurityIdentifier\" : String,\n      \"TemplateArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::PCAConnectorAD::TemplateGroupAccessControlEntry\nProperties:\n  AccessRights: \n    AccessRights\n  GroupDisplayName: String\n  GroupSecurityIdentifier: String\n  TemplateArn: String\n","awsServiceName":"PCAConnectorAD","awsServiceCategory":"security"},{"awsResourceType":"AWS::Proton::EnvironmentAccountConnection","awsResourceTypeName":"proton-environmentaccountconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Proton::EnvironmentAccountConnection\",\n  \"Properties\" : {\n      \"CodebuildRoleArn\" : String,\n      \"ComponentRoleArn\" : String,\n      \"EnvironmentAccountId\" : String,\n      \"EnvironmentName\" : String,\n      \"ManagementAccountId\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Proton::EnvironmentAccountConnection\nProperties:\n  CodebuildRoleArn: String\n  ComponentRoleArn: String\n  EnvironmentAccountId: String\n  EnvironmentName: String\n  ManagementAccountId: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Proton","awsServiceCategory":"other"},{"awsResourceType":"AWS::Proton::EnvironmentTemplate","awsResourceTypeName":"proton-environmenttemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Proton::EnvironmentTemplate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"EncryptionKey\" : String,\n      \"Name\" : String,\n      \"Provisioning\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Proton::EnvironmentTemplate\nProperties:\n  Description: String\n  DisplayName: String\n  EncryptionKey: String\n  Name: String\n  Provisioning: String\n  Tags: \n    - Tag\n","awsServiceName":"Proton","awsServiceCategory":"other"},{"awsResourceType":"AWS::Proton::ServiceTemplate","awsResourceTypeName":"proton-servicetemplate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Proton::ServiceTemplate\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"EncryptionKey\" : String,\n      \"Name\" : String,\n      \"PipelineProvisioning\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Proton::ServiceTemplate\nProperties:\n  Description: String\n  DisplayName: String\n  EncryptionKey: String\n  Name: String\n  PipelineProvisioning: String\n  Tags: \n    - Tag\n","awsServiceName":"Proton","awsServiceCategory":"other"},{"awsResourceType":"AWS::APS::RuleGroupsNamespace","awsResourceTypeName":"aps-rulegroupsnamespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::APS::RuleGroupsNamespace\",\n  \"Properties\" : {\n      \"Data\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Workspace\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::APS::RuleGroupsNamespace\nProperties:\n  Data: String\n  Name: String\n  Tags: \n    - Tag\n  Workspace: String\n","awsServiceName":"APS","awsServiceCategory":"other"},{"awsResourceType":"AWS::APS::Scraper","awsResourceTypeName":"aps-scraper","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::APS::Scraper\",\n  \"Properties\" : {\n      \"Alias\" : String,\n      \"Destination\" : Destination,\n      \"ScrapeConfiguration\" : ScrapeConfiguration,\n      \"Source\" : Source,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::APS::Scraper\nProperties:\n  Alias: String\n  Destination: \n    Destination\n  ScrapeConfiguration: \n    ScrapeConfiguration\n  Source: \n    Source\n  Tags: \n    - Tag\n","awsServiceName":"APS","awsServiceCategory":"other"},{"awsResourceType":"AWS::APS::Workspace","awsResourceTypeName":"aps-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::APS::Workspace\",\n  \"Properties\" : {\n      \"AlertManagerDefinition\" : String,\n      \"Alias\" : String,\n      \"KmsKeyArn\" : String,\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::APS::Workspace\nProperties:\n  AlertManagerDefinition: String\n  Alias: String\n  KmsKeyArn: String\n  LoggingConfiguration: \n    LoggingConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"APS","awsServiceCategory":"other"},{"awsResourceType":"AWS::QLDB::Ledger","awsResourceTypeName":"qldb-ledger","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QLDB::Ledger\",\n  \"Properties\" : {\n      \"DeletionProtection\" : Boolean,\n      \"KmsKey\" : String,\n      \"Name\" : String,\n      \"PermissionsMode\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QLDB::Ledger\nProperties:\n  DeletionProtection: Boolean\n  KmsKey: String\n  Name: String\n  PermissionsMode: String\n  Tags: \n    - Tag\n","awsServiceName":"QLDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::QLDB::Stream","awsResourceTypeName":"qldb-stream","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QLDB::Stream\",\n  \"Properties\" : {\n      \"ExclusiveEndTime\" : String,\n      \"InclusiveStartTime\" : String,\n      \"KinesisConfiguration\" : KinesisConfiguration,\n      \"LedgerName\" : String,\n      \"RoleArn\" : String,\n      \"StreamName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QLDB::Stream\nProperties:\n  ExclusiveEndTime: String\n  InclusiveStartTime: String\n  KinesisConfiguration: \n    KinesisConfiguration\n  LedgerName: String\n  RoleArn: String\n  StreamName: String\n  Tags: \n    - Tag\n","awsServiceName":"QLDB","awsServiceCategory":"database"},{"awsResourceType":"AWS::QuickSight::Analysis","awsResourceTypeName":"quicksight-analysis","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Analysis\",\n  \"Properties\" : {\n      \"AnalysisId\" : String,\n      \"AwsAccountId\" : String,\n      \"Definition\" : AnalysisDefinition,\n      \"Errors\" : [ AnalysisError, ... ],\n      \"Name\" : String,\n      \"Parameters\" : Parameters,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"Sheets\" : [ Sheet, ... ],\n      \"SourceEntity\" : AnalysisSourceEntity,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThemeArn\" : String,\n      \"ValidationStrategy\" : ValidationStrategy\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Analysis\nProperties:\n  AnalysisId: String\n  AwsAccountId: String\n  Definition: \n    AnalysisDefinition\n  Errors: \n    - AnalysisError\n  Name: String\n  Parameters: \n    Parameters\n  Permissions: \n    - ResourcePermission\n  Sheets: \n    - Sheet\n  SourceEntity: \n    AnalysisSourceEntity\n  Status: String\n  Tags: \n    - Tag\n  ThemeArn: String\n  ValidationStrategy: \n    ValidationStrategy\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Dashboard","awsResourceTypeName":"quicksight-dashboard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Dashboard\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"DashboardId\" : String,\n      \"DashboardPublishOptions\" : DashboardPublishOptions,\n      \"Definition\" : DashboardVersionDefinition,\n      \"LinkEntities\" : [ String, ... ],\n      \"LinkSharingConfiguration\" : LinkSharingConfiguration,\n      \"Name\" : String,\n      \"Parameters\" : Parameters,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"SourceEntity\" : DashboardSourceEntity,\n      \"Tags\" : [ Tag, ... ],\n      \"ThemeArn\" : String,\n      \"ValidationStrategy\" : ValidationStrategy,\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Dashboard\nProperties:\n  AwsAccountId: String\n  DashboardId: String\n  DashboardPublishOptions: \n    DashboardPublishOptions\n  Definition: \n    DashboardVersionDefinition\n  LinkEntities: \n    - String\n  LinkSharingConfiguration: \n    LinkSharingConfiguration\n  Name: String\n  Parameters: \n    Parameters\n  Permissions: \n    - ResourcePermission\n  SourceEntity: \n    DashboardSourceEntity\n  Tags: \n    - Tag\n  ThemeArn: String\n  ValidationStrategy: \n    ValidationStrategy\n  VersionDescription: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::DataSet","awsResourceTypeName":"quicksight-dataset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::DataSet\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"ColumnGroups\" : [ ColumnGroup, ... ],\n      \"ColumnLevelPermissionRules\" : [ ColumnLevelPermissionRule, ... ],\n      \"DataSetId\" : String,\n      \"DatasetParameters\" : [ DatasetParameter, ... ],\n      \"DataSetRefreshProperties\" : DataSetRefreshProperties,\n      \"DataSetUsageConfiguration\" : DataSetUsageConfiguration,\n      \"FieldFolders\" : {Key: Value, ...},\n      \"ImportMode\" : String,\n      \"IngestionWaitPolicy\" : IngestionWaitPolicy,\n      \"LogicalTableMap\" : {Key: Value, ...},\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"PhysicalTableMap\" : {Key: Value, ...},\n      \"RowLevelPermissionDataSet\" : RowLevelPermissionDataSet,\n      \"RowLevelPermissionTagConfiguration\" : RowLevelPermissionTagConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::DataSet\nProperties:\n  AwsAccountId: String\n  ColumnGroups: \n    - ColumnGroup\n  ColumnLevelPermissionRules: \n    - ColumnLevelPermissionRule\n  DataSetId: String\n  DatasetParameters: \n    - DatasetParameter\n  DataSetRefreshProperties: \n    DataSetRefreshProperties\n  DataSetUsageConfiguration: \n    DataSetUsageConfiguration\n  FieldFolders: \n    Key: Value\n  ImportMode: String\n  IngestionWaitPolicy: \n    IngestionWaitPolicy\n  LogicalTableMap: \n    Key: Value\n  Name: String\n  Permissions: \n    - ResourcePermission\n  PhysicalTableMap: \n    Key: Value\n  RowLevelPermissionDataSet: \n    RowLevelPermissionDataSet\n  RowLevelPermissionTagConfiguration: \n    RowLevelPermissionTagConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::DataSource","awsResourceTypeName":"quicksight-datasource","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::DataSource\",\n  \"Properties\" : {\n      \"AlternateDataSourceParameters\" : [ DataSourceParameters, ... ],\n      \"AwsAccountId\" : String,\n      \"Credentials\" : DataSourceCredentials,\n      \"DataSourceId\" : String,\n      \"DataSourceParameters\" : DataSourceParameters,\n      \"ErrorInfo\" : DataSourceErrorInfo,\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"SslProperties\" : SslProperties,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String,\n      \"VpcConnectionProperties\" : VpcConnectionProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::DataSource\nProperties:\n  AlternateDataSourceParameters: \n    - DataSourceParameters\n  AwsAccountId: String\n  Credentials: \n    DataSourceCredentials\n  DataSourceId: String\n  DataSourceParameters: \n    DataSourceParameters\n  ErrorInfo: \n    DataSourceErrorInfo\n  Name: String\n  Permissions: \n    - ResourcePermission\n  SslProperties: \n    SslProperties\n  Tags: \n    - Tag\n  Type: String\n  VpcConnectionProperties: \n    VpcConnectionProperties\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::RefreshSchedule","awsResourceTypeName":"quicksight-refreshschedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::RefreshSchedule\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"DataSetId\" : String,\n      \"Schedule\" : RefreshScheduleMap\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::RefreshSchedule\nProperties:\n  AwsAccountId: String\n  DataSetId: String\n  Schedule: \n    RefreshScheduleMap\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Template","awsResourceTypeName":"quicksight-template","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Template\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"Definition\" : TemplateVersionDefinition,\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"SourceEntity\" : TemplateSourceEntity,\n      \"Tags\" : [ Tag, ... ],\n      \"TemplateId\" : String,\n      \"ValidationStrategy\" : ValidationStrategy,\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Template\nProperties:\n  AwsAccountId: String\n  Definition: \n    TemplateVersionDefinition\n  Name: String\n  Permissions: \n    - ResourcePermission\n  SourceEntity: \n    TemplateSourceEntity\n  Tags: \n    - Tag\n  TemplateId: String\n  ValidationStrategy: \n    ValidationStrategy\n  VersionDescription: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Theme","awsResourceTypeName":"quicksight-theme","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Theme\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"BaseThemeId\" : String,\n      \"Configuration\" : ThemeConfiguration,\n      \"Name\" : String,\n      \"Permissions\" : [ ResourcePermission, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"ThemeId\" : String,\n      \"VersionDescription\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Theme\nProperties:\n  AwsAccountId: String\n  BaseThemeId: String\n  Configuration: \n    ThemeConfiguration\n  Name: String\n  Permissions: \n    - ResourcePermission\n  Tags: \n    - Tag\n  ThemeId: String\n  VersionDescription: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::Topic","awsResourceTypeName":"quicksight-topic","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::Topic\",\n  \"Properties\" : {\n      \"AwsAccountId\" : String,\n      \"DataSets\" : [ DatasetMetadata, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"TopicId\" : String,\n      \"UserExperienceVersion\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::Topic\nProperties:\n  AwsAccountId: String\n  DataSets: \n    - DatasetMetadata\n  Description: String\n  Name: String\n  TopicId: String\n  UserExperienceVersion: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::QuickSight::VPCConnection","awsResourceTypeName":"quicksight-vpcconnection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::QuickSight::VPCConnection\",\n  \"Properties\" : {\n      \"AvailabilityStatus\" : String,\n      \"AwsAccountId\" : String,\n      \"DnsResolvers\" : [ String, ... ],\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VPCConnectionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::QuickSight::VPCConnection\nProperties:\n  AvailabilityStatus: String\n  AwsAccountId: String\n  DnsResolvers: \n    - String\n  Name: String\n  RoleArn: String\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VPCConnectionId: String\n","awsServiceName":"QuickSight","awsServiceCategory":"analytics"},{"awsResourceType":"AWS::RAM::Permission","awsResourceTypeName":"ram-permission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RAM::Permission\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"PolicyTemplate\" : Json,\n      \"ResourceType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RAM::Permission\nProperties:\n  Name: String\n  PolicyTemplate: Json\n  ResourceType: String\n  Tags: \n    - Tag\n","awsServiceName":"RAM","awsServiceCategory":"other"},{"awsResourceType":"AWS::RAM::ResourceShare","awsResourceTypeName":"ram-resourceshare","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RAM::ResourceShare\",\n  \"Properties\" : {\n      \"AllowExternalPrincipals\" : Boolean,\n      \"Name\" : String,\n      \"PermissionArns\" : [ String, ... ],\n      \"Principals\" : [ String, ... ],\n      \"ResourceArns\" : [ String, ... ],\n      \"Sources\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RAM::ResourceShare\nProperties:\n  AllowExternalPrincipals: Boolean\n  Name: String\n  PermissionArns: \n    - String\n  Principals: \n    - String\n  ResourceArns: \n    - String\n  Sources: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"RAM","awsServiceCategory":"other"},{"awsResourceType":"AWS::RDS::CustomDBEngineVersion","awsResourceTypeName":"rds-customdbengineversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::CustomDBEngineVersion\",\n  \"Properties\" : {\n      \"DatabaseInstallationFilesS3BucketName\" : String,\n      \"DatabaseInstallationFilesS3Prefix\" : String,\n      \"Description\" : String,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"ImageId\" : String,\n      \"KMSKeyId\" : String,\n      \"Manifest\" : String,\n      \"SourceCustomDbEngineVersionIdentifier\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseAwsProvidedLatestImage\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::CustomDBEngineVersion\nProperties:\n  DatabaseInstallationFilesS3BucketName: String\n  DatabaseInstallationFilesS3Prefix: String\n  Description: String\n  Engine: String\n  EngineVersion: String\n  ImageId: String\n  KMSKeyId: String\n  Manifest: String\n  SourceCustomDbEngineVersionIdentifier: String\n  Status: String\n  Tags: \n    - Tag\n  UseAwsProvidedLatestImage: Boolean\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBCluster","awsResourceTypeName":"rds-dbcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBCluster\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : Integer,\n      \"AssociatedRoles\" : [ DBClusterRole, ... ],\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZones\" : [ String, ... ],\n      \"BacktrackWindow\" : Integer,\n      \"BackupRetentionPeriod\" : Integer,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"DatabaseName\" : String,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterInstanceClass\" : String,\n      \"DBClusterParameterGroupName\" : String,\n      \"DBInstanceParameterGroupName\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"DBSystemId\" : String,\n      \"DeletionProtection\" : Boolean,\n      \"Domain\" : String,\n      \"DomainIAMRoleName\" : String,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EnableGlobalWriteForwarding\" : Boolean,\n      \"EnableHttpEndpoint\" : Boolean,\n      \"EnableIAMDatabaseAuthentication\" : Boolean,\n      \"Engine\" : String,\n      \"EngineMode\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalClusterIdentifier\" : String,\n      \"Iops\" : Integer,\n      \"KmsKeyId\" : String,\n      \"ManageMasterUserPassword\" : Boolean,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"MasterUserSecret\" : MasterUserSecret,\n      \"MonitoringInterval\" : Integer,\n      \"MonitoringRoleArn\" : String,\n      \"NetworkType\" : String,\n      \"PerformanceInsightsEnabled\" : Boolean,\n      \"PerformanceInsightsKmsKeyId\" : String,\n      \"PerformanceInsightsRetentionPeriod\" : Integer,\n      \"Port\" : Integer,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"ReadEndpoint\" : ReadEndpoint,\n      \"ReplicationSourceIdentifier\" : String,\n      \"RestoreToTime\" : String,\n      \"RestoreType\" : String,\n      \"ScalingConfiguration\" : ScalingConfiguration,\n      \"ServerlessV2ScalingConfiguration\" : ServerlessV2ScalingConfiguration,\n      \"SnapshotIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"SourceRegion\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"StorageType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBCluster\nProperties:\n  AllocatedStorage: Integer\n  AssociatedRoles: \n    - DBClusterRole\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZones: \n    - String\n  BacktrackWindow: Integer\n  BackupRetentionPeriod: Integer\n  CopyTagsToSnapshot: Boolean\n  DatabaseName: String\n  DBClusterIdentifier: String\n  DBClusterInstanceClass: String\n  DBClusterParameterGroupName: String\n  DBInstanceParameterGroupName: String\n  DBSubnetGroupName: String\n  DBSystemId: String\n  DeletionProtection: Boolean\n  Domain: String\n  DomainIAMRoleName: String\n  EnableCloudwatchLogsExports: \n    - String\n  EnableGlobalWriteForwarding: Boolean\n  EnableHttpEndpoint: Boolean\n  EnableIAMDatabaseAuthentication: Boolean\n  Engine: String\n  EngineMode: String\n  EngineVersion: String\n  GlobalClusterIdentifier: String\n  Iops: Integer\n  KmsKeyId: String\n  ManageMasterUserPassword: Boolean\n  MasterUsername: String\n  MasterUserPassword: String\n  MasterUserSecret: \n    MasterUserSecret\n  MonitoringInterval: Integer\n  MonitoringRoleArn: String\n  NetworkType: String\n  PerformanceInsightsEnabled: Boolean\n  PerformanceInsightsKmsKeyId: String\n  PerformanceInsightsRetentionPeriod: Integer\n  Port: Integer\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  ReadEndpoint: \n    ReadEndpoint\n  ReplicationSourceIdentifier: String\n  RestoreToTime: String\n  RestoreType: String\n  ScalingConfiguration: \n    ScalingConfiguration\n  ServerlessV2ScalingConfiguration: \n    ServerlessV2ScalingConfiguration\n  SnapshotIdentifier: String\n  SourceDBClusterIdentifier: String\n  SourceRegion: String\n  StorageEncrypted: Boolean\n  StorageType: String\n  Tags: \n    - Tag\n  UseLatestRestorableTime: Boolean\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBClusterParameterGroup","awsResourceTypeName":"rds-dbclusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBClusterParameterGroup\",\n  \"Properties\" : {\n      \"DBClusterParameterGroupName\" : String,\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBClusterParameterGroup\nProperties:\n  DBClusterParameterGroupName: String\n  Description: String\n  Family: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBInstance","awsResourceTypeName":"rds-dbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBInstance\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : String,\n      \"AllowMajorVersionUpgrade\" : Boolean,\n      \"AssociatedRoles\" : [ DBInstanceRole, ... ],\n      \"AutomaticBackupReplicationRegion\" : String,\n      \"AutoMinorVersionUpgrade\" : Boolean,\n      \"AvailabilityZone\" : String,\n      \"BackupRetentionPeriod\" : Integer,\n      \"CACertificateIdentifier\" : String,\n      \"CertificateDetails\" : CertificateDetails,\n      \"CertificateRotationRestart\" : Boolean,\n      \"CharacterSetName\" : String,\n      \"CopyTagsToSnapshot\" : Boolean,\n      \"CustomIAMInstanceProfile\" : String,\n      \"DBClusterIdentifier\" : String,\n      \"DBClusterSnapshotIdentifier\" : String,\n      \"DBInstanceClass\" : String,\n      \"DBInstanceIdentifier\" : String,\n      \"DBName\" : String,\n      \"DBParameterGroupName\" : String,\n      \"DBSecurityGroups\" : [ String, ... ],\n      \"DBSnapshotIdentifier\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"DBSystemId\" : String,\n      \"DedicatedLogVolume\" : Boolean,\n      \"DeleteAutomatedBackups\" : Boolean,\n      \"DeletionProtection\" : Boolean,\n      \"Domain\" : String,\n      \"DomainAuthSecretArn\" : String,\n      \"DomainDnsIps\" : [ String, ... ],\n      \"DomainFqdn\" : String,\n      \"DomainIAMRoleName\" : String,\n      \"DomainOu\" : String,\n      \"EnableCloudwatchLogsExports\" : [ String, ... ],\n      \"EnableIAMDatabaseAuthentication\" : Boolean,\n      \"EnablePerformanceInsights\" : Boolean,\n      \"Endpoint\" : Endpoint,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"Iops\" : Integer,\n      \"KmsKeyId\" : String,\n      \"LicenseModel\" : String,\n      \"ManageMasterUserPassword\" : Boolean,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"MasterUserSecret\" : MasterUserSecret,\n      \"MaxAllocatedStorage\" : Integer,\n      \"MonitoringInterval\" : Integer,\n      \"MonitoringRoleArn\" : String,\n      \"MultiAZ\" : Boolean,\n      \"NcharCharacterSetName\" : String,\n      \"NetworkType\" : String,\n      \"OptionGroupName\" : String,\n      \"PerformanceInsightsKMSKeyId\" : String,\n      \"PerformanceInsightsRetentionPeriod\" : Integer,\n      \"Port\" : String,\n      \"PreferredBackupWindow\" : String,\n      \"PreferredMaintenanceWindow\" : String,\n      \"ProcessorFeatures\" : [ ProcessorFeature, ... ],\n      \"PromotionTier\" : Integer,\n      \"PubliclyAccessible\" : Boolean,\n      \"ReplicaMode\" : String,\n      \"RestoreTime\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"SourceDBInstanceAutomatedBackupsArn\" : String,\n      \"SourceDBInstanceIdentifier\" : String,\n      \"SourceDbiResourceId\" : String,\n      \"SourceRegion\" : String,\n      \"StorageEncrypted\" : Boolean,\n      \"StorageThroughput\" : Integer,\n      \"StorageType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Timezone\" : String,\n      \"UseDefaultProcessorFeatures\" : Boolean,\n      \"UseLatestRestorableTime\" : Boolean,\n      \"VPCSecurityGroups\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBInstance\nProperties:\n  AllocatedStorage: String\n  AllowMajorVersionUpgrade: Boolean\n  AssociatedRoles: \n    - DBInstanceRole\n  AutomaticBackupReplicationRegion: String\n  AutoMinorVersionUpgrade: Boolean\n  AvailabilityZone: String\n  BackupRetentionPeriod: Integer\n  CACertificateIdentifier: String\n  CertificateDetails: \n    CertificateDetails\n  CertificateRotationRestart: Boolean\n  CharacterSetName: String\n  CopyTagsToSnapshot: Boolean\n  CustomIAMInstanceProfile: String\n  DBClusterIdentifier: String\n  DBClusterSnapshotIdentifier: String\n  DBInstanceClass: String\n  DBInstanceIdentifier: String\n  DBName: String\n  DBParameterGroupName: String\n  DBSecurityGroups: \n    - String\n  DBSnapshotIdentifier: String\n  DBSubnetGroupName: String\n  DBSystemId: String\n  DedicatedLogVolume: Boolean\n  DeleteAutomatedBackups: Boolean\n  DeletionProtection: Boolean\n  Domain: String\n  DomainAuthSecretArn: String\n  DomainDnsIps: \n    - String\n  DomainFqdn: String\n  DomainIAMRoleName: String\n  DomainOu: String\n  EnableCloudwatchLogsExports: \n    - String\n  EnableIAMDatabaseAuthentication: Boolean\n  EnablePerformanceInsights: Boolean\n  Endpoint: \n    Endpoint\n  Engine: String\n  EngineVersion: String\n  Iops: Integer\n  KmsKeyId: String\n  LicenseModel: String\n  ManageMasterUserPassword: Boolean\n  MasterUsername: String\n  MasterUserPassword: String\n  MasterUserSecret: \n    MasterUserSecret\n  MaxAllocatedStorage: Integer\n  MonitoringInterval: Integer\n  MonitoringRoleArn: String\n  MultiAZ: Boolean\n  NcharCharacterSetName: String\n  NetworkType: String\n  OptionGroupName: String\n  PerformanceInsightsKMSKeyId: String\n  PerformanceInsightsRetentionPeriod: Integer\n  Port: String\n  PreferredBackupWindow: String\n  PreferredMaintenanceWindow: String\n  ProcessorFeatures: \n    - ProcessorFeature\n  PromotionTier: Integer\n  PubliclyAccessible: Boolean\n  ReplicaMode: String\n  RestoreTime: String\n  SourceDBClusterIdentifier: String\n  SourceDBInstanceAutomatedBackupsArn: String\n  SourceDBInstanceIdentifier: String\n  SourceDbiResourceId: String\n  SourceRegion: String\n  StorageEncrypted: Boolean\n  StorageThroughput: Integer\n  StorageType: String\n  Tags: \n    - Tag\n  Timezone: String\n  UseDefaultProcessorFeatures: Boolean\n  UseLatestRestorableTime: Boolean\n  VPCSecurityGroups: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBParameterGroup","awsResourceTypeName":"rds-dbparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBParameterGroup\",\n  \"Properties\" : {\n      \"DBParameterGroupName\" : String,\n      \"Description\" : String,\n      \"Family\" : String,\n      \"Parameters\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBParameterGroup\nProperties:\n  DBParameterGroupName: String\n  Description: String\n  Family: String\n  Parameters: Json\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBProxy","awsResourceTypeName":"rds-dbproxy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBProxy\",\n  \"Properties\" : {\n      \"Auth\" : [ AuthFormat, ... ],\n      \"DBProxyName\" : String,\n      \"DebugLogging\" : Boolean,\n      \"EngineFamily\" : String,\n      \"IdleClientTimeout\" : Integer,\n      \"RequireTLS\" : Boolean,\n      \"RoleArn\" : String,\n      \"Tags\" : [ TagFormat, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ],\n      \"VpcSubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBProxy\nProperties:\n  Auth: \n    - AuthFormat\n  DBProxyName: String\n  DebugLogging: Boolean\n  EngineFamily: String\n  IdleClientTimeout: Integer\n  RequireTLS: Boolean\n  RoleArn: String\n  Tags: \n    - TagFormat\n  VpcSecurityGroupIds: \n    - String\n  VpcSubnetIds: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBProxyEndpoint","awsResourceTypeName":"rds-dbproxyendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBProxyEndpoint\",\n  \"Properties\" : {\n      \"DBProxyEndpointName\" : String,\n      \"DBProxyName\" : String,\n      \"Tags\" : [ TagFormat, ... ],\n      \"TargetRole\" : String,\n      \"VpcSecurityGroupIds\" : [ String, ... ],\n      \"VpcSubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBProxyEndpoint\nProperties:\n  DBProxyEndpointName: String\n  DBProxyName: String\n  Tags: \n    - TagFormat\n  TargetRole: String\n  VpcSecurityGroupIds: \n    - String\n  VpcSubnetIds: \n    - String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBProxyTargetGroup","awsResourceTypeName":"rds-dbproxytargetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBProxyTargetGroup\",\n  \"Properties\" : {\n      \"ConnectionPoolConfigurationInfo\" : ConnectionPoolConfigurationInfoFormat,\n      \"DBClusterIdentifiers\" : [ String, ... ],\n      \"DBInstanceIdentifiers\" : [ String, ... ],\n      \"DBProxyName\" : String,\n      \"TargetGroupName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBProxyTargetGroup\nProperties:\n  ConnectionPoolConfigurationInfo: \n    ConnectionPoolConfigurationInfoFormat\n  DBClusterIdentifiers: \n    - String\n  DBInstanceIdentifiers: \n    - String\n  DBProxyName: String\n  TargetGroupName: String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBSecurityGroup","awsResourceTypeName":"rds-dbsecuritygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBSecurityGroup\",\n  \"Properties\" : {\n      \"DBSecurityGroupIngress\" : [ Ingress, ... ],\n      \"EC2VpcId\" : String,\n      \"GroupDescription\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBSecurityGroup\nProperties:\n  DBSecurityGroupIngress: \n    - Ingress\n  EC2VpcId: String\n  GroupDescription: String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBSecurityGroupIngress","awsResourceTypeName":"rds-dbsecuritygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBSecurityGroupIngress\",\n  \"Properties\" : {\n      \"CIDRIP\" : String,\n      \"DBSecurityGroupName\" : String,\n      \"EC2SecurityGroupId\" : String,\n      \"EC2SecurityGroupName\" : String,\n      \"EC2SecurityGroupOwnerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBSecurityGroupIngress\nProperties:\n  CIDRIP: String\n  DBSecurityGroupName: String\n  EC2SecurityGroupId: String\n  EC2SecurityGroupName: String\n  EC2SecurityGroupOwnerId: String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::DBSubnetGroup","awsResourceTypeName":"rds-dbsubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::DBSubnetGroup\",\n  \"Properties\" : {\n      \"DBSubnetGroupDescription\" : String,\n      \"DBSubnetGroupName\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::DBSubnetGroup\nProperties:\n  DBSubnetGroupDescription: String\n  DBSubnetGroupName: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::EventSubscription","awsResourceTypeName":"rds-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::GlobalCluster","awsResourceTypeName":"rds-globalcluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::GlobalCluster\",\n  \"Properties\" : {\n      \"DeletionProtection\" : Boolean,\n      \"Engine\" : String,\n      \"EngineVersion\" : String,\n      \"GlobalClusterIdentifier\" : String,\n      \"SourceDBClusterIdentifier\" : String,\n      \"StorageEncrypted\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::GlobalCluster\nProperties:\n  DeletionProtection: Boolean\n  Engine: String\n  EngineVersion: String\n  GlobalClusterIdentifier: String\n  SourceDBClusterIdentifier: String\n  StorageEncrypted: Boolean\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::Integration","awsResourceTypeName":"rds-integration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::Integration\",\n  \"Properties\" : {\n      \"AdditionalEncryptionContext\" : {Key: Value, ...},\n      \"DataFilter\" : String,\n      \"Description\" : String,\n      \"IntegrationName\" : String,\n      \"KMSKeyId\" : String,\n      \"SourceArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::Integration\nProperties:\n  AdditionalEncryptionContext: \n    Key: Value\n  DataFilter: String\n  Description: String\n  IntegrationName: String\n  KMSKeyId: String\n  SourceArn: String\n  Tags: \n    - Tag\n  TargetArn: String\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::RDS::OptionGroup","awsResourceTypeName":"rds-optiongroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RDS::OptionGroup\",\n  \"Properties\" : {\n      \"EngineName\" : String,\n      \"MajorEngineVersion\" : String,\n      \"OptionConfigurations\" : [ OptionConfiguration, ... ],\n      \"OptionGroupDescription\" : String,\n      \"OptionGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RDS::OptionGroup\nProperties:\n  EngineName: String\n  MajorEngineVersion: String\n  OptionConfigurations: \n    - OptionConfiguration\n  OptionGroupDescription: String\n  OptionGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"RDS","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::Cluster","awsResourceTypeName":"redshift-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::Cluster\",\n  \"Properties\" : {\n      \"AllowVersionUpgrade\" : Boolean,\n      \"AquaConfigurationStatus\" : String,\n      \"AutomatedSnapshotRetentionPeriod\" : Integer,\n      \"AvailabilityZone\" : String,\n      \"AvailabilityZoneRelocation\" : Boolean,\n      \"AvailabilityZoneRelocationStatus\" : String,\n      \"Classic\" : Boolean,\n      \"ClusterIdentifier\" : String,\n      \"ClusterParameterGroupName\" : String,\n      \"ClusterSecurityGroups\" : [ String, ... ],\n      \"ClusterSubnetGroupName\" : String,\n      \"ClusterType\" : String,\n      \"ClusterVersion\" : String,\n      \"DBName\" : String,\n      \"DeferMaintenance\" : Boolean,\n      \"DeferMaintenanceDuration\" : Integer,\n      \"DeferMaintenanceEndTime\" : String,\n      \"DeferMaintenanceStartTime\" : String,\n      \"DestinationRegion\" : String,\n      \"ElasticIp\" : String,\n      \"Encrypted\" : Boolean,\n      \"Endpoint\" : Endpoint,\n      \"EnhancedVpcRouting\" : Boolean,\n      \"HsmClientCertificateIdentifier\" : String,\n      \"HsmConfigurationIdentifier\" : String,\n      \"IamRoles\" : [ String, ... ],\n      \"KmsKeyId\" : String,\n      \"LoggingProperties\" : LoggingProperties,\n      \"MaintenanceTrackName\" : String,\n      \"ManageMasterPassword\" : Boolean,\n      \"ManualSnapshotRetentionPeriod\" : Integer,\n      \"MasterPasswordSecretKmsKeyId\" : String,\n      \"MasterUsername\" : String,\n      \"MasterUserPassword\" : String,\n      \"MultiAZ\" : Boolean,\n      \"NamespaceResourcePolicy\" : Json,\n      \"NodeType\" : String,\n      \"NumberOfNodes\" : Integer,\n      \"OwnerAccount\" : String,\n      \"Port\" : Integer,\n      \"PreferredMaintenanceWindow\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"ResourceAction\" : String,\n      \"RevisionTarget\" : String,\n      \"RotateEncryptionKey\" : Boolean,\n      \"SnapshotClusterIdentifier\" : String,\n      \"SnapshotCopyGrantName\" : String,\n      \"SnapshotCopyManual\" : Boolean,\n      \"SnapshotCopyRetentionPeriod\" : Integer,\n      \"SnapshotIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::Cluster\nProperties:\n  AllowVersionUpgrade: Boolean\n  AquaConfigurationStatus: String\n  AutomatedSnapshotRetentionPeriod: Integer\n  AvailabilityZone: String\n  AvailabilityZoneRelocation: Boolean\n  AvailabilityZoneRelocationStatus: String\n  Classic: Boolean\n  ClusterIdentifier: String\n  ClusterParameterGroupName: String\n  ClusterSecurityGroups: \n    - String\n  ClusterSubnetGroupName: String\n  ClusterType: String\n  ClusterVersion: String\n  DBName: String\n  DeferMaintenance: Boolean\n  DeferMaintenanceDuration: Integer\n  DeferMaintenanceEndTime: String\n  DeferMaintenanceStartTime: String\n  DestinationRegion: String\n  ElasticIp: String\n  Encrypted: Boolean\n  Endpoint: \n    Endpoint\n  EnhancedVpcRouting: Boolean\n  HsmClientCertificateIdentifier: String\n  HsmConfigurationIdentifier: String\n  IamRoles: \n    - String\n  KmsKeyId: String\n  LoggingProperties: \n    LoggingProperties\n  MaintenanceTrackName: String\n  ManageMasterPassword: Boolean\n  ManualSnapshotRetentionPeriod: Integer\n  MasterPasswordSecretKmsKeyId: String\n  MasterUsername: String\n  MasterUserPassword: String\n  MultiAZ: Boolean\n  NamespaceResourcePolicy: Json\n  NodeType: String\n  NumberOfNodes: Integer\n  OwnerAccount: String\n  Port: Integer\n  PreferredMaintenanceWindow: String\n  PubliclyAccessible: Boolean\n  ResourceAction: String\n  RevisionTarget: String\n  RotateEncryptionKey: Boolean\n  SnapshotClusterIdentifier: String\n  SnapshotCopyGrantName: String\n  SnapshotCopyManual: Boolean\n  SnapshotCopyRetentionPeriod: Integer\n  SnapshotIdentifier: String\n  Tags: \n    - Tag\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterParameterGroup","awsResourceTypeName":"redshift-clusterparametergroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterParameterGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"ParameterGroupFamily\" : String,\n      \"ParameterGroupName\" : String,\n      \"Parameters\" : [ Parameter, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterParameterGroup\nProperties:\n  Description: String\n  ParameterGroupFamily: String\n  ParameterGroupName: String\n  Parameters: \n    - Parameter\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterSecurityGroup","awsResourceTypeName":"redshift-clustersecuritygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterSecurityGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterSecurityGroup\nProperties:\n  Description: String\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterSecurityGroupIngress","awsResourceTypeName":"redshift-clustersecuritygroupingress","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterSecurityGroupIngress\",\n  \"Properties\" : {\n      \"CIDRIP\" : String,\n      \"ClusterSecurityGroupName\" : String,\n      \"EC2SecurityGroupName\" : String,\n      \"EC2SecurityGroupOwnerId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterSecurityGroupIngress\nProperties:\n  CIDRIP: String\n  ClusterSecurityGroupName: String\n  EC2SecurityGroupName: String\n  EC2SecurityGroupOwnerId: String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ClusterSubnetGroup","awsResourceTypeName":"redshift-clustersubnetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ClusterSubnetGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ClusterSubnetGroup\nProperties:\n  Description: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::EndpointAccess","awsResourceTypeName":"redshift-endpointaccess","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::EndpointAccess\",\n  \"Properties\" : {\n      \"ClusterIdentifier\" : String,\n      \"EndpointName\" : String,\n      \"ResourceOwner\" : String,\n      \"SubnetGroupName\" : String,\n      \"VpcSecurityGroupIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::EndpointAccess\nProperties:\n  ClusterIdentifier: String\n  EndpointName: String\n  ResourceOwner: String\n  SubnetGroupName: String\n  VpcSecurityGroupIds: \n    - String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::EndpointAuthorization","awsResourceTypeName":"redshift-endpointauthorization","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::EndpointAuthorization\",\n  \"Properties\" : {\n      \"Account\" : String,\n      \"ClusterIdentifier\" : String,\n      \"Force\" : Boolean,\n      \"VpcIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::EndpointAuthorization\nProperties:\n  Account: String\n  ClusterIdentifier: String\n  Force: Boolean\n  VpcIds: \n    - String\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::EventSubscription","awsResourceTypeName":"redshift-eventsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::EventSubscription\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"EventCategories\" : [ String, ... ],\n      \"Severity\" : String,\n      \"SnsTopicArn\" : String,\n      \"SourceIds\" : [ String, ... ],\n      \"SourceType\" : String,\n      \"SubscriptionName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::EventSubscription\nProperties:\n  Enabled: Boolean\n  EventCategories: \n    - String\n  Severity: String\n  SnsTopicArn: String\n  SourceIds: \n    - String\n  SourceType: String\n  SubscriptionName: String\n  Tags: \n    - Tag\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::Redshift::ScheduledAction","awsResourceTypeName":"redshift-scheduledaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Redshift::ScheduledAction\",\n  \"Properties\" : {\n      \"Enable\" : Boolean,\n      \"EndTime\" : String,\n      \"IamRole\" : String,\n      \"Schedule\" : String,\n      \"ScheduledActionDescription\" : String,\n      \"ScheduledActionName\" : String,\n      \"StartTime\" : String,\n      \"TargetAction\" : ScheduledActionType\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Redshift::ScheduledAction\nProperties:\n  Enable: Boolean\n  EndTime: String\n  IamRole: String\n  Schedule: String\n  ScheduledActionDescription: String\n  ScheduledActionName: String\n  StartTime: String\n  TargetAction: \n    ScheduledActionType\n","awsServiceName":"Redshift","awsServiceCategory":"database"},{"awsResourceType":"AWS::RedshiftServerless::Namespace","awsResourceTypeName":"redshiftserverless-namespace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RedshiftServerless::Namespace\",\n  \"Properties\" : {\n      \"AdminPasswordSecretKmsKeyId\" : String,\n      \"AdminUsername\" : String,\n      \"AdminUserPassword\" : String,\n      \"DbName\" : String,\n      \"DefaultIamRoleArn\" : String,\n      \"FinalSnapshotName\" : String,\n      \"FinalSnapshotRetentionPeriod\" : Integer,\n      \"IamRoles\" : [ String, ... ],\n      \"KmsKeyId\" : String,\n      \"LogExports\" : [ String, ... ],\n      \"ManageAdminPassword\" : Boolean,\n      \"NamespaceName\" : String,\n      \"NamespaceResourcePolicy\" : Json,\n      \"RedshiftIdcApplicationArn\" : String,\n      \"SnapshotCopyConfigurations\" : [ SnapshotCopyConfiguration, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RedshiftServerless::Namespace\nProperties:\n  AdminPasswordSecretKmsKeyId: String\n  AdminUsername: String\n  AdminUserPassword: String\n  DbName: String\n  DefaultIamRoleArn: String\n  FinalSnapshotName: String\n  FinalSnapshotRetentionPeriod: Integer\n  IamRoles: \n    - String\n  KmsKeyId: String\n  LogExports: \n    - String\n  ManageAdminPassword: Boolean\n  NamespaceName: String\n  NamespaceResourcePolicy: Json\n  RedshiftIdcApplicationArn: String\n  SnapshotCopyConfigurations: \n    - SnapshotCopyConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"RedshiftServerless","awsServiceCategory":"database"},{"awsResourceType":"AWS::RedshiftServerless::Workgroup","awsResourceTypeName":"redshiftserverless-workgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RedshiftServerless::Workgroup\",\n  \"Properties\" : {\n      \"BaseCapacity\" : Integer,\n      \"ConfigParameters\" : [ ConfigParameter, ... ],\n      \"EnhancedVpcRouting\" : Boolean,\n      \"MaxCapacity\" : Integer,\n      \"NamespaceName\" : String,\n      \"Port\" : Integer,\n      \"PubliclyAccessible\" : Boolean,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WorkgroupName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RedshiftServerless::Workgroup\nProperties:\n  BaseCapacity: Integer\n  ConfigParameters: \n    - ConfigParameter\n  EnhancedVpcRouting: Boolean\n  MaxCapacity: Integer\n  NamespaceName: String\n  Port: Integer\n  PubliclyAccessible: Boolean\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  WorkgroupName: String\n","awsServiceName":"RedshiftServerless","awsServiceCategory":"database"},{"awsResourceType":"AWS::RefactorSpaces::Application","awsResourceTypeName":"refactorspaces-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Application\",\n  \"Properties\" : {\n      \"ApiGatewayProxy\" : ApiGatewayProxyInput,\n      \"EnvironmentIdentifier\" : String,\n      \"Name\" : String,\n      \"ProxyType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Application\nProperties:\n  ApiGatewayProxy: \n    ApiGatewayProxyInput\n  EnvironmentIdentifier: String\n  Name: String\n  ProxyType: String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::RefactorSpaces::Environment","awsResourceTypeName":"refactorspaces-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Environment\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"NetworkFabricType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Environment\nProperties:\n  Description: String\n  Name: String\n  NetworkFabricType: String\n  Tags: \n    - Tag\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::RefactorSpaces::Route","awsResourceTypeName":"refactorspaces-route","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Route\",\n  \"Properties\" : {\n      \"ApplicationIdentifier\" : String,\n      \"DefaultRoute\" : DefaultRouteInput,\n      \"EnvironmentIdentifier\" : String,\n      \"RouteType\" : String,\n      \"ServiceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UriPathRoute\" : UriPathRouteInput\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Route\nProperties:\n  ApplicationIdentifier: String\n  DefaultRoute: \n    DefaultRouteInput\n  EnvironmentIdentifier: String\n  RouteType: String\n  ServiceIdentifier: String\n  Tags: \n    - Tag\n  UriPathRoute: \n    UriPathRouteInput\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::RefactorSpaces::Service","awsResourceTypeName":"refactorspaces-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RefactorSpaces::Service\",\n  \"Properties\" : {\n      \"ApplicationIdentifier\" : String,\n      \"Description\" : String,\n      \"EndpointType\" : String,\n      \"EnvironmentIdentifier\" : String,\n      \"LambdaEndpoint\" : LambdaEndpointInput,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UrlEndpoint\" : UrlEndpointInput,\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RefactorSpaces::Service\nProperties:\n  ApplicationIdentifier: String\n  Description: String\n  EndpointType: String\n  EnvironmentIdentifier: String\n  LambdaEndpoint: \n    LambdaEndpointInput\n  Name: String\n  Tags: \n    - Tag\n  UrlEndpoint: \n    UrlEndpointInput\n  VpcId: String\n","awsServiceName":"RefactorSpaces","awsServiceCategory":"other"},{"awsResourceType":"AWS::Rekognition::Collection","awsResourceTypeName":"rekognition-collection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Rekognition::Collection\",\n  \"Properties\" : {\n      \"CollectionId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Rekognition::Collection\nProperties:\n  CollectionId: String\n  Tags: \n    - Tag\n","awsServiceName":"Rekognition","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Rekognition::Project","awsResourceTypeName":"rekognition-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Rekognition::Project\",\n  \"Properties\" : {\n      \"ProjectName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Rekognition::Project\nProperties:\n  ProjectName: String\n","awsServiceName":"Rekognition","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::Rekognition::StreamProcessor","awsResourceTypeName":"rekognition-streamprocessor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Rekognition::StreamProcessor\",\n  \"Properties\" : {\n      \"BoundingBoxRegionsOfInterest\" : [ BoundingBox, ... ],\n      \"ConnectedHomeSettings\" : ConnectedHomeSettings,\n      \"DataSharingPreference\" : DataSharingPreference,\n      \"FaceSearchSettings\" : FaceSearchSettings,\n      \"KinesisDataStream\" : KinesisDataStream,\n      \"KinesisVideoStream\" : KinesisVideoStream,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"NotificationChannel\" : NotificationChannel,\n      \"PolygonRegionsOfInterest\" : [ [ , ... ], ... ],\n      \"RoleArn\" : String,\n      \"S3Destination\" : S3Destination,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Rekognition::StreamProcessor\nProperties:\n  BoundingBoxRegionsOfInterest: \n    - BoundingBox\n  ConnectedHomeSettings: \n    ConnectedHomeSettings\n  DataSharingPreference: \n    DataSharingPreference\n  FaceSearchSettings: \n    FaceSearchSettings\n  KinesisDataStream: \n    KinesisDataStream\n  KinesisVideoStream: \n    KinesisVideoStream\n  KmsKeyId: String\n  Name: String\n  NotificationChannel: \n    NotificationChannel\n  PolygonRegionsOfInterest: \n    - \n    - \n  RoleArn: String\n  S3Destination: \n    S3Destination\n  Tags: \n    - Tag\n","awsServiceName":"Rekognition","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::ResilienceHub::App","awsResourceTypeName":"resiliencehub-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResilienceHub::App\",\n  \"Properties\" : {\n      \"AppAssessmentSchedule\" : String,\n      \"AppTemplateBody\" : String,\n      \"Description\" : String,\n      \"EventSubscriptions\" : [ EventSubscription, ... ],\n      \"Name\" : String,\n      \"PermissionModel\" : PermissionModel,\n      \"ResiliencyPolicyArn\" : String,\n      \"ResourceMappings\" : [ ResourceMapping, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResilienceHub::App\nProperties:\n  AppAssessmentSchedule: String\n  AppTemplateBody: String\n  Description: String\n  EventSubscriptions: \n    - EventSubscription\n  Name: String\n  PermissionModel: \n    PermissionModel\n  ResiliencyPolicyArn: String\n  ResourceMappings: \n    - ResourceMapping\n  Tags: \n    Key: Value\n","awsServiceName":"ResilienceHub","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResilienceHub::ResiliencyPolicy","awsResourceTypeName":"resiliencehub-resiliencypolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResilienceHub::ResiliencyPolicy\",\n  \"Properties\" : {\n      \"DataLocationConstraint\" : String,\n      \"Policy\" : PolicyMap,\n      \"PolicyDescription\" : String,\n      \"PolicyName\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Tier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResilienceHub::ResiliencyPolicy\nProperties:\n  DataLocationConstraint: String\n  Policy: \n    PolicyMap\n  PolicyDescription: String\n  PolicyName: String\n  Tags: \n    Key: Value\n  Tier: String\n","awsServiceName":"ResilienceHub","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceExplorer2::DefaultViewAssociation","awsResourceTypeName":"resourceexplorer2-defaultviewassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceExplorer2::DefaultViewAssociation\",\n  \"Properties\" : {\n      \"ViewArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceExplorer2::DefaultViewAssociation\nProperties:\n  ViewArn: String\n","awsServiceName":"ResourceExplorer2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceExplorer2::Index","awsResourceTypeName":"resourceexplorer2-index","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceExplorer2::Index\",\n  \"Properties\" : {\n      \"Tags\" : {Key: Value, ...},\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceExplorer2::Index\nProperties:\n  Tags: \n    Key: Value\n  Type: String\n","awsServiceName":"ResourceExplorer2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceExplorer2::View","awsResourceTypeName":"resourceexplorer2-view","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceExplorer2::View\",\n  \"Properties\" : {\n      \"Filters\" : SearchFilter,\n      \"IncludedProperties\" : [ IncludedProperty, ... ],\n      \"Scope\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"ViewName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceExplorer2::View\nProperties:\n  Filters: \n    SearchFilter\n  IncludedProperties: \n    - IncludedProperty\n  Scope: String\n  Tags: \n    Key: Value\n  ViewName: String\n","awsServiceName":"ResourceExplorer2","awsServiceCategory":"other"},{"awsResourceType":"AWS::ResourceGroups::Group","awsResourceTypeName":"resourcegroups-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ResourceGroups::Group\",\n  \"Properties\" : {\n      \"Configuration\" : [ ConfigurationItem, ... ],\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ResourceQuery\" : ResourceQuery,\n      \"Resources\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ResourceGroups::Group\nProperties:\n  Configuration: \n    - ConfigurationItem\n  Description: String\n  Name: String\n  ResourceQuery: \n    ResourceQuery\n  Resources: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"ResourceGroups","awsServiceCategory":"management"},{"awsResourceType":"AWS::RoboMaker::Fleet","awsResourceTypeName":"robomaker-fleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::Fleet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::Fleet\nProperties:\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::Robot","awsResourceTypeName":"robomaker-robot","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::Robot\",\n  \"Properties\" : {\n      \"Architecture\" : String,\n      \"Fleet\" : String,\n      \"GreengrassGroupId\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::Robot\nProperties:\n  Architecture: String\n  Fleet: String\n  GreengrassGroupId: String\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::RobotApplication","awsResourceTypeName":"robomaker-robotapplication","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::RobotApplication\",\n  \"Properties\" : {\n      \"CurrentRevisionId\" : String,\n      \"Environment\" : String,\n      \"Name\" : String,\n      \"RobotSoftwareSuite\" : RobotSoftwareSuite,\n      \"Sources\" : [ SourceConfig, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::RobotApplication\nProperties:\n  CurrentRevisionId: String\n  Environment: String\n  Name: String\n  RobotSoftwareSuite: \n    RobotSoftwareSuite\n  Sources: \n    - SourceConfig\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::RobotApplicationVersion","awsResourceTypeName":"robomaker-robotapplicationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::RobotApplicationVersion\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"CurrentRevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::RobotApplicationVersion\nProperties:\n  Application: String\n  CurrentRevisionId: String\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::SimulationApplication","awsResourceTypeName":"robomaker-simulationapplication","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::SimulationApplication\",\n  \"Properties\" : {\n      \"CurrentRevisionId\" : String,\n      \"Environment\" : String,\n      \"Name\" : String,\n      \"RenderingEngine\" : RenderingEngine,\n      \"RobotSoftwareSuite\" : RobotSoftwareSuite,\n      \"SimulationSoftwareSuite\" : SimulationSoftwareSuite,\n      \"Sources\" : [ SourceConfig, ... ],\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::SimulationApplication\nProperties:\n  CurrentRevisionId: String\n  Environment: String\n  Name: String\n  RenderingEngine: \n    RenderingEngine\n  RobotSoftwareSuite: \n    RobotSoftwareSuite\n  SimulationSoftwareSuite: \n    SimulationSoftwareSuite\n  Sources: \n    - SourceConfig\n  Tags: \n    Key: Value\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RoboMaker::SimulationApplicationVersion","awsResourceTypeName":"robomaker-simulationapplicationversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RoboMaker::SimulationApplicationVersion\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"CurrentRevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RoboMaker::SimulationApplicationVersion\nProperties:\n  Application: String\n  CurrentRevisionId: String\n","awsServiceName":"RoboMaker","awsServiceCategory":"compute"},{"awsResourceType":"AWS::RolesAnywhere::CRL","awsResourceTypeName":"rolesanywhere-crl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RolesAnywhere::CRL\",\n  \"Properties\" : {\n      \"CrlData\" : String,\n      \"Enabled\" : Boolean,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrustAnchorArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RolesAnywhere::CRL\nProperties:\n  CrlData: String\n  Enabled: Boolean\n  Name: String\n  Tags: \n    - Tag\n  TrustAnchorArn: String\n","awsServiceName":"RolesAnywhere","awsServiceCategory":"other"},{"awsResourceType":"AWS::RolesAnywhere::Profile","awsResourceTypeName":"rolesanywhere-profile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RolesAnywhere::Profile\",\n  \"Properties\" : {\n      \"DurationSeconds\" : Number,\n      \"Enabled\" : Boolean,\n      \"ManagedPolicyArns\" : [ String, ... ],\n      \"Name\" : String,\n      \"RequireInstanceProperties\" : Boolean,\n      \"RoleArns\" : [ String, ... ],\n      \"SessionPolicy\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RolesAnywhere::Profile\nProperties:\n  DurationSeconds: Number\n  Enabled: Boolean\n  ManagedPolicyArns: \n    - String\n  Name: String\n  RequireInstanceProperties: Boolean\n  RoleArns: \n    - String\n  SessionPolicy: String\n  Tags: \n    - Tag\n","awsServiceName":"RolesAnywhere","awsServiceCategory":"other"},{"awsResourceType":"AWS::RolesAnywhere::TrustAnchor","awsResourceTypeName":"rolesanywhere-trustanchor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RolesAnywhere::TrustAnchor\",\n  \"Properties\" : {\n      \"Enabled\" : Boolean,\n      \"Name\" : String,\n      \"NotificationSettings\" : [ NotificationSetting, ... ],\n      \"Source\" : Source,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RolesAnywhere::TrustAnchor\nProperties:\n  Enabled: Boolean\n  Name: String\n  NotificationSettings: \n    - NotificationSetting\n  Source: \n    Source\n  Tags: \n    - Tag\n","awsServiceName":"RolesAnywhere","awsServiceCategory":"other"},{"awsResourceType":"AWS::Route53::CidrCollection","awsResourceTypeName":"route53-cidrcollection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::CidrCollection\",\n  \"Properties\" : {\n      \"Locations\" : [ Location, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::CidrCollection\nProperties:\n  Locations: \n    - Location\n  Name: String\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::DNSSEC","awsResourceTypeName":"route53-dnssec","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::DNSSEC\",\n  \"Properties\" : {\n      \"HostedZoneId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::DNSSEC\nProperties:\n  HostedZoneId: String\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::HealthCheck","awsResourceTypeName":"route53-healthcheck","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::HealthCheck\",\n  \"Properties\" : {\n      \"HealthCheckConfig\" : HealthCheckConfig,\n      \"HealthCheckTags\" : [ HealthCheckTag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::HealthCheck\nProperties:\n  HealthCheckConfig: \n    HealthCheckConfig\n  HealthCheckTags: \n    - HealthCheckTag\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::HostedZone","awsResourceTypeName":"route53-hostedzone","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::HostedZone\",\n  \"Properties\" : {\n      \"HostedZoneConfig\" : HostedZoneConfig,\n      \"HostedZoneTags\" : [ HostedZoneTag, ... ],\n      \"Name\" : String,\n      \"QueryLoggingConfig\" : QueryLoggingConfig,\n      \"VPCs\" : [ VPC, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::HostedZone\nProperties:\n  HostedZoneConfig: \n    HostedZoneConfig\n  HostedZoneTags: \n    - HostedZoneTag\n  Name: String\n  QueryLoggingConfig: \n    QueryLoggingConfig\n  VPCs: \n    - VPC\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::KeySigningKey","awsResourceTypeName":"route53-keysigningkey","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::KeySigningKey\",\n  \"Properties\" : {\n      \"HostedZoneId\" : String,\n      \"KeyManagementServiceArn\" : String,\n      \"Name\" : String,\n      \"Status\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::KeySigningKey\nProperties:\n  HostedZoneId: String\n  KeyManagementServiceArn: String\n  Name: String\n  Status: String\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::RecordSet","awsResourceTypeName":"route53-recordset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::RecordSet\",\n  \"Properties\" : {\n      \"AliasTarget\" : AliasTarget,\n      \"CidrRoutingConfig\" : CidrRoutingConfig,\n      \"Comment\" : String,\n      \"Failover\" : String,\n      \"GeoLocation\" : GeoLocation,\n      \"GeoProximityLocation\" : GeoProximityLocation,\n      \"HealthCheckId\" : String,\n      \"HostedZoneId\" : String,\n      \"HostedZoneName\" : String,\n      \"MultiValueAnswer\" : Boolean,\n      \"Name\" : String,\n      \"Region\" : String,\n      \"ResourceRecords\" : [ String, ... ],\n      \"SetIdentifier\" : String,\n      \"TTL\" : String,\n      \"Type\" : String,\n      \"Weight\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::RecordSet\nProperties:\n  AliasTarget: \n    AliasTarget\n  CidrRoutingConfig: \n    CidrRoutingConfig\n  Comment: String\n  Failover: String\n  GeoLocation: \n    GeoLocation\n  GeoProximityLocation: \n    GeoProximityLocation\n  HealthCheckId: String\n  HostedZoneId: String\n  HostedZoneName: String\n  MultiValueAnswer: Boolean\n  Name: String\n  Region: String\n  ResourceRecords: \n    - String\n  SetIdentifier: String\n  TTL: String\n  Type: String\n  Weight: Integer\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53::RecordSetGroup","awsResourceTypeName":"route53-recordsetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53::RecordSetGroup\",\n  \"Properties\" : {\n      \"Comment\" : String,\n      \"HostedZoneId\" : String,\n      \"HostedZoneName\" : String,\n      \"RecordSets\" : [ RecordSet, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53::RecordSetGroup\nProperties:\n  Comment: String\n  HostedZoneId: String\n  HostedZoneName: String\n  RecordSets: \n    - RecordSet\n","awsServiceName":"Route53","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::Cluster","awsResourceTypeName":"route53recoverycontrol-cluster","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::Cluster\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::Cluster\nProperties:\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::ControlPanel","awsResourceTypeName":"route53recoverycontrol-controlpanel","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::ControlPanel\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::ControlPanel\nProperties:\n  ClusterArn: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::RoutingControl","awsResourceTypeName":"route53recoverycontrol-routingcontrol","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::RoutingControl\",\n  \"Properties\" : {\n      \"ClusterArn\" : String,\n      \"ControlPanelArn\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::RoutingControl\nProperties:\n  ClusterArn: String\n  ControlPanelArn: String\n  Name: String\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryControl::SafetyRule","awsResourceTypeName":"route53recoverycontrol-safetyrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryControl::SafetyRule\",\n  \"Properties\" : {\n      \"AssertionRule\" : AssertionRule,\n      \"ControlPanelArn\" : String,\n      \"GatingRule\" : GatingRule,\n      \"Name\" : String,\n      \"RuleConfig\" : RuleConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryControl::SafetyRule\nProperties:\n  AssertionRule: \n    AssertionRule\n  ControlPanelArn: String\n  GatingRule: \n    GatingRule\n  Name: String\n  RuleConfig: \n    RuleConfig\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryControl","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::Cell","awsResourceTypeName":"route53recoveryreadiness-cell","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::Cell\",\n  \"Properties\" : {\n      \"CellName\" : String,\n      \"Cells\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::Cell\nProperties:\n  CellName: String\n  Cells: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::ReadinessCheck","awsResourceTypeName":"route53recoveryreadiness-readinesscheck","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::ReadinessCheck\",\n  \"Properties\" : {\n      \"ReadinessCheckName\" : String,\n      \"ResourceSetName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::ReadinessCheck\nProperties:\n  ReadinessCheckName: String\n  ResourceSetName: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::RecoveryGroup","awsResourceTypeName":"route53recoveryreadiness-recoverygroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::RecoveryGroup\",\n  \"Properties\" : {\n      \"Cells\" : [ String, ... ],\n      \"RecoveryGroupName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::RecoveryGroup\nProperties:\n  Cells: \n    - String\n  RecoveryGroupName: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53RecoveryReadiness::ResourceSet","awsResourceTypeName":"route53recoveryreadiness-resourceset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53RecoveryReadiness::ResourceSet\",\n  \"Properties\" : {\n      \"Resources\" : [ Resource, ... ],\n      \"ResourceSetName\" : String,\n      \"ResourceSetType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53RecoveryReadiness::ResourceSet\nProperties:\n  Resources: \n    - Resource\n  ResourceSetName: String\n  ResourceSetType: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53RecoveryReadiness","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::FirewallDomainList","awsResourceTypeName":"route53resolver-firewalldomainlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::FirewallDomainList\",\n  \"Properties\" : {\n      \"DomainFileUrl\" : String,\n      \"Domains\" : [ String, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::FirewallDomainList\nProperties:\n  DomainFileUrl: String\n  Domains: \n    - String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::FirewallRuleGroup","awsResourceTypeName":"route53resolver-firewallrulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::FirewallRuleGroup\",\n  \"Properties\" : {\n      \"FirewallRules\" : [ FirewallRule, ... ],\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::FirewallRuleGroup\nProperties:\n  FirewallRules: \n    - FirewallRule\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::FirewallRuleGroupAssociation","awsResourceTypeName":"route53resolver-firewallrulegroupassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::FirewallRuleGroupAssociation\",\n  \"Properties\" : {\n      \"FirewallRuleGroupId\" : String,\n      \"MutationProtection\" : String,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::FirewallRuleGroupAssociation\nProperties:\n  FirewallRuleGroupId: String\n  MutationProtection: String\n  Name: String\n  Priority: Integer\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::OutpostResolver","awsResourceTypeName":"route53resolver-outpostresolver","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::OutpostResolver\",\n  \"Properties\" : {\n      \"InstanceCount\" : Integer,\n      \"Name\" : String,\n      \"OutpostArn\" : String,\n      \"PreferredInstanceType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::OutpostResolver\nProperties:\n  InstanceCount: Integer\n  Name: String\n  OutpostArn: String\n  PreferredInstanceType: String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverConfig","awsResourceTypeName":"route53resolver-resolverconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverConfig\",\n  \"Properties\" : {\n      \"AutodefinedReverseFlag\" : String,\n      \"ResourceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverConfig\nProperties:\n  AutodefinedReverseFlag: String\n  ResourceId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverDNSSECConfig","awsResourceTypeName":"route53resolver-resolverdnssecconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverDNSSECConfig\",\n  \"Properties\" : {\n      \"ResourceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverDNSSECConfig\nProperties:\n  ResourceId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverEndpoint","awsResourceTypeName":"route53resolver-resolverendpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverEndpoint\",\n  \"Properties\" : {\n      \"Direction\" : String,\n      \"IpAddresses\" : [ IpAddressRequest, ... ],\n      \"Name\" : String,\n      \"OutpostArn\" : String,\n      \"PreferredInstanceType\" : String,\n      \"Protocols\" : [ String, ... ],\n      \"ResolverEndpointType\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverEndpoint\nProperties:\n  Direction: String\n  IpAddresses: \n    - IpAddressRequest\n  Name: String\n  OutpostArn: String\n  PreferredInstanceType: String\n  Protocols: \n    - String\n  ResolverEndpointType: String\n  SecurityGroupIds: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverQueryLoggingConfig","awsResourceTypeName":"route53resolver-resolverqueryloggingconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverQueryLoggingConfig\",\n  \"Properties\" : {\n      \"DestinationArn\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverQueryLoggingConfig\nProperties:\n  DestinationArn: String\n  Name: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation","awsResourceTypeName":"route53resolver-resolverqueryloggingconfigassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\",\n  \"Properties\" : {\n      \"ResolverQueryLogConfigId\" : String,\n      \"ResourceId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\nProperties:\n  ResolverQueryLogConfigId: String\n  ResourceId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverRule","awsResourceTypeName":"route53resolver-resolverrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverRule\",\n  \"Properties\" : {\n      \"DomainName\" : String,\n      \"Name\" : String,\n      \"ResolverEndpointId\" : String,\n      \"RuleType\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetIps\" : [ TargetAddress, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverRule\nProperties:\n  DomainName: String\n  Name: String\n  ResolverEndpointId: String\n  RuleType: String\n  Tags: \n    - Tag\n  TargetIps: \n    - TargetAddress\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::Route53Resolver::ResolverRuleAssociation","awsResourceTypeName":"route53resolver-resolverruleassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Route53Resolver::ResolverRuleAssociation\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ResolverRuleId\" : String,\n      \"VPCId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Route53Resolver::ResolverRuleAssociation\nProperties:\n  Name: String\n  ResolverRuleId: String\n  VPCId: String\n","awsServiceName":"Route53Resolver","awsServiceCategory":"networking"},{"awsResourceType":"AWS::RUM::AppMonitor","awsResourceTypeName":"rum-appmonitor","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::RUM::AppMonitor\",\n  \"Properties\" : {\n      \"AppMonitorConfiguration\" : AppMonitorConfiguration,\n      \"CustomEvents\" : CustomEvents,\n      \"CwLogEnabled\" : Boolean,\n      \"Domain\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::RUM::AppMonitor\nProperties:\n  AppMonitorConfiguration: \n    AppMonitorConfiguration\n  CustomEvents: \n    CustomEvents\n  CwLogEnabled: Boolean\n  Domain: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"RUM","awsServiceCategory":"other"},{"awsResourceType":"AWS::S3::AccessGrant","awsResourceTypeName":"s3-accessgrant","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessGrant\",\n  \"Properties\" : {\n      \"AccessGrantsLocationConfiguration\" : AccessGrantsLocationConfiguration,\n      \"AccessGrantsLocationId\" : String,\n      \"ApplicationArn\" : String,\n      \"Grantee\" : Grantee,\n      \"Permission\" : String,\n      \"S3PrefixType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessGrant\nProperties:\n  AccessGrantsLocationConfiguration: \n    AccessGrantsLocationConfiguration\n  AccessGrantsLocationId: String\n  ApplicationArn: String\n  Grantee: \n    Grantee\n  Permission: String\n  S3PrefixType: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::AccessGrantsInstance","awsResourceTypeName":"s3-accessgrantsinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessGrantsInstance\",\n  \"Properties\" : {\n      \"IdentityCenterArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessGrantsInstance\nProperties:\n  IdentityCenterArn: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::AccessGrantsLocation","awsResourceTypeName":"s3-accessgrantslocation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessGrantsLocation\",\n  \"Properties\" : {\n      \"IamRoleArn\" : String,\n      \"LocationScope\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessGrantsLocation\nProperties:\n  IamRoleArn: String\n  LocationScope: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::AccessPoint","awsResourceTypeName":"s3-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::AccessPoint\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"BucketAccountId\" : String,\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"PublicAccessBlockConfiguration\" : PublicAccessBlockConfiguration,\n      \"VpcConfiguration\" : VpcConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::AccessPoint\nProperties:\n  Bucket: String\n  BucketAccountId: String\n  Name: String\n  Policy: Json\n  PublicAccessBlockConfiguration: \n    PublicAccessBlockConfiguration\n  VpcConfiguration: \n    VpcConfiguration\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::Bucket","awsResourceTypeName":"s3-bucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::Bucket\",\n  \"Properties\" : {\n      \"AccelerateConfiguration\" : AccelerateConfiguration,\n      \"AccessControl\" : String,\n      \"AnalyticsConfigurations\" : [ AnalyticsConfiguration, ... ],\n      \"BucketEncryption\" : BucketEncryption,\n      \"BucketName\" : String,\n      \"CorsConfiguration\" : CorsConfiguration,\n      \"IntelligentTieringConfigurations\" : [ IntelligentTieringConfiguration, ... ],\n      \"InventoryConfigurations\" : [ InventoryConfiguration, ... ],\n      \"LifecycleConfiguration\" : LifecycleConfiguration,\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"MetricsConfigurations\" : [ MetricsConfiguration, ... ],\n      \"NotificationConfiguration\" : NotificationConfiguration,\n      \"ObjectLockConfiguration\" : ObjectLockConfiguration,\n      \"ObjectLockEnabled\" : Boolean,\n      \"OwnershipControls\" : OwnershipControls,\n      \"PublicAccessBlockConfiguration\" : PublicAccessBlockConfiguration,\n      \"ReplicationConfiguration\" : ReplicationConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"VersioningConfiguration\" : VersioningConfiguration,\n      \"WebsiteConfiguration\" : WebsiteConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::Bucket\nProperties:\n  AccelerateConfiguration: \n    AccelerateConfiguration\n  AccessControl: String\n  AnalyticsConfigurations: \n    - AnalyticsConfiguration\n  BucketEncryption: \n    BucketEncryption\n  BucketName: String\n  CorsConfiguration: \n    CorsConfiguration\n  IntelligentTieringConfigurations: \n    - IntelligentTieringConfiguration\n  InventoryConfigurations: \n    - InventoryConfiguration\n  LifecycleConfiguration: \n    LifecycleConfiguration\n  LoggingConfiguration: \n    LoggingConfiguration\n  MetricsConfigurations: \n    - MetricsConfiguration\n  NotificationConfiguration: \n    NotificationConfiguration\n  ObjectLockConfiguration: \n    ObjectLockConfiguration\n  ObjectLockEnabled: Boolean\n  OwnershipControls: \n    OwnershipControls\n  PublicAccessBlockConfiguration: \n    PublicAccessBlockConfiguration\n  ReplicationConfiguration: \n    ReplicationConfiguration\n  Tags: \n    - Tag\n  VersioningConfiguration: \n    VersioningConfiguration\n  WebsiteConfiguration: \n    WebsiteConfiguration\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::BucketPolicy","awsResourceTypeName":"s3-bucketpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::BucketPolicy\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::BucketPolicy\nProperties:\n  Bucket: String\n  PolicyDocument: Json\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::MultiRegionAccessPoint","awsResourceTypeName":"s3-multiregionaccesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::MultiRegionAccessPoint\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"PublicAccessBlockConfiguration\" : PublicAccessBlockConfiguration,\n      \"Regions\" : [ Region, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::MultiRegionAccessPoint\nProperties:\n  Name: String\n  PublicAccessBlockConfiguration: \n    PublicAccessBlockConfiguration\n  Regions: \n    - Region\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::MultiRegionAccessPointPolicy","awsResourceTypeName":"s3-multiregionaccesspointpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::MultiRegionAccessPointPolicy\",\n  \"Properties\" : {\n      \"MrapName\" : String,\n      \"Policy\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::MultiRegionAccessPointPolicy\nProperties:\n  MrapName: String\n  Policy: Json\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::StorageLens","awsResourceTypeName":"s3-storagelens","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::StorageLens\",\n  \"Properties\" : {\n      \"StorageLensConfiguration\" : StorageLensConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::StorageLens\nProperties:\n  StorageLensConfiguration: \n    StorageLensConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3::StorageLensGroup","awsResourceTypeName":"s3-storagelensgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3::StorageLensGroup\",\n  \"Properties\" : {\n      \"Filter\" : Filter,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3::StorageLensGroup\nProperties:\n  Filter: \n    Filter\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"S3","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Express::BucketPolicy","awsResourceTypeName":"s3express-bucketpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Express::BucketPolicy\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Express::BucketPolicy\nProperties:\n  Bucket: String\n  PolicyDocument: Json\n","awsServiceName":"S3Express","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Express::DirectoryBucket","awsResourceTypeName":"s3express-directorybucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Express::DirectoryBucket\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"DataRedundancy\" : String,\n      \"LocationName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Express::DirectoryBucket\nProperties:\n  BucketName: String\n  DataRedundancy: String\n  LocationName: String\n","awsServiceName":"S3Express","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3ObjectLambda::AccessPoint","awsResourceTypeName":"s3objectlambda-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3ObjectLambda::AccessPoint\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"ObjectLambdaConfiguration\" : ObjectLambdaConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3ObjectLambda::AccessPoint\nProperties:\n  Name: String\n  ObjectLambdaConfiguration: \n    ObjectLambdaConfiguration\n","awsServiceName":"S3ObjectLambda","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3ObjectLambda::AccessPointPolicy","awsResourceTypeName":"s3objectlambda-accesspointpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3ObjectLambda::AccessPointPolicy\",\n  \"Properties\" : {\n      \"ObjectLambdaAccessPoint\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3ObjectLambda::AccessPointPolicy\nProperties:\n  ObjectLambdaAccessPoint: String\n  PolicyDocument: Json\n","awsServiceName":"S3ObjectLambda","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::AccessPoint","awsResourceTypeName":"s3outposts-accesspoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::AccessPoint\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"Name\" : String,\n      \"Policy\" : Json,\n      \"VpcConfiguration\" : VpcConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::AccessPoint\nProperties:\n  Bucket: String\n  Name: String\n  Policy: Json\n  VpcConfiguration: \n    VpcConfiguration\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::Bucket","awsResourceTypeName":"s3outposts-bucket","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::Bucket\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"LifecycleConfiguration\" : LifecycleConfiguration,\n      \"OutpostId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::Bucket\nProperties:\n  BucketName: String\n  LifecycleConfiguration: \n    LifecycleConfiguration\n  OutpostId: String\n  Tags: \n    - Tag\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::BucketPolicy","awsResourceTypeName":"s3outposts-bucketpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::BucketPolicy\",\n  \"Properties\" : {\n      \"Bucket\" : String,\n      \"PolicyDocument\" : Json\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::BucketPolicy\nProperties:\n  Bucket: String\n  PolicyDocument: Json\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::S3Outposts::Endpoint","awsResourceTypeName":"s3outposts-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::S3Outposts::Endpoint\",\n  \"Properties\" : {\n      \"AccessType\" : String,\n      \"CustomerOwnedIpv4Pool\" : String,\n      \"FailedReason\" : FailedReason,\n      \"OutpostId\" : String,\n      \"SecurityGroupId\" : String,\n      \"SubnetId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::S3Outposts::Endpoint\nProperties:\n  AccessType: String\n  CustomerOwnedIpv4Pool: String\n  FailedReason: \n    FailedReason\n  OutpostId: String\n  SecurityGroupId: String\n  SubnetId: String\n","awsServiceName":"S3Outposts","awsServiceCategory":"storage"},{"awsResourceType":"AWS::SageMaker::App","awsResourceTypeName":"sagemaker-app","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::App\",\n  \"Properties\" : {\n      \"AppName\" : String,\n      \"AppType\" : String,\n      \"DomainId\" : String,\n      \"ResourceSpec\" : ResourceSpec,\n      \"Tags\" : [ Tag, ... ],\n      \"UserProfileName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::App\nProperties:\n  AppName: String\n  AppType: String\n  DomainId: String\n  ResourceSpec: \n    ResourceSpec\n  Tags: \n    - Tag\n  UserProfileName: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::AppImageConfig","awsResourceTypeName":"sagemaker-appimageconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::AppImageConfig\",\n  \"Properties\" : {\n      \"AppImageConfigName\" : String,\n      \"CodeEditorAppImageConfig\" : CodeEditorAppImageConfig,\n      \"JupyterLabAppImageConfig\" : JupyterLabAppImageConfig,\n      \"KernelGatewayImageConfig\" : KernelGatewayImageConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::AppImageConfig\nProperties:\n  AppImageConfigName: String\n  CodeEditorAppImageConfig: \n    CodeEditorAppImageConfig\n  JupyterLabAppImageConfig: \n    JupyterLabAppImageConfig\n  KernelGatewayImageConfig: \n    KernelGatewayImageConfig\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::CodeRepository","awsResourceTypeName":"sagemaker-coderepository","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::CodeRepository\",\n  \"Properties\" : {\n      \"CodeRepositoryName\" : String,\n      \"GitConfig\" : GitConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::CodeRepository\nProperties:\n  CodeRepositoryName: String\n  GitConfig: \n    GitConfig\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::DataQualityJobDefinition","awsResourceTypeName":"sagemaker-dataqualityjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::DataQualityJobDefinition\",\n  \"Properties\" : {\n      \"DataQualityAppSpecification\" : DataQualityAppSpecification,\n      \"DataQualityBaselineConfig\" : DataQualityBaselineConfig,\n      \"DataQualityJobInput\" : DataQualityJobInput,\n      \"DataQualityJobOutputConfig\" : MonitoringOutputConfig,\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::DataQualityJobDefinition\nProperties:\n  DataQualityAppSpecification: \n    DataQualityAppSpecification\n  DataQualityBaselineConfig: \n    DataQualityBaselineConfig\n  DataQualityJobInput: \n    DataQualityJobInput\n  DataQualityJobOutputConfig: \n    MonitoringOutputConfig\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Device","awsResourceTypeName":"sagemaker-device","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Device\",\n  \"Properties\" : {\n      \"Device\" : Device,\n      \"DeviceFleetName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Device\nProperties:\n  Device: \n    Device\n  DeviceFleetName: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::DeviceFleet","awsResourceTypeName":"sagemaker-devicefleet","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::DeviceFleet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"DeviceFleetName\" : String,\n      \"OutputConfig\" : EdgeOutputConfig,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::DeviceFleet\nProperties:\n  Description: String\n  DeviceFleetName: String\n  OutputConfig: \n    EdgeOutputConfig\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Domain","awsResourceTypeName":"sagemaker-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Domain\",\n  \"Properties\" : {\n      \"AppNetworkAccessType\" : String,\n      \"AppSecurityGroupManagement\" : String,\n      \"AuthMode\" : String,\n      \"DefaultSpaceSettings\" : DefaultSpaceSettings,\n      \"DefaultUserSettings\" : UserSettings,\n      \"DomainName\" : String,\n      \"DomainSettings\" : DomainSettings,\n      \"KmsKeyId\" : String,\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Domain\nProperties:\n  AppNetworkAccessType: String\n  AppSecurityGroupManagement: String\n  AuthMode: String\n  DefaultSpaceSettings: \n    DefaultSpaceSettings\n  DefaultUserSettings: \n    UserSettings\n  DomainName: String\n  DomainSettings: \n    DomainSettings\n  KmsKeyId: String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Endpoint","awsResourceTypeName":"sagemaker-endpoint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Endpoint\",\n  \"Properties\" : {\n      \"DeploymentConfig\" : DeploymentConfig,\n      \"EndpointConfigName\" : String,\n      \"EndpointName\" : String,\n      \"ExcludeRetainedVariantProperties\" : [ VariantProperty, ... ],\n      \"RetainAllVariantProperties\" : Boolean,\n      \"RetainDeploymentConfig\" : Boolean,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Endpoint\nProperties:\n  DeploymentConfig: \n    DeploymentConfig\n  EndpointConfigName: String\n  EndpointName: String\n  ExcludeRetainedVariantProperties: \n    - VariantProperty\n  RetainAllVariantProperties: Boolean\n  RetainDeploymentConfig: Boolean\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::EndpointConfig","awsResourceTypeName":"sagemaker-endpointconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::EndpointConfig\",\n  \"Properties\" : {\n      \"AsyncInferenceConfig\" : AsyncInferenceConfig,\n      \"DataCaptureConfig\" : DataCaptureConfig,\n      \"EndpointConfigName\" : String,\n      \"ExplainerConfig\" : ExplainerConfig,\n      \"KmsKeyId\" : String,\n      \"ProductionVariants\" : [ ProductionVariant, ... ],\n      \"ShadowProductionVariants\" : [ ProductionVariant, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::EndpointConfig\nProperties:\n  AsyncInferenceConfig: \n    AsyncInferenceConfig\n  DataCaptureConfig: \n    DataCaptureConfig\n  EndpointConfigName: String\n  ExplainerConfig: \n    ExplainerConfig\n  KmsKeyId: String\n  ProductionVariants: \n    - ProductionVariant\n  ShadowProductionVariants: \n    - ProductionVariant\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::FeatureGroup","awsResourceTypeName":"sagemaker-featuregroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::FeatureGroup\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"EventTimeFeatureName\" : String,\n      \"FeatureDefinitions\" : [ FeatureDefinition, ... ],\n      \"FeatureGroupName\" : String,\n      \"OfflineStoreConfig\" : OfflineStoreConfig,\n      \"OnlineStoreConfig\" : OnlineStoreConfig,\n      \"RecordIdentifierFeatureName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"ThroughputConfig\" : ThroughputConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::FeatureGroup\nProperties:\n  Description: String\n  EventTimeFeatureName: String\n  FeatureDefinitions: \n    - FeatureDefinition\n  FeatureGroupName: String\n  OfflineStoreConfig: \n    OfflineStoreConfig\n  OnlineStoreConfig: \n    OnlineStoreConfig\n  RecordIdentifierFeatureName: String\n  RoleArn: String\n  Tags: \n    - Tag\n  ThroughputConfig: \n    ThroughputConfig\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Image","awsResourceTypeName":"sagemaker-image","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Image\",\n  \"Properties\" : {\n      \"ImageDescription\" : String,\n      \"ImageDisplayName\" : String,\n      \"ImageName\" : String,\n      \"ImageRoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Image\nProperties:\n  ImageDescription: String\n  ImageDisplayName: String\n  ImageName: String\n  ImageRoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ImageVersion","awsResourceTypeName":"sagemaker-imageversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ImageVersion\",\n  \"Properties\" : {\n      \"Alias\" : String,\n      \"Aliases\" : [ String, ... ],\n      \"BaseImage\" : String,\n      \"Horovod\" : Boolean,\n      \"ImageName\" : String,\n      \"JobType\" : String,\n      \"MLFramework\" : String,\n      \"Processor\" : String,\n      \"ProgrammingLang\" : String,\n      \"ReleaseNotes\" : String,\n      \"VendorGuidance\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ImageVersion\nProperties:\n  Alias: String\n  Aliases: \n    - String\n  BaseImage: String\n  Horovod: Boolean\n  ImageName: String\n  JobType: String\n  MLFramework: String\n  Processor: String\n  ProgrammingLang: String\n  ReleaseNotes: String\n  VendorGuidance: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::InferenceComponent","awsResourceTypeName":"sagemaker-inferencecomponent","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::InferenceComponent\",\n  \"Properties\" : {\n      \"EndpointArn\" : String,\n      \"EndpointName\" : String,\n      \"InferenceComponentName\" : String,\n      \"RuntimeConfig\" : InferenceComponentRuntimeConfig,\n      \"Specification\" : InferenceComponentSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"VariantName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::InferenceComponent\nProperties:\n  EndpointArn: String\n  EndpointName: String\n  InferenceComponentName: String\n  RuntimeConfig: \n    InferenceComponentRuntimeConfig\n  Specification: \n    InferenceComponentSpecification\n  Tags: \n    - Tag\n  VariantName: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::InferenceExperiment","awsResourceTypeName":"sagemaker-inferenceexperiment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::InferenceExperiment\",\n  \"Properties\" : {\n      \"DataStorageConfig\" : DataStorageConfig,\n      \"Description\" : String,\n      \"DesiredState\" : String,\n      \"EndpointName\" : String,\n      \"KmsKey\" : String,\n      \"ModelVariants\" : [ ModelVariantConfig, ... ],\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"Schedule\" : InferenceExperimentSchedule,\n      \"ShadowModeConfig\" : ShadowModeConfig,\n      \"StatusReason\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::InferenceExperiment\nProperties:\n  DataStorageConfig: \n    DataStorageConfig\n  Description: String\n  DesiredState: String\n  EndpointName: String\n  KmsKey: String\n  ModelVariants: \n    - ModelVariantConfig\n  Name: String\n  RoleArn: String\n  Schedule: \n    InferenceExperimentSchedule\n  ShadowModeConfig: \n    ShadowModeConfig\n  StatusReason: String\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Model","awsResourceTypeName":"sagemaker-model","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Model\",\n  \"Properties\" : {\n      \"Containers\" : [ ContainerDefinition, ... ],\n      \"EnableNetworkIsolation\" : Boolean,\n      \"ExecutionRoleArn\" : String,\n      \"InferenceExecutionConfig\" : InferenceExecutionConfig,\n      \"ModelName\" : String,\n      \"PrimaryContainer\" : ContainerDefinition,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcConfig\" : VpcConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Model\nProperties:\n  Containers: \n    - ContainerDefinition\n  EnableNetworkIsolation: Boolean\n  ExecutionRoleArn: String\n  InferenceExecutionConfig: \n    InferenceExecutionConfig\n  ModelName: String\n  PrimaryContainer: \n    ContainerDefinition\n  Tags: \n    - Tag\n  VpcConfig: \n    VpcConfig\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelBiasJobDefinition","awsResourceTypeName":"sagemaker-modelbiasjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelBiasJobDefinition\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"ModelBiasAppSpecification\" : ModelBiasAppSpecification,\n      \"ModelBiasBaselineConfig\" : ModelBiasBaselineConfig,\n      \"ModelBiasJobInput\" : ModelBiasJobInput,\n      \"ModelBiasJobOutputConfig\" : MonitoringOutputConfig,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelBiasJobDefinition\nProperties:\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  ModelBiasAppSpecification: \n    ModelBiasAppSpecification\n  ModelBiasBaselineConfig: \n    ModelBiasBaselineConfig\n  ModelBiasJobInput: \n    ModelBiasJobInput\n  ModelBiasJobOutputConfig: \n    MonitoringOutputConfig\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelCard","awsResourceTypeName":"sagemaker-modelcard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelCard\",\n  \"Properties\" : {\n      \"Content\" : Content,\n      \"CreatedBy\" : UserContext,\n      \"LastModifiedBy\" : UserContext,\n      \"ModelCardName\" : String,\n      \"ModelCardStatus\" : String,\n      \"SecurityConfig\" : SecurityConfig,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelCard\nProperties:\n  Content: \n    Content\n  CreatedBy: \n    UserContext\n  LastModifiedBy: \n    UserContext\n  ModelCardName: String\n  ModelCardStatus: String\n  SecurityConfig: \n    SecurityConfig\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelExplainabilityJobDefinition","awsResourceTypeName":"sagemaker-modelexplainabilityjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelExplainabilityJobDefinition\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"ModelExplainabilityAppSpecification\" : ModelExplainabilityAppSpecification,\n      \"ModelExplainabilityBaselineConfig\" : ModelExplainabilityBaselineConfig,\n      \"ModelExplainabilityJobInput\" : ModelExplainabilityJobInput,\n      \"ModelExplainabilityJobOutputConfig\" : MonitoringOutputConfig,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelExplainabilityJobDefinition\nProperties:\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  ModelExplainabilityAppSpecification: \n    ModelExplainabilityAppSpecification\n  ModelExplainabilityBaselineConfig: \n    ModelExplainabilityBaselineConfig\n  ModelExplainabilityJobInput: \n    ModelExplainabilityJobInput\n  ModelExplainabilityJobOutputConfig: \n    MonitoringOutputConfig\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelPackage","awsResourceTypeName":"sagemaker-modelpackage","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelPackage\",\n  \"Properties\" : {\n      \"AdditionalInferenceSpecifications\" : [ AdditionalInferenceSpecificationDefinition, ... ],\n      \"AdditionalInferenceSpecificationsToAdd\" : [ AdditionalInferenceSpecificationDefinition, ... ],\n      \"ApprovalDescription\" : String,\n      \"CertifyForMarketplace\" : Boolean,\n      \"ClientToken\" : String,\n      \"CustomerMetadataProperties\" : {Key: Value, ...},\n      \"Domain\" : String,\n      \"DriftCheckBaselines\" : DriftCheckBaselines,\n      \"InferenceSpecification\" : InferenceSpecification,\n      \"LastModifiedTime\" : String,\n      \"MetadataProperties\" : MetadataProperties,\n      \"ModelApprovalStatus\" : String,\n      \"ModelMetrics\" : ModelMetrics,\n      \"ModelPackageDescription\" : String,\n      \"ModelPackageGroupName\" : String,\n      \"ModelPackageName\" : String,\n      \"ModelPackageStatusDetails\" : ModelPackageStatusDetails,\n      \"ModelPackageVersion\" : Integer,\n      \"SamplePayloadUrl\" : String,\n      \"SkipModelValidation\" : String,\n      \"SourceAlgorithmSpecification\" : SourceAlgorithmSpecification,\n      \"Tags\" : [ Tag, ... ],\n      \"Task\" : String,\n      \"ValidationSpecification\" : ValidationSpecification\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelPackage\nProperties:\n  AdditionalInferenceSpecifications: \n    - AdditionalInferenceSpecificationDefinition\n  AdditionalInferenceSpecificationsToAdd: \n    - AdditionalInferenceSpecificationDefinition\n  ApprovalDescription: String\n  CertifyForMarketplace: Boolean\n  ClientToken: String\n  CustomerMetadataProperties: \n    Key: Value\n  Domain: String\n  DriftCheckBaselines: \n    DriftCheckBaselines\n  InferenceSpecification: \n    InferenceSpecification\n  LastModifiedTime: String\n  MetadataProperties: \n    MetadataProperties\n  ModelApprovalStatus: String\n  ModelMetrics: \n    ModelMetrics\n  ModelPackageDescription: String\n  ModelPackageGroupName: String\n  ModelPackageName: String\n  ModelPackageStatusDetails: \n    ModelPackageStatusDetails\n  ModelPackageVersion: Integer\n  SamplePayloadUrl: String\n  SkipModelValidation: String\n  SourceAlgorithmSpecification: \n    SourceAlgorithmSpecification\n  Tags: \n    - Tag\n  Task: String\n  ValidationSpecification: \n    ValidationSpecification\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelPackageGroup","awsResourceTypeName":"sagemaker-modelpackagegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelPackageGroup\",\n  \"Properties\" : {\n      \"ModelPackageGroupDescription\" : String,\n      \"ModelPackageGroupName\" : String,\n      \"ModelPackageGroupPolicy\" : Json,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelPackageGroup\nProperties:\n  ModelPackageGroupDescription: String\n  ModelPackageGroupName: String\n  ModelPackageGroupPolicy: Json\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::ModelQualityJobDefinition","awsResourceTypeName":"sagemaker-modelqualityjobdefinition","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::ModelQualityJobDefinition\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"JobDefinitionName\" : String,\n      \"JobResources\" : MonitoringResources,\n      \"ModelQualityAppSpecification\" : ModelQualityAppSpecification,\n      \"ModelQualityBaselineConfig\" : ModelQualityBaselineConfig,\n      \"ModelQualityJobInput\" : ModelQualityJobInput,\n      \"ModelQualityJobOutputConfig\" : MonitoringOutputConfig,\n      \"NetworkConfig\" : NetworkConfig,\n      \"RoleArn\" : String,\n      \"StoppingCondition\" : StoppingCondition,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::ModelQualityJobDefinition\nProperties:\n  EndpointName: String\n  JobDefinitionName: String\n  JobResources: \n    MonitoringResources\n  ModelQualityAppSpecification: \n    ModelQualityAppSpecification\n  ModelQualityBaselineConfig: \n    ModelQualityBaselineConfig\n  ModelQualityJobInput: \n    ModelQualityJobInput\n  ModelQualityJobOutputConfig: \n    MonitoringOutputConfig\n  NetworkConfig: \n    NetworkConfig\n  RoleArn: String\n  StoppingCondition: \n    StoppingCondition\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::MonitoringSchedule","awsResourceTypeName":"sagemaker-monitoringschedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::MonitoringSchedule\",\n  \"Properties\" : {\n      \"EndpointName\" : String,\n      \"FailureReason\" : String,\n      \"LastMonitoringExecutionSummary\" : MonitoringExecutionSummary,\n      \"MonitoringScheduleConfig\" : MonitoringScheduleConfig,\n      \"MonitoringScheduleName\" : String,\n      \"MonitoringScheduleStatus\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::MonitoringSchedule\nProperties:\n  EndpointName: String\n  FailureReason: String\n  LastMonitoringExecutionSummary: \n    MonitoringExecutionSummary\n  MonitoringScheduleConfig: \n    MonitoringScheduleConfig\n  MonitoringScheduleName: String\n  MonitoringScheduleStatus: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::NotebookInstance","awsResourceTypeName":"sagemaker-notebookinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::NotebookInstance\",\n  \"Properties\" : {\n      \"AcceleratorTypes\" : [ String, ... ],\n      \"AdditionalCodeRepositories\" : [ String, ... ],\n      \"DefaultCodeRepository\" : String,\n      \"DirectInternetAccess\" : String,\n      \"InstanceMetadataServiceConfiguration\" : InstanceMetadataServiceConfiguration,\n      \"InstanceType\" : String,\n      \"KmsKeyId\" : String,\n      \"LifecycleConfigName\" : String,\n      \"NotebookInstanceName\" : String,\n      \"PlatformIdentifier\" : String,\n      \"RoleArn\" : String,\n      \"RootAccess\" : String,\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetId\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VolumeSizeInGB\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::NotebookInstance\nProperties:\n  AcceleratorTypes: \n    - String\n  AdditionalCodeRepositories: \n    - String\n  DefaultCodeRepository: String\n  DirectInternetAccess: String\n  InstanceMetadataServiceConfiguration: \n    InstanceMetadataServiceConfiguration\n  InstanceType: String\n  KmsKeyId: String\n  LifecycleConfigName: String\n  NotebookInstanceName: String\n  PlatformIdentifier: String\n  RoleArn: String\n  RootAccess: String\n  SecurityGroupIds: \n    - String\n  SubnetId: String\n  Tags: \n    - Tag\n  VolumeSizeInGB: Integer\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::NotebookInstanceLifecycleConfig","awsResourceTypeName":"sagemaker-notebookinstancelifecycleconfig","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::NotebookInstanceLifecycleConfig\",\n  \"Properties\" : {\n      \"NotebookInstanceLifecycleConfigName\" : String,\n      \"OnCreate\" : [ NotebookInstanceLifecycleHook, ... ],\n      \"OnStart\" : [ NotebookInstanceLifecycleHook, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::NotebookInstanceLifecycleConfig\nProperties:\n  NotebookInstanceLifecycleConfigName: String\n  OnCreate: \n    - NotebookInstanceLifecycleHook\n  OnStart: \n    - NotebookInstanceLifecycleHook\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Pipeline","awsResourceTypeName":"sagemaker-pipeline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Pipeline\",\n  \"Properties\" : {\n      \"ParallelismConfiguration\" : ParallelismConfiguration,\n      \"PipelineDefinition\" : PipelineDefinition,\n      \"PipelineDescription\" : String,\n      \"PipelineDisplayName\" : String,\n      \"PipelineName\" : String,\n      \"RoleArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Pipeline\nProperties:\n  ParallelismConfiguration: \n    ParallelismConfiguration\n  PipelineDefinition: \n    PipelineDefinition\n  PipelineDescription: String\n  PipelineDisplayName: String\n  PipelineName: String\n  RoleArn: String\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Project","awsResourceTypeName":"sagemaker-project","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Project\",\n  \"Properties\" : {\n      \"ProjectDescription\" : String,\n      \"ProjectName\" : String,\n      \"ServiceCatalogProvisionedProductDetails\" : ServiceCatalogProvisionedProductDetails,\n      \"ServiceCatalogProvisioningDetails\" : ServiceCatalogProvisioningDetails,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Project\nProperties:\n  ProjectDescription: String\n  ProjectName: String\n  ServiceCatalogProvisionedProductDetails: \n    ServiceCatalogProvisionedProductDetails\n  ServiceCatalogProvisioningDetails: \n    ServiceCatalogProvisioningDetails\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Space","awsResourceTypeName":"sagemaker-space","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Space\",\n  \"Properties\" : {\n      \"DomainId\" : String,\n      \"OwnershipSettings\" : OwnershipSettings,\n      \"SpaceDisplayName\" : String,\n      \"SpaceName\" : String,\n      \"SpaceSettings\" : SpaceSettings,\n      \"SpaceSharingSettings\" : SpaceSharingSettings,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Space\nProperties:\n  DomainId: String\n  OwnershipSettings: \n    OwnershipSettings\n  SpaceDisplayName: String\n  SpaceName: String\n  SpaceSettings: \n    SpaceSettings\n  SpaceSharingSettings: \n    SpaceSharingSettings\n  Tags: \n    - Tag\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::UserProfile","awsResourceTypeName":"sagemaker-userprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::UserProfile\",\n  \"Properties\" : {\n      \"DomainId\" : String,\n      \"SingleSignOnUserIdentifier\" : String,\n      \"SingleSignOnUserValue\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UserProfileName\" : String,\n      \"UserSettings\" : UserSettings\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::UserProfile\nProperties:\n  DomainId: String\n  SingleSignOnUserIdentifier: String\n  SingleSignOnUserValue: String\n  Tags: \n    - Tag\n  UserProfileName: String\n  UserSettings: \n    UserSettings\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SageMaker::Workteam","awsResourceTypeName":"sagemaker-workteam","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SageMaker::Workteam\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"MemberDefinitions\" : [ MemberDefinition, ... ],\n      \"NotificationConfiguration\" : NotificationConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"WorkforceName\" : String,\n      \"WorkteamName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SageMaker::Workteam\nProperties:\n  Description: String\n  MemberDefinitions: \n    - MemberDefinition\n  NotificationConfiguration: \n    NotificationConfiguration\n  Tags: \n    - Tag\n  WorkforceName: String\n  WorkteamName: String\n","awsServiceName":"SageMaker","awsServiceCategory":"machineLearning"},{"awsResourceType":"AWS::SecretsManager::ResourcePolicy","awsResourceTypeName":"secretsmanager-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::ResourcePolicy\",\n  \"Properties\" : {\n      \"BlockPublicPolicy\" : Boolean,\n      \"ResourcePolicy\" : Json,\n      \"SecretId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::ResourcePolicy\nProperties:\n  BlockPublicPolicy: Boolean\n  ResourcePolicy: Json\n  SecretId: String\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::SecretsManager::RotationSchedule","awsResourceTypeName":"secretsmanager-rotationschedule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::RotationSchedule\",\n  \"Properties\" : {\n      \"HostedRotationLambda\" : HostedRotationLambda,\n      \"RotateImmediatelyOnUpdate\" : Boolean,\n      \"RotationLambdaARN\" : String,\n      \"RotationRules\" : RotationRules,\n      \"SecretId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::RotationSchedule\nProperties:\n  HostedRotationLambda: \n    HostedRotationLambda\n  RotateImmediatelyOnUpdate: Boolean\n  RotationLambdaARN: String\n  RotationRules: \n    RotationRules\n  SecretId: String\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::SecretsManager::Secret","awsResourceTypeName":"secretsmanager-secret","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::Secret\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"GenerateSecretString\" : GenerateSecretString,\n      \"KmsKeyId\" : String,\n      \"Name\" : String,\n      \"ReplicaRegions\" : [ ReplicaRegion, ... ],\n      \"SecretString\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::Secret\nProperties:\n  Description: String\n  GenerateSecretString: \n    GenerateSecretString\n  KmsKeyId: String\n  Name: String\n  ReplicaRegions: \n    - ReplicaRegion\n  SecretString: \n    String\n  Tags: \n    - Tag\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::SecretsManager::SecretTargetAttachment","awsResourceTypeName":"secretsmanager-secrettargetattachment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecretsManager::SecretTargetAttachment\",\n  \"Properties\" : {\n      \"SecretId\" : String,\n      \"TargetId\" : String,\n      \"TargetType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecretsManager::SecretTargetAttachment\nProperties:\n  SecretId: String\n  TargetId: String\n  TargetType: String\n","awsServiceName":"SecretsManager","awsServiceCategory":"other"},{"awsResourceType":"AWS::ServiceCatalog::AcceptedPortfolioShare","awsResourceTypeName":"servicecatalog-acceptedportfolioshare","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::AcceptedPortfolioShare\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"PortfolioId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::AcceptedPortfolioShare\nProperties:\n  AcceptLanguage: String\n  PortfolioId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::CloudFormationProduct","awsResourceTypeName":"servicecatalog-cloudformationproduct","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::CloudFormationProduct\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"Distributor\" : String,\n      \"Name\" : String,\n      \"Owner\" : String,\n      \"ProductType\" : String,\n      \"ProvisioningArtifactParameters\" : [ ProvisioningArtifactProperties, ... ],\n      \"ReplaceProvisioningArtifacts\" : Boolean,\n      \"SourceConnection\" : SourceConnection,\n      \"SupportDescription\" : String,\n      \"SupportEmail\" : String,\n      \"SupportUrl\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::CloudFormationProduct\nProperties:\n  AcceptLanguage: String\n  Description: String\n  Distributor: String\n  Name: String\n  Owner: String\n  ProductType: String\n  ProvisioningArtifactParameters: \n    - ProvisioningArtifactProperties\n  ReplaceProvisioningArtifacts: Boolean\n  SourceConnection: \n    SourceConnection\n  SupportDescription: String\n  SupportEmail: String\n  SupportUrl: String\n  Tags: \n    - Tag\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::CloudFormationProvisionedProduct","awsResourceTypeName":"servicecatalog-cloudformationprovisionedproduct","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::CloudFormationProvisionedProduct\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"NotificationArns\" : [ String, ... ],\n      \"PathId\" : String,\n      \"PathName\" : String,\n      \"ProductId\" : String,\n      \"ProductName\" : String,\n      \"ProvisionedProductName\" : String,\n      \"ProvisioningArtifactId\" : String,\n      \"ProvisioningArtifactName\" : String,\n      \"ProvisioningParameters\" : [ ProvisioningParameter, ... ],\n      \"ProvisioningPreferences\" : ProvisioningPreferences,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct\nProperties:\n  AcceptLanguage: String\n  NotificationArns: \n    - String\n  PathId: String\n  PathName: String\n  ProductId: String\n  ProductName: String\n  ProvisionedProductName: String\n  ProvisioningArtifactId: String\n  ProvisioningArtifactName: String\n  ProvisioningParameters: \n    - ProvisioningParameter\n  ProvisioningPreferences: \n    ProvisioningPreferences\n  Tags: \n    - Tag\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::LaunchNotificationConstraint","awsResourceTypeName":"servicecatalog-launchnotificationconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::LaunchNotificationConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"NotificationArns\" : [ String, ... ],\n      \"PortfolioId\" : String,\n      \"ProductId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::LaunchNotificationConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  NotificationArns: \n    - String\n  PortfolioId: String\n  ProductId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::LaunchRoleConstraint","awsResourceTypeName":"servicecatalog-launchroleconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::LaunchRoleConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"LocalRoleName\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::LaunchRoleConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  LocalRoleName: String\n  PortfolioId: String\n  ProductId: String\n  RoleArn: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::LaunchTemplateConstraint","awsResourceTypeName":"servicecatalog-launchtemplateconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::LaunchTemplateConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"Rules\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::LaunchTemplateConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  PortfolioId: String\n  ProductId: String\n  Rules: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::Portfolio","awsResourceTypeName":"servicecatalog-portfolio","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::Portfolio\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"ProviderName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::Portfolio\nProperties:\n  AcceptLanguage: String\n  Description: String\n  DisplayName: String\n  ProviderName: String\n  Tags: \n    - Tag\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::PortfolioPrincipalAssociation","awsResourceTypeName":"servicecatalog-portfolioprincipalassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::PortfolioPrincipalAssociation\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"PortfolioId\" : String,\n      \"PrincipalARN\" : String,\n      \"PrincipalType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation\nProperties:\n  AcceptLanguage: String\n  PortfolioId: String\n  PrincipalARN: String\n  PrincipalType: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::PortfolioProductAssociation","awsResourceTypeName":"servicecatalog-portfolioproductassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::PortfolioProductAssociation\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"SourcePortfolioId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::PortfolioProductAssociation\nProperties:\n  AcceptLanguage: String\n  PortfolioId: String\n  ProductId: String\n  SourcePortfolioId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::PortfolioShare","awsResourceTypeName":"servicecatalog-portfolioshare","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::PortfolioShare\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"AccountId\" : String,\n      \"PortfolioId\" : String,\n      \"ShareTagOptions\" : Boolean\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::PortfolioShare\nProperties:\n  AcceptLanguage: String\n  AccountId: String\n  PortfolioId: String\n  ShareTagOptions: Boolean\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::ResourceUpdateConstraint","awsResourceTypeName":"servicecatalog-resourceupdateconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::ResourceUpdateConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Description\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"TagUpdateOnProvisionedProduct\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::ResourceUpdateConstraint\nProperties:\n  AcceptLanguage: String\n  Description: String\n  PortfolioId: String\n  ProductId: String\n  TagUpdateOnProvisionedProduct: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::ServiceAction","awsResourceTypeName":"servicecatalog-serviceaction","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::ServiceAction\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"Definition\" : [ DefinitionParameter, ... ],\n      \"DefinitionType\" : String,\n      \"Description\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::ServiceAction\nProperties:\n  AcceptLanguage: String\n  Definition: \n    - DefinitionParameter\n  DefinitionType: String\n  Description: String\n  Name: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::ServiceActionAssociation","awsResourceTypeName":"servicecatalog-serviceactionassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::ServiceActionAssociation\",\n  \"Properties\" : {\n      \"ProductId\" : String,\n      \"ProvisioningArtifactId\" : String,\n      \"ServiceActionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::ServiceActionAssociation\nProperties:\n  ProductId: String\n  ProvisioningArtifactId: String\n  ServiceActionId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::StackSetConstraint","awsResourceTypeName":"servicecatalog-stacksetconstraint","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::StackSetConstraint\",\n  \"Properties\" : {\n      \"AcceptLanguage\" : String,\n      \"AccountList\" : [ String, ... ],\n      \"AdminRole\" : String,\n      \"Description\" : String,\n      \"ExecutionRole\" : String,\n      \"PortfolioId\" : String,\n      \"ProductId\" : String,\n      \"RegionList\" : [ String, ... ],\n      \"StackInstanceControl\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::StackSetConstraint\nProperties:\n  AcceptLanguage: String\n  AccountList: \n    - String\n  AdminRole: String\n  Description: String\n  ExecutionRole: String\n  PortfolioId: String\n  ProductId: String\n  RegionList: \n    - String\n  StackInstanceControl: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::TagOption","awsResourceTypeName":"servicecatalog-tagoption","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::TagOption\",\n  \"Properties\" : {\n      \"Active\" : Boolean,\n      \"Key\" : String,\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::TagOption\nProperties:\n  Active: Boolean\n  Key: String\n  Value: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalog::TagOptionAssociation","awsResourceTypeName":"servicecatalog-tagoptionassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalog::TagOptionAssociation\",\n  \"Properties\" : {\n      \"ResourceId\" : String,\n      \"TagOptionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalog::TagOptionAssociation\nProperties:\n  ResourceId: String\n  TagOptionId: String\n","awsServiceName":"ServiceCatalog","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::Application","awsResourceTypeName":"servicecatalogappregistry-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::Application\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::Application\nProperties:\n  Description: String\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::AttributeGroup","awsResourceTypeName":"servicecatalogappregistry-attributegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::AttributeGroup\",\n  \"Properties\" : {\n      \"Attributes\" : Json,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::AttributeGroup\nProperties:\n  Attributes: Json\n  Description: String\n  Name: String\n  Tags: \n    Key: Value\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation","awsResourceTypeName":"servicecatalogappregistry-attributegroupassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"AttributeGroup\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation\nProperties:\n  Application: String\n  AttributeGroup: String\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::ServiceCatalogAppRegistry::ResourceAssociation","awsResourceTypeName":"servicecatalogappregistry-resourceassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::ServiceCatalogAppRegistry::ResourceAssociation\",\n  \"Properties\" : {\n      \"Application\" : String,\n      \"Resource\" : String,\n      \"ResourceType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::ServiceCatalogAppRegistry::ResourceAssociation\nProperties:\n  Application: String\n  Resource: String\n  ResourceType: String\n","awsServiceName":"ServiceCatalogAppRegistry","awsServiceCategory":"businessApplications"},{"awsResourceType":"AWS::SecurityHub::AutomationRule","awsResourceTypeName":"securityhub-automationrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::AutomationRule\",\n  \"Properties\" : {\n      \"Actions\" : [ AutomationRulesAction, ... ],\n      \"Criteria\" : AutomationRulesFindingFilters,\n      \"Description\" : String,\n      \"IsTerminal\" : Boolean,\n      \"RuleName\" : String,\n      \"RuleOrder\" : Integer,\n      \"RuleStatus\" : String,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::AutomationRule\nProperties:\n  Actions: \n    - AutomationRulesAction\n  Criteria: \n    AutomationRulesFindingFilters\n  Description: String\n  IsTerminal: Boolean\n  RuleName: String\n  RuleOrder: Integer\n  RuleStatus: String\n  Tags: \n    Key: Value\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::DelegatedAdmin","awsResourceTypeName":"securityhub-delegatedadmin","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::DelegatedAdmin\",\n  \"Properties\" : {\n      \"AdminAccountId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::DelegatedAdmin\nProperties:\n  AdminAccountId: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::Hub","awsResourceTypeName":"securityhub-hub","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::Hub\",\n  \"Properties\" : {\n      \"AutoEnableControls\" : Boolean,\n      \"ControlFindingGenerator\" : String,\n      \"EnableDefaultStandards\" : Boolean,\n      \"Tags\" : {Key: Value, ...}\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::Hub\nProperties:\n  AutoEnableControls: Boolean\n  ControlFindingGenerator: String\n  EnableDefaultStandards: Boolean\n  Tags: \n    Key: Value\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::Insight","awsResourceTypeName":"securityhub-insight","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::Insight\",\n  \"Properties\" : {\n      \"Filters\" : AwsSecurityFindingFilters,\n      \"GroupByAttribute\" : String,\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::Insight\nProperties:\n  Filters: \n    AwsSecurityFindingFilters\n  GroupByAttribute: String\n  Name: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::ProductSubscription","awsResourceTypeName":"securityhub-productsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::ProductSubscription\",\n  \"Properties\" : {\n      \"ProductArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::ProductSubscription\nProperties:\n  ProductArn: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SecurityHub::Standard","awsResourceTypeName":"securityhub-standard","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SecurityHub::Standard\",\n  \"Properties\" : {\n      \"DisabledStandardsControls\" : [ StandardsControl, ... ],\n      \"StandardsArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SecurityHub::Standard\nProperties:\n  DisabledStandardsControls: \n    - StandardsControl\n  StandardsArn: String\n","awsServiceName":"SecurityHub","awsServiceCategory":"security"},{"awsResourceType":"AWS::SES::ConfigurationSet","awsResourceTypeName":"ses-configurationset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ConfigurationSet\",\n  \"Properties\" : {\n      \"DeliveryOptions\" : DeliveryOptions,\n      \"Name\" : String,\n      \"ReputationOptions\" : ReputationOptions,\n      \"SendingOptions\" : SendingOptions,\n      \"SuppressionOptions\" : SuppressionOptions,\n      \"TrackingOptions\" : TrackingOptions,\n      \"VdmOptions\" : VdmOptions\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ConfigurationSet\nProperties:\n  DeliveryOptions: \n    DeliveryOptions\n  Name: String\n  ReputationOptions: \n    ReputationOptions\n  SendingOptions: \n    SendingOptions\n  SuppressionOptions: \n    SuppressionOptions\n  TrackingOptions: \n    TrackingOptions\n  VdmOptions: \n    VdmOptions\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ConfigurationSetEventDestination","awsResourceTypeName":"ses-configurationseteventdestination","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ConfigurationSetEventDestination\",\n  \"Properties\" : {\n      \"ConfigurationSetName\" : String,\n      \"EventDestination\" : EventDestination\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ConfigurationSetEventDestination\nProperties:\n  ConfigurationSetName: String\n  EventDestination: \n    EventDestination\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ContactList","awsResourceTypeName":"ses-contactlist","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ContactList\",\n  \"Properties\" : {\n      \"ContactListName\" : String,\n      \"Description\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Topics\" : [ Topic, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ContactList\nProperties:\n  ContactListName: String\n  Description: String\n  Tags: \n    - Tag\n  Topics: \n    - Topic\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::DedicatedIpPool","awsResourceTypeName":"ses-dedicatedippool","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::DedicatedIpPool\",\n  \"Properties\" : {\n      \"PoolName\" : String,\n      \"ScalingMode\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::DedicatedIpPool\nProperties:\n  PoolName: String\n  ScalingMode: String\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::EmailIdentity","awsResourceTypeName":"ses-emailidentity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::EmailIdentity\",\n  \"Properties\" : {\n      \"ConfigurationSetAttributes\" : ConfigurationSetAttributes,\n      \"DkimAttributes\" : DkimAttributes,\n      \"DkimSigningAttributes\" : DkimSigningAttributes,\n      \"EmailIdentity\" : String,\n      \"FeedbackAttributes\" : FeedbackAttributes,\n      \"MailFromAttributes\" : MailFromAttributes\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::EmailIdentity\nProperties:\n  ConfigurationSetAttributes: \n    ConfigurationSetAttributes\n  DkimAttributes: \n    DkimAttributes\n  DkimSigningAttributes: \n    DkimSigningAttributes\n  EmailIdentity: String\n  FeedbackAttributes: \n    FeedbackAttributes\n  MailFromAttributes: \n    MailFromAttributes\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ReceiptFilter","awsResourceTypeName":"ses-receiptfilter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ReceiptFilter\",\n  \"Properties\" : {\n      \"Filter\" : Filter\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ReceiptFilter\nProperties:\n  Filter: \n    Filter\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ReceiptRule","awsResourceTypeName":"ses-receiptrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ReceiptRule\",\n  \"Properties\" : {\n      \"After\" : String,\n      \"Rule\" : Rule,\n      \"RuleSetName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ReceiptRule\nProperties:\n  After: String\n  Rule: \n    Rule\n  RuleSetName: String\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::ReceiptRuleSet","awsResourceTypeName":"ses-receiptruleset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::ReceiptRuleSet\",\n  \"Properties\" : {\n      \"RuleSetName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::ReceiptRuleSet\nProperties:\n  RuleSetName: String\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::Template","awsResourceTypeName":"ses-template","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::Template\",\n  \"Properties\" : {\n      \"Template\" : Template\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::Template\nProperties:\n  Template: \n    Template\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SES::VdmAttributes","awsResourceTypeName":"ses-vdmattributes","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SES::VdmAttributes\",\n  \"Properties\" : {\n      \"DashboardAttributes\" : DashboardAttributes,\n      \"GuardianAttributes\" : GuardianAttributes\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SES::VdmAttributes\nProperties:\n  DashboardAttributes: \n    DashboardAttributes\n  GuardianAttributes: \n    GuardianAttributes\n","awsServiceName":"SES","awsServiceCategory":"other"},{"awsResourceType":"AWS::SDB::Domain","awsResourceTypeName":"sdb-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SDB::Domain\",\n  \"Properties\" : {\n      \"Description\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SDB::Domain\nProperties:\n  Description: String\n","awsServiceName":"SDB","awsServiceCategory":"other"},{"awsResourceType":"AWS::Shield::DRTAccess","awsResourceTypeName":"shield-drtaccess","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::DRTAccess\",\n  \"Properties\" : {\n      \"LogBucketList\" : [ String, ... ],\n      \"RoleArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::DRTAccess\nProperties:\n  LogBucketList: \n    - String\n  RoleArn: String\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Shield::ProactiveEngagement","awsResourceTypeName":"shield-proactiveengagement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::ProactiveEngagement\",\n  \"Properties\" : {\n      \"EmergencyContactList\" : [ EmergencyContact, ... ],\n      \"ProactiveEngagementStatus\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::ProactiveEngagement\nProperties:\n  EmergencyContactList: \n    - EmergencyContact\n  ProactiveEngagementStatus: String\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Shield::Protection","awsResourceTypeName":"shield-protection","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::Protection\",\n  \"Properties\" : {\n      \"ApplicationLayerAutomaticResponseConfiguration\" : ApplicationLayerAutomaticResponseConfiguration,\n      \"HealthCheckArns\" : [ String, ... ],\n      \"Name\" : String,\n      \"ResourceArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::Protection\nProperties:\n  ApplicationLayerAutomaticResponseConfiguration: \n    ApplicationLayerAutomaticResponseConfiguration\n  HealthCheckArns: \n    - String\n  Name: String\n  ResourceArn: String\n  Tags: \n    - Tag\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Shield::ProtectionGroup","awsResourceTypeName":"shield-protectiongroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Shield::ProtectionGroup\",\n  \"Properties\" : {\n      \"Aggregation\" : String,\n      \"Members\" : [ String, ... ],\n      \"Pattern\" : String,\n      \"ProtectionGroupId\" : String,\n      \"ResourceType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Shield::ProtectionGroup\nProperties:\n  Aggregation: String\n  Members: \n    - String\n  Pattern: String\n  ProtectionGroupId: String\n  ResourceType: String\n  Tags: \n    - Tag\n","awsServiceName":"Shield","awsServiceCategory":"security"},{"awsResourceType":"AWS::Signer::ProfilePermission","awsResourceTypeName":"signer-profilepermission","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Signer::ProfilePermission\",\n  \"Properties\" : {\n      \"Action\" : String,\n      \"Principal\" : String,\n      \"ProfileName\" : String,\n      \"ProfileVersion\" : String,\n      \"StatementId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Signer::ProfilePermission\nProperties:\n  Action: String\n  Principal: String\n  ProfileName: String\n  ProfileVersion: String\n  StatementId: String\n","awsServiceName":"Signer","awsServiceCategory":"other"},{"awsResourceType":"AWS::Signer::SigningProfile","awsResourceTypeName":"signer-signingprofile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Signer::SigningProfile\",\n  \"Properties\" : {\n      \"PlatformId\" : String,\n      \"SignatureValidityPeriod\" : SignatureValidityPeriod,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Signer::SigningProfile\nProperties:\n  PlatformId: String\n  SignatureValidityPeriod: \n    SignatureValidityPeriod\n  Tags: \n    - Tag\n","awsServiceName":"Signer","awsServiceCategory":"other"},{"awsResourceType":"AWS::SimSpaceWeaver::Simulation","awsResourceTypeName":"simspaceweaver-simulation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SimSpaceWeaver::Simulation\",\n  \"Properties\" : {\n      \"MaximumDuration\" : String,\n      \"Name\" : String,\n      \"RoleArn\" : String,\n      \"SchemaS3Location\" : S3Location,\n      \"SnapshotS3Location\" : S3Location\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SimSpaceWeaver::Simulation\nProperties:\n  MaximumDuration: String\n  Name: String\n  RoleArn: String\n  SchemaS3Location: \n    S3Location\n  SnapshotS3Location: \n    S3Location\n","awsServiceName":"SimSpaceWeaver","awsServiceCategory":"other"},{"awsResourceType":"AWS::SNS::Subscription","awsResourceTypeName":"sns-subscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::Subscription\",\n  \"Properties\" : {\n      \"DeliveryPolicy\" : Json,\n      \"Endpoint\" : String,\n      \"FilterPolicy\" : Json,\n      \"FilterPolicyScope\" : String,\n      \"Protocol\" : String,\n      \"RawMessageDelivery\" : Boolean,\n      \"RedrivePolicy\" : Json,\n      \"Region\" : String,\n      \"ReplayPolicy\" : Json,\n      \"SubscriptionRoleArn\" : String,\n      \"TopicArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::Subscription\nProperties:\n  DeliveryPolicy: Json\n  Endpoint: String\n  FilterPolicy: Json\n  FilterPolicyScope: String\n  Protocol: String\n  RawMessageDelivery: Boolean\n  RedrivePolicy: Json\n  Region: String\n  ReplayPolicy: Json\n  SubscriptionRoleArn: String\n  TopicArn: String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SNS::Topic","awsResourceTypeName":"sns-topic","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::Topic\",\n  \"Properties\" : {\n      \"ArchivePolicy\" : Json,\n      \"ContentBasedDeduplication\" : Boolean,\n      \"DataProtectionPolicy\" : Json,\n      \"DeliveryStatusLogging\" : [ LoggingConfig, ... ],\n      \"DisplayName\" : String,\n      \"FifoTopic\" : Boolean,\n      \"KmsMasterKeyId\" : String,\n      \"SignatureVersion\" : String,\n      \"Subscription\" : [ Subscription, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TopicName\" : String,\n      \"TracingConfig\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::Topic\nProperties:\n  ArchivePolicy: Json\n  ContentBasedDeduplication: Boolean\n  DataProtectionPolicy: Json\n  DeliveryStatusLogging: \n    - LoggingConfig\n  DisplayName: String\n  FifoTopic: Boolean\n  KmsMasterKeyId: String\n  SignatureVersion: String\n  Subscription: \n    - Subscription\n  Tags: \n    - Tag\n  TopicName: String\n  TracingConfig: String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SNS::TopicInlinePolicy","awsResourceTypeName":"sns-topicinlinepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::TopicInlinePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"TopicArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::TopicInlinePolicy\nProperties:\n  PolicyDocument: Json\n  TopicArn: String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SNS::TopicPolicy","awsResourceTypeName":"sns-topicpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SNS::TopicPolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"Topics\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SNS::TopicPolicy\nProperties:\n  PolicyDocument: Json\n  Topics: \n    - String\n","awsServiceName":"SNS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SQS::Queue","awsResourceTypeName":"sqs-queue","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SQS::Queue\",\n  \"Properties\" : {\n      \"ContentBasedDeduplication\" : Boolean,\n      \"DeduplicationScope\" : String,\n      \"DelaySeconds\" : Integer,\n      \"FifoQueue\" : Boolean,\n      \"FifoThroughputLimit\" : String,\n      \"KmsDataKeyReusePeriodSeconds\" : Integer,\n      \"KmsMasterKeyId\" : String,\n      \"MaximumMessageSize\" : Integer,\n      \"MessageRetentionPeriod\" : Integer,\n      \"QueueName\" : String,\n      \"ReceiveMessageWaitTimeSeconds\" : Integer,\n      \"RedriveAllowPolicy\" : Json,\n      \"RedrivePolicy\" : Json,\n      \"SqsManagedSseEnabled\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"VisibilityTimeout\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SQS::Queue\nProperties:\n  ContentBasedDeduplication: Boolean\n  DeduplicationScope: String\n  DelaySeconds: Integer\n  FifoQueue: Boolean\n  FifoThroughputLimit: String\n  KmsDataKeyReusePeriodSeconds: Integer\n  KmsMasterKeyId: String\n  MaximumMessageSize: Integer\n  MessageRetentionPeriod: Integer\n  QueueName: String\n  ReceiveMessageWaitTimeSeconds: Integer\n  RedriveAllowPolicy: Json\n  RedrivePolicy: Json\n  SqsManagedSseEnabled: Boolean\n  Tags: \n    - Tag\n  VisibilityTimeout: Integer\n","awsServiceName":"SQS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SQS::QueueInlinePolicy","awsResourceTypeName":"sqs-queueinlinepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SQS::QueueInlinePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"Queue\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SQS::QueueInlinePolicy\nProperties:\n  PolicyDocument: Json\n  Queue: String\n","awsServiceName":"SQS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SQS::QueuePolicy","awsResourceTypeName":"sqs-queuepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SQS::QueuePolicy\",\n  \"Properties\" : {\n      \"PolicyDocument\" : Json,\n      \"Queues\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SQS::QueuePolicy\nProperties:\n  PolicyDocument: Json\n  Queues: \n    - String\n","awsServiceName":"SQS","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::Activity","awsResourceTypeName":"stepfunctions-activity","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::Activity\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"Tags\" : [ TagsEntry, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::Activity\nProperties:\n  Name: String\n  Tags: \n    - TagsEntry\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::StateMachine","awsResourceTypeName":"stepfunctions-statemachine","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::StateMachine\",\n  \"Properties\" : {\n      \"Definition\" : Json,\n      \"DefinitionS3Location\" : S3Location,\n      \"DefinitionString\" : String,\n      \"DefinitionSubstitutions\" : {Key: Value, ...},\n      \"LoggingConfiguration\" : LoggingConfiguration,\n      \"RoleArn\" : String,\n      \"StateMachineName\" : String,\n      \"StateMachineType\" : String,\n      \"Tags\" : [ TagsEntry, ... ],\n      \"TracingConfiguration\" : TracingConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::StateMachine\nProperties:\n  Definition: Json\n  DefinitionS3Location: \n    S3Location\n  DefinitionString: \n    String\n  DefinitionSubstitutions: \n    Key: Value\n  LoggingConfiguration: \n    LoggingConfiguration\n  RoleArn: String\n  StateMachineName: String\n  StateMachineType: String\n  Tags: \n    - TagsEntry\n  TracingConfiguration: \n    TracingConfiguration\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::StateMachineAlias","awsResourceTypeName":"stepfunctions-statemachinealias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::StateMachineAlias\",\n  \"Properties\" : {\n      \"DeploymentPreference\" : DeploymentPreference,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RoutingConfiguration\" : [ RoutingConfigurationVersion, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::StateMachineAlias\nProperties:\n  DeploymentPreference: \n    DeploymentPreference\n  Description: String\n  Name: String\n  RoutingConfiguration: \n    - RoutingConfigurationVersion\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::StepFunctions::StateMachineVersion","awsResourceTypeName":"stepfunctions-statemachineversion","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::StepFunctions::StateMachineVersion\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"StateMachineArn\" : String,\n      \"StateMachineRevisionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::StepFunctions::StateMachineVersion\nProperties:\n  Description: String\n  StateMachineArn: String\n  StateMachineRevisionId: String\n","awsServiceName":"StepFunctions","awsServiceCategory":"appIntegration"},{"awsResourceType":"AWS::SSM::Association","awsResourceTypeName":"ssm-association","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::Association\",\n  \"Properties\" : {\n      \"ApplyOnlyAtCronInterval\" : Boolean,\n      \"AssociationName\" : String,\n      \"AutomationTargetParameterName\" : String,\n      \"CalendarNames\" : [ String, ... ],\n      \"ComplianceSeverity\" : String,\n      \"DocumentVersion\" : String,\n      \"InstanceId\" : String,\n      \"MaxConcurrency\" : String,\n      \"MaxErrors\" : String,\n      \"Name\" : String,\n      \"OutputLocation\" : InstanceAssociationOutputLocation,\n      \"Parameters\" : [ String, ... ],\n      \"ScheduleExpression\" : String,\n      \"ScheduleOffset\" : Integer,\n      \"SyncCompliance\" : String,\n      \"Targets\" : [ Target, ... ],\n      \"WaitForSuccessTimeoutSeconds\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::Association\nProperties:\n  ApplyOnlyAtCronInterval: Boolean\n  AssociationName: String\n  AutomationTargetParameterName: String\n  CalendarNames: \n    - String\n  ComplianceSeverity: String\n  DocumentVersion: String\n  InstanceId: String\n  MaxConcurrency: String\n  MaxErrors: String\n  Name: String\n  OutputLocation: \n    InstanceAssociationOutputLocation\n  Parameters: \n    - String\n  ScheduleExpression: String\n  ScheduleOffset: Integer\n  SyncCompliance: String\n  Targets: \n    - Target\n  WaitForSuccessTimeoutSeconds: Integer\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::Document","awsResourceTypeName":"ssm-document","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::Document\",\n  \"Properties\" : {\n      \"Attachments\" : [ AttachmentsSource, ... ],\n      \"Content\" : Json,\n      \"DocumentFormat\" : String,\n      \"DocumentType\" : String,\n      \"Name\" : String,\n      \"Requires\" : [ DocumentRequires, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"TargetType\" : String,\n      \"UpdateMethod\" : String,\n      \"VersionName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::Document\nProperties:\n  Attachments: \n    - AttachmentsSource\n  Content: Json\n  DocumentFormat: String\n  DocumentType: String\n  Name: String\n  Requires: \n    - DocumentRequires\n  Tags: \n    - Tag\n  TargetType: String\n  UpdateMethod: String\n  VersionName: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::MaintenanceWindow","awsResourceTypeName":"ssm-maintenancewindow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::MaintenanceWindow\",\n  \"Properties\" : {\n      \"AllowUnassociatedTargets\" : Boolean,\n      \"Cutoff\" : Integer,\n      \"Description\" : String,\n      \"Duration\" : Integer,\n      \"EndDate\" : String,\n      \"Name\" : String,\n      \"Schedule\" : String,\n      \"ScheduleOffset\" : Integer,\n      \"ScheduleTimezone\" : String,\n      \"StartDate\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::MaintenanceWindow\nProperties:\n  AllowUnassociatedTargets: Boolean\n  Cutoff: Integer\n  Description: String\n  Duration: Integer\n  EndDate: String\n  Name: String\n  Schedule: String\n  ScheduleOffset: Integer\n  ScheduleTimezone: String\n  StartDate: String\n  Tags: \n    - Tag\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::MaintenanceWindowTarget","awsResourceTypeName":"ssm-maintenancewindowtarget","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::MaintenanceWindowTarget\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"OwnerInformation\" : String,\n      \"ResourceType\" : String,\n      \"Targets\" : [ Targets, ... ],\n      \"WindowId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::MaintenanceWindowTarget\nProperties:\n  Description: String\n  Name: String\n  OwnerInformation: String\n  ResourceType: String\n  Targets: \n    - Targets\n  WindowId: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::MaintenanceWindowTask","awsResourceTypeName":"ssm-maintenancewindowtask","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::MaintenanceWindowTask\",\n  \"Properties\" : {\n      \"CutoffBehavior\" : String,\n      \"Description\" : String,\n      \"LoggingInfo\" : LoggingInfo,\n      \"MaxConcurrency\" : String,\n      \"MaxErrors\" : String,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"ServiceRoleArn\" : String,\n      \"Targets\" : [ Target, ... ],\n      \"TaskArn\" : String,\n      \"TaskInvocationParameters\" : TaskInvocationParameters,\n      \"TaskParameters\" : Json,\n      \"TaskType\" : String,\n      \"WindowId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::MaintenanceWindowTask\nProperties:\n  CutoffBehavior: String\n  Description: String\n  LoggingInfo: \n    LoggingInfo\n  MaxConcurrency: String\n  MaxErrors: String\n  Name: String\n  Priority: Integer\n  ServiceRoleArn: String\n  Targets: \n    - Target\n  TaskArn: String\n  TaskInvocationParameters: \n    TaskInvocationParameters\n  TaskParameters: Json\n  TaskType: String\n  WindowId: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::Parameter","awsResourceTypeName":"ssm-parameter","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::Parameter\",\n  \"Properties\" : {\n      \"AllowedPattern\" : String,\n      \"DataType\" : String,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Policies\" : String,\n      \"Tags\" : {Key: Value, ...},\n      \"Tier\" : String,\n      \"Type\" : String,\n      \"Value\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::Parameter\nProperties:\n  AllowedPattern: String\n  DataType: String\n  Description: String\n  Name: String\n  Policies: String\n  Tags: \n    Key: Value\n  Tier: String\n  Type: String\n  Value: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::PatchBaseline","awsResourceTypeName":"ssm-patchbaseline","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::PatchBaseline\",\n  \"Properties\" : {\n      \"ApprovalRules\" : RuleGroup,\n      \"ApprovedPatches\" : [ String, ... ],\n      \"ApprovedPatchesComplianceLevel\" : String,\n      \"ApprovedPatchesEnableNonSecurity\" : Boolean,\n      \"Description\" : String,\n      \"GlobalFilters\" : PatchFilterGroup,\n      \"Name\" : String,\n      \"OperatingSystem\" : String,\n      \"PatchGroups\" : [ String, ... ],\n      \"RejectedPatches\" : [ String, ... ],\n      \"RejectedPatchesAction\" : String,\n      \"Sources\" : [ PatchSource, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::PatchBaseline\nProperties:\n  ApprovalRules: \n    RuleGroup\n  ApprovedPatches: \n    - String\n  ApprovedPatchesComplianceLevel: String\n  ApprovedPatchesEnableNonSecurity: Boolean\n  Description: String\n  GlobalFilters: \n    PatchFilterGroup\n  Name: String\n  OperatingSystem: String\n  PatchGroups: \n    - String\n  RejectedPatches: \n    - String\n  RejectedPatchesAction: String\n  Sources: \n    - PatchSource\n  Tags: \n    - Tag\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::ResourceDataSync","awsResourceTypeName":"ssm-resourcedatasync","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::ResourceDataSync\",\n  \"Properties\" : {\n      \"BucketName\" : String,\n      \"BucketPrefix\" : String,\n      \"BucketRegion\" : String,\n      \"KMSKeyArn\" : String,\n      \"S3Destination\" : S3Destination,\n      \"SyncFormat\" : String,\n      \"SyncSource\" : SyncSource,\n      \"SyncType\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::ResourceDataSync\nProperties:\n  BucketName: String\n  BucketPrefix: String\n  BucketRegion: String\n  KMSKeyArn: String\n  S3Destination: \n    S3Destination\n  SyncFormat: String\n  SyncSource: \n    SyncSource\n  SyncType: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SSM::ResourcePolicy","awsResourceTypeName":"ssm-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SSM::ResourcePolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SSM::ResourcePolicy\nProperties:\n  Policy: Json\n  ResourceArn: String\n","awsServiceName":"SSM","awsServiceCategory":"other"},{"awsResourceType":"AWS::SupportApp::AccountAlias","awsResourceTypeName":"supportapp-accountalias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SupportApp::AccountAlias\",\n  \"Properties\" : {\n      \"AccountAlias\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SupportApp::AccountAlias\nProperties:\n  AccountAlias: String\n","awsServiceName":"SupportApp","awsServiceCategory":"customerEnablement"},{"awsResourceType":"AWS::SupportApp::SlackChannelConfiguration","awsResourceTypeName":"supportapp-slackchannelconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SupportApp::SlackChannelConfiguration\",\n  \"Properties\" : {\n      \"ChannelId\" : String,\n      \"ChannelName\" : String,\n      \"ChannelRoleArn\" : String,\n      \"NotifyOnAddCorrespondenceToCase\" : Boolean,\n      \"NotifyOnCaseSeverity\" : String,\n      \"NotifyOnCreateOrReopenCase\" : Boolean,\n      \"NotifyOnResolveCase\" : Boolean,\n      \"TeamId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SupportApp::SlackChannelConfiguration\nProperties:\n  ChannelId: String\n  ChannelName: String\n  ChannelRoleArn: String\n  NotifyOnAddCorrespondenceToCase: Boolean\n  NotifyOnCaseSeverity: String\n  NotifyOnCreateOrReopenCase: Boolean\n  NotifyOnResolveCase: Boolean\n  TeamId: String\n","awsServiceName":"SupportApp","awsServiceCategory":"customerEnablement"},{"awsResourceType":"AWS::SupportApp::SlackWorkspaceConfiguration","awsResourceTypeName":"supportapp-slackworkspaceconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SupportApp::SlackWorkspaceConfiguration\",\n  \"Properties\" : {\n      \"TeamId\" : String,\n      \"VersionId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SupportApp::SlackWorkspaceConfiguration\nProperties:\n  TeamId: String\n  VersionId: String\n","awsServiceName":"SupportApp","awsServiceCategory":"customerEnablement"},{"awsResourceType":"AWS::SystemsManagerSAP::Application","awsResourceTypeName":"systemsmanagersap-application","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::SystemsManagerSAP::Application\",\n  \"Properties\" : {\n      \"ApplicationId\" : String,\n      \"ApplicationType\" : String,\n      \"Credentials\" : [ Credential, ... ],\n      \"Instances\" : [ String, ... ],\n      \"SapInstanceNumber\" : String,\n      \"Sid\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::SystemsManagerSAP::Application\nProperties:\n  ApplicationId: String\n  ApplicationType: String\n  Credentials: \n    - Credential\n  Instances: \n    - String\n  SapInstanceNumber: String\n  Sid: String\n  Tags: \n    - Tag\n","awsServiceName":"SystemsManagerSAP","awsServiceCategory":"compute"},{"awsResourceType":"AWS::Timestream::Database","awsResourceTypeName":"timestream-database","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::Database\",\n  \"Properties\" : {\n      \"DatabaseName\" : String,\n      \"KmsKeyId\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::Database\nProperties:\n  DatabaseName: String\n  KmsKeyId: String\n  Tags: \n    - Tag\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Timestream::InfluxDBInstance","awsResourceTypeName":"timestream-influxdbinstance","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::InfluxDBInstance\",\n  \"Properties\" : {\n      \"AllocatedStorage\" : Integer,\n      \"Bucket\" : String,\n      \"DbInstanceType\" : String,\n      \"DbParameterGroupIdentifier\" : String,\n      \"DbStorageType\" : String,\n      \"DeploymentType\" : String,\n      \"LogDeliveryConfiguration\" : LogDeliveryConfiguration,\n      \"Name\" : String,\n      \"Organization\" : String,\n      \"Password\" : String,\n      \"PubliclyAccessible\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"Username\" : String,\n      \"VpcSecurityGroupIds\" : [ String, ... ],\n      \"VpcSubnetIds\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::InfluxDBInstance\nProperties:\n  AllocatedStorage: Integer\n  Bucket: String\n  DbInstanceType: String\n  DbParameterGroupIdentifier: String\n  DbStorageType: String\n  DeploymentType: String\n  LogDeliveryConfiguration: \n    LogDeliveryConfiguration\n  Name: String\n  Organization: String\n  Password: String\n  PubliclyAccessible: Boolean\n  Tags: \n    - Tag\n  Username: String\n  VpcSecurityGroupIds: \n    - String\n  VpcSubnetIds: \n    - String\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Timestream::ScheduledQuery","awsResourceTypeName":"timestream-scheduledquery","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::ScheduledQuery\",\n  \"Properties\" : {\n      \"ClientToken\" : String,\n      \"ErrorReportConfiguration\" : ErrorReportConfiguration,\n      \"KmsKeyId\" : String,\n      \"NotificationConfiguration\" : NotificationConfiguration,\n      \"QueryString\" : String,\n      \"ScheduleConfiguration\" : ScheduleConfiguration,\n      \"ScheduledQueryExecutionRoleArn\" : String,\n      \"ScheduledQueryName\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TargetConfiguration\" : TargetConfiguration\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::ScheduledQuery\nProperties:\n  ClientToken: String\n  ErrorReportConfiguration: \n    ErrorReportConfiguration\n  KmsKeyId: String\n  NotificationConfiguration: \n    NotificationConfiguration\n  QueryString: \n    String\n  ScheduleConfiguration: \n    ScheduleConfiguration\n  ScheduledQueryExecutionRoleArn: String\n  ScheduledQueryName: String\n  Tags: \n    - Tag\n  TargetConfiguration: \n    TargetConfiguration\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Timestream::Table","awsResourceTypeName":"timestream-table","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Timestream::Table\",\n  \"Properties\" : {\n      \"DatabaseName\" : String,\n      \"MagneticStoreWriteProperties\" : MagneticStoreWriteProperties,\n      \"RetentionProperties\" : RetentionProperties,\n      \"Schema\" : Schema,\n      \"TableName\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Timestream::Table\nProperties:\n  DatabaseName: String\n  MagneticStoreWriteProperties: \n    MagneticStoreWriteProperties\n  RetentionProperties: \n    RetentionProperties\n  Schema: \n    Schema\n  TableName: String\n  Tags: \n    - Tag\n","awsServiceName":"Timestream","awsServiceCategory":"database"},{"awsResourceType":"AWS::Transfer::Agreement","awsResourceTypeName":"transfer-agreement","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Agreement\",\n  \"Properties\" : {\n      \"AccessRole\" : String,\n      \"BaseDirectory\" : String,\n      \"Description\" : String,\n      \"LocalProfileId\" : String,\n      \"PartnerProfileId\" : String,\n      \"ServerId\" : String,\n      \"Status\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Agreement\nProperties:\n  AccessRole: String\n  BaseDirectory: String\n  Description: String\n  LocalProfileId: String\n  PartnerProfileId: String\n  ServerId: String\n  Status: String\n  Tags: \n    - Tag\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Certificate","awsResourceTypeName":"transfer-certificate","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Certificate\",\n  \"Properties\" : {\n      \"ActiveDate\" : String,\n      \"Certificate\" : String,\n      \"CertificateChain\" : String,\n      \"Description\" : String,\n      \"InactiveDate\" : String,\n      \"PrivateKey\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Usage\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Certificate\nProperties:\n  ActiveDate: String\n  Certificate: String\n  CertificateChain: String\n  Description: String\n  InactiveDate: String\n  PrivateKey: String\n  Tags: \n    - Tag\n  Usage: String\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Connector","awsResourceTypeName":"transfer-connector","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Connector\",\n  \"Properties\" : {\n      \"AccessRole\" : String,\n      \"As2Config\" : As2Config,\n      \"LoggingRole\" : String,\n      \"SftpConfig\" : SftpConfig,\n      \"Tags\" : [ Tag, ... ],\n      \"Url\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Connector\nProperties:\n  AccessRole: String\n  As2Config: \n    As2Config\n  LoggingRole: String\n  SftpConfig: \n    SftpConfig\n  Tags: \n    - Tag\n  Url: String\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Profile","awsResourceTypeName":"transfer-profile","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Profile\",\n  \"Properties\" : {\n      \"As2Id\" : String,\n      \"CertificateIds\" : [ String, ... ],\n      \"ProfileType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Profile\nProperties:\n  As2Id: String\n  CertificateIds: \n    - String\n  ProfileType: String\n  Tags: \n    - Tag\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Server","awsResourceTypeName":"transfer-server","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Server\",\n  \"Properties\" : {\n      \"Certificate\" : String,\n      \"Domain\" : String,\n      \"EndpointDetails\" : EndpointDetails,\n      \"EndpointType\" : String,\n      \"IdentityProviderDetails\" : IdentityProviderDetails,\n      \"IdentityProviderType\" : String,\n      \"LoggingRole\" : String,\n      \"PostAuthenticationLoginBanner\" : String,\n      \"PreAuthenticationLoginBanner\" : String,\n      \"ProtocolDetails\" : ProtocolDetails,\n      \"Protocols\" : [ String, ... ],\n      \"S3StorageOptions\" : S3StorageOptions,\n      \"SecurityPolicyName\" : String,\n      \"StructuredLogDestinations\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"WorkflowDetails\" : WorkflowDetails\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Server\nProperties:\n  Certificate: String\n  Domain: String\n  EndpointDetails: \n    EndpointDetails\n  EndpointType: String\n  IdentityProviderDetails: \n    IdentityProviderDetails\n  IdentityProviderType: String\n  LoggingRole: String\n  PostAuthenticationLoginBanner: String\n  PreAuthenticationLoginBanner: String\n  ProtocolDetails: \n    ProtocolDetails\n  Protocols: \n    - String\n  S3StorageOptions: \n    S3StorageOptions\n  SecurityPolicyName: String\n  StructuredLogDestinations: \n    - String\n  Tags: \n    - Tag\n  WorkflowDetails: \n    WorkflowDetails\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::User","awsResourceTypeName":"transfer-user","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::User\",\n  \"Properties\" : {\n      \"HomeDirectory\" : String,\n      \"HomeDirectoryMappings\" : [ HomeDirectoryMapEntry, ... ],\n      \"HomeDirectoryType\" : String,\n      \"Policy\" : String,\n      \"PosixProfile\" : PosixProfile,\n      \"Role\" : String,\n      \"ServerId\" : String,\n      \"SshPublicKeys\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::User\nProperties:\n  HomeDirectory: String\n  HomeDirectoryMappings: \n    - HomeDirectoryMapEntry\n  HomeDirectoryType: String\n  Policy: String\n  PosixProfile: \n    PosixProfile\n  Role: String\n  ServerId: String\n  SshPublicKeys: \n    - String\n  Tags: \n    - Tag\n  UserName: String\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::Transfer::Workflow","awsResourceTypeName":"transfer-workflow","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Transfer::Workflow\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"OnExceptionSteps\" : [ WorkflowStep, ... ],\n      \"Steps\" : [ WorkflowStep, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Transfer::Workflow\nProperties:\n  Description: String\n  OnExceptionSteps: \n    - WorkflowStep\n  Steps: \n    - WorkflowStep\n  Tags: \n    - Tag\n","awsServiceName":"Transfer","awsServiceCategory":"migration"},{"awsResourceType":"AWS::VoiceID::Domain","awsResourceTypeName":"voiceid-domain","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VoiceID::Domain\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VoiceID::Domain\nProperties:\n  Description: String\n  Name: String\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"VoiceID","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::AccessLogSubscription","awsResourceTypeName":"vpclattice-accesslogsubscription","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::AccessLogSubscription\",\n  \"Properties\" : {\n      \"DestinationArn\" : String,\n      \"ResourceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::AccessLogSubscription\nProperties:\n  DestinationArn: String\n  ResourceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::AuthPolicy","awsResourceTypeName":"vpclattice-authpolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::AuthPolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::AuthPolicy\nProperties:\n  Policy: Json\n  ResourceIdentifier: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::Listener","awsResourceTypeName":"vpclattice-listener","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::Listener\",\n  \"Properties\" : {\n      \"DefaultAction\" : DefaultAction,\n      \"Name\" : String,\n      \"Port\" : Integer,\n      \"Protocol\" : String,\n      \"ServiceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::Listener\nProperties:\n  DefaultAction: \n    DefaultAction\n  Name: String\n  Port: Integer\n  Protocol: String\n  ServiceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ResourcePolicy","awsResourceTypeName":"vpclattice-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ResourcePolicy\",\n  \"Properties\" : {\n      \"Policy\" : Json,\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ResourcePolicy\nProperties:\n  Policy: Json\n  ResourceArn: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::Rule","awsResourceTypeName":"vpclattice-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::Rule\",\n  \"Properties\" : {\n      \"Action\" : Action,\n      \"ListenerIdentifier\" : String,\n      \"Match\" : Match,\n      \"Name\" : String,\n      \"Priority\" : Integer,\n      \"ServiceIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::Rule\nProperties:\n  Action: \n    Action\n  ListenerIdentifier: String\n  Match: \n    Match\n  Name: String\n  Priority: Integer\n  ServiceIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::Service","awsResourceTypeName":"vpclattice-service","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::Service\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"CertificateArn\" : String,\n      \"CustomDomainName\" : String,\n      \"DnsEntry\" : DnsEntry,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::Service\nProperties:\n  AuthType: String\n  CertificateArn: String\n  CustomDomainName: String\n  DnsEntry: \n    DnsEntry\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ServiceNetwork","awsResourceTypeName":"vpclattice-servicenetwork","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ServiceNetwork\",\n  \"Properties\" : {\n      \"AuthType\" : String,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ServiceNetwork\nProperties:\n  AuthType: String\n  Name: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ServiceNetworkServiceAssociation","awsResourceTypeName":"vpclattice-servicenetworkserviceassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ServiceNetworkServiceAssociation\",\n  \"Properties\" : {\n      \"DnsEntry\" : DnsEntry,\n      \"ServiceIdentifier\" : String,\n      \"ServiceNetworkIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ServiceNetworkServiceAssociation\nProperties:\n  DnsEntry: \n    DnsEntry\n  ServiceIdentifier: String\n  ServiceNetworkIdentifier: String\n  Tags: \n    - Tag\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::ServiceNetworkVpcAssociation","awsResourceTypeName":"vpclattice-servicenetworkvpcassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::ServiceNetworkVpcAssociation\",\n  \"Properties\" : {\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"ServiceNetworkIdentifier\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VpcIdentifier\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::ServiceNetworkVpcAssociation\nProperties:\n  SecurityGroupIds: \n    - String\n  ServiceNetworkIdentifier: String\n  Tags: \n    - Tag\n  VpcIdentifier: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::VpcLattice::TargetGroup","awsResourceTypeName":"vpclattice-targetgroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::VpcLattice::TargetGroup\",\n  \"Properties\" : {\n      \"Config\" : TargetGroupConfig,\n      \"Name\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"Targets\" : [ Target, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::VpcLattice::TargetGroup\nProperties:\n  Config: \n    TargetGroupConfig\n  Name: String\n  Tags: \n    - Tag\n  Targets: \n    - Target\n  Type: String\n","awsServiceName":"VpcLattice","awsServiceCategory":"other"},{"awsResourceType":"AWS::WAF::ByteMatchSet","awsResourceTypeName":"waf-bytematchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::ByteMatchSet\",\n  \"Properties\" : {\n      \"ByteMatchTuples\" : [ ByteMatchTuple, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::ByteMatchSet\nProperties:\n  ByteMatchTuples: \n    - ByteMatchTuple\n  Name: String\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAF::IPSet","awsResourceTypeName":"waf-ipset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::IPSet\",\n  \"Properties\" : {\n      \"IPSetDescriptors\" : [ IPSetDescriptor, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::IPSet\nProperties:\n  IPSetDescriptors: \n    - IPSetDescriptor\n  Name: String\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAF::Rule","awsResourceTypeName":"waf-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::Rule\",\n  \"Properties\" : {\n      \"MetricName\" : String,\n      \"Name\" : String,\n      \"Predicates\" : [ Predicate, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::Rule\nProperties:\n  MetricName: String\n  Name: String\n  Predicates: \n    - Predicate\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAF::SizeConstraintSet","awsResourceTypeName":"waf-sizeconstraintset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::SizeConstraintSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SizeConstraints\" : [ SizeConstraint, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::SizeConstraintSet\nProperties:\n  Name: String\n  SizeConstraints: \n    - SizeConstraint\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAF::SqlInjectionMatchSet","awsResourceTypeName":"waf-sqlinjectionmatchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::SqlInjectionMatchSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SqlInjectionMatchTuples\" : [ SqlInjectionMatchTuple, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::SqlInjectionMatchSet\nProperties:\n  Name: String\n  SqlInjectionMatchTuples: \n    - SqlInjectionMatchTuple\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAF::WebACL","awsResourceTypeName":"waf-webacl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::WebACL\",\n  \"Properties\" : {\n      \"DefaultAction\" : WafAction,\n      \"MetricName\" : String,\n      \"Name\" : String,\n      \"Rules\" : [ ActivatedRule, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::WebACL\nProperties:\n  DefaultAction: \n    WafAction\n  MetricName: String\n  Name: String\n  Rules: \n    - ActivatedRule\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAF::XssMatchSet","awsResourceTypeName":"waf-xssmatchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAF::XssMatchSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"XssMatchTuples\" : [ XssMatchTuple, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAF::XssMatchSet\nProperties:\n  Name: String\n  XssMatchTuples: \n    - XssMatchTuple\n","awsServiceName":"WAF","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::ByteMatchSet","awsResourceTypeName":"wafregional-bytematchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::ByteMatchSet\",\n  \"Properties\" : {\n      \"ByteMatchTuples\" : [ ByteMatchTuple, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::ByteMatchSet\nProperties:\n  ByteMatchTuples: \n    - ByteMatchTuple\n  Name: String\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::GeoMatchSet","awsResourceTypeName":"wafregional-geomatchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::GeoMatchSet\",\n  \"Properties\" : {\n      \"GeoMatchConstraints\" : [ GeoMatchConstraint, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::GeoMatchSet\nProperties:\n  GeoMatchConstraints: \n    - GeoMatchConstraint\n  Name: String\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::IPSet","awsResourceTypeName":"wafregional-ipset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::IPSet\",\n  \"Properties\" : {\n      \"IPSetDescriptors\" : [ IPSetDescriptor, ... ],\n      \"Name\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::IPSet\nProperties:\n  IPSetDescriptors: \n    - IPSetDescriptor\n  Name: String\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::RateBasedRule","awsResourceTypeName":"wafregional-ratebasedrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::RateBasedRule\",\n  \"Properties\" : {\n      \"MatchPredicates\" : [ Predicate, ... ],\n      \"MetricName\" : String,\n      \"Name\" : String,\n      \"RateKey\" : String,\n      \"RateLimit\" : Integer\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::RateBasedRule\nProperties:\n  MatchPredicates: \n    - Predicate\n  MetricName: String\n  Name: String\n  RateKey: String\n  RateLimit: Integer\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::RegexPatternSet","awsResourceTypeName":"wafregional-regexpatternset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::RegexPatternSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"RegexPatternStrings\" : [ String, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::RegexPatternSet\nProperties:\n  Name: String\n  RegexPatternStrings: \n    - String\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::Rule","awsResourceTypeName":"wafregional-rule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::Rule\",\n  \"Properties\" : {\n      \"MetricName\" : String,\n      \"Name\" : String,\n      \"Predicates\" : [ Predicate, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::Rule\nProperties:\n  MetricName: String\n  Name: String\n  Predicates: \n    - Predicate\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::SizeConstraintSet","awsResourceTypeName":"wafregional-sizeconstraintset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::SizeConstraintSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SizeConstraints\" : [ SizeConstraint, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::SizeConstraintSet\nProperties:\n  Name: String\n  SizeConstraints: \n    - SizeConstraint\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::SqlInjectionMatchSet","awsResourceTypeName":"wafregional-sqlinjectionmatchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::SqlInjectionMatchSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"SqlInjectionMatchTuples\" : [ SqlInjectionMatchTuple, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::SqlInjectionMatchSet\nProperties:\n  Name: String\n  SqlInjectionMatchTuples: \n    - SqlInjectionMatchTuple\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::WebACL","awsResourceTypeName":"wafregional-webacl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::WebACL\",\n  \"Properties\" : {\n      \"DefaultAction\" : Action,\n      \"MetricName\" : String,\n      \"Name\" : String,\n      \"Rules\" : [ Rule, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::WebACL\nProperties:\n  DefaultAction: \n    Action\n  MetricName: String\n  Name: String\n  Rules: \n    - Rule\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::WebACLAssociation","awsResourceTypeName":"wafregional-webaclassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::WebACLAssociation\",\n  \"Properties\" : {\n      \"ResourceArn\" : String,\n      \"WebACLId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::WebACLAssociation\nProperties:\n  ResourceArn: String\n  WebACLId: String\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFRegional::XssMatchSet","awsResourceTypeName":"wafregional-xssmatchset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFRegional::XssMatchSet\",\n  \"Properties\" : {\n      \"Name\" : String,\n      \"XssMatchTuples\" : [ XssMatchTuple, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFRegional::XssMatchSet\nProperties:\n  Name: String\n  XssMatchTuples: \n    - XssMatchTuple\n","awsServiceName":"WAFRegional","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFv2::IPSet","awsResourceTypeName":"wafv2-ipset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFv2::IPSet\",\n  \"Properties\" : {\n      \"Addresses\" : [ String, ... ],\n      \"Description\" : String,\n      \"IPAddressVersion\" : String,\n      \"Name\" : String,\n      \"Scope\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFv2::IPSet\nProperties:\n  Addresses: \n    - String\n  Description: String\n  IPAddressVersion: String\n  Name: String\n  Scope: String\n  Tags: \n    - Tag\n","awsServiceName":"WAFv2","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFv2::LoggingConfiguration","awsResourceTypeName":"wafv2-loggingconfiguration","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFv2::LoggingConfiguration\",\n  \"Properties\" : {\n      \"LogDestinationConfigs\" : [ String, ... ],\n      \"LoggingFilter\" : LoggingFilter,\n      \"RedactedFields\" : [ FieldToMatch, ... ],\n      \"ResourceArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFv2::LoggingConfiguration\nProperties:\n  LogDestinationConfigs: \n    - String\n  LoggingFilter: \n    LoggingFilter\n  RedactedFields: \n    - FieldToMatch\n  ResourceArn: String\n","awsServiceName":"WAFv2","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFv2::RegexPatternSet","awsResourceTypeName":"wafv2-regexpatternset","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFv2::RegexPatternSet\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"RegularExpressionList\" : [ String, ... ],\n      \"Scope\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFv2::RegexPatternSet\nProperties:\n  Description: String\n  Name: String\n  RegularExpressionList: \n    - String\n  Scope: String\n  Tags: \n    - Tag\n","awsServiceName":"WAFv2","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFv2::RuleGroup","awsResourceTypeName":"wafv2-rulegroup","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFv2::RuleGroup\",\n  \"Properties\" : {\n      \"AvailableLabels\" : [ LabelSummary, ... ],\n      \"Capacity\" : Integer,\n      \"ConsumedLabels\" : [ LabelSummary, ... ],\n      \"CustomResponseBodies\" : {Key: Value, ...},\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Scope\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"VisibilityConfig\" : VisibilityConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFv2::RuleGroup\nProperties:\n  AvailableLabels: \n    - LabelSummary\n  Capacity: Integer\n  ConsumedLabels: \n    - LabelSummary\n  CustomResponseBodies: \n    Key: Value\n  Description: String\n  Name: String\n  Rules: \n    - Rule\n  Scope: String\n  Tags: \n    - Tag\n  VisibilityConfig: \n    VisibilityConfig\n","awsServiceName":"WAFv2","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFv2::WebACL","awsResourceTypeName":"wafv2-webacl","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFv2::WebACL\",\n  \"Properties\" : {\n      \"AssociationConfig\" : AssociationConfig,\n      \"CaptchaConfig\" : CaptchaConfig,\n      \"ChallengeConfig\" : ChallengeConfig,\n      \"CustomResponseBodies\" : {Key: Value, ...},\n      \"DefaultAction\" : DefaultAction,\n      \"Description\" : String,\n      \"Name\" : String,\n      \"Rules\" : [ Rule, ... ],\n      \"Scope\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TokenDomains\" : [ String, ... ],\n      \"VisibilityConfig\" : VisibilityConfig\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFv2::WebACL\nProperties:\n  AssociationConfig: \n    AssociationConfig\n  CaptchaConfig: \n    CaptchaConfig\n  ChallengeConfig: \n    ChallengeConfig\n  CustomResponseBodies: \n    Key: Value\n  DefaultAction: \n    DefaultAction\n  Description: String\n  Name: String\n  Rules: \n    - Rule\n  Scope: String\n  Tags: \n    - Tag\n  TokenDomains: \n    - String\n  VisibilityConfig: \n    VisibilityConfig\n","awsServiceName":"WAFv2","awsServiceCategory":"security"},{"awsResourceType":"AWS::WAFv2::WebACLAssociation","awsResourceTypeName":"wafv2-webaclassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WAFv2::WebACLAssociation\",\n  \"Properties\" : {\n      \"ResourceArn\" : String,\n      \"WebACLArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WAFv2::WebACLAssociation\nProperties:\n  ResourceArn: String\n  WebACLArn: String\n","awsServiceName":"WAFv2","awsServiceCategory":"security"},{"awsResourceType":"AWS::Wisdom::Assistant","awsResourceTypeName":"wisdom-assistant","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Wisdom::Assistant\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"Name\" : String,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"Tags\" : [ Tag, ... ],\n      \"Type\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Wisdom::Assistant\nProperties:\n  Description: String\n  Name: String\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  Tags: \n    - Tag\n  Type: String\n","awsServiceName":"Wisdom","awsServiceCategory":"other"},{"awsResourceType":"AWS::Wisdom::AssistantAssociation","awsResourceTypeName":"wisdom-assistantassociation","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Wisdom::AssistantAssociation\",\n  \"Properties\" : {\n      \"AssistantId\" : String,\n      \"Association\" : AssociationData,\n      \"AssociationType\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Wisdom::AssistantAssociation\nProperties:\n  AssistantId: String\n  Association: \n    AssociationData\n  AssociationType: String\n  Tags: \n    - Tag\n","awsServiceName":"Wisdom","awsServiceCategory":"other"},{"awsResourceType":"AWS::Wisdom::KnowledgeBase","awsResourceTypeName":"wisdom-knowledgebase","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::Wisdom::KnowledgeBase\",\n  \"Properties\" : {\n      \"Description\" : String,\n      \"KnowledgeBaseType\" : String,\n      \"Name\" : String,\n      \"RenderingConfiguration\" : RenderingConfiguration,\n      \"ServerSideEncryptionConfiguration\" : ServerSideEncryptionConfiguration,\n      \"SourceConfiguration\" : SourceConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::Wisdom::KnowledgeBase\nProperties:\n  Description: String\n  KnowledgeBaseType: String\n  Name: String\n  RenderingConfiguration: \n    RenderingConfiguration\n  ServerSideEncryptionConfiguration: \n    ServerSideEncryptionConfiguration\n  SourceConfiguration: \n    SourceConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"Wisdom","awsServiceCategory":"other"},{"awsResourceType":"AWS::WorkSpaces::ConnectionAlias","awsResourceTypeName":"workspaces-connectionalias","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpaces::ConnectionAlias\",\n  \"Properties\" : {\n      \"ConnectionString\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpaces::ConnectionAlias\nProperties:\n  ConnectionString: \n    String\n  Tags: \n    - Tag\n","awsServiceName":"WorkSpaces","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpaces::Workspace","awsResourceTypeName":"workspaces-workspace","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpaces::Workspace\",\n  \"Properties\" : {\n      \"BundleId\" : String,\n      \"DirectoryId\" : String,\n      \"RootVolumeEncryptionEnabled\" : Boolean,\n      \"Tags\" : [ Tag, ... ],\n      \"UserName\" : String,\n      \"UserVolumeEncryptionEnabled\" : Boolean,\n      \"VolumeEncryptionKey\" : String,\n      \"WorkspaceProperties\" : WorkspaceProperties\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpaces::Workspace\nProperties:\n  BundleId: String\n  DirectoryId: String\n  RootVolumeEncryptionEnabled: Boolean\n  Tags: \n    - Tag\n  UserName: String\n  UserVolumeEncryptionEnabled: Boolean\n  VolumeEncryptionKey: String\n  WorkspaceProperties: \n    WorkspaceProperties\n","awsServiceName":"WorkSpaces","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesThinClient::Environment","awsResourceTypeName":"workspacesthinclient-environment","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesThinClient::Environment\",\n  \"Properties\" : {\n      \"DesiredSoftwareSetId\" : String,\n      \"DesktopArn\" : String,\n      \"DesktopEndpoint\" : String,\n      \"KmsKeyArn\" : String,\n      \"MaintenanceWindow\" : MaintenanceWindow,\n      \"Name\" : String,\n      \"SoftwareSetUpdateMode\" : String,\n      \"SoftwareSetUpdateSchedule\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesThinClient::Environment\nProperties:\n  DesiredSoftwareSetId: String\n  DesktopArn: String\n  DesktopEndpoint: String\n  KmsKeyArn: String\n  MaintenanceWindow: \n    MaintenanceWindow\n  Name: String\n  SoftwareSetUpdateMode: String\n  SoftwareSetUpdateSchedule: String\n  Tags: \n    - Tag\n","awsServiceName":"WorkSpacesThinClient","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::BrowserSettings","awsResourceTypeName":"workspacesweb-browsersettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::BrowserSettings\",\n  \"Properties\" : {\n      \"AdditionalEncryptionContext\" : {Key: Value, ...},\n      \"BrowserPolicy\" : String,\n      \"CustomerManagedKey\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::BrowserSettings\nProperties:\n  AdditionalEncryptionContext: \n    Key: Value\n  BrowserPolicy: String\n  CustomerManagedKey: String\n  Tags: \n    - Tag\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::IdentityProvider","awsResourceTypeName":"workspacesweb-identityprovider","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::IdentityProvider\",\n  \"Properties\" : {\n      \"IdentityProviderDetails\" : {Key: Value, ...},\n      \"IdentityProviderName\" : String,\n      \"IdentityProviderType\" : String,\n      \"PortalArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::IdentityProvider\nProperties:\n  IdentityProviderDetails: \n    Key: Value\n  IdentityProviderName: String\n  IdentityProviderType: String\n  PortalArn: String\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::IpAccessSettings","awsResourceTypeName":"workspacesweb-ipaccesssettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::IpAccessSettings\",\n  \"Properties\" : {\n      \"AdditionalEncryptionContext\" : {Key: Value, ...},\n      \"CustomerManagedKey\" : String,\n      \"Description\" : String,\n      \"DisplayName\" : String,\n      \"IpRules\" : [ IpRule, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::IpAccessSettings\nProperties:\n  AdditionalEncryptionContext: \n    Key: Value\n  CustomerManagedKey: String\n  Description: String\n  DisplayName: String\n  IpRules: \n    - IpRule\n  Tags: \n    - Tag\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::NetworkSettings","awsResourceTypeName":"workspacesweb-networksettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::NetworkSettings\",\n  \"Properties\" : {\n      \"SecurityGroupIds\" : [ String, ... ],\n      \"SubnetIds\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ],\n      \"VpcId\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::NetworkSettings\nProperties:\n  SecurityGroupIds: \n    - String\n  SubnetIds: \n    - String\n  Tags: \n    - Tag\n  VpcId: String\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::Portal","awsResourceTypeName":"workspacesweb-portal","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::Portal\",\n  \"Properties\" : {\n      \"AdditionalEncryptionContext\" : {Key: Value, ...},\n      \"AuthenticationType\" : String,\n      \"BrowserSettingsArn\" : String,\n      \"CustomerManagedKey\" : String,\n      \"DisplayName\" : String,\n      \"InstanceType\" : String,\n      \"IpAccessSettingsArn\" : String,\n      \"MaxConcurrentSessions\" : Number,\n      \"NetworkSettingsArn\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"TrustStoreArn\" : String,\n      \"UserAccessLoggingSettingsArn\" : String,\n      \"UserSettingsArn\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::Portal\nProperties:\n  AdditionalEncryptionContext: \n    Key: Value\n  AuthenticationType: String\n  BrowserSettingsArn: String\n  CustomerManagedKey: String\n  DisplayName: String\n  InstanceType: String\n  IpAccessSettingsArn: String\n  MaxConcurrentSessions: Number\n  NetworkSettingsArn: String\n  Tags: \n    - Tag\n  TrustStoreArn: String\n  UserAccessLoggingSettingsArn: String\n  UserSettingsArn: String\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::TrustStore","awsResourceTypeName":"workspacesweb-truststore","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::TrustStore\",\n  \"Properties\" : {\n      \"CertificateList\" : [ String, ... ],\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::TrustStore\nProperties:\n  CertificateList: \n    - String\n  Tags: \n    - Tag\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::UserAccessLoggingSettings","awsResourceTypeName":"workspacesweb-useraccessloggingsettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::UserAccessLoggingSettings\",\n  \"Properties\" : {\n      \"KinesisStreamArn\" : String,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::UserAccessLoggingSettings\nProperties:\n  KinesisStreamArn: String\n  Tags: \n    - Tag\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::WorkSpacesWeb::UserSettings","awsResourceTypeName":"workspacesweb-usersettings","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::WorkSpacesWeb::UserSettings\",\n  \"Properties\" : {\n      \"AdditionalEncryptionContext\" : {Key: Value, ...},\n      \"CookieSynchronizationConfiguration\" : CookieSynchronizationConfiguration,\n      \"CopyAllowed\" : String,\n      \"CustomerManagedKey\" : String,\n      \"DisconnectTimeoutInMinutes\" : Number,\n      \"DownloadAllowed\" : String,\n      \"IdleDisconnectTimeoutInMinutes\" : Number,\n      \"PasteAllowed\" : String,\n      \"PrintAllowed\" : String,\n      \"Tags\" : [ Tag, ... ],\n      \"UploadAllowed\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::WorkSpacesWeb::UserSettings\nProperties:\n  AdditionalEncryptionContext: \n    Key: Value\n  CookieSynchronizationConfiguration: \n    CookieSynchronizationConfiguration\n  CopyAllowed: String\n  CustomerManagedKey: String\n  DisconnectTimeoutInMinutes: Number\n  DownloadAllowed: String\n  IdleDisconnectTimeoutInMinutes: Number\n  PasteAllowed: String\n  PrintAllowed: String\n  Tags: \n    - Tag\n  UploadAllowed: String\n","awsServiceName":"WorkSpacesWeb","awsServiceCategory":"compute"},{"awsResourceType":"AWS::XRay::Group","awsResourceTypeName":"xray-group","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::XRay::Group\",\n  \"Properties\" : {\n      \"FilterExpression\" : String,\n      \"GroupName\" : String,\n      \"InsightsConfiguration\" : InsightsConfiguration,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::XRay::Group\nProperties:\n  FilterExpression: String\n  GroupName: String\n  InsightsConfiguration: \n    InsightsConfiguration\n  Tags: \n    - Tag\n","awsServiceName":"XRay","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::XRay::ResourcePolicy","awsResourceTypeName":"xray-resourcepolicy","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::XRay::ResourcePolicy\",\n  \"Properties\" : {\n      \"BypassPolicyLockoutCheck\" : Boolean,\n      \"PolicyDocument\" : String,\n      \"PolicyName\" : String\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::XRay::ResourcePolicy\nProperties:\n  BypassPolicyLockoutCheck: Boolean\n  PolicyDocument: String\n  PolicyName: String\n","awsServiceName":"XRay","awsServiceCategory":"developerTools"},{"awsResourceType":"AWS::XRay::SamplingRule","awsResourceTypeName":"xray-samplingrule","awsResourceTypeCloudformationJson":"{\n  \"Type\" : \"AWS::XRay::SamplingRule\",\n  \"Properties\" : {\n      \"SamplingRule\" : SamplingRule,\n      \"Tags\" : [ Tag, ... ]\n    }\n}\n","awsResourceTypeCloudformationYaml":"Type: AWS::XRay::SamplingRule\nProperties:\n  SamplingRule: \n    SamplingRule\n  Tags: \n    - Tag\n","awsServiceName":"XRay","awsServiceCategory":"developerTools"}]